Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
agentes.jade.Centralizador.ExemploParserGramaticaCentralizador.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
agentes.jade.Centralizador.ExemploParserGramaticaCentralizador.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
agentes.jade.Centralizador.GrammarParserCentralizador.getCentralizadorMessageObject(java.lang.String):::ENTER
arg0 != null
===========================================================================
agentes.jade.Centralizador.GrammarParserCentralizador.getCentralizadorMessageObject(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
return.dados.getClass().getName() == return.medicacao.getClass().getName()
return != null
return.acao != null
return.dados != null
return.dados[] elements != null
return.dados.getClass().getName() == java.util.ArrayList.class
return.medicacao != null
return.medicacao[] elements != null
return.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
return.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(return.medicacao[]) one of { 0, 1 }
return.acao.getClass().getName() != return.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.Medicamento:::OBJECT
this.quantidade == null
this.remedio == null
===========================================================================
agentes.jade.Centralizador.Medicamento.Medicamento():::EXIT
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador:::OBJECT
this.dados != null
this.dados[] elements != null
this.dados.getClass().getName() == java.util.ArrayList.class
this.medicacao != null
this.medicacao[] elements != null
this.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
this.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
this.medicacao.getClass().getName() == java.util.ArrayList.class
size(this.medicacao[]) one of { 0, 1 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.TarefaCentralizador():::EXIT
this.acao == null
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getAcao():::ENTER
this.acao != null
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getAcao():::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
this.acao != null
return != null
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getDados():::ENTER
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
size(this.dados[]) one of { 1, 2, 3 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getDados():::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
return.getClass().getName() == java.util.ArrayList.class
size(this.dados[]) one of { 1, 2, 3 }
size(return[]) one of { 1, 2, 3 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getMedicacao():::ENTER
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
size(this.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.getMedicacao():::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
return[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
return[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
return.getClass().getName() == java.util.ArrayList.class
size(this.medicacao[]) == 1
size(return[]) == 1
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterDados(java.util.List):::ENTER
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
arg0.getClass().getName() == java.util.ArrayList.class
size(this.dados[]) one of { 1, 2, 3 }
size(arg0[]) one of { 1, 2, 3 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterDados(java.util.List):::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
arg0[] == orig(arg0[])
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
size(this.dados[]) one of { 1, 2, 3 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterMedicacao(java.util.List):::ENTER
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
arg0[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
arg0[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
arg0.getClass().getName() == java.util.ArrayList.class
size(this.medicacao[]) == 1
size(arg0[]) == 1
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterMedicacao(java.util.List):::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
arg0[] == orig(arg0[])
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
arg0[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
arg0[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
size(this.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterTarefa():::ENTER
this.acao != null
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.prettyPrinterTarefa():::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
this.acao != null
return != null
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setAcao(java.lang.Object):::ENTER
this.acao == null
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
arg0 != null
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setAcao(java.lang.Object):::EXIT
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
this.acao != null
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setDados(java.lang.Object):::ENTER
this.acao != null
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
arg0 != null
size(this.dados[]) one of { 0, 1, 2 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setDados(java.lang.Object):::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao[] == orig(this.medicacao[])
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
size(this.dados[])-1 == orig(size(this.dados[]))
this.acao != null
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
size(this.dados[]) one of { 1, 2, 3 }
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setMedicacao(agentes.jade.Centralizador.Medicamento):::ENTER
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[] == []
this.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.TarefaCentralizador.setMedicacao(agentes.jade.Centralizador.Medicamento):::EXIT
this.acao == orig(this.acao)
this.acao.getClass().getName() == orig(this.acao.getClass().getName())
this.dados == orig(this.dados)
this.dados[] == orig(this.dados[])
this.dados.getClass().getName() == orig(this.dados.getClass().getName())
this.medicacao == orig(this.medicacao)
this.medicacao.getClass().getName() == orig(this.medicacao.getClass().getName())
arg0.quantidade == orig(arg0.quantidade)
arg0.remedio == orig(arg0.remedio)
arg0.remedio.getClass().getName() == orig(arg0.remedio.getClass().getName())
size(this.medicacao[])-1 == orig(size(this.medicacao[]))
this.dados[] == []
this.dados[].getClass().getName() == []
this.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
size(this.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) one of { 0, 1 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.AcaoVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.AcaoVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.visit(gramatica.Centralizador.Absyn.EAction1, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
arg1 == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() != arg0.coletar_.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() != arg0.dados_.getClass().getName()
arg0.coletar_.getClass().getName() != arg0.dados_.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.visit(gramatica.Centralizador.Absyn.EAction1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == arg0.coletar_
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == arg0.coletar_.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
arg0.coletar_ == orig(arg0.coletar_)
arg0.coletar_.getClass().getName() == orig(arg0.coletar_.getClass().getName())
arg0.dados_ == orig(arg0.dados_)
arg0.dados_.getClass().getName() == orig(arg0.dados_.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 2, 3 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() != arg0.coletar_.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() != arg0.dados_.getClass().getName()
arg0.coletar_.getClass().getName() != arg0.dados_.getClass().getName()
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])-1 >= orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]))
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.visit(gramatica.Centralizador.Absyn.EAction2, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.visit(gramatica.Centralizador.Absyn.EAction2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == arg0.aplicar_
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == arg0.aplicar_.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
arg0.aplicar_ == orig(arg0.aplicar_)
arg0.aplicar_.getClass().getName() == orig(arg0.aplicar_.getClass().getName())
arg0.medicacao_ == orig(arg0.medicacao_)
arg0.medicacao_.getClass().getName() == orig(arg0.medicacao_.getClass().getName())
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]))
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.AplicarVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.AplicarVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.visit(gramatica.Centralizador.Absyn.EApply1, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.visit(gramatica.Centralizador.Absyn.EApply1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(arg0)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
return == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.visit(gramatica.Centralizador.Absyn.EApply2, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.visit(gramatica.Centralizador.Absyn.EApply2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(arg0)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply2.class
return == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.ColetarVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.ColetarVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.visit(gramatica.Centralizador.Absyn.ECollect1, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.visit(gramatica.Centralizador.Absyn.ECollect1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(arg0)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.ECollect1.class
return == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.visit(gramatica.Centralizador.Absyn.ECollect2, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == null
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.visit(gramatica.Centralizador.Absyn.ECollect2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(arg0)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.ECollect2.class
return == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.DadosVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 1, 2 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.DadosVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 1, 2 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData1, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() one of { [], [gramatica.Centralizador.Absyn.EData2, gramatica.Centralizador.Absyn.EData3] }
arg1 == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 2 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]))
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() one of { [gramatica.Centralizador.Absyn.EData1], [gramatica.Centralizador.Absyn.EData2, gramatica.Centralizador.Absyn.EData3, gramatica.Centralizador.Absyn.EData1] }
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 3 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData2, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.ECollect1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements has only one value
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() elements == gramatica.Centralizador.Absyn.EData1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() one of { [], [gramatica.Centralizador.Absyn.EData1] }
arg1 == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 1 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]))
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.ECollect1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() one of { [gramatica.Centralizador.Absyn.EData1, gramatica.Centralizador.Absyn.EData2], [gramatica.Centralizador.Absyn.EData2] }
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 2 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData3, java.lang.Object):::ENTER
arg1 == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 1 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData3, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]))
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 2 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData5, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements has only one value
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() elements == gramatica.Centralizador.Absyn.EData2.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() one of { [], [gramatica.Centralizador.Absyn.EData2] }
arg0.operador_.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
arg1 == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 0, 1 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.visit(gramatica.Centralizador.Absyn.EData5, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
arg0.dados_1 == orig(arg0.dados_1)
arg0.dados_1.getClass().getName() == orig(arg0.dados_1.getClass().getName())
arg0.dados_2 == orig(arg0.dados_2)
arg0.dados_2.getClass().getName() == orig(arg0.dados_2.getClass().getName())
arg0.operador_ == orig(arg0.operador_)
arg0.operador_.getClass().getName() == orig(arg0.operador_.getClass().getName())
arg0.operador_.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 2, 3 }
arg0.dados_1.getClass().getName() in agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) one of { 0, 1 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.MedicacaoVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.MedicacaoVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.visit(gramatica.Centralizador.Absyn.EMedic1, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
arg0.quantidade_.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.visit(gramatica.Centralizador.Absyn.EMedic1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
arg0.quantidade_ == orig(arg0.quantidade_)
arg0.quantidade_.getClass().getName() == orig(arg0.quantidade_.getClass().getName())
arg0.remedio_ == orig(arg0.remedio_)
arg0.remedio_.getClass().getName() == orig(arg0.remedio_.getClass().getName())
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]))
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
arg0.quantidade_.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.visit(gramatica.Centralizador.Absyn.EMedic2, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.visit(gramatica.Centralizador.Absyn.EMedic2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
arg0.remedio_ == orig(arg0.remedio_)
arg0.remedio_.getClass().getName() == orig(arg0.remedio_.getClass().getName())
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])-1 == orig(size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]))
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == [agentes.jade.Centralizador.Medicamento]
return == null
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) == 1
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 2 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor.OperadorVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[]) one of { 1, 2 }
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor.OperadorVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor.visit(gramatica.Centralizador.Absyn.EOp, java.lang.Object):::ENTER
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor.visit(gramatica.Centralizador.Absyn.EOp, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
return == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor.QuantidadeVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor.QuantidadeVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor.visit(gramatica.Centralizador.Absyn.EQtde1, java.lang.Object):::ENTER
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor.visit(gramatica.Centralizador.Absyn.EQtde1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
arg0.integer_ == return
return == orig(arg0.integer_)
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.RemedioVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[].getClass().getName() == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == []
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() == []
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.RemedioVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.visit(gramatica.Centralizador.Absyn.ERemedy1, java.lang.Object):::ENTER
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.visit(gramatica.Centralizador.Absyn.ERemedy1, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
return == orig(arg0)
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.visit(gramatica.Centralizador.Absyn.ERemedy2, java.lang.Object):::ENTER
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.visit(gramatica.Centralizador.Absyn.ERemedy2, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[])
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[])
return == orig(arg0)
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor:::OBJECT
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[] elements != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.medicacao[]) one of { 0, 1 }
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor.TarefaVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this != null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor.TarefaVisitor(agentes.jade.Centralizador.VisitanteCentralizador):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == orig(agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa)
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor.visit(gramatica.Centralizador.Absyn.ETask, java.lang.Object):::ENTER
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa == null
arg0 != null
arg0.acao_ != null
arg1 == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor.visit(gramatica.Centralizador.Absyn.ETask, java.lang.Object):::EXIT
agentes.jade.Centralizador.VisitanteCentralizador.this == orig(agentes.jade.Centralizador.VisitanteCentralizador.this)
arg0.acao_ == orig(arg0.acao_)
arg0.acao_.getClass().getName() == orig(arg0.acao_.getClass().getName())
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa != null
arg0.acao_ != null
return == null
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.acao.getClass().getName() != arg0.acao_.getClass().getName()
agentes.jade.Centralizador.VisitanteCentralizador.this.tarefa.dados.getClass().getName() != arg0.acao_.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador:::OBJECT
this.tarefa.dados.getClass().getName() == this.tarefa.medicacao.getClass().getName()
this.tarefa.acao != null
this.tarefa.dados != null
this.tarefa.dados[] elements != null
this.tarefa.dados.getClass().getName() == java.util.ArrayList.class
this.tarefa.medicacao != null
this.tarefa.medicacao[] elements != null
this.tarefa.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
this.tarefa.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(this.tarefa.medicacao[]) one of { 0, 1 }
this.tarefa.acao.getClass().getName() != this.tarefa.dados.getClass().getName()
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador.VisitanteCentralizador():::EXIT
this.tarefa == null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador.getTarefa():::ENTER
this.tarefa != null
===========================================================================
agentes.jade.Centralizador.VisitanteCentralizador.getTarefa():::EXIT
this.tarefa == return
this.tarefa.acao == return.acao
this.tarefa.acao.getClass().getName() == return.acao.getClass().getName()
this.tarefa.dados == return.dados
this.tarefa.dados[] == orig(this.tarefa.dados[])
this.tarefa.dados.getClass().getName() == return.dados.getClass().getName()
this.tarefa.medicacao == return.medicacao
this.tarefa.medicacao[] == orig(this.tarefa.medicacao[])
this.tarefa.medicacao.getClass().getName() == return.dados.getClass().getName()
return == orig(this.tarefa)
return.acao == orig(this.tarefa.acao)
return.acao.getClass().getName() == orig(this.tarefa.acao.getClass().getName())
return.dados == orig(this.tarefa.dados)
return.dados.getClass().getName() == return.medicacao.getClass().getName()
return.dados.getClass().getName() == orig(this.tarefa.dados.getClass().getName())
return.dados.getClass().getName() == orig(this.tarefa.medicacao.getClass().getName())
return.medicacao == orig(this.tarefa.medicacao)
return != null
return.acao != null
return.dados != null
return.dados[] elements != null
return.dados.getClass().getName() == java.util.ArrayList.class
return.medicacao != null
return.medicacao[] elements != null
return.medicacao[].getClass().getName() elements == agentes.jade.Centralizador.Medicamento.class
return.medicacao[].getClass().getName() one of { [], [agentes.jade.Centralizador.Medicamento] }
size(return.medicacao[]) one of { 0, 1 }
return.acao.getClass().getName() != return.dados.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.Acao:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Acao.Acao():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Aplicar:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Aplicar.Aplicar():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Coletar:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Coletar.Coletar():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Dados:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Dados.Dados():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EAction1:::OBJECT
this.coletar_ != null
this.dados_ != null
this.coletar_.getClass().getName() != this.dados_.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.EAction1.EAction1(gramatica.Centralizador.Absyn.Coletar, gramatica.Centralizador.Absyn.Dados):::ENTER
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.EAction1.EAction1(gramatica.Centralizador.Absyn.Coletar, gramatica.Centralizador.Absyn.Dados):::EXIT
this.coletar_ == orig(arg0)
this.coletar_.getClass().getName() == orig(arg0.getClass().getName())
this.dados_ == orig(arg1)
this.dados_.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EAction1.accept(gramatica.Centralizador.Absyn.Acao$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.class
arg1 == null
this.coletar_.getClass().getName() != arg0.getClass().getName()
this.dados_.getClass().getName() != arg0.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.EAction1.accept(gramatica.Centralizador.Absyn.Acao$Visitor, java.lang.Object):::EXIT
this.coletar_ == orig(this.coletar_)
this.coletar_.getClass().getName() == orig(this.coletar_.getClass().getName())
this.dados_ == orig(this.dados_)
this.dados_.getClass().getName() == orig(this.dados_.getClass().getName())
return == null
this.coletar_.getClass().getName() != orig(arg0.getClass().getName())
this.dados_.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EAction2:::OBJECT
this.aplicar_ != null
this.medicacao_ != null
this.aplicar_.getClass().getName() != this.medicacao_.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.EAction2.EAction2(gramatica.Centralizador.Absyn.Aplicar, gramatica.Centralizador.Absyn.Medicacao):::ENTER
===========================================================================
gramatica.Centralizador.Absyn.EAction2.EAction2(gramatica.Centralizador.Absyn.Aplicar, gramatica.Centralizador.Absyn.Medicacao):::EXIT
this.aplicar_ == orig(arg0)
this.aplicar_.getClass().getName() == orig(arg0.getClass().getName())
this.medicacao_ == orig(arg1)
this.medicacao_.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EAction2.accept(gramatica.Centralizador.Absyn.Acao$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$AcaoVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EAction2.accept(gramatica.Centralizador.Absyn.Acao$Visitor, java.lang.Object):::EXIT
this.aplicar_ == orig(this.aplicar_)
this.aplicar_.getClass().getName() == orig(this.aplicar_.getClass().getName())
this.medicacao_ == orig(this.medicacao_)
this.medicacao_.getClass().getName() == orig(this.medicacao_.getClass().getName())
return == null
===========================================================================
gramatica.Centralizador.Absyn.EApply1:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EApply1.EApply1():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EApply1.accept(gramatica.Centralizador.Absyn.Aplicar$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EApply1.accept(gramatica.Centralizador.Absyn.Aplicar$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EApply2:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EApply2.EApply2():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EApply2.accept(gramatica.Centralizador.Absyn.Aplicar$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$AplicarVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EApply2.accept(gramatica.Centralizador.Absyn.Aplicar$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.ECollect1:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.ECollect1.ECollect1():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.ECollect1.accept(gramatica.Centralizador.Absyn.Coletar$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.ECollect1.accept(gramatica.Centralizador.Absyn.Coletar$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.ECollect2:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.ECollect2.ECollect2():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.ECollect2.accept(gramatica.Centralizador.Absyn.Coletar$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$ColetarVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.ECollect2.accept(gramatica.Centralizador.Absyn.Coletar$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EData1:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EData1.EData1():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EData1.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EData1.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EData2:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EData2.EData2():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EData2.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EData2.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EData3:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EData3.EData3():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EData3.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EData3.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EData5:::OBJECT
this.dados_1 != null
this.dados_2 != null
this.operador_ != null
this.operador_.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
this.dados_1.getClass().getName() != this.dados_2.getClass().getName()
this.dados_1.getClass().getName() != this.operador_.getClass().getName()
this.dados_2.getClass().getName() != this.operador_.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.EData5.EData5(gramatica.Centralizador.Absyn.Dados, gramatica.Centralizador.Absyn.Operador, gramatica.Centralizador.Absyn.Dados):::ENTER
arg1.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
===========================================================================
gramatica.Centralizador.Absyn.EData5.EData5(gramatica.Centralizador.Absyn.Dados, gramatica.Centralizador.Absyn.Operador, gramatica.Centralizador.Absyn.Dados):::EXIT
this.dados_1 == orig(arg0)
this.dados_1.getClass().getName() == orig(arg0.getClass().getName())
this.dados_2 == orig(arg2)
this.dados_2.getClass().getName() == orig(arg2.getClass().getName())
this.operador_ == orig(arg1)
this.operador_.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EData5.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$DadosVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EData5.accept(gramatica.Centralizador.Absyn.Dados$Visitor, java.lang.Object):::EXIT
this.dados_1 == orig(this.dados_1)
this.dados_1.getClass().getName() == orig(this.dados_1.getClass().getName())
this.dados_2 == orig(this.dados_2)
this.dados_2.getClass().getName() == orig(this.dados_2.getClass().getName())
this.operador_ == orig(this.operador_)
this.operador_.getClass().getName() == orig(this.operador_.getClass().getName())
return == null
===========================================================================
gramatica.Centralizador.Absyn.EMedic1:::OBJECT
this.quantidade_.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
===========================================================================
gramatica.Centralizador.Absyn.EMedic1.EMedic1(gramatica.Centralizador.Absyn.Quantidade, gramatica.Centralizador.Absyn.Remedio):::ENTER
arg0.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
===========================================================================
gramatica.Centralizador.Absyn.EMedic1.EMedic1(gramatica.Centralizador.Absyn.Quantidade, gramatica.Centralizador.Absyn.Remedio):::EXIT
this.quantidade_ == orig(arg0)
this.quantidade_.getClass().getName() == orig(arg0.getClass().getName())
this.remedio_ == orig(arg1)
this.remedio_.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EMedic1.accept(gramatica.Centralizador.Absyn.Medicacao$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EMedic1.accept(gramatica.Centralizador.Absyn.Medicacao$Visitor, java.lang.Object):::EXIT
this.quantidade_ == orig(this.quantidade_)
this.quantidade_.getClass().getName() == orig(this.quantidade_.getClass().getName())
this.remedio_ == orig(this.remedio_)
this.remedio_.getClass().getName() == orig(this.remedio_.getClass().getName())
return == null
===========================================================================
gramatica.Centralizador.Absyn.EMedic2:::OBJECT
this.remedio_ != null
===========================================================================
gramatica.Centralizador.Absyn.EMedic2.EMedic2(gramatica.Centralizador.Absyn.Remedio):::ENTER
===========================================================================
gramatica.Centralizador.Absyn.EMedic2.EMedic2(gramatica.Centralizador.Absyn.Remedio):::EXIT
this.remedio_ == orig(arg0)
this.remedio_.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.EMedic2.accept(gramatica.Centralizador.Absyn.Medicacao$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$MedicacaoVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EMedic2.accept(gramatica.Centralizador.Absyn.Medicacao$Visitor, java.lang.Object):::EXIT
this.remedio_ == orig(this.remedio_)
this.remedio_.getClass().getName() == orig(this.remedio_.getClass().getName())
return == null
===========================================================================
gramatica.Centralizador.Absyn.EOp:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EOp.EOp():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.EOp.accept(gramatica.Centralizador.Absyn.Operador$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$OperadorVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EOp.accept(gramatica.Centralizador.Absyn.Operador$Visitor, java.lang.Object):::EXIT
return == null
===========================================================================
gramatica.Centralizador.Absyn.EQtde1:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.EQtde1.EQtde1(java.lang.Integer):::ENTER
===========================================================================
gramatica.Centralizador.Absyn.EQtde1.EQtde1(java.lang.Integer):::EXIT
this.integer_ == orig(arg0)
===========================================================================
gramatica.Centralizador.Absyn.EQtde1.accept(gramatica.Centralizador.Absyn.Quantidade$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$QuantidadeVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.EQtde1.accept(gramatica.Centralizador.Absyn.Quantidade$Visitor, java.lang.Object):::EXIT
this.integer_ == orig(this.integer_)
return.getClass().getName() == java.lang.Integer.class
===========================================================================
gramatica.Centralizador.Absyn.ERemedy1:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.ERemedy1.ERemedy1():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.ERemedy1.accept(gramatica.Centralizador.Absyn.Remedio$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.ERemedy1.accept(gramatica.Centralizador.Absyn.Remedio$Visitor, java.lang.Object):::EXIT
return == orig(this)
return.getClass().getName() == gramatica.Centralizador.Absyn.ERemedy1.class
===========================================================================
gramatica.Centralizador.Absyn.ERemedy2:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.ERemedy2.ERemedy2():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.ERemedy2.accept(gramatica.Centralizador.Absyn.Remedio$Visitor, java.lang.Object):::ENTER
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$RemedioVisitor.class
arg1 == null
===========================================================================
gramatica.Centralizador.Absyn.ERemedy2.accept(gramatica.Centralizador.Absyn.Remedio$Visitor, java.lang.Object):::EXIT
return == orig(this)
return.getClass().getName() == gramatica.Centralizador.Absyn.ERemedy2.class
===========================================================================
gramatica.Centralizador.Absyn.ETask:::OBJECT
this.acao_ != null
===========================================================================
gramatica.Centralizador.Absyn.ETask.ETask(gramatica.Centralizador.Absyn.Acao):::ENTER
arg0 != null
===========================================================================
gramatica.Centralizador.Absyn.ETask.ETask(gramatica.Centralizador.Absyn.Acao):::EXIT
this.acao_ == orig(arg0)
this.acao_.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.ETask.accept(gramatica.Centralizador.Absyn.Tarefa$Visitor, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == agentes.jade.Centralizador.VisitanteCentralizador$TarefaVisitor.class
arg1 == null
this.acao_.getClass().getName() != arg0.getClass().getName()
===========================================================================
gramatica.Centralizador.Absyn.ETask.accept(gramatica.Centralizador.Absyn.Tarefa$Visitor, java.lang.Object):::EXIT
this.acao_ == orig(this.acao_)
this.acao_.getClass().getName() == orig(this.acao_.getClass().getName())
return == null
this.acao_.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
gramatica.Centralizador.Absyn.Medicacao:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Medicacao.Medicacao():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Operador:::OBJECT
this.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
===========================================================================
gramatica.Centralizador.Absyn.Operador.Operador():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Quantidade:::OBJECT
this.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
===========================================================================
gramatica.Centralizador.Absyn.Quantidade.Quantidade():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Remedio:::OBJECT
===========================================================================
gramatica.Centralizador.Absyn.Remedio.Remedio():::EXIT
===========================================================================
gramatica.Centralizador.Absyn.Tarefa:::OBJECT
this.getClass().getName() == gramatica.Centralizador.Absyn.ETask.class
===========================================================================
gramatica.Centralizador.Absyn.Tarefa.Tarefa():::EXIT
===========================================================================
gramatica.Centralizador.CUP$parser$actions:::OBJECT
this.parser == this.parser.action_obj.parser
gramatica.Centralizador.parser._production_table == this.parser.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._action_table.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._reduce_table.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.parser.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == this.parser.action_tab
gramatica.Centralizador.parser._reduce_table == this.parser.reduce_tab
size(gramatica.Centralizador.parser._production_table[]) == size(this.parser.production_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(gramatica.Centralizador.parser._reduce_table[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.parser.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.parser.reduce_tab[])
this.parser != null
gramatica.Centralizador.parser._production_table has only one value
gramatica.Centralizador.parser._production_table != null
gramatica.Centralizador.parser._production_table.getClass().getName() == short[][].class
gramatica.Centralizador.parser._production_table[] contains no nulls and has only one value, of length 20
gramatica.Centralizador.parser._production_table[] elements != null
gramatica.Centralizador.parser._action_table has only one value
gramatica.Centralizador.parser._action_table != null
gramatica.Centralizador.parser._action_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._action_table[] elements != null
gramatica.Centralizador.parser._reduce_table has only one value
gramatica.Centralizador.parser._reduce_table != null
gramatica.Centralizador.parser._reduce_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._reduce_table[] elements != null
this.parser.action_obj.parser != null
this.parser.tos >= 0
this.parser.cur_token.sym >= 0
this.parser.cur_token.parse_state == -1
this.parser.cur_token.used_by_parser == false
this.parser.cur_token.left == -1
this.parser.cur_token.right == -1
this.parser.cur_token.value.getClass().getName() == java.lang.Integer.class
this.parser.stack != null
this.parser.production_tab[] contains no nulls and has only one value, of length 20
this.parser.production_tab[] elements != null
this.parser.action_tab[] contains no nulls and has only one value, of length 27
this.parser.action_tab[] elements != null
this.parser.reduce_tab[] contains no nulls and has only one value, of length 27
this.parser.reduce_tab[] elements != null
this.parser._scanner != null
this.parser._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
this.parser.lookahead == null
this.parser.lookahead_pos == 0
size(gramatica.Centralizador.parser._production_table[]) == 20
size(gramatica.Centralizador.parser._action_table[]) == 27
gramatica.Centralizador.parser._production_table.getClass().getName() != this.parser._scanner.getClass().getName()
this.parser.cur_token.sym < size(gramatica.Centralizador.parser._production_table[])-1
this.parser.cur_token.sym < size(gramatica.Centralizador.parser._action_table[])-1
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$actions(gramatica.Centralizador.parser):::ENTER
gramatica.Centralizador.parser._production_table == arg0.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._action_table.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._reduce_table.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == arg0.action_tab
gramatica.Centralizador.parser._reduce_table == arg0.reduce_tab
size(gramatica.Centralizador.parser._production_table[]) == size(arg0.production_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(gramatica.Centralizador.parser._reduce_table[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg0.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg0.reduce_tab[])
arg0 != null
gramatica.Centralizador.parser._production_table has only one value
gramatica.Centralizador.parser._production_table != null
gramatica.Centralizador.parser._production_table.getClass().getName() == short[][].class
gramatica.Centralizador.parser._production_table[] contains no nulls and has only one value, of length 20
gramatica.Centralizador.parser._production_table[] elements != null
gramatica.Centralizador.parser._action_table has only one value
gramatica.Centralizador.parser._action_table != null
gramatica.Centralizador.parser._action_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._action_table[] elements != null
gramatica.Centralizador.parser._reduce_table has only one value
gramatica.Centralizador.parser._reduce_table != null
gramatica.Centralizador.parser._reduce_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._reduce_table[] elements != null
arg0.action_obj == null
arg0._done_parsing == false
arg0.tos == 0
arg0.cur_token == null
arg0.stack != null
arg0.production_tab[] contains no nulls and has only one value, of length 20
arg0.production_tab[] elements != null
arg0.action_tab[] contains no nulls and has only one value, of length 27
arg0.action_tab[] elements != null
arg0.reduce_tab[] contains no nulls and has only one value, of length 27
arg0.reduce_tab[] elements != null
arg0._scanner != null
arg0._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
arg0.lookahead == null
arg0.lookahead_pos == 0
size(gramatica.Centralizador.parser._production_table[]) == 20
size(gramatica.Centralizador.parser._action_table[]) == 27
gramatica.Centralizador.parser._production_table.getClass().getName() != arg0._scanner.getClass().getName()
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$actions(gramatica.Centralizador.parser):::EXIT
this.parser == orig(arg0)
gramatica.Centralizador.parser._production_table == arg0.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(arg0.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg0.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg0.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg0.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg0.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == arg0.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(arg0.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == arg0.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(arg0.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.parser._done_parsing == arg0._done_parsing
this.parser.stack == arg0.stack
this.parser.production_tab[] == arg0.production_tab[]
this.parser.action_tab[] == arg0.action_tab[]
this.parser.reduce_tab[] == arg0.reduce_tab[]
this.parser._scanner == arg0._scanner
this.parser._scanner.getClass().getName() == arg0._scanner.getClass().getName()
arg0.action_obj == orig(arg0.action_obj)
arg0._done_parsing == orig(arg0._done_parsing)
arg0.tos == orig(arg0.tos)
arg0.cur_token == orig(arg0.cur_token)
arg0.stack == orig(arg0.stack)
arg0.production_tab[] == orig(arg0.production_tab[])
arg0.action_tab[] == orig(arg0.action_tab[])
arg0.reduce_tab[] == orig(arg0.reduce_tab[])
arg0._scanner == orig(arg0._scanner)
arg0._scanner.getClass().getName() == orig(arg0._scanner.getClass().getName())
arg0.lookahead == orig(arg0.lookahead)
arg0.lookahead_pos == orig(arg0.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == size(arg0.production_tab[])
size(gramatica.Centralizador.parser._production_table[]) == orig(size(arg0.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(arg0.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg0.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg0.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg0.reduce_tab[]))
this.parser.action_obj == null
this.parser.tos == 0
this.parser.cur_token == null
arg0.action_obj == null
arg0._done_parsing == false
arg0.tos == 0
arg0.cur_token == null
arg0.stack != null
arg0.production_tab[] contains no nulls and has only one value, of length 20
arg0.production_tab[] elements != null
arg0.action_tab[] contains no nulls and has only one value, of length 27
arg0.action_tab[] elements != null
arg0.reduce_tab[] contains no nulls and has only one value, of length 27
arg0.reduce_tab[] elements != null
arg0._scanner != null
arg0._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
arg0.lookahead == null
arg0.lookahead_pos == 0
gramatica.Centralizador.parser._production_table.getClass().getName() != arg0._scanner.getClass().getName()
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::ENTER
this == this.parser.action_obj
gramatica.Centralizador.parser._production_table == arg1.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == arg1.action_tab
gramatica.Centralizador.parser._reduce_table == arg1.reduce_tab
this.parser._done_parsing == arg1._done_parsing
this.parser.tos == arg1.tos
this.parser.tos == arg3
this.parser.cur_token == arg1.cur_token
this.parser.cur_token.sym == arg1.cur_token.sym
this.parser.cur_token.parse_state == arg1.cur_token.parse_state
this.parser.cur_token.used_by_parser == arg1.cur_token.used_by_parser
this.parser.cur_token.value == arg1.cur_token.value
this.parser.cur_token.value.getClass().getName() == arg1.cur_token.value.getClass().getName()
this.parser.stack == arg1.stack
this.parser.stack == arg2
this.parser.production_tab[] == arg1.production_tab[]
this.parser.action_tab[] == arg1.action_tab[]
this.parser.reduce_tab[] == arg1.reduce_tab[]
this.parser._scanner == arg1._scanner
this.parser._scanner.getClass().getName() == arg1._scanner.getClass().getName()
size(gramatica.Centralizador.parser._production_table[]) == size(arg1.production_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.reduce_tab[])
this.parser.action_obj != null
this.parser._done_parsing == false
this.parser.cur_token != null
arg0 >= 0
arg1 != null
arg1.getClass().getName() == gramatica.Centralizador.parser.class
arg1.cur_token.left == -1
arg1.cur_token.right == -1
arg1.lookahead == null
arg1.lookahead_pos == 0
gramatica.Centralizador.parser._production_table.getClass().getName() != arg1.getClass().getName()
this.parser._scanner.getClass().getName() != arg1.getClass().getName()
arg0 <= size(gramatica.Centralizador.parser._production_table[])-1
arg0 < size(gramatica.Centralizador.parser._action_table[])-1
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT163
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
orig(arg0) == size(gramatica.Centralizador.parser._production_table[])-1
orig(arg0) == size(this.parser.production_tab[])-1
orig(arg0) == size(arg1.production_tab[])-1
orig(arg0) == orig(size(gramatica.Centralizador.parser._production_table[]))-1
orig(arg0) == orig(size(this.parser.production_tab[]))-1
orig(arg0) == orig(size(arg1.production_tab[]))-1
arg1._done_parsing == false
arg1.tos one of { 2, 4 }
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 9
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ERemedy2.class
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT172
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 2, 4 }
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 9
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ERemedy1.class
orig(arg0) == 18
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT182
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 2
arg1.cur_token.sym == 6
arg1.cur_token.value == null
return.sym == 8
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EQtde1.class
orig(arg0) == 17
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym-1] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[arg1.cur_token.sym-1] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym-1] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT192
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 2
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 7
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EMedic2.class
orig(arg0) == 16
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT203
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 4
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 7
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EMedic1.class
orig(arg0) == 15
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT212
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 3, 5 }
arg1.cur_token.sym one of { 8, 10, 13 }
arg1.cur_token.value == null
return.sym == 6
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EOp.class
orig(arg0) == 14
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT224
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 4, 6 }
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 5
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EData5.class
orig(arg0) == 13
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT242
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 2, 4 }
arg1.cur_token.sym one of { 0, 14 }
arg1.cur_token.value == null
return.sym == 5
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EData3.class
orig(arg0) == 11
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT251
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 2, 4 }
arg1.cur_token.sym one of { 0, 14 }
arg1.cur_token.value == null
return.sym == 5
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EData2.class
orig(arg0) == 10
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT260
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos one of { 2, 6 }
arg1.cur_token.sym one of { 0, 14 }
arg1.cur_token.value == null
return.sym == 5
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EData1.class
orig(arg0) == 9
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT269
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 1
arg1.cur_token.sym one of { 9, 12 }
arg1.cur_token.value == null
return.sym == 4
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EApply2.class
orig(arg0) == 8
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT278
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 1
arg1.cur_token.sym one of { 9, 12, 15 }
return.sym == 4
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EApply1.class
orig(arg0) == 7
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT287
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 1
arg1.cur_token.sym one of { 8, 13 }
arg1.cur_token.value == null
return.sym == 3
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ECollect2.class
orig(arg0) == 6
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT296
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 1
arg1.cur_token.sym one of { 8, 10, 13 }
arg1.cur_token.value == null
return.sym == 3
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ECollect1.class
orig(arg0) == 5
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT316
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 2
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 2
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EAction2.class
orig(arg0) == 3
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT327
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
arg1._done_parsing == false
arg1.tos == 2
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 2
return.value.getClass().getName() == gramatica.Centralizador.Absyn.EAction1.class
orig(arg0) == 2
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)-1] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)-1] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)-1] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)-1] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)-1] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT337
arg1._done_parsing == orig(this.parser._done_parsing)
arg1._done_parsing == orig(arg1._done_parsing)
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] == gramatica.Centralizador.parser._production_table[orig(arg0)-1]
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._production_table[post(arg0)-1])
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._production_table[arg0-1])
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] == gramatica.Centralizador.parser._action_table[orig(arg0)-1]
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._action_table[post(arg0)-1])
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._action_table[arg0-1])
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] == gramatica.Centralizador.parser._reduce_table[orig(arg0)-1]
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._reduce_table[post(arg0)-1])
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] == orig(gramatica.Centralizador.parser._reduce_table[arg0-1])
this.parser.production_tab[orig(arg0)-1] == arg1.production_tab[arg1.cur_token.sym]
this.parser.action_tab[orig(arg0)-1] == arg1.action_tab[arg1.cur_token.sym]
this.parser.reduce_tab[orig(arg0)-1] == arg1.reduce_tab[arg1.cur_token.sym]
orig(this.parser.production_tab[post(arg0)-1]) == arg1.production_tab[arg1.cur_token.sym]
orig(this.parser.action_tab[post(arg0)-1]) == arg1.action_tab[arg1.cur_token.sym]
orig(this.parser.reduce_tab[post(arg0)-1]) == arg1.reduce_tab[arg1.cur_token.sym]
orig(arg1.production_tab[post(arg0)-1]) == arg1.production_tab[arg1.cur_token.sym]
orig(arg1.action_tab[post(arg0)-1]) == arg1.action_tab[arg1.cur_token.sym]
orig(arg1.reduce_tab[post(arg0)-1]) == arg1.reduce_tab[arg1.cur_token.sym]
arg1.production_tab[arg1.cur_token.sym] == arg1.production_tab[orig(arg0)-1]
arg1.production_tab[arg1.cur_token.sym] == orig(this.parser.production_tab[arg0-1])
arg1.production_tab[arg1.cur_token.sym] == orig(arg1.production_tab[arg0-1])
arg1.action_tab[arg1.cur_token.sym] == arg1.action_tab[orig(arg0)-1]
arg1.action_tab[arg1.cur_token.sym] == orig(this.parser.action_tab[arg0-1])
arg1.action_tab[arg1.cur_token.sym] == orig(arg1.action_tab[arg0-1])
arg1.reduce_tab[arg1.cur_token.sym] == arg1.reduce_tab[orig(arg0)-1]
arg1.reduce_tab[arg1.cur_token.sym] == orig(this.parser.reduce_tab[arg0-1])
arg1.reduce_tab[arg1.cur_token.sym] == orig(arg1.reduce_tab[arg0-1])
arg1._done_parsing == false
arg1.tos == 1
arg1.cur_token.sym == 0
arg1.cur_token.value == null
return.sym == 1
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ETask.class
orig(arg0) == 1
gramatica.Centralizador.parser._production_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[arg1.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
arg1.production_tab[arg1.cur_token.sym] has only one value
arg1.action_tab[arg1.cur_token.sym] has only one value
arg1.reduce_tab[arg1.cur_token.sym] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT349
this.parser.cur_token.sym == orig(arg0)
arg1.cur_token.sym == orig(arg0)
orig(this.parser.cur_token.sym) == orig(arg0)
orig(arg0) == orig(arg1.cur_token.sym)
arg1._done_parsing == true
arg1.tos == 2
arg1.cur_token.value == null
return.sym == 0
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ETask.class
orig(arg0) == 0
gramatica.Centralizador.parser._production_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._action_table[orig(arg0)] has only one value
gramatica.Centralizador.parser._reduce_table[orig(arg0)] has only one value
arg1.production_tab[orig(arg0)] has only one value
arg1.action_tab[orig(arg0)] has only one value
arg1.reduce_tab[orig(arg0)] has only one value
===========================================================================
gramatica.Centralizador.CUP$parser$actions.CUP$parser$do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT
this.parser == orig(this.parser)
this.parser == orig(this.parser.action_obj.parser)
gramatica.Centralizador.parser._production_table == arg1.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.parser.production_tab)
gramatica.Centralizador.parser._production_table == orig(arg1.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.parser.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.parser.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.parser.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == arg1.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.parser.action_tab)
gramatica.Centralizador.parser._action_table == orig(arg1.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == arg1.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(this.parser.reduce_tab)
gramatica.Centralizador.parser._reduce_table == orig(arg1.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.parser.action_obj == orig(this)
this.parser.action_obj == orig(this.parser.action_obj)
this.parser._done_parsing == arg1._done_parsing
this.parser.tos == arg1.tos
this.parser.cur_token == arg1.cur_token
this.parser.cur_token.sym == arg1.cur_token.sym
this.parser.cur_token.parse_state == arg1.cur_token.parse_state
this.parser.cur_token.used_by_parser == arg1.cur_token.used_by_parser
this.parser.cur_token.left == orig(this.parser.cur_token.left)
this.parser.cur_token.right == orig(this.parser.cur_token.right)
this.parser.cur_token.value == arg1.cur_token.value
this.parser.cur_token.value.getClass().getName() == arg1.cur_token.value.getClass().getName()
this.parser.stack == arg1.stack
this.parser.production_tab[] == arg1.production_tab[]
this.parser.action_tab[] == arg1.action_tab[]
this.parser.reduce_tab[] == arg1.reduce_tab[]
this.parser._scanner == arg1._scanner
this.parser._scanner.getClass().getName() == arg1._scanner.getClass().getName()
this.parser.lookahead == orig(this.parser.lookahead)
this.parser.lookahead_pos == orig(this.parser.lookahead_pos)
arg1.tos == orig(this.parser.tos)
arg1.tos == orig(arg1.tos)
arg1.tos == orig(arg3)
arg1.cur_token == orig(this.parser.cur_token)
arg1.cur_token == orig(arg1.cur_token)
arg1.cur_token.sym == orig(this.parser.cur_token.sym)
arg1.cur_token.sym == orig(arg1.cur_token.sym)
arg1.cur_token.parse_state == orig(this.parser.cur_token.parse_state)
arg1.cur_token.parse_state == orig(arg1.cur_token.parse_state)
arg1.cur_token.used_by_parser == orig(this.parser.cur_token.used_by_parser)
arg1.cur_token.used_by_parser == orig(arg1.cur_token.used_by_parser)
arg1.cur_token.left == orig(arg1.cur_token.left)
arg1.cur_token.right == orig(arg1.cur_token.right)
arg1.cur_token.value == orig(this.parser.cur_token.value)
arg1.cur_token.value == orig(arg1.cur_token.value)
arg1.cur_token.value.getClass().getName() == orig(this.parser.cur_token.value.getClass().getName())
arg1.cur_token.value.getClass().getName() == orig(arg1.cur_token.value.getClass().getName())
arg1.stack == orig(this.parser.stack)
arg1.stack == orig(arg1.stack)
arg1.stack == orig(arg2)
arg1.production_tab[] == orig(this.parser.production_tab[])
arg1.production_tab[] == orig(arg1.production_tab[])
arg1.action_tab[] == orig(this.parser.action_tab[])
arg1.action_tab[] == orig(arg1.action_tab[])
arg1.reduce_tab[] == orig(this.parser.reduce_tab[])
arg1.reduce_tab[] == orig(arg1.reduce_tab[])
arg1._scanner == orig(this.parser._scanner)
arg1._scanner == orig(arg1._scanner)
arg1._scanner.getClass().getName() == orig(this.parser._scanner.getClass().getName())
arg1._scanner.getClass().getName() == orig(arg1._scanner.getClass().getName())
arg1.lookahead == orig(arg1.lookahead)
arg1.lookahead_pos == orig(arg1.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == size(arg1.production_tab[])
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.parser.production_tab[]))
size(gramatica.Centralizador.parser._production_table[]) == orig(size(arg1.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.parser.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.parser.reduce_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg1.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg1.reduce_tab[]))
this.parser.action_obj != null
arg1.cur_token != null
arg1.cur_token.sym >= 0
arg1.cur_token.parse_state == -1
arg1.cur_token.used_by_parser == false
arg1.cur_token.left == -1
arg1.cur_token.right == -1
arg1.cur_token.value.getClass().getName() == java.lang.Integer.class
arg1.stack != null
arg1.production_tab[] contains no nulls and has only one value, of length 20
arg1.production_tab[] elements != null
arg1.action_tab[] contains no nulls and has only one value, of length 27
arg1.action_tab[] elements != null
arg1.reduce_tab[] contains no nulls and has only one value, of length 27
arg1.reduce_tab[] elements != null
arg1._scanner != null
arg1._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
arg1.lookahead == null
arg1.lookahead_pos == 0
return != null
return.sym >= 0
return.parse_state == -1
return.used_by_parser == false
return.left == -1
return.right == -1
return.value != null
orig(arg1._done_parsing) == false
gramatica.Centralizador.parser._production_table.getClass().getName() != arg1._scanner.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() != return.value.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() != orig(arg1.getClass().getName())
arg1.cur_token.sym < size(gramatica.Centralizador.parser._production_table[])-1
arg1.cur_token.sym < size(gramatica.Centralizador.parser._action_table[])-1
arg1._scanner.getClass().getName() != return.value.getClass().getName()
arg1._scanner.getClass().getName() != orig(arg1.getClass().getName())
return.value.getClass().getName() != orig(arg1.getClass().getName())
orig(arg0) <= size(gramatica.Centralizador.parser._production_table[])-1
orig(arg0) < size(gramatica.Centralizador.parser._action_table[])-1
===========================================================================
gramatica.Centralizador.Yylex:::OBJECT
size(this.yy_acpt[]) == size(this.yy_rmap[])
this.YY_BUFFER_SIZE == 512
this.YY_F == -1
this.YY_NO_STATE == -1
this.YY_NOT_ACCEPT == 0
this.YY_START == 1
this.YY_END == 2
this.YY_NO_ANCHOR == 4
this.YY_BOL == 65536
this.YY_EOF == 65537
this.pstring != null
this.pstring.toString == ""
this.yy_buffer_index >= 0
this.yy_buffer_read >= 0
this.yy_buffer_start >= 0
this.yy_buffer_end >= 0
this.yy_buffer[] elements >= 0
this.yyline == 0
this.yy_lexical_state == 0
this.yy_eof_done == false
this.STRING == 5
this.ESCAPED == 6
this.YYINITIAL == 0
this.COMMENT == 1
this.CHAREND == 4
this.CHARESC == 3
this.CHAR == 2
this.yy_state_dtrans != null
this.yy_state_dtrans[] == [0, 105, 105, 105, 105, 105, 105]
this.yy_state_dtrans[] elements one of { 0, 105 }
this.yy_state_dtrans[] sorted by <=
this.yy_last_was_cr == false
this.YY_E_INTERNAL == 0
this.YY_E_MATCH == 1
this.yy_error_string != null
this.yy_error_string.getClass().getName() == java.lang.String[].class
this.yy_error_string[] contains no nulls and has only one value, of length 2
this.yy_error_string[] elements != null
this.yy_error_string[].getClass().getName() == [java.lang.String, java.lang.String]
this.yy_error_string[].getClass().getName() elements == java.lang.String.class
this.yy_error_string[].toString == [Error: Internal error.
, Error: Unmatched input.
]
this.yy_error_string[].toString elements one of { "Error: Internal error.\n", "Error: Unmatched input.\n" }
this.yy_acpt != null
this.yy_acpt[] == [0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.yy_acpt[] elements one of { 0, 4 }
this.yy_cmap[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 29, 0, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 0, 0, 0, 0, 0, 0, 0, 17, 22, 13, 23, 0, 0, 0, 25, 1, 0, 0, 15, 8, 0, 0, 12, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 16, 4, 10, 9, 0, 26, 0, 3, 0, 0, 19, 20, 2, 11, 24, 0, 6, 14, 18, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30]
this.yy_cmap[] elements >= 0
this.yy_rmap[] == [0, 1, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]
this.yy_rmap[] elements >= 0
this.yy_nxt.getClass().getName() == int[][].class
this.yy_nxt[] elements != null
size(this.yy_buffer[]) == 512
size(this.yy_state_dtrans[]) == 7
size(this.yy_error_string[]) == 2
size(this.yy_acpt[]) == 149
size(this.yy_cmap[]) == 65538
size(this.yy_rmap[]) == 149
size(this.yy_nxt[]) == 135
this.yy_state_dtrans[this.yy_lexical_state] == 0
this.yy_buffer_index <= this.yy_buffer_read
this.yy_buffer_index >= this.yy_buffer_start
this.yy_buffer_index >= this.yy_buffer_end
this.yy_buffer_index < size(this.yy_buffer[])-1
this.yy_buffer_read >= this.yy_buffer_start
this.yy_buffer_read >= this.yy_buffer_end
this.yy_buffer_read < size(this.yy_buffer[])-1
this.yy_buffer_start <= this.yy_buffer_end
this.yy_buffer_start < size(this.yy_buffer[])-1
this.yy_buffer_end < size(this.yy_buffer[])-1
this.yy_buffer[] elements < size(this.yy_cmap[])-1
this.yy_state_dtrans[] elements < size(this.yy_acpt[])-1
this.yy_state_dtrans[] elements < size(this.yy_rmap[])-1
this.yy_state_dtrans[] elements < size(this.yy_nxt[])-1
this.yy_state_dtrans[] elements >= this.yy_state_dtrans[this.yy_lexical_state]
this.yy_error_string.getClass().getName() != this.yy_nxt.getClass().getName()
this.yy_cmap[] elements < size(this.yy_acpt[])-1
this.yy_cmap[] elements < size(this.yy_rmap[])-1
this.yy_cmap[] elements < size(this.yy_nxt[])-1
this.yy_cmap[] elements >= this.yy_state_dtrans[this.yy_lexical_state]
this.yy_state_dtrans[this.yy_lexical_state] in this.yy_cmap[]
this.yy_rmap[] elements < size(this.yy_acpt[])-1
this.yy_rmap[] elements < size(this.yy_rmap[])-1
size(this.yy_nxt[])-1 in this.yy_rmap[]
this.yy_rmap[] elements <= size(this.yy_nxt[])-1
this.yy_rmap[] elements >= this.yy_state_dtrans[this.yy_lexical_state]
this.yy_state_dtrans[this.yy_lexical_state] in this.yy_rmap[]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_index]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_read]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_start]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_end]
this.yy_buffer[this.yy_buffer_index] >= this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[this.yy_buffer_end]
===========================================================================
gramatica.Centralizador.Yylex.Yylex():::EXIT
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_reader == null
this.yy_buffer_index == 0
this.yy_buffer != null
this.yy_buffer[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.yy_buffer[] elements == 0
this.yy_at_bol == true
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[] elements == this.yy_buffer[this.yy_buffer_index]
===========================================================================
gramatica.Centralizador.Yylex.Yylex(java.io.InputStream):::ENTER
arg0 != null
arg0.getClass().getName() == java.io.ByteArrayInputStream.class
===========================================================================
gramatica.Centralizador.Yylex.Yylex(java.io.InputStream):::EXIT
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_reader != null
this.yy_buffer_index == 0
this.yy_buffer != null
this.yy_buffer[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.yy_buffer[] elements == 0
this.yy_at_bol == true
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[] elements == this.yy_buffer[this.yy_buffer_index]
this.yy_error_string.getClass().getName() != orig(arg0.getClass().getName())
this.yy_nxt.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
gramatica.Centralizador.Yylex.next_token():::ENTER
this.yy_buffer_index == this.yy_buffer_end
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT428
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == orig(this.yy_buffer_start)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yy_at_bol == orig(this.yy_at_bol)
orig(this.yy_buffer_index) == orig(this.yy_buffer_read)
this.yy_buffer_index == 0
return == null
orig(this.yy_buffer_index) one of { 0, 8, 11 }
this.yy_buffer_index <= orig(this.yy_buffer_index)
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT455
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[this.yy_buffer_start-1]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_start)-1])
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_index)]
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_start)-1]
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_start]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_read-1] == this.yy_buffer[orig(this.yy_buffer_index)-1]
this.yy_buffer[this.yy_buffer_read-1] == this.yy_buffer[orig(this.yy_buffer_end)-1]
this.yy_buffer[this.yy_buffer_read-1] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[this.yy_buffer_read-1] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[this.yy_buffer_end-1]
this.yy_buffer[this.yy_buffer_start] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer_index one of { 30, 32, 46 }
this.yy_buffer_read one of { 42, 44, 58 }
this.yy_buffer_start one of { 29, 31, 45 }
this.yy_buffer[] one of { [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 32, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 32, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 32, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [80, 97, 114, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 32, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 14
return.value == null
orig(this.yy_buffer_index) one of { 28, 30, 44 }
orig(this.yy_buffer_start) one of { 17, 19, 33 }
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] == 97
this.yy_buffer[this.yy_buffer_start] == 101
this.yy_buffer[orig(this.yy_buffer_start)] one of { 66, 72, 84 }
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT459
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[this.yy_buffer_start-1]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_start)-1])
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_index)]
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_start]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[this.yy_buffer_end-1]
this.yy_buffer[this.yy_buffer_start] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer_index == 9
this.yy_buffer_read one of { 24, 27 }
this.yy_buffer_start == 8
this.yy_buffer[] one of { [76, 105, 98, 101, 114, 97, 114, 32, 54, 32, 109, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 15
orig(this.yy_buffer_index) == 7
orig(this.yy_buffer_start) == 0
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start] one of { 54, 56 }
this.yy_buffer[orig(this.yy_buffer_index)-1] == 114
this.yy_buffer[orig(this.yy_buffer_start)] == 76
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT467
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_end)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_index)]
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_start)-1]
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[this.yy_buffer_start-1] == this.yy_buffer[orig(this.yy_buffer_start)]
this.yy_buffer[this.yy_buffer_start-1] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer_index == 15
this.yy_buffer_read one of { 24, 27 }
this.yy_buffer_start == 9
this.yy_buffer[] one of { [76, 105, 98, 101, 114, 97, 114, 32, 54, 32, 109, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 6
return.value == null
orig(this.yy_buffer_start) == 8
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_index-1] == 101
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start-1] one of { 54, 56 }
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT471
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_start == orig(this.yy_buffer_end)
orig(this.yy_buffer[post(this.yy_buffer_index)]) == this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer_index == 7
this.yy_buffer_start == 0
return.sym == 11
return.value == null
orig(this.yy_buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.yy_buffer[]) elements == 0
orig(this.yy_at_bol) == true
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_index-1] == 114
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start] == 76
orig(this.yy_buffer[]) elements == this.yy_buffer[this.yy_buffer_read]
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT475
this.yy_buffer_index == this.yy_buffer_read
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_read)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[orig(this.yy_buffer_read)-1]
this.yy_buffer[this.yy_buffer_index-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
this.yy_buffer[orig(this.yy_buffer_read)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer_index == 8
this.yy_buffer_start == 0
this.yy_buffer[] one of { [68, 105, 112, 105, 114, 111, 110, 97, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [68, 105, 112, 105, 114, 111, 110, 97, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [68, 105, 112, 105, 114, 111, 110, 97, 105, 98, 101, 114, 97, 99, 97, 111, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 9
return.value == null
orig(this.yy_buffer_index) one of { 7, 15, 19 }
orig(this.yy_buffer_read) one of { 16, 24, 28 }
orig(this.yy_buffer_start) one of { 0, 9 }
orig(this.yy_buffer[]) one of { [67, 101, 115, 115, 97, 114, 32, 76, 105, 98, 101, 114, 97, 99, 97, 111, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.yy_buffer[this.yy_buffer_index] one of { 56, 68, 105 }
this.yy_buffer[this.yy_buffer_index-1] == 97
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) one of { 32, 76 }
this.yy_buffer[this.yy_buffer_start] == 68
orig(this.yy_buffer[post(this.yy_buffer_start)]) one of { 67, 76 }
this.yy_buffer[orig(this.yy_buffer_index)] one of { 32, 97 }
this.yy_buffer[orig(this.yy_buffer_index)-1] one of { 101, 110 }
this.yy_buffer[orig(this.yy_buffer_read)] == 0
this.yy_buffer[orig(this.yy_buffer_start)] one of { 32, 68 }
orig(this.yy_buffer[this.yy_buffer_index]) == 32
orig(this.yy_buffer[this.yy_buffer_index-1]) one of { 101, 114 }
orig(this.yy_buffer[this.yy_buffer_start]) one of { 32, 67, 76 }
orig(this.yy_buffer[this.yy_buffer_index-1]) in this.yy_buffer[]
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_index)] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_index)-1] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT479
this.yy_buffer_index == this.yy_buffer_read
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_read)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[orig(this.yy_buffer_read)-1]
this.yy_buffer[this.yy_buffer_index-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
this.yy_buffer[orig(this.yy_buffer_read)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer_index == 11
this.yy_buffer_start == 0
this.yy_buffer[] one of { [80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 114, 97, 99, 97, 111, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 12
return.value == null
orig(this.yy_buffer_index) one of { 7, 15, 19 }
orig(this.yy_buffer_read) one of { 19, 27, 31 }
orig(this.yy_buffer_start) one of { 0, 9 }
orig(this.yy_buffer[]) one of { [67, 101, 115, 115, 97, 114, 32, 76, 105, 98, 101, 114, 97, 99, 97, 111, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 54, 32, 109, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.yy_buffer[this.yy_buffer_index] one of { 97, 108, 114 }
this.yy_buffer[this.yy_buffer_index-1] == 108
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) one of { 101, 109, 114 }
this.yy_buffer[this.yy_buffer_start] == 80
orig(this.yy_buffer[post(this.yy_buffer_start)]) one of { 67, 76 }
this.yy_buffer[orig(this.yy_buffer_index)] one of { 32, 97 }
this.yy_buffer[orig(this.yy_buffer_index)-1] one of { 101, 116 }
this.yy_buffer[orig(this.yy_buffer_read)] == 0
this.yy_buffer[orig(this.yy_buffer_start)] one of { 80, 111 }
orig(this.yy_buffer[this.yy_buffer_index]) == 32
orig(this.yy_buffer[this.yy_buffer_index-1]) one of { 101, 114 }
orig(this.yy_buffer[this.yy_buffer_start]) one of { 32, 67, 76 }
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_index-1]) in this.yy_buffer[]
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_index)] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_index)-1] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT483
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[orig(this.yy_buffer_read)-1]
this.yy_buffer[this.yy_buffer_index-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_buffer[orig(this.yy_buffer_read)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer_index one of { 11, 44 }
this.yy_buffer_read one of { 11, 58 }
this.yy_buffer_start one of { 0, 33 }
return.sym == 8
return.value == null
orig(this.yy_buffer_start) one of { 0, 29, 31 }
this.yy_buffer[this.yy_buffer_index] one of { 32, 97, 105 }
this.yy_buffer[this.yy_buffer_index-1] == 97
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) one of { 97, 99, 100 }
this.yy_buffer[this.yy_buffer_read] one of { 0, 97, 105 }
this.yy_buffer[this.yy_buffer_start] == 66
orig(this.yy_buffer[post(this.yy_buffer_start)]) one of { 66, 73, 80 }
this.yy_buffer[orig(this.yy_buffer_index)] == 32
this.yy_buffer[orig(this.yy_buffer_index)-1] == 101
this.yy_buffer[orig(this.yy_buffer_read)] == 0
this.yy_buffer[orig(this.yy_buffer_start)] one of { 66, 101 }
orig(this.yy_buffer[this.yy_buffer_start]) one of { 73, 80, 101 }
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT487
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[orig(this.yy_buffer_read)-1]
this.yy_buffer[this.yy_buffer_index-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_buffer[orig(this.yy_buffer_read)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer_index one of { 11, 30 }
this.yy_buffer_read one of { 11, 58 }
this.yy_buffer_start one of { 0, 19 }
this.yy_buffer[] one of { [72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 105, 99, 97, 111, 32, 100, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 32, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 32, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 32, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 10
return.value == null
orig(this.yy_buffer_index) one of { 18, 32 }
orig(this.yy_buffer_read) one of { 30, 44, 58 }
orig(this.yy_buffer_start) one of { 0, 31 }
orig(this.yy_buffer[]) one of { [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 32, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 32, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [73, 110, 105, 99, 105, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 32, 101, 32, 72, 101, 109, 111, 103, 108, 111, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.yy_buffer[this.yy_buffer_index] one of { 32, 105 }
this.yy_buffer[this.yy_buffer_index-1] == 97
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) one of { 97, 100 }
this.yy_buffer[this.yy_buffer_read] one of { 0, 105 }
this.yy_buffer[this.yy_buffer_start] == 72
orig(this.yy_buffer[post(this.yy_buffer_start)]) one of { 72, 73 }
this.yy_buffer[orig(this.yy_buffer_index)] == 32
this.yy_buffer[orig(this.yy_buffer_index)-1] == 101
this.yy_buffer[orig(this.yy_buffer_read)] == 0
this.yy_buffer[orig(this.yy_buffer_start)] one of { 72, 73, 101 }
orig(this.yy_buffer[this.yy_buffer_start]) one of { 73, 101 }
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) in this.yy_buffer[]
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT491
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[orig(this.yy_buffer_read)-1]
this.yy_buffer[this.yy_buffer_index-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_buffer[orig(this.yy_buffer_read)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer_index one of { 11, 28, 30 }
this.yy_buffer_read one of { 11, 42, 44 }
this.yy_buffer_start one of { 0, 17, 19 }
return.sym == 13
return.value == null
orig(this.yy_buffer_index) one of { 16, 18, 46 }
orig(this.yy_buffer_start) one of { 0, 45 }
this.yy_buffer[this.yy_buffer_index] one of { 32, 97, 105 }
this.yy_buffer[this.yy_buffer_index-1] == 97
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) one of { 97, 99, 100 }
this.yy_buffer[this.yy_buffer_read] one of { 0, 97, 105 }
this.yy_buffer[this.yy_buffer_start] == 84
orig(this.yy_buffer[post(this.yy_buffer_start)]) one of { 73, 80, 84 }
this.yy_buffer[orig(this.yy_buffer_index)] == 32
this.yy_buffer[orig(this.yy_buffer_index)-1] == 101
this.yy_buffer[orig(this.yy_buffer_read)] == 0
orig(this.yy_buffer[this.yy_buffer_start]) one of { 73, 80, 101 }
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT499
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_start == orig(this.yy_buffer_end)
orig(this.yy_buffer[post(this.yy_buffer_index)]) == this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer_index == 16
this.yy_buffer_read one of { 28, 42 }
this.yy_buffer_start == 0
this.yy_buffer[] one of { [80, 97, 114, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [80, 97, 114, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [80, 97, 114, 97, 114, 32, 77, 101, 100, 105, 99, 97, 111, 32, 100, 101, 32, 84, 101, 109, 112, 101, 114, 97, 116, 117, 114, 97, 32, 101, 32, 66, 105, 108, 105, 114, 114, 117, 98, 105, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 3
return.value == null
orig(this.yy_buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.yy_buffer[]) elements == 0
orig(this.yy_at_bol) == true
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_index-1] == 101
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] == 97
this.yy_buffer[this.yy_buffer_start] == 80
orig(this.yy_buffer[]) elements == this.yy_buffer[this.yy_buffer_read]
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT507
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_start == orig(this.yy_buffer_end)
orig(this.yy_buffer[post(this.yy_buffer_index)]) == this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer_index == 18
this.yy_buffer_read one of { 30, 44, 58 }
this.yy_buffer_start == 0
return.sym == 2
return.value == null
orig(this.yy_buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.yy_buffer[]) elements == 0
orig(this.yy_at_bol) == true
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_index-1] == 101
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] == 97
this.yy_buffer[this.yy_buffer_start] == 73
orig(this.yy_buffer[]) elements == this.yy_buffer[this.yy_buffer_read]
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT511
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_start == orig(this.yy_buffer_end)
orig(this.yy_buffer[post(this.yy_buffer_index)]) == this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer_index == 19
this.yy_buffer_read one of { 28, 31 }
this.yy_buffer_start == 0
this.yy_buffer[] one of { [67, 101, 115, 115, 97, 114, 32, 76, 105, 98, 101, 114, 97, 99, 97, 111, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [67, 101, 115, 115, 97, 114, 32, 76, 105, 98, 101, 114, 97, 99, 97, 111, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.sym == 4
return.value == null
orig(this.yy_buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.yy_buffer[]) elements == 0
orig(this.yy_at_bol) == true
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_index-1] == 101
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start] == 67
orig(this.yy_buffer[]) elements == this.yy_buffer[this.yy_buffer_read]
===========================================================================
gramatica.Centralizador.Yylex.next_token():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer == orig(this.yy_buffer)
this.yyline == orig(this.yyline)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_buffer[]) == orig(size(this.yy_buffer[]))
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)])
this.yy_reader != null
this.yy_buffer != null
this.yy_at_bol == false
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
return.sym >= 2
return.parse_state == -1
return.used_by_parser == false
return.left == -1
return.right == -1
return.value.getClass().getName() == java.lang.Integer.class
this.yy_buffer_start <= orig(this.yy_buffer_read)
orig(this.yy_buffer[post(this.yy_buffer_index)]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_read]) in this.yy_buffer[]
orig(this.yy_buffer_index) < size(this.yy_buffer[])-1
orig(this.yy_buffer_read) < size(this.yy_buffer[])-1
orig(this.yy_buffer_start) < size(this.yy_buffer[])-1
orig(this.yy_buffer[]) elements < size(this.yy_cmap[])-1
size(this.yy_cmap[])-1 > orig(this.yy_buffer[post(this.yy_buffer_index)])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[post(this.yy_buffer_start)])
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_index)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_read)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_start)]
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_index])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_read])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_start])
orig(this.yy_buffer[post(this.yy_buffer_index)]) % this.yy_buffer[this.yy_buffer_index] == 0
this.yy_buffer[this.yy_buffer_index] >= orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[this.yy_buffer_index] == 0
orig(this.yy_buffer[post(this.yy_buffer_index)]) >= this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[orig(this.yy_buffer_index)] >= this.yy_buffer[orig(this.yy_buffer_read)]
this.yy_buffer[orig(this.yy_buffer_read)] % this.yy_buffer[orig(this.yy_buffer_index)] == 0
this.yy_buffer[orig(this.yy_buffer_index)] >= orig(this.yy_buffer[this.yy_buffer_index])
orig(this.yy_buffer[this.yy_buffer_read]) % this.yy_buffer[orig(this.yy_buffer_index)] == 0
this.yy_buffer[orig(this.yy_buffer_index)] >= orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[orig(this.yy_buffer_read)] >= orig(this.yy_buffer[this.yy_buffer_read])
===========================================================================
gramatica.Centralizador.Yylex.unpackFromString(int, int, java.lang.String):::ENTER
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_reader == null
this.yy_buffer_index == 0
this.yy_buffer == null
this.yy_at_bol == false
this.yy_nxt == null
arg0 one of { 1, 135 }
arg1 one of { 31, 149, 65538 }
arg2 != null
arg2.toString one of { "-1,17,-1:5,1,-1,2,-1:2,19,20,-1,21,-1,22,-1:4,107,130,-1,106,-1,129,3,18,4,-1:20,23,-1:69,3,-1:4,138,-1:33,24,147,-1:33,25,-1:24,26,-1:48,27,-1:28,31,-1:17,32,-1:38,109,-1:32,33,-1:32,34,-1:36,143,-1:26,111,-1:14,112,-1:33,37,-1:28,38,-1:34,40,-1:32,113,-1:22,115,-1:51,42,-1:16,43,-1:24,116,-1,44,-1:29,140,-1:31,45,-1:50,49,-1:13,117,-1:30,5,-1:28,51,-1:28,53,-1:34,139,-1:27,54,-1:35,55,-1:38,56,-1:29,120,-1:20,58,-1:29,59,-1:29,6,-1:45,61,-1:11,62,-1:39,144,-1:24,121,-1:34,65,-1:36,67,-1:33,68,-1:28,122,-1:19,7,-1:33,70,-1:42,71,-1:20,141,-1:37,123,-1:16,72,-1:33,124,-1:45,74,-1:18,75,-1:32,76,-1:35,79,-1:16,81,-1:34,83,-1:34,148,-1:39,8,-1:15,84,-1:44,145,-1:21,85,-1:24,86,-1:32,9,-1:30,10,-1:30,11,-1:30,87,-1:31,88,-1:28,127,-1:37,89,-1:24,91,-1:32,94,-1:26,95,-1:31,128,-1:37,12,-1:30,96,-1:29,97,-1:25,98,-1:32,100,-1:32,13,-1:40,14,-1:22,101,-1:29,102,-1:27,103,-1:32,15,-1:31,104,-1:29,16,-1:51,4,-1:9,29,-1:24,108,-1:46,35,-1:25,39,-1:36,36,-1:21,41,-1:22,114,-1:37,46,-1:25,134,-1:31,47,-1:33,50,-1:27,57,-1:35,135,-1:26,63,-1:28,64,-1:43,69,-1:15,73,-1:33,78,-1:45,80,-1:11,82,-1:34,90,-1:29,92,-1:30,99,-1:34,110,-1:24,28,-1:41,132,-1:21,118,-1:31,48,-1:30,119,-1:31,66,-1:26,125,-1:32,93,-1:28,30,-1:41,60,-1:22,52,-1:27,77,-1:41,131,-1:19,133,-1:43,136,-1:23,126,-1:25,137,-1:35,142,-1:24,146,-1:27", "0,1,2,3,2:13,4,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134", "0:9,29:2,0,29:2,0:18,7,0:15,28:10,0:7,17,22,13,23,0:3,25,1,0:2,15,8,0:2,12,0:3,27,0:12,5,16,4,10,9,0,26,0,3,0:2,19,20,2,11,24,0,6,14,18,21,0:65418,30:2" }
===========================================================================
gramatica.Centralizador.Yylex.unpackFromString(int, int, java.lang.String):::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_index)
this.yy_buffer_index == orig(this.yy_buffer_read)
this.yy_buffer_index == orig(this.yy_buffer_start)
this.yy_buffer_index == orig(this.yy_buffer_end)
this.yy_buffer == orig(this.yy_buffer)
this.yyline == orig(this.yyline)
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
orig(arg0) == size(return[])
this.yy_reader == null
this.yy_buffer_index == 0
this.yy_buffer == null
this.yy_at_bol == false
this.yy_nxt == null
return != null
return.getClass().getName() == int[][].class
return[] elements != null
this.yy_error_string.getClass().getName() != return.getClass().getName()
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::ENTER
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[this.yy_buffer_start]
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::EXIT103
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_end
return == size(this.yy_cmap[])-1
return == orig(size(this.yy_cmap[]))-1
orig(this.yy_buffer_index) == orig(this.yy_buffer_read)
orig(this.yy_buffer_index) == orig(this.yy_buffer_end)
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_index)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_read)])
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[orig(this.yy_buffer_index)] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_read-1])
this.yy_buffer[orig(this.yy_buffer_index)-1] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_cmap[return] == this.yy_cmap[return-1]
this.yy_cmap[return] == orig(this.yy_cmap[post(return)-1])
this.yy_buffer_index one of { 0, 8, 11 }
this.yy_buffer_start == 0
this.yy_at_bol == false
this.yy_buffer[orig(this.yy_buffer_index)-1] one of { 97, 108 }
this.yy_buffer[orig(this.yy_buffer_start)-1] one of { 32, 97, 108 }
this.yy_cmap[return] == 30
orig(this.yy_buffer[this.yy_buffer_start-1]) one of { 32, 97, 108 }
this.yy_buffer_index < orig(this.yy_buffer_index)
this.yy_buffer_start < orig(this.yy_buffer_index)
this.yy_buffer_start < orig(this.yy_buffer_start)
this.yy_buffer[] elements < return
this.yy_cmap[] elements <= this.yy_cmap[return]
orig(this.yy_buffer[]) elements < return
return > this.yy_buffer[this.yy_buffer_index]
return > this.yy_buffer[this.yy_buffer_start]
return > orig(this.yy_buffer[post(this.yy_buffer_start)])
return > this.yy_buffer[orig(this.yy_buffer_index)]
return > this.yy_buffer[orig(this.yy_buffer_index)-1]
return > this.yy_buffer[orig(this.yy_buffer_start)]
return > this.yy_buffer[orig(this.yy_buffer_start)-1]
return > orig(this.yy_buffer[this.yy_buffer_start])
return > orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[this.yy_buffer_start] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)] in orig(this.yy_buffer[])
this.yy_buffer[orig(this.yy_buffer_start)-1] in orig(this.yy_buffer[])
this.yy_buffer[this.yy_buffer_index] != orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[this.yy_buffer_start] < this.yy_buffer[orig(this.yy_buffer_index)-1]
this.yy_buffer[this.yy_buffer_start] != this.yy_buffer[orig(this.yy_buffer_start)-1]
this.yy_buffer[this.yy_buffer_start] != orig(this.yy_buffer[this.yy_buffer_start-1])
orig(this.yy_buffer[post(this.yy_buffer_start)]) < this.yy_buffer[orig(this.yy_buffer_index)-1]
orig(this.yy_buffer[post(this.yy_buffer_start)]) != this.yy_buffer[orig(this.yy_buffer_start)-1]
orig(this.yy_buffer[post(this.yy_buffer_start)]) != orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[orig(this.yy_buffer_index)] % this.yy_buffer[orig(this.yy_buffer_start)] == 0
this.yy_buffer[orig(this.yy_buffer_index)] <= this.yy_buffer[orig(this.yy_buffer_start)]
this.yy_buffer[orig(this.yy_buffer_index)] % orig(this.yy_buffer[this.yy_buffer_start]) == 0
this.yy_buffer[orig(this.yy_buffer_index)] <= orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[orig(this.yy_buffer_index)-1] >= this.yy_buffer[orig(this.yy_buffer_start)-1]
this.yy_buffer[orig(this.yy_buffer_index)-1] >= orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[orig(this.yy_buffer_start)-1] >= orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer_index - orig(this.yy_buffer_index) + orig(this.yy_buffer_start) == 0
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::EXIT116
this.yy_buffer_index == this.yy_buffer_read
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_index)
this.yy_buffer_index == orig(this.yy_buffer_read)
this.yy_buffer_index == orig(this.yy_buffer_start)
this.yy_buffer_index == orig(this.yy_buffer_end)
this.yy_buffer[] == orig(this.yy_buffer[])
return == size(this.yy_cmap[])-1
return == orig(size(this.yy_cmap[]))-1
this.yy_cmap[return] == this.yy_cmap[return-1]
this.yy_cmap[return] == orig(this.yy_cmap[post(return)-1])
this.yy_buffer_index == 0
this.yy_at_bol == false
this.yy_cmap[return] == 30
this.yy_buffer[] elements < return
this.yy_cmap[] elements <= this.yy_cmap[return]
return > this.yy_buffer[this.yy_buffer_index]
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::EXIT120
this.yy_buffer_start == this.yy_buffer_end
this.yy_buffer_start == orig(this.yy_buffer_index)
this.yy_buffer_start == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_start == orig(this.yy_buffer_end)
return == this.yy_buffer[this.yy_buffer_index-1]
return == this.yy_buffer[this.yy_buffer_start]
return == this.yy_buffer[this.yy_buffer_end]
return == this.yy_buffer[orig(this.yy_buffer_index)]
return == this.yy_buffer[orig(this.yy_buffer_read)]
return == this.yy_buffer[orig(this.yy_buffer_start)]
return == this.yy_buffer[orig(this.yy_buffer_end)]
orig(this.yy_buffer[post(this.yy_buffer_index)]) == this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)-1])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_start)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[this.yy_buffer_end])
this.yy_buffer_index == 1
this.yy_buffer_start == 0
this.yy_at_bol == true
orig(this.yy_buffer[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.yy_buffer[]) elements == 0
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_cmap[return-1] one of { 0, 22, 25 }
this.yy_buffer_index < this.yy_buffer_read
this.yy_buffer_read > this.yy_buffer_start
this.yy_buffer[] > orig(this.yy_buffer[]) (lexically)
this.yy_buffer[] >= orig(this.yy_buffer[]) (elementwise)
this.yy_buffer[] elements >= this.yy_buffer[this.yy_buffer_read]
return < size(this.yy_cmap[])-1
return < this.yy_buffer[this.yy_buffer_index]
return < this.yy_buffer[this.yy_buffer_read-1]
orig(this.yy_buffer[]) elements == this.yy_buffer[this.yy_buffer_read]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_index] > this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] < this.yy_buffer[this.yy_buffer_read-1]
this.yy_cmap[return] != this.yy_cmap[return-1]
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::EXIT84
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer_end == orig(this.yy_buffer_end)
this.yy_buffer[] == orig(this.yy_buffer[])
return == this.yy_buffer[this.yy_buffer_index-1]
return == orig(this.yy_buffer[post(this.yy_buffer_index)-1])
return == this.yy_buffer[orig(this.yy_buffer_index)]
return == orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer_index >= 1
this.yy_at_bol == false
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer_index > this.yy_buffer_start
this.yy_buffer_index > this.yy_buffer_end
this.yy_buffer_index - orig(this.yy_buffer_index) - 1 == 0
this.yy_buffer_read > this.yy_buffer_start
this.yy_buffer_read > this.yy_buffer_end
this.yy_buffer_read > orig(this.yy_buffer_index)
this.yy_buffer[] elements >= this.yy_buffer[this.yy_buffer_read]
return < size(this.yy_cmap[])-1
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_index] != this.yy_buffer[this.yy_buffer_end]
this.yy_buffer[this.yy_buffer_read] < this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_read] < this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_read] < this.yy_buffer[this.yy_buffer_end]
this.yy_buffer[this.yy_buffer_read-1] != this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_read-1] != this.yy_buffer[this.yy_buffer_end]
===========================================================================
gramatica.Centralizador.Yylex.yy_advance():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer == orig(this.yy_buffer)
this.yyline == orig(this.yyline)
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_buffer[]) == orig(size(this.yy_buffer[]))
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_buffer[this.yy_buffer_read] == orig(this.yy_buffer[post(this.yy_buffer_read)])
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_cmap[return] >= 1
this.yy_buffer_start <= orig(this.yy_buffer_index)
this.yy_buffer_start <= orig(this.yy_buffer_read)
this.yy_buffer_start <= orig(this.yy_buffer_start)
this.yy_buffer_start <= orig(this.yy_buffer_end)
this.yy_buffer_end <= orig(this.yy_buffer_index)
this.yy_buffer_end <= orig(this.yy_buffer_read)
this.yy_buffer_end <= orig(this.yy_buffer_end)
orig(this.yy_buffer[post(this.yy_buffer_index)]) in this.yy_buffer[]
orig(this.yy_buffer[post(this.yy_buffer_end)]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_index]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_read]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_start]) in this.yy_buffer[]
orig(this.yy_buffer[this.yy_buffer_end]) in this.yy_buffer[]
this.yy_cmap[return] in this.yy_rmap[]
this.yy_cmap[return-1] in this.yy_rmap[]
return <= size(this.yy_cmap[])-1
return > this.yy_buffer[this.yy_buffer_read]
return >= this.yy_buffer[orig(this.yy_buffer_index)]
return >= this.yy_buffer[orig(this.yy_buffer_read)]
return >= orig(this.yy_buffer[this.yy_buffer_index])
return > orig(this.yy_buffer[this.yy_buffer_read])
orig(this.yy_buffer_index) < size(this.yy_buffer[])-1
orig(this.yy_buffer_read) < size(this.yy_buffer[])-1
orig(this.yy_buffer_start) < size(this.yy_buffer[])-1
orig(this.yy_buffer_end) < size(this.yy_buffer[])-1
orig(this.yy_buffer[]) elements < size(this.yy_cmap[])-1
size(this.yy_acpt[])-1 > this.yy_cmap[return]
size(this.yy_acpt[])-1 > this.yy_cmap[return-1]
size(this.yy_cmap[])-1 > orig(this.yy_buffer[post(this.yy_buffer_index)])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[post(this.yy_buffer_start)])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[post(this.yy_buffer_end)])
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_index)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_read)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_start)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_end)]
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_index])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_read])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_start])
size(this.yy_cmap[])-1 > orig(this.yy_buffer[this.yy_buffer_end])
size(this.yy_nxt[])-1 > this.yy_cmap[return]
size(this.yy_nxt[])-1 > this.yy_cmap[return-1]
this.yy_buffer[this.yy_buffer_index] >= orig(this.yy_buffer[post(this.yy_buffer_index)])
orig(this.yy_buffer[post(this.yy_buffer_index)]) >= this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[this.yy_buffer_end] == 0
this.yy_buffer[this.yy_buffer_read] <= orig(this.yy_buffer[post(this.yy_buffer_end)])
orig(this.yy_buffer[post(this.yy_buffer_end)]) % this.yy_buffer[this.yy_buffer_end] == 0
this.yy_buffer[this.yy_buffer_end] >= orig(this.yy_buffer[post(this.yy_buffer_end)])
this.yy_buffer[orig(this.yy_buffer_index)] >= this.yy_buffer[orig(this.yy_buffer_read)]
this.yy_buffer[orig(this.yy_buffer_index)] >= orig(this.yy_buffer[this.yy_buffer_index])
this.yy_buffer[orig(this.yy_buffer_index)] >= orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[orig(this.yy_buffer_read)] % this.yy_buffer[orig(this.yy_buffer_start)] == 0
this.yy_buffer[orig(this.yy_buffer_read)] <= this.yy_buffer[orig(this.yy_buffer_start)]
this.yy_buffer[orig(this.yy_buffer_read)] <= this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[orig(this.yy_buffer_read)] >= orig(this.yy_buffer[this.yy_buffer_read])
orig(this.yy_buffer[this.yy_buffer_read]) % this.yy_buffer[orig(this.yy_buffer_start)] == 0
this.yy_buffer[orig(this.yy_buffer_start)] >= orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[orig(this.yy_buffer_start)] >= orig(this.yy_buffer[this.yy_buffer_start])
this.yy_buffer[orig(this.yy_buffer_end)] >= orig(this.yy_buffer[this.yy_buffer_read])
this.yy_buffer[orig(this.yy_buffer_end)] >= orig(this.yy_buffer[this.yy_buffer_end])
this.yy_state_dtrans[this.yy_lexical_state] < this.yy_cmap[return]
this.yy_state_dtrans[this.yy_lexical_state] <= this.yy_cmap[return-1]
===========================================================================
gramatica.Centralizador.Yylex.yy_mark_end():::ENTER
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[] elements >= this.yy_buffer[this.yy_buffer_read]
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_start] <= this.yy_buffer[this.yy_buffer_end]
===========================================================================
gramatica.Centralizador.Yylex.yy_mark_end():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_index)
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer == orig(this.yy_buffer)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yyline == orig(this.yyline)
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer_index >= orig(this.yy_buffer_end)
this.yy_buffer_read >= orig(this.yy_buffer_end)
this.yy_buffer_start <= orig(this.yy_buffer_end)
this.yy_buffer[] elements >= this.yy_buffer[this.yy_buffer_read]
orig(this.yy_buffer_end) < size(this.yy_buffer[])-1
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[orig(this.yy_buffer_end)]
this.yy_buffer[this.yy_buffer_start] <= this.yy_buffer[orig(this.yy_buffer_end)]
===========================================================================
gramatica.Centralizador.Yylex.yy_mark_start():::ENTER
this.yy_buffer_index == this.yy_buffer_end
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
===========================================================================
gramatica.Centralizador.Yylex.yy_mark_start():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_start
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_index)
this.yy_buffer_index == orig(this.yy_buffer_end)
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer == orig(this.yy_buffer)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yyline == orig(this.yyline)
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_reader != null
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer_index >= orig(this.yy_buffer_start)
this.yy_buffer_read >= orig(this.yy_buffer_start)
orig(this.yy_buffer_start) < size(this.yy_buffer[])-1
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_start)]
===========================================================================
gramatica.Centralizador.Yylex.yy_to_mark():::ENTER
this.yy_reader != null
this.yy_buffer_index >= 1
this.yy_buffer != null
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer_index > this.yy_buffer_start
this.yy_buffer_read > this.yy_buffer_start
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_index-1]
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_read-1]
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[this.yy_buffer_index] == 0
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[this.yy_buffer_end] == 0
this.yy_buffer[this.yy_buffer_read-1] != this.yy_buffer[this.yy_buffer_start]
===========================================================================
gramatica.Centralizador.Yylex.yy_to_mark():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_end)
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer == orig(this.yy_buffer)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yyline == orig(this.yyline)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_reader != null
this.yy_buffer != null
this.yy_at_bol == false
this.yy_cmap != null
this.yy_rmap != null
this.yy_nxt != null
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer_index <= orig(this.yy_buffer_index)
this.yy_buffer_read > this.yy_buffer_start
this.yy_buffer_read >= orig(this.yy_buffer_index)
this.yy_buffer_start < orig(this.yy_buffer_index)
orig(this.yy_buffer_index) < size(this.yy_buffer[])-1
size(this.yy_cmap[])-1 > this.yy_buffer[this.yy_buffer_read-1]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_index)]
size(this.yy_cmap[])-1 > this.yy_buffer[orig(this.yy_buffer_index)-1]
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[this.yy_buffer_index] == 0
this.yy_buffer[this.yy_buffer_read] % this.yy_buffer[orig(this.yy_buffer_index)] == 0
this.yy_buffer[this.yy_buffer_read] <= this.yy_buffer[orig(this.yy_buffer_index)]
this.yy_buffer[this.yy_buffer_read-1] != this.yy_buffer[this.yy_buffer_start]
===========================================================================
gramatica.Centralizador.Yylex.yytext():::ENTER
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[this.yy_buffer_start-1]
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[this.yy_buffer_end-1]
this.yy_buffer_index == 9
this.yy_buffer_read one of { 24, 27 }
this.yy_buffer_start == 8
this.yy_buffer[] one of { [76, 105, 98, 101, 114, 97, 114, 32, 54, 32, 109, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.yy_at_bol == false
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start] one of { 54, 56 }
===========================================================================
gramatica.Centralizador.Yylex.yytext():::EXIT
this.YY_BUFFER_SIZE == orig(this.YY_BUFFER_SIZE)
this.YY_F == orig(this.YY_F)
this.YY_NO_STATE == orig(this.YY_NO_STATE)
this.YY_NOT_ACCEPT == orig(this.YY_NOT_ACCEPT)
this.YY_START == orig(this.YY_START)
this.YY_END == orig(this.YY_END)
this.YY_NO_ANCHOR == orig(this.YY_NO_ANCHOR)
this.YY_BOL == orig(this.YY_BOL)
this.YY_EOF == orig(this.YY_EOF)
this.pstring == orig(this.pstring)
this.pstring.toString == orig(this.pstring.toString)
this.yy_reader == orig(this.yy_reader)
this.yy_buffer_index == this.yy_buffer_end
this.yy_buffer_index == orig(this.yy_buffer_index)
this.yy_buffer_index == orig(this.yy_buffer_end)
this.yy_buffer_read == orig(this.yy_buffer_read)
this.yy_buffer_start == orig(this.yy_buffer_start)
this.yy_buffer == orig(this.yy_buffer)
this.yy_buffer[] == orig(this.yy_buffer[])
this.yyline == orig(this.yyline)
this.yy_at_bol == orig(this.yy_at_bol)
this.yy_lexical_state == orig(this.yy_lexical_state)
this.yy_eof_done == orig(this.yy_eof_done)
this.STRING == orig(this.STRING)
this.ESCAPED == orig(this.ESCAPED)
this.YYINITIAL == orig(this.YYINITIAL)
this.COMMENT == orig(this.COMMENT)
this.CHAREND == orig(this.CHAREND)
this.CHARESC == orig(this.CHARESC)
this.CHAR == orig(this.CHAR)
this.yy_state_dtrans == orig(this.yy_state_dtrans)
this.yy_state_dtrans[] == orig(this.yy_state_dtrans[])
this.yy_last_was_cr == orig(this.yy_last_was_cr)
this.YY_E_INTERNAL == orig(this.YY_E_INTERNAL)
this.YY_E_MATCH == orig(this.YY_E_MATCH)
this.yy_error_string == orig(this.yy_error_string)
this.yy_error_string.getClass().getName() == orig(this.yy_error_string.getClass().getName())
this.yy_error_string[] == orig(this.yy_error_string[])
this.yy_acpt == orig(this.yy_acpt)
this.yy_acpt[] == orig(this.yy_acpt[])
this.yy_cmap == orig(this.yy_cmap)
this.yy_cmap[] == orig(this.yy_cmap[])
this.yy_rmap == orig(this.yy_rmap)
this.yy_rmap[] == orig(this.yy_rmap[])
this.yy_nxt == orig(this.yy_nxt)
this.yy_nxt.getClass().getName() == orig(this.yy_nxt.getClass().getName())
this.yy_nxt[] == orig(this.yy_nxt[])
size(this.yy_acpt[]) == orig(size(this.yy_rmap[]))
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[this.yy_buffer_start-1]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[post(this.yy_buffer_start)-1])
this.yy_buffer[this.yy_buffer_index] == this.yy_buffer[orig(this.yy_buffer_start)-1]
this.yy_buffer[this.yy_buffer_index] == orig(this.yy_buffer[this.yy_buffer_start-1])
this.yy_buffer[this.yy_buffer_index-1] == this.yy_buffer[this.yy_buffer_start]
orig(this.yy_buffer[post(this.yy_buffer_index)-1]) == this.yy_buffer[this.yy_buffer_start]
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[this.yy_buffer_end-1]
this.yy_buffer[this.yy_buffer_start] == orig(this.yy_buffer[post(this.yy_buffer_end)-1])
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[orig(this.yy_buffer_index)-1]
this.yy_buffer[this.yy_buffer_start] == this.yy_buffer[orig(this.yy_buffer_end)-1]
this.yy_buffer[this.yy_buffer_start] == orig(this.yy_buffer[this.yy_buffer_index-1])
this.yy_buffer[this.yy_buffer_start] == orig(this.yy_buffer[this.yy_buffer_end-1])
this.yy_buffer_index == 9
this.yy_buffer_read one of { 24, 27 }
this.yy_buffer_start == 8
this.yy_buffer[] one of { [76, 105, 98, 101, 114, 97, 114, 32, 54, 32, 109, 108, 32, 100, 101, 32, 80, 97, 114, 97, 99, 101, 116, 97, 109, 111, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [76, 105, 98, 101, 114, 97, 114, 32, 56, 32, 109, 108, 32, 100, 101, 32, 68, 105, 112, 105, 114, 111, 110, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.yy_at_bol == false
return.toString one of { "6", "8" }
this.yy_buffer[this.yy_buffer_index] == 32
this.yy_buffer[this.yy_buffer_read] == 0
this.yy_buffer[this.yy_buffer_read-1] one of { 97, 108 }
this.yy_buffer[this.yy_buffer_start] one of { 54, 56 }
===========================================================================
gramatica.Centralizador.parser:::CLASS
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._action_table.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == gramatica.Centralizador.parser._reduce_table.getClass().getName()
size(gramatica.Centralizador.parser._action_table[]) == size(gramatica.Centralizador.parser._reduce_table[])
gramatica.Centralizador.parser._production_table has only one value
gramatica.Centralizador.parser._production_table != null
gramatica.Centralizador.parser._production_table.getClass().getName() == short[][].class
gramatica.Centralizador.parser._production_table[] contains no nulls and has only one value, of length 20
gramatica.Centralizador.parser._production_table[] elements != null
gramatica.Centralizador.parser._action_table has only one value
gramatica.Centralizador.parser._action_table != null
gramatica.Centralizador.parser._action_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._action_table[] elements != null
gramatica.Centralizador.parser._reduce_table has only one value
gramatica.Centralizador.parser._reduce_table != null
gramatica.Centralizador.parser._reduce_table[] contains no nulls and has only one value, of length 27
gramatica.Centralizador.parser._reduce_table[] elements != null
size(gramatica.Centralizador.parser._production_table[]) == 20
size(gramatica.Centralizador.parser._action_table[]) == 27
===========================================================================
gramatica.Centralizador.parser:::OBJECT
this == this.action_obj.parser
gramatica.Centralizador.parser._production_table == this.action_obj.parser.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == this.action_obj.parser.action_tab
gramatica.Centralizador.parser._reduce_table == this.action_obj.parser.reduce_tab
this.action_obj == this.action_obj.parser.action_obj
this.action_obj.parser._done_parsing == this._done_parsing
this.action_obj.parser.tos == this.tos
this.action_obj.parser.cur_token == this.cur_token
this.action_obj.parser.stack == this.stack
this.action_obj.parser.production_tab == this.production_tab
this.action_obj.parser.production_tab.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() == this.production_tab.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() == this.action_tab.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() == this.reduce_tab.getClass().getName()
this.action_obj.parser.action_tab == this.action_tab
this.action_obj.parser.reduce_tab == this.reduce_tab
this.action_obj.parser._scanner == this._scanner
this.action_obj.parser._scanner.getClass().getName() == this._scanner.getClass().getName()
this.production_tab.getClass().getName() == this.action_tab.getClass().getName()
this.production_tab.getClass().getName() == this.reduce_tab.getClass().getName()
this.action_tab.getClass().getName() == this.reduce_tab.getClass().getName()
size(gramatica.Centralizador.parser._production_table[]) == size(this.action_obj.parser.production_tab[])
size(gramatica.Centralizador.parser._production_table[]) == size(this.production_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.reduce_tab[])
size(this.action_obj.parser.action_tab[]) == size(this.action_obj.parser.reduce_tab[])
size(this.action_tab[]) == size(this.reduce_tab[])
this.action_obj.parser != null
this.action_obj.parser.action_obj != null
this.action_obj.parser.tos >= 0
this.action_obj.parser.stack != null
this.action_obj.parser.production_tab has only one value
this.action_obj.parser.production_tab != null
this.action_obj.parser.production_tab.getClass().getName() == short[][].class
this.action_obj.parser.production_tab[] contains no nulls and has only one value, of length 20
this.action_obj.parser.production_tab[] elements != null
this.action_obj.parser.action_tab has only one value
this.action_obj.parser.action_tab != null
this.action_obj.parser.action_tab[] contains no nulls and has only one value, of length 27
this.action_obj.parser.action_tab[] elements != null
this.action_obj.parser.reduce_tab has only one value
this.action_obj.parser.reduce_tab != null
this.action_obj.parser.reduce_tab[] contains no nulls and has only one value, of length 27
this.action_obj.parser.reduce_tab[] elements != null
this.action_obj.parser._scanner != null
this.action_obj.parser._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
this.action_obj.parser.lookahead == null
this.action_obj.parser.lookahead_pos == 0
this.tos >= 0
this.cur_token.sym >= 0
this.cur_token.parse_state != 0
this.cur_token.parse_state >= -1
this.cur_token.left == -1
this.cur_token.right == -1
this.cur_token.value.getClass().getName() == java.lang.Integer.class
this.stack != null
this.production_tab.getClass().getName() == short[][].class
this.production_tab[] contains no nulls and has only one value, of length 20
this.production_tab[] elements != null
this.action_tab.getClass().getName() == short[][].class
this.action_tab[] contains no nulls and has only one value, of length 27
this.action_tab[] elements != null
this.reduce_tab.getClass().getName() == short[][].class
this.reduce_tab[] contains no nulls and has only one value, of length 27
this.reduce_tab[] elements != null
this._scanner != null
this._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
this.lookahead == null
this.lookahead_pos == 0
size(this.action_obj.parser.production_tab[]) == 20
size(this.action_obj.parser.action_tab[]) == 27
size(this.production_tab[]) == 20
size(this.action_tab[]) == 27
size(this.reduce_tab[]) == 27
gramatica.Centralizador.parser._production_table.getClass().getName() != this.action_obj.parser._scanner.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() != this._scanner.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() != this.action_obj.parser._scanner.getClass().getName()
this.action_obj.parser.production_tab.getClass().getName() != this._scanner.getClass().getName()
this.action_obj.parser.production_tab[] == this.production_tab[] (elementwise)
this.action_obj.parser.action_tab[] == this.action_tab[] (elementwise)
this.action_obj.parser.reduce_tab[] == this.reduce_tab[] (elementwise)
this.action_obj.parser._scanner.getClass().getName() != this.production_tab.getClass().getName()
this.action_obj.parser._scanner.getClass().getName() != this.action_tab.getClass().getName()
this.action_obj.parser._scanner.getClass().getName() != this.reduce_tab.getClass().getName()
this.cur_token.sym < size(gramatica.Centralizador.parser._production_table[])-1
this.cur_token.sym < size(gramatica.Centralizador.parser._action_table[])-1
this.cur_token.sym < size(this.action_obj.parser.production_tab[])-1
this.cur_token.sym < size(this.action_obj.parser.action_tab[])-1
this.cur_token.sym < size(this.production_tab[])-1
this.cur_token.sym < size(this.action_tab[])-1
this.cur_token.sym < size(this.reduce_tab[])-1
this.cur_token.parse_state != size(gramatica.Centralizador.parser._production_table[])-1
this.cur_token.parse_state < size(gramatica.Centralizador.parser._action_table[])-1
this.cur_token.parse_state != size(this.action_obj.parser.production_tab[])-1
this.cur_token.parse_state < size(this.action_obj.parser.action_tab[])-1
this.cur_token.parse_state != size(this.production_tab[])-1
this.cur_token.parse_state < size(this.action_tab[])-1
this.cur_token.parse_state < size(this.reduce_tab[])-1
this.production_tab.getClass().getName() != this._scanner.getClass().getName()
this.action_tab.getClass().getName() != this._scanner.getClass().getName()
this.reduce_tab.getClass().getName() != this._scanner.getClass().getName()
===========================================================================
gramatica.Centralizador.parser.EOF_sym():::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
this.action_obj != null
this._done_parsing == false
this.tos one of { 2, 4, 6 }
this.cur_token != null
this.cur_token.used_by_parser == true
this.cur_token.value == null
this.cur_token.sym <= this.cur_token.parse_state
===========================================================================
gramatica.Centralizador.parser.EOF_sym():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.action_obj.parser.production_tab)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.action_obj.parser.action_tab)
gramatica.Centralizador.parser._action_table == orig(this.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(this.action_obj.parser.reduce_tab)
gramatica.Centralizador.parser._reduce_table == orig(this.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this.action_obj == orig(this.action_obj.parser.action_obj)
this.action_obj.parser == orig(this)
this.action_obj.parser == orig(this.action_obj.parser)
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this.action_obj.parser.lookahead == orig(this.action_obj.parser.lookahead)
this.action_obj.parser.lookahead_pos == orig(this.action_obj.parser.lookahead_pos)
this._done_parsing == orig(this.action_obj.parser._done_parsing)
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.action_obj.parser.tos)
this.tos == orig(this.tos)
this.cur_token == orig(this.action_obj.parser.cur_token)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.stack == orig(this.action_obj.parser.stack)
this.stack == orig(this.stack)
this.production_tab[] == orig(this.action_obj.parser.production_tab[])
this.production_tab[] == orig(this.production_tab[])
this.action_tab[] == orig(this.action_obj.parser.action_tab[])
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab[] == orig(this.action_obj.parser.reduce_tab[])
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this.action_obj.parser._scanner)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this.action_obj.parser._scanner.getClass().getName())
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.action_obj.parser.production_tab[]))
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.reduce_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.reduce_tab[]))
this.action_obj != null
this._done_parsing == false
this.tos one of { 2, 4, 6 }
this.cur_token != null
this.cur_token.used_by_parser == true
this.cur_token.value == null
return == 0
this.cur_token.sym <= this.cur_token.parse_state
===========================================================================
gramatica.Centralizador.parser.action_table():::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
this.action_tab == this.reduce_tab
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.action_tab == null
===========================================================================
gramatica.Centralizador.parser.action_table():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == return.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == return
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab[] == orig(this.production_tab[])
this.action_tab == this.reduce_tab
this.action_tab == orig(this.action_tab)
this.action_tab == orig(this.reduce_tab)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(return[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.action_tab == null
return[] contains no nulls and has only one value, of length 27
return[] elements != null
===========================================================================
gramatica.Centralizador.parser.do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == arg1.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == arg1.action_tab
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == arg1.reduce_tab
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this._done_parsing == arg1._done_parsing
this.tos == arg1.tos
this.tos == arg3
this.cur_token == arg1.cur_token
this.cur_token.sym == arg1.cur_token.sym
this.cur_token.parse_state == arg1.cur_token.parse_state
this.cur_token.used_by_parser == arg1.cur_token.used_by_parser
this.cur_token.value == arg1.cur_token.value
this.cur_token.value.getClass().getName() == arg1.cur_token.value.getClass().getName()
this.stack == arg1.stack
this.stack == arg2
this.production_tab[] == arg1.production_tab[]
this.action_tab[] == arg1.action_tab[]
this.reduce_tab[] == arg1.reduce_tab[]
this._scanner == arg1._scanner
this._scanner.getClass().getName() == arg1._scanner.getClass().getName()
size(gramatica.Centralizador.parser._production_table[]) == size(arg1.production_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.reduce_tab[])
this.action_obj != null
this._done_parsing == false
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
arg0 >= 0
arg1 != null
arg1.getClass().getName() == gramatica.Centralizador.parser.class
arg1.cur_token.left == -1
arg1.cur_token.right == -1
arg1.lookahead == null
arg1.lookahead_pos == 0
gramatica.Centralizador.parser._production_table.getClass().getName() != arg1.getClass().getName()
this.cur_token.sym > this.cur_token.parse_state
this.cur_token.parse_state < arg0
this._scanner.getClass().getName() != arg1.getClass().getName()
arg0 <= size(gramatica.Centralizador.parser._production_table[])-1
arg0 < size(gramatica.Centralizador.parser._action_table[])-1
===========================================================================
gramatica.Centralizador.parser.do_action(int, gramatica.java_cup.runtime.lr_parser, java.util.Stack, int):::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == arg1.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.action_obj.parser.production_tab)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table == orig(arg1.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.production_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == arg1.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(arg1.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == arg1.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.action_obj.parser.action_tab)
gramatica.Centralizador.parser._action_table == orig(this.action_tab)
gramatica.Centralizador.parser._action_table == orig(arg1.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == arg1.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(this.action_obj.parser.reduce_tab)
gramatica.Centralizador.parser._reduce_table == orig(this.reduce_tab)
gramatica.Centralizador.parser._reduce_table == orig(arg1.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this.action_obj == orig(this.action_obj.parser.action_obj)
this.action_obj.parser == orig(this)
this.action_obj.parser == orig(this.action_obj.parser)
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this.action_obj.parser.lookahead == orig(this.action_obj.parser.lookahead)
this.action_obj.parser.lookahead_pos == orig(this.action_obj.parser.lookahead_pos)
this._done_parsing == arg1._done_parsing
this.tos == arg1.tos
this.tos == orig(this.action_obj.parser.tos)
this.tos == orig(this.tos)
this.tos == orig(arg1.tos)
this.tos == orig(arg3)
this.cur_token == arg1.cur_token
this.cur_token == orig(this.action_obj.parser.cur_token)
this.cur_token == orig(this.cur_token)
this.cur_token == orig(arg1.cur_token)
this.cur_token.sym == arg1.cur_token.sym
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.sym == orig(arg1.cur_token.sym)
this.cur_token.parse_state == arg1.cur_token.parse_state
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.parse_state == orig(arg1.cur_token.parse_state)
this.cur_token.used_by_parser == arg1.cur_token.used_by_parser
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.used_by_parser == orig(arg1.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == arg1.cur_token.value
this.cur_token.value == orig(this.cur_token.value)
this.cur_token.value == orig(arg1.cur_token.value)
this.cur_token.value.getClass().getName() == arg1.cur_token.value.getClass().getName()
this.cur_token.value.getClass().getName() == orig(this.cur_token.value.getClass().getName())
this.cur_token.value.getClass().getName() == orig(arg1.cur_token.value.getClass().getName())
this.stack == arg1.stack
this.stack == orig(this.action_obj.parser.stack)
this.stack == orig(this.stack)
this.stack == orig(arg1.stack)
this.stack == orig(arg2)
this.production_tab[] == arg1.production_tab[]
this.production_tab[] == orig(this.action_obj.parser.production_tab[])
this.production_tab[] == orig(this.production_tab[])
this.production_tab[] == orig(arg1.production_tab[])
this.action_tab[] == arg1.action_tab[]
this.action_tab[] == orig(this.action_obj.parser.action_tab[])
this.action_tab[] == orig(this.action_tab[])
this.action_tab[] == orig(arg1.action_tab[])
this.reduce_tab[] == arg1.reduce_tab[]
this.reduce_tab[] == orig(this.action_obj.parser.reduce_tab[])
this.reduce_tab[] == orig(this.reduce_tab[])
this.reduce_tab[] == orig(arg1.reduce_tab[])
this._scanner == arg1._scanner
this._scanner == orig(this.action_obj.parser._scanner)
this._scanner == orig(this._scanner)
this._scanner == orig(arg1._scanner)
this._scanner.getClass().getName() == arg1._scanner.getClass().getName()
this._scanner.getClass().getName() == orig(this.action_obj.parser._scanner.getClass().getName())
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this._scanner.getClass().getName() == orig(arg1._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
arg1.cur_token.left == orig(arg1.cur_token.left)
arg1.cur_token.right == orig(arg1.cur_token.right)
arg1.lookahead == orig(arg1.lookahead)
arg1.lookahead_pos == orig(arg1.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == size(arg1.production_tab[])
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.action_obj.parser.production_tab[]))
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._production_table[]) == orig(size(arg1.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.action_tab[])
size(gramatica.Centralizador.parser._action_table[]) == size(arg1.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.reduce_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.reduce_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg1.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(arg1.reduce_tab[]))
this.action_obj != null
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
arg1.cur_token.left == -1
arg1.cur_token.right == -1
arg1.lookahead == null
arg1.lookahead_pos == 0
return != null
return.sym >= 0
return.parse_state == -1
return.used_by_parser == false
return.left == -1
return.right == -1
return.value != null
gramatica.Centralizador.parser._production_table.getClass().getName() != return.value.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() != orig(arg1.getClass().getName())
this.cur_token.sym > this.cur_token.parse_state
this.cur_token.parse_state < orig(arg0)
this._scanner.getClass().getName() != return.value.getClass().getName()
this._scanner.getClass().getName() != orig(arg1.getClass().getName())
return.value.getClass().getName() != orig(arg1.getClass().getName())
orig(arg0) <= size(gramatica.Centralizador.parser._production_table[])-1
orig(arg0) < size(gramatica.Centralizador.parser._action_table[])-1
===========================================================================
gramatica.Centralizador.parser.init_actions():::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
===========================================================================
gramatica.Centralizador.parser.init_actions():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(this.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj.parser == orig(this)
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab[] == orig(this.production_tab[])
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.reduce_tab[]))
this.action_obj != null
this._done_parsing == false
this.tos == 0
this.cur_token == null
===========================================================================
gramatica.Centralizador.parser.pTarefa():::ENTER
this.production_tab == this.action_tab
this.production_tab == this.reduce_tab
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
===========================================================================
gramatica.Centralizador.parser.pTarefa():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj.parser == orig(this)
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this.stack == orig(this.stack)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
this.action_obj != null
this._done_parsing == true
this.tos == 1
this.cur_token != null
this.cur_token.sym == 0
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
return != null
return.getClass().getName() == gramatica.Centralizador.Absyn.ETask.class
gramatica.Centralizador.parser._production_table[this.cur_token.sym] has only one value
gramatica.Centralizador.parser._action_table[this.cur_token.sym] has only one value
gramatica.Centralizador.parser._reduce_table[this.cur_token.sym] has only one value
this.production_tab[this.cur_token.sym] has only one value
this.action_tab[this.cur_token.sym] has only one value
this.reduce_tab[this.cur_token.sym] has only one value
gramatica.Centralizador.parser._production_table.getClass().getName() != return.getClass().getName()
this._scanner.getClass().getName() != return.getClass().getName()
===========================================================================
gramatica.Centralizador.parser.parser(gramatica.java_cup.runtime.Scanner):::ENTER
arg0 != null
arg0.getClass().getName() == gramatica.Centralizador.Yylex.class
===========================================================================
gramatica.Centralizador.parser.parser(gramatica.java_cup.runtime.Scanner):::EXIT
this.production_tab == this.action_tab
this.production_tab == this.reduce_tab
this._scanner == orig(arg0)
this._scanner.getClass().getName() == orig(arg0.getClass().getName())
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
===========================================================================
gramatica.Centralizador.parser.production_table():::ENTER
this.production_tab == this.action_tab
this.production_tab == this.reduce_tab
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
===========================================================================
gramatica.Centralizador.parser.production_table():::EXIT
gramatica.Centralizador.parser._production_table == return
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table.getClass().getName() == return.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab == this.action_tab
this.production_tab == this.reduce_tab
this.production_tab == orig(this.production_tab)
this.production_tab == orig(this.action_tab)
this.production_tab == orig(this.reduce_tab)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == size(return[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
return[] contains no nulls and has only one value, of length 20
return[] elements != null
===========================================================================
gramatica.Centralizador.parser.reduce_table():::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._action_table == this.action_tab
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.reduce_tab == null
===========================================================================
gramatica.Centralizador.parser.reduce_table():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == return.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == return
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab[] == orig(this.production_tab[])
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(return[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_tab[]))
this.action_obj == null
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.reduce_tab == null
return[] contains no nulls and has only one value, of length 27
return[] elements != null
===========================================================================
gramatica.Centralizador.parser.start_state():::ENTER
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
this.action_obj != null
this._done_parsing == false
this.tos == 0
this.cur_token != null
this.cur_token.sym >= 2
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
this.cur_token.sym > this.cur_token.parse_state
===========================================================================
gramatica.Centralizador.parser.start_state():::EXIT
gramatica.Centralizador.parser._production_table == this.production_tab
gramatica.Centralizador.parser._production_table == orig(gramatica.Centralizador.parser._production_table)
gramatica.Centralizador.parser._production_table == orig(this.action_obj.parser.production_tab)
gramatica.Centralizador.parser._production_table == orig(this.production_tab)
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.action_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == this.action_obj.parser.reduce_tab.getClass().getName()
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._production_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._action_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(gramatica.Centralizador.parser._reduce_table.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_obj.parser.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.production_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.action_tab.getClass().getName())
gramatica.Centralizador.parser._production_table.getClass().getName() == orig(this.reduce_tab.getClass().getName())
gramatica.Centralizador.parser._production_table[] == orig(gramatica.Centralizador.parser._production_table[])
gramatica.Centralizador.parser._action_table == this.action_tab
gramatica.Centralizador.parser._action_table == orig(gramatica.Centralizador.parser._action_table)
gramatica.Centralizador.parser._action_table == orig(this.action_obj.parser.action_tab)
gramatica.Centralizador.parser._action_table == orig(this.action_tab)
gramatica.Centralizador.parser._action_table[] == orig(gramatica.Centralizador.parser._action_table[])
gramatica.Centralizador.parser._reduce_table == this.reduce_tab
gramatica.Centralizador.parser._reduce_table == orig(gramatica.Centralizador.parser._reduce_table)
gramatica.Centralizador.parser._reduce_table == orig(this.action_obj.parser.reduce_tab)
gramatica.Centralizador.parser._reduce_table == orig(this.reduce_tab)
gramatica.Centralizador.parser._reduce_table[] == orig(gramatica.Centralizador.parser._reduce_table[])
this.action_obj == orig(this.action_obj)
this.action_obj == orig(this.action_obj.parser.action_obj)
this.action_obj.parser == orig(this)
this.action_obj.parser == orig(this.action_obj.parser)
this.action_obj.parser.production_tab[] == this.production_tab[]
this.action_obj.parser.action_tab[] == this.action_tab[]
this.action_obj.parser.reduce_tab[] == this.reduce_tab[]
this.action_obj.parser.lookahead == orig(this.action_obj.parser.lookahead)
this.action_obj.parser.lookahead_pos == orig(this.action_obj.parser.lookahead_pos)
this._done_parsing == orig(this.action_obj.parser._done_parsing)
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.action_obj.parser.tos)
this.tos == orig(this.tos)
this.cur_token == orig(this.action_obj.parser.cur_token)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.stack == orig(this.action_obj.parser.stack)
this.stack == orig(this.stack)
this.production_tab[] == orig(this.action_obj.parser.production_tab[])
this.production_tab[] == orig(this.production_tab[])
this.action_tab[] == orig(this.action_obj.parser.action_tab[])
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab[] == orig(this.action_obj.parser.reduce_tab[])
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this.action_obj.parser._scanner)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this.action_obj.parser._scanner.getClass().getName())
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.action_obj.parser.production_tab[]))
size(gramatica.Centralizador.parser._production_table[]) == orig(size(this.production_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == size(this.action_obj.parser.reduce_tab[])
size(gramatica.Centralizador.parser._action_table[]) == orig(size(gramatica.Centralizador.parser._reduce_table[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_obj.parser.reduce_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.action_tab[]))
size(gramatica.Centralizador.parser._action_table[]) == orig(size(this.reduce_tab[]))
this.action_obj != null
this._done_parsing == false
this.tos == 0
this.cur_token != null
this.cur_token.sym >= 2
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
return == 0
this.cur_token.sym > this.cur_token.parse_state
===========================================================================
gramatica.java_cup.runtime.Symbol:::OBJECT
this.sym >= 0
this.parse_state one of { -1, 0 }
this.used_by_parser == false
this.left one of { -1, 0 }
this.right one of { -1, 0 }
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int):::ENTER
arg0 >= 0
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int):::EXIT
this.parse_state == -1
this.left == -1
this.right == -1
this.value == null
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, int):::ENTER
arg0 >= 0
arg1 one of { -1, 0 }
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, int):::EXIT
this.left == 0
this.right == 0
this.value == null
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, int, int, java.lang.Object):::ENTER
arg0 >= 0
arg1 == -1
arg2 == -1
arg3 != null
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, int, int, java.lang.Object):::EXIT
this.parse_state == -1
this.left == -1
this.right == -1
this.value != null
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, java.lang.Object):::ENTER
arg0 >= 0
arg1 != null
===========================================================================
gramatica.java_cup.runtime.Symbol.Symbol(int, java.lang.Object):::EXIT
this.parse_state == -1
this.left == -1
this.right == -1
this.value != null
===========================================================================
gramatica.java_cup.runtime.lr_parser:::CLASS
===========================================================================
gramatica.java_cup.runtime.lr_parser:::OBJECT
this.getClass().getName() == gramatica.Centralizador.parser.class
this.tos >= 0
this.cur_token.sym >= 0
this.cur_token.parse_state != 0
this.cur_token.parse_state >= -1
this.cur_token.left == -1
this.cur_token.right == -1
this.cur_token.value.getClass().getName() == java.lang.Integer.class
this.stack != null
this.production_tab.getClass().getName() == short[][].class
this.production_tab[] contains no nulls and has only one value, of length 20
this.production_tab[] elements != null
this.action_tab.getClass().getName() == short[][].class
this.action_tab[] contains no nulls and has only one value, of length 27
this.action_tab[] elements != null
this.reduce_tab.getClass().getName() == short[][].class
this.reduce_tab[] contains no nulls and has only one value, of length 27
this.reduce_tab[] elements != null
this._scanner.getClass().getName() == gramatica.Centralizador.Yylex.class
this.lookahead == null
this.lookahead_pos == 0
size(this.production_tab[]) == 20
size(this.action_tab[]) == 27
size(this.reduce_tab[]) == 27
===========================================================================
gramatica.java_cup.runtime.lr_parser.done_parsing():::ENTER
this._done_parsing == false
this.tos == 2
this.cur_token != null
this.cur_token.sym == 0
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.done_parsing():::EXIT
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == true
this.tos == 2
this.cur_token != null
this.cur_token.sym == 0
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.getScanner():::ENTER
this._done_parsing == false
this.cur_token.used_by_parser == true
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.getScanner():::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.cur_token.value.getClass().getName() == orig(this.cur_token.value.getClass().getName())
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == false
this.cur_token.used_by_parser == true
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
return != null
return.getClass().getName() == gramatica.Centralizador.Yylex.class
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_action(int, int):::ENTER
this._done_parsing == false
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
arg0 >= 0
arg1 >= 0
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_action(int, int):::EXIT439
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_action(int, int):::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.cur_token.value.getClass().getName() == orig(this.cur_token.value.getClass().getName())
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == false
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_reduce(int, int):::ENTER
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
arg0 >= 0
arg1 >= 0
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_reduce(int, int):::EXIT495
===========================================================================
gramatica.java_cup.runtime.lr_parser.get_reduce(int, int):::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.cur_token.value.getClass().getName() == orig(this.cur_token.value.getClass().getName())
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this.cur_token != null
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.lr_parser():::EXIT
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
this.action_tab == null
this.reduce_tab == null
this._scanner == null
===========================================================================
gramatica.java_cup.runtime.lr_parser.lr_parser(gramatica.java_cup.runtime.Scanner):::ENTER
arg0 != null
arg0.getClass().getName() == gramatica.Centralizador.Yylex.class
===========================================================================
gramatica.java_cup.runtime.lr_parser.lr_parser(gramatica.java_cup.runtime.Scanner):::EXIT
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
this.action_tab == null
this.reduce_tab == null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.parse():::ENTER
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
this.action_tab == null
this.reduce_tab == null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.parse():::EXIT
this.stack == orig(this.stack)
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == true
this.tos == 1
this.cur_token != null
this.cur_token.sym == 0
this.cur_token.parse_state == -1
this.cur_token.used_by_parser == false
this.cur_token.value == null
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
return != null
return.sym == 0
return.parse_state == -1
return.used_by_parser == true
return.left == -1
return.right == -1
return.value != null
return.value.getClass().getName() == gramatica.Centralizador.Absyn.ETask.class
===========================================================================
gramatica.java_cup.runtime.lr_parser.scan():::ENTER
this._done_parsing == false
this.cur_token.used_by_parser == true
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.scan():::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.cur_token.sym == orig(this.cur_token.sym)
this.cur_token.parse_state == orig(this.cur_token.parse_state)
this.cur_token.used_by_parser == orig(this.cur_token.used_by_parser)
this.cur_token.left == orig(this.cur_token.left)
this.cur_token.right == orig(this.cur_token.right)
this.cur_token.value == orig(this.cur_token.value)
this.cur_token.value.getClass().getName() == orig(this.cur_token.value.getClass().getName())
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == false
this.cur_token.used_by_parser == true
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
return != null
return.sym >= 0
return.parse_state == -1
return.used_by_parser == false
return.left == -1
return.right == -1
return.value.getClass().getName() == java.lang.Integer.class
===========================================================================
gramatica.java_cup.runtime.lr_parser.setScanner(gramatica.java_cup.runtime.Scanner):::ENTER
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
this.action_tab == null
this.reduce_tab == null
this._scanner == null
arg0 != null
arg0.getClass().getName() == gramatica.Centralizador.Yylex.class
===========================================================================
gramatica.java_cup.runtime.lr_parser.setScanner(gramatica.java_cup.runtime.Scanner):::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.action_tab == orig(this.action_tab)
this.reduce_tab == orig(this.reduce_tab)
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab == null
this.action_tab == null
this.reduce_tab == null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.unpackFromStrings(java.lang.String[]):::ENTER
arg0.getClass().getName() == java.lang.String[].class
arg0[].toString elements one of { "\000\024\000\002\002\004\000\002\003\003\000\002\004\004\000\002\004\004\000\002\004\003\000\002\005\003\000\002\005\003\000\002\006\003\000\002\006\003\000\002\007\003\000\002\007\003\000\002\007\003\000\002\007\003\000\002\007\005\000\002\010\003\000\002\t\005\000\002\t\003\000\002\n\003\000\002\013\003\000\002\013\003", "\000\033\000\n\003\t\004\n\005\004\006\010\001\001\000\002\001\001\000\004\007\031\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\010\t\r\n\022\013\020\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\004\013\024\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\004\010\032\001\001\000\004\007\034\001\001\000\002\001\001\000\004\010\032\001\001", "\000\033\000\014\004\010\005\007\006\006\t\004\r\014\001\002\000\004\002\ufffd\001\002\000\n\007\026\n\030\014\027\017\031\001\002\000\010\013\ufff9\016\ufff9\021\ufff9\001\002\000\n\007\ufffb\n\ufffb\014\ufffb\017\ufffb\001\002\000\n\007\ufffc\n\ufffc\014\ufffc\017\ufffc\001\002\000\010\013\022\016\017\021\020\001\002\000\004\002\r\001\002\000\004\002\000\001\002\000\010\013\ufffa\016\ufffa\021\ufffa\001\002\000\004\002\001\001\002\000\004\002\ufffe\001\002\000\004\002\uffee\001\002\000\004\010\ufff0\001\002\000\004\002\ufff1\001\002\000\004\002\uffef\001\002\000\004\010\024\001\002\000\006\013\022\016\017\001\002\000\004\002\ufff2\001\002\000\006\002\ufff5\020\ufff5\001\002\000\006\002\ufff7\020\ufff7\001\002\000\006\002\ufff6\020\ufff6\001\002\000\006\002\ufff8\020\ufff8\001\002\000\006\002\uffff\020\034\001\002\000\n\007\026\n\030\014\027\017\031\001\002\000\n\007\ufff3\n\ufff3\014\ufff3\017\ufff3\001\002\000\006\002\ufff4\020\034\001\002" }
size(arg0[]) == 1
===========================================================================
gramatica.java_cup.runtime.lr_parser.unpackFromStrings(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[].toString elements one of { "\000\024\000\002\002\004\000\002\003\003\000\002\004\004\000\002\004\004\000\002\004\003\000\002\005\003\000\002\005\003\000\002\006\003\000\002\006\003\000\002\007\003\000\002\007\003\000\002\007\003\000\002\007\003\000\002\007\005\000\002\010\003\000\002\t\005\000\002\t\003\000\002\n\003\000\002\013\003\000\002\013\003", "\000\033\000\n\003\t\004\n\005\004\006\010\001\001\000\002\001\001\000\004\007\031\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\010\t\r\n\022\013\020\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\004\013\024\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\004\010\032\001\001\000\004\007\034\001\001\000\002\001\001\000\004\010\032\001\001", "\000\033\000\014\004\010\005\007\006\006\t\004\r\014\001\002\000\004\002\ufffd\001\002\000\n\007\026\n\030\014\027\017\031\001\002\000\010\013\ufff9\016\ufff9\021\ufff9\001\002\000\n\007\ufffb\n\ufffb\014\ufffb\017\ufffb\001\002\000\n\007\ufffc\n\ufffc\014\ufffc\017\ufffc\001\002\000\010\013\022\016\017\021\020\001\002\000\004\002\r\001\002\000\004\002\000\001\002\000\010\013\ufffa\016\ufffa\021\ufffa\001\002\000\004\002\001\001\002\000\004\002\ufffe\001\002\000\004\002\uffee\001\002\000\004\010\ufff0\001\002\000\004\002\ufff1\001\002\000\004\002\uffef\001\002\000\004\010\024\001\002\000\006\013\022\016\017\001\002\000\004\002\ufff2\001\002\000\006\002\ufff5\020\ufff5\001\002\000\006\002\ufff7\020\ufff7\001\002\000\006\002\ufff6\020\ufff6\001\002\000\006\002\ufff8\020\ufff8\001\002\000\006\002\uffff\020\034\001\002\000\n\007\026\n\030\014\027\017\031\001\002\000\n\007\ufff3\n\ufff3\014\ufff3\017\ufff3\001\002\000\006\002\ufff4\020\034\001\002" }
return.getClass().getName() == short[][].class
size(return[]) one of { 20, 27 }
===========================================================================
gramatica.java_cup.runtime.lr_parser.user_init():::ENTER
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
===========================================================================
gramatica.java_cup.runtime.lr_parser.user_init():::EXIT
this._done_parsing == orig(this._done_parsing)
this.tos == orig(this.tos)
this.cur_token == orig(this.cur_token)
this.stack == orig(this.stack)
this.production_tab == orig(this.production_tab)
this.production_tab.getClass().getName() == orig(this.production_tab.getClass().getName())
this.production_tab[] == orig(this.production_tab[])
this.action_tab == orig(this.action_tab)
this.action_tab.getClass().getName() == orig(this.action_tab.getClass().getName())
this.action_tab[] == orig(this.action_tab[])
this.reduce_tab == orig(this.reduce_tab)
this.reduce_tab.getClass().getName() == orig(this.reduce_tab.getClass().getName())
this.reduce_tab[] == orig(this.reduce_tab[])
this._scanner == orig(this._scanner)
this._scanner.getClass().getName() == orig(this._scanner.getClass().getName())
this.lookahead == orig(this.lookahead)
this.lookahead_pos == orig(this.lookahead_pos)
this._done_parsing == false
this.tos == 0
this.cur_token == null
this.production_tab has only one value
this.production_tab != null
this.action_tab has only one value
this.action_tab != null
this.reduce_tab has only one value
this.reduce_tab != null
this._scanner != null
Exiting Daikon.
