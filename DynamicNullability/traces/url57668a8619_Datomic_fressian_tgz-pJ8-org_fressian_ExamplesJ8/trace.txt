Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
org.fressian.Examples$1:::CLASS
org.fressian.Examples$1.$assertionsDisabled == false
===========================================================================
org.fressian.Examples$1:::OBJECT
this has only one value
===========================================================================
org.fressian.Examples$1.():::EXIT
===========================================================================
org.fressian.Examples$1.read(org.fressian.Reader, java.lang.Object, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianReader.class
arg1 has only one value
arg1.getClass().getName() == java.lang.String.class
arg2 == 2
===========================================================================
org.fressian.Examples$1.read(org.fressian.Reader, java.lang.Object, int):::EXIT
org.fressian.Examples$1.$assertionsDisabled == orig(org.fressian.Examples$1.$assertionsDisabled)
return has only one value
return.getClass().getName() == org.fressian.Examples$Person.class
===========================================================================
org.fressian.Examples$2:::OBJECT
this has only one value
this.val$handler has only one value
this.val$handler.getClass().getName() == org.fressian.Examples$1.class
===========================================================================
org.fressian.Examples$2.(org.fressian.handlers.ReadHandler):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.Examples$1.class
===========================================================================
org.fressian.Examples$2.(org.fressian.handlers.ReadHandler):::EXIT
this.val$handler == orig(arg0)
this.val$handler.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.fressian.Examples$2.valAt(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String.class
===========================================================================
org.fressian.Examples$2.valAt(java.lang.Object):::EXIT52
===========================================================================
org.fressian.Examples$2.valAt(java.lang.Object):::EXIT
this.val$handler == return
this.val$handler.getClass().getName() == return.getClass().getName()
return == orig(this.val$handler)
return.getClass().getName() == orig(this.val$handler.getClass().getName())
return has only one value
return.getClass().getName() == org.fressian.Examples$1.class
===========================================================================
org.fressian.Examples$3:::OBJECT
this has only one value
===========================================================================
org.fressian.Examples$3.():::EXIT
===========================================================================
org.fressian.Examples$3.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1 has only one value
arg1.getClass().getName() == org.fressian.Examples$Person.class
===========================================================================
org.fressian.Examples$3.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.Examples$4:::OBJECT
this has only one value
this.val$handler has only one value
this.val$handler.getClass().getName() == org.fressian.Examples$3.class
===========================================================================
org.fressian.Examples$4.(org.fressian.handlers.WriteHandler):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.Examples$3.class
===========================================================================
org.fressian.Examples$4.(org.fressian.handlers.WriteHandler):::EXIT
this.val$handler == orig(arg0)
this.val$handler.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.fressian.Examples$4.valAt(java.lang.Class):::ENTER
arg0 has only one value
===========================================================================
org.fressian.Examples$4.valAt(java.lang.Class):::EXIT
this.val$handler == orig(this.val$handler)
this.val$handler.getClass().getName() == orig(this.val$handler.getClass().getName())
return has only one value
return.getClass().getName() == java.util.Collections$UnmodifiableMap.class
===========================================================================
org.fressian.Examples$Person:::OBJECT
this.firstName.toString == "John"
this.lastName.toString == "Doe"
===========================================================================
org.fressian.Examples$Person.Person(java.lang.String, java.lang.String):::ENTER
arg0.toString == "John"
arg1.toString == "Doe"
===========================================================================
org.fressian.Examples$Person.Person(java.lang.String, java.lang.String):::EXIT
this.firstName == orig(arg0)
this.lastName == orig(arg1)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg0.toString == "John"
arg1.toString == "Doe"
===========================================================================
org.fressian.Examples$Person.toString():::ENTER
this has only one value
this.firstName has only one value
this.lastName has only one value
===========================================================================
org.fressian.Examples$Person.toString():::EXIT
this.firstName == orig(this.firstName)
this.firstName.toString == orig(this.firstName.toString)
this.lastName == orig(this.lastName)
this.lastName.toString == orig(this.lastName.toString)
this.firstName has only one value
this.lastName has only one value
return has only one value
return.toString == "Person John Doe"
===========================================================================
org.fressian.Examples.bunchOfData():::EXIT
return.getClass().getName() == java.util.Collections$UnmodifiableSet.class
===========================================================================
org.fressian.Examples.describe(java.lang.Object):::ENTER
===========================================================================
org.fressian.Examples.describe(java.lang.Object):::EXIT
===========================================================================
org.fressian.Examples.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
org.fressian.Examples.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
org.fressian.Examples.map(java.lang.Object[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 2
size(arg0[]) == 2
===========================================================================
org.fressian.Examples.map(java.lang.Object[]):::EXIT104
===========================================================================
org.fressian.Examples.map(java.lang.Object[]):::EXIT
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 2
return has only one value
return.getClass().getName() == java.util.Collections$UnmodifiableMap.class
===========================================================================
org.fressian.Examples.set(java.lang.Object[]):::ENTER
arg0.getClass().getName() == java.lang.Object[].class
size(arg0[]) == 6
===========================================================================
org.fressian.Examples.set(java.lang.Object[]):::EXIT
arg0[] == orig(arg0[])
return.getClass().getName() == java.util.Collections$UnmodifiableSet.class
===========================================================================
org.fressian.Examples.writePerson():::EXIT
return has only one value
return[] == [-17, -29, 28, 111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 2, -34, 74, 111, 104, 110, -35, 68, 111, 101]
size(return[]) == 41
===========================================================================
org.fressian.FressianReader$1:::OBJECT
this has only one value
===========================================================================
org.fressian.FressianReader$1.():::EXIT
===========================================================================
org.fressian.FressianReader$1.convertList(java.lang.Object[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.Object[].class
arg0[] contains no nulls and has only one value, of length 6
size(arg0[]) == 6
===========================================================================
org.fressian.FressianReader$1.convertList(java.lang.Object[]):::EXIT
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 6
return has only one value
return[] contains no nulls and has only one value, of length 6
return[].getClass().getName() == [java.lang.Long, java.util.Date, java.lang.Boolean, java.math.BigInteger, java.lang.String, java.util.UUID]
return.getClass().getName() == java.util.Arrays$ArrayList.class
size(return[]) == 6
===========================================================================
org.fressian.FressianReader$2:::OBJECT
this has only one value
===========================================================================
org.fressian.FressianReader$2.():::EXIT
===========================================================================
org.fressian.FressianReader$3:::OBJECT
this has only one value
===========================================================================
org.fressian.FressianReader$3.():::EXIT
===========================================================================
org.fressian.FressianReader$4:::OBJECT
this has only one value
===========================================================================
org.fressian.FressianReader$4.():::EXIT
===========================================================================
org.fressian.FressianReader:::CLASS
org.fressian.FressianReader.UNDER_CONSTRUCTION has only one value
org.fressian.FressianReader.UNDER_CONSTRUCTION != null
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == java.lang.Object.class
org.fressian.FressianReader.coreHandlers has only one value
org.fressian.FressianReader.coreHandlers != null
org.fressian.FressianReader.coreHandlers.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() != org.fressian.FressianReader.coreHandlers.getClass().getName()
===========================================================================
org.fressian.FressianReader:::OBJECT
this.standardExtensionHandlers.getClass().getName() == org.fressian.FressianReader.coreHandlers.getClass().getName()
this.is != null
this.is.is != null
this.is.is.getClass().getName() == java.util.zip.CheckedInputStream.class
this.is.cis != null
this.is.dis != null
this.is.bytesRead >= 0
this.priorityCache == null
this.structCache[] elements != null
this.structCache[].getClass().getName() elements == org.fressian.impl.StructType.class
this.structCache[].getClass().getName() one of { [], [org.fressian.impl.StructType] }
this.standardExtensionHandlers has only one value
this.standardExtensionHandlers != null
this.handlerLookup.getClass().getName() == org.fressian.Examples$2.class
size(this.structCache[]) one of { 0, 1 }
size(this.byteBuffer[]) one of { 5, 28 }
this.is.is.getClass().getName() != this.handlerLookup.getClass().getName()
this.is.is.getClass().getName() != org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName()
this.is.is.getClass().getName() != org.fressian.FressianReader.coreHandlers.getClass().getName()
this.is.bytesRead > size(this.byteBuffer[])
this.handlerLookup.getClass().getName() != org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName()
this.handlerLookup.getClass().getName() != org.fressian.FressianReader.coreHandlers.getClass().getName()
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream):::ENTER
arg0.getClass().getName() == java.io.ByteArrayInputStream.class
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream):::EXIT
this.is.bytesRead == 0
this.structCache == null
this.handlerLookup == null
this.byteBuffer == null
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream, org.fressian.handlers.ILookup):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.io.ByteArrayInputStream.class
arg1 has only one value
arg1.getClass().getName() == org.fressian.Examples$2.class
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream, org.fressian.handlers.ILookup):::EXIT
this.handlerLookup == orig(arg1)
this.handlerLookup.getClass().getName() == orig(arg1.getClass().getName())
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 0
this.structCache == null
this.handlerLookup has only one value
this.byteBuffer == null
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream, org.fressian.handlers.ILookup, boolean):::ENTER
arg0.getClass().getName() == java.io.ByteArrayInputStream.class
arg1.getClass().getName() == org.fressian.Examples$2.class
arg2 == true
===========================================================================
org.fressian.FressianReader.FressianReader(java.io.InputStream, org.fressian.handlers.ILookup, boolean):::EXIT
this.handlerLookup == orig(arg1)
this.handlerLookup.getClass().getName() == orig(arg1.getClass().getName())
this.is.bytesRead == 0
this.structCache == null
this.byteBuffer == null
===========================================================================
org.fressian.FressianReader.getHandler(java.lang.String):::ENTER
this has only one value
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 2
this.structCache == null
this.handlerLookup == null
this.byteBuffer == null
arg0 has only one value
arg0.toString == "list"
===========================================================================
org.fressian.FressianReader.getHandler(java.lang.String):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.is.bytesRead == orig(this.is.bytesRead)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.byteBuffer == orig(this.byteBuffer)
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
arg0.toString == orig(arg0.toString)
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 2
this.structCache == null
this.handlerLookup == null
this.byteBuffer == null
arg0.toString == "list"
return has only one value
return.getClass().getName() == org.fressian.FressianReader$1.class
===========================================================================
org.fressian.FressianReader.getStructCache():::ENTER
this.is.bytesRead == 32
this.structCache == null
this.byteBuffer[] == [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110]
size(this.byteBuffer[]) == 28
===========================================================================
org.fressian.FressianReader.getStructCache():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.is.bytesRead == orig(this.is.bytesRead)
this.priorityCache == orig(this.priorityCache)
this.structCache == return
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.is.bytesRead == 32
this.structCache[] == []
this.structCache[].getClass().getName() == []
this.byteBuffer[] == [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110]
return[] == []
return[].getClass().getName() == []
size(this.byteBuffer[]) == 28
===========================================================================
org.fressian.FressianReader.handleStruct(java.lang.Object, int):::ENTER
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
arg0.getClass().getName() == java.lang.String.class
arg1 one of { 1, 2 }
size(this.structCache[]) == 1
===========================================================================
org.fressian.FressianReader.handleStruct(java.lang.Object, int):::EXIT693
this.byteBuffer == orig(this.byteBuffer)
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 41
this.structCache has only one value
this.structCache[] contains no nulls and has only one value, of length 1
this.structCache[] elements has only one value
this.handlerLookup == null
this.byteBuffer has only one value
this.byteBuffer[] == [68, 111, 101, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110]
return has only one value
return.getClass().getName() == org.fressian.TaggedObject.class
orig(this) has only one value
orig(this.is.bytesRead) == 32
orig(this.byteBuffer[]) == [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110]
orig(arg0) has only one value
orig(arg1) == 2
size(this.byteBuffer[]) == 28
===========================================================================
org.fressian.FressianReader.handleStruct(java.lang.Object, int):::EXIT695
this.structCache[] contains no nulls and has only one value, of length 1
this.structCache[] elements has only one value
===========================================================================
org.fressian.FressianReader.handleStruct(java.lang.Object, int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.structCache[] == orig(this.structCache[])
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
(this.structCache has only one value)  <==>  (this.structCache[] contains no nulls and has only one value, of length 1)
(this.structCache has only one value)  ==>  (orig(arg0) has only one value)
(this.structCache has only one value)  ==>  (orig(arg1) == 2)
(this.structCache has only one value)  ==>  (orig(size(this.byteBuffer[])) == 28)
(this.structCache has only one value)  ==>  (orig(this) has only one value)
(this.structCache has only one value)  ==>  (orig(this.byteBuffer) has only one value)
(this.structCache has only one value)  ==>  (orig(this.byteBuffer[]) == [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110])
(this.structCache has only one value)  ==>  (orig(this.is.bytesRead) == 32)
(this.structCache has only one value)  ==>  (return has only one value)
(this.structCache has only one value)  ==>  (return.getClass().getName() == org.fressian.TaggedObject.class)
(this.structCache has only one value)  ==>  (size(this.byteBuffer[]) == 28)
(this.structCache has only one value)  ==>  (this.byteBuffer == orig(this.byteBuffer))
(this.structCache has only one value)  ==>  (this.byteBuffer has only one value)
(this.structCache has only one value)  ==>  (this.byteBuffer[] == [68, 111, 101, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110])
(this.structCache has only one value)  ==>  (this.handlerLookup == null)
(this.structCache has only one value)  ==>  (this.is has only one value)
(this.structCache has only one value)  ==>  (this.is.bytesRead == 41)
(this.structCache has only one value)  ==>  (this.is.cis has only one value)
(this.structCache has only one value)  ==>  (this.is.dis has only one value)
(this.structCache has only one value)  ==>  (this.is.is has only one value)
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [68, 111, 101, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111] }
size(this.structCache[]) == 1
===========================================================================
org.fressian.FressianReader.internalReadBytes(int):::ENTER
this has only one value
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead one of { 14, 36 }
this.structCache == null
this.handlerLookup == null
this.byteBuffer[] == [104, 101, 108, 108, 111]
arg0 one of { 13, 16 }
size(this.byteBuffer[]) == 5
===========================================================================
org.fressian.FressianReader.internalReadBytes(int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
orig(arg0) == size(return[])
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead one of { 27, 52 }
this.structCache == null
this.handlerLookup == null
this.byteBuffer[] == [104, 101, 108, 108, 111]
return[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [126, 55, -66, 32, 34, -64, -111, 75, 38, 127, -1, -1, -1] }
size(this.byteBuffer[]) == 5
return[orig(arg0)-1] one of { -1, 33 }
===========================================================================
org.fressian.FressianReader.internalReadInt():::ENTER
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
===========================================================================
org.fressian.FressianReader.internalReadInt():::EXIT245
===========================================================================
org.fressian.FressianReader.internalReadInt():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
this.is.bytesRead > orig(this.is.bytesRead)
===========================================================================
org.fressian.FressianReader.internalReadList(int):::ENTER
this has only one value
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 2
this.structCache == null
this.handlerLookup == null
this.byteBuffer == null
arg0 == 6
===========================================================================
org.fressian.FressianReader.internalReadList(int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.is has only one value
this.is.is has only one value
this.is.cis has only one value
this.is.dis has only one value
this.is.bytesRead == 52
this.structCache == null
this.handlerLookup == null
this.byteBuffer has only one value
this.byteBuffer[] == [104, 101, 108, 108, 111]
return has only one value
return[] contains no nulls and has only one value, of length 6
return[].getClass().getName() == [java.lang.Long, java.util.Date, java.lang.Boolean, java.math.BigInteger, java.lang.String, java.util.UUID]
return.getClass().getName() == java.util.Arrays$ArrayList.class
size(this.byteBuffer[]) == 5
size(return[]) == 6
this.byteBuffer[orig(this.is.bytesRead)] == 108
this.byteBuffer[orig(this.is.bytesRead)-1] == 101
===========================================================================
org.fressian.FressianReader.internalReadString(int):::ENTER
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
size(this.byteBuffer[]) == 28
this.byteBuffer[arg0] one of { 102, 110 }
this.byteBuffer[arg0-1] one of { 46, 104 }
this.is.bytesRead != arg0
===========================================================================
org.fressian.FressianReader.internalReadString(int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.structCache[] == orig(this.structCache[])
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
size(this.structCache[]) == 1
this.byteBuffer[orig(arg0)-1] one of { 101, 110, 111 }
this.is.bytesRead > orig(this.is.bytesRead)
this.is.bytesRead > orig(arg0)
orig(this.byteBuffer[arg0]) in this.byteBuffer[]
orig(this.is.bytesRead) != size(this.byteBuffer[])
orig(this.is.bytesRead) != size(this.byteBuffer[])-1
this.byteBuffer[orig(arg0)-1] in orig(this.byteBuffer[])
orig(arg0) <= size(this.byteBuffer[])
orig(arg0) != size(this.byteBuffer[])-1
===========================================================================
org.fressian.FressianReader.internalReadStringBuffer(java.lang.StringBuffer, int):::ENTER
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
size(this.byteBuffer[]) == 28
this.byteBuffer[arg1] one of { 102, 110 }
this.byteBuffer[arg1-1] one of { 46, 104 }
this.is.bytesRead != arg1
===========================================================================
org.fressian.FressianReader.internalReadStringBuffer(java.lang.StringBuffer, int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.structCache[] == orig(this.structCache[])
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
return == orig(arg0)
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
size(this.structCache[]) == 1
this.byteBuffer[orig(arg1)-1] one of { 101, 110, 111 }
this.is.bytesRead > orig(this.is.bytesRead)
this.is.bytesRead > orig(arg1)
orig(this.byteBuffer[arg1]) in this.byteBuffer[]
orig(this.is.bytesRead) != size(this.byteBuffer[])
orig(this.is.bytesRead) != size(this.byteBuffer[])-1
this.byteBuffer[orig(arg1)-1] in orig(this.byteBuffer[])
orig(arg1) <= size(this.byteBuffer[])
orig(arg1) != size(this.byteBuffer[])-1
===========================================================================
org.fressian.FressianReader.read(int):::ENTER
this.is.bytesRead >= 1
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
this.is.bytesRead != arg0
===========================================================================
org.fressian.FressianReader.read(int):::EXIT685
===========================================================================
org.fressian.FressianReader.read(int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache[].getClass().getName() == orig(this.structCache[].getClass().getName())
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
return != null
size(this.structCache[]) == 1
this.is.is.getClass().getName() != return.getClass().getName()
this.is.bytesRead >= orig(this.is.bytesRead)
this.is.bytesRead != orig(arg0)
this.structCache[] == orig(this.structCache[]) (elementwise)
this.structCache[] is the reverse of orig(this.structCache[])
this.structCache[].getClass().getName() == orig(this.structCache[].getClass().getName()) (elementwise)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() != return.getClass().getName()
org.fressian.FressianReader.coreHandlers.getClass().getName() != return.getClass().getName()
orig(this.is.bytesRead) != size(this.byteBuffer[])
orig(this.is.bytesRead) != size(this.byteBuffer[])-1
orig(arg0) > size(this.byteBuffer[])
===========================================================================
org.fressian.FressianReader.readCount():::ENTER
this.is.bytesRead one of { 2, 13, 35 }
this.structCache == null
this.byteBuffer[] == [104, 101, 108, 108, 111]
size(this.byteBuffer[]) == 5
===========================================================================
org.fressian.FressianReader.readCount():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.is.bytesRead one of { 3, 14, 36 }
this.structCache == null
this.byteBuffer[] == [104, 101, 108, 108, 111]
return one of { 13, 16, 28 }
size(this.byteBuffer[]) == 5
===========================================================================
org.fressian.FressianReader.readInt():::ENTER
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
===========================================================================
org.fressian.FressianReader.readInt():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
this.is.bytesRead > orig(this.is.bytesRead)
===========================================================================
org.fressian.FressianReader.readInt32():::ENTER
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
===========================================================================
org.fressian.FressianReader.readInt32():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.structCache == null
this.byteBuffer[] one of { [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
this.is.bytesRead - orig(this.is.bytesRead) - 1 == 0
===========================================================================
org.fressian.FressianReader.readNextCode():::ENTER
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
===========================================================================
org.fressian.FressianReader.readNextCode():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.structCache[] == orig(this.structCache[])
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
this.byteBuffer[] == orig(this.byteBuffer[])
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.is.bytesRead >= 1
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
this.is.bytesRead != return
this.is.bytesRead - orig(this.is.bytesRead) - 1 == 0
return != size(this.byteBuffer[])
return != size(this.byteBuffer[])-1
orig(this.is.bytesRead) > size(this.byteBuffer[])
===========================================================================
org.fressian.FressianReader.readObject():::ENTER
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.byteBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110] }
size(this.structCache[]) == 1
===========================================================================
org.fressian.FressianReader.readObject():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache[].getClass().getName() == orig(this.structCache[].getClass().getName())
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
return != null
size(this.structCache[]) == 1
this.is.is.getClass().getName() != return.getClass().getName()
this.is.bytesRead > orig(this.is.bytesRead)
this.structCache[] == orig(this.structCache[]) (elementwise)
this.structCache[] is the reverse of orig(this.structCache[])
this.structCache[].getClass().getName() == orig(this.structCache[].getClass().getName()) (elementwise)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() != return.getClass().getName()
org.fressian.FressianReader.coreHandlers.getClass().getName() != return.getClass().getName()
orig(this.is.bytesRead) != size(this.byteBuffer[])
orig(this.is.bytesRead) != size(this.byteBuffer[])-1
===========================================================================
org.fressian.FressianReader.readObjects(int):::ENTER
this.is.bytesRead one of { 2, 32 }
this.structCache[] contains no nulls and has only one value, of length 1
this.structCache[] elements has only one value
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.handlerLookup == null
this.byteBuffer[] == [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110]
arg0 one of { 2, 6 }
size(this.structCache[]) == 1
size(this.byteBuffer[]) == 28
===========================================================================
org.fressian.FressianReader.readObjects(int):::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.structCache[] == orig(this.structCache[])
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
orig(arg0) == size(return[])
size(this.byteBuffer[]) == orig(size(this.byteBuffer[]))
this.is.bytesRead one of { 41, 52 }
this.structCache[] contains no nulls and has only one value, of length 1
this.structCache[] elements has only one value
this.structCache[].getClass().getName() == [org.fressian.impl.StructType]
this.handlerLookup == null
this.byteBuffer[] one of { [68, 111, 101, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110], [104, 101, 108, 108, 111] }
return.getClass().getName() == java.lang.Object[].class
size(this.structCache[]) == 1
===========================================================================
org.fressian.FressianReader.resetCaches():::ENTER
this.is.bytesRead == 0
this.structCache == null
this.byteBuffer == null
===========================================================================
org.fressian.FressianReader.resetCaches():::EXIT
this.is == orig(this.is)
this.is.is == orig(this.is.is)
this.is.is.getClass().getName() == orig(this.is.is.getClass().getName())
this.is.cis == orig(this.is.cis)
this.is.dis == orig(this.is.dis)
this.is.bytesRead == orig(this.is.bytesRead)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.standardExtensionHandlers == orig(this.standardExtensionHandlers)
this.handlerLookup == orig(this.handlerLookup)
this.handlerLookup.getClass().getName() == orig(this.handlerLookup.getClass().getName())
this.byteBuffer == orig(this.byteBuffer)
org.fressian.FressianReader.UNDER_CONSTRUCTION == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION)
org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName() == orig(org.fressian.FressianReader.UNDER_CONSTRUCTION.getClass().getName())
org.fressian.FressianReader.coreHandlers == orig(org.fressian.FressianReader.coreHandlers)
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(this.standardExtensionHandlers.getClass().getName())
org.fressian.FressianReader.coreHandlers.getClass().getName() == orig(org.fressian.FressianReader.coreHandlers.getClass().getName())
this.is.bytesRead == 0
this.structCache == null
this.byteBuffer == null
===========================================================================
org.fressian.FressianWriter:::OBJECT
this.priorityCache.cap == size(this.priorityCache.keys[])
this.structCache.cap == size(this.structCache.keys[])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.cap-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.cap-1] == this.priorityCache.keys[this.priorityCache.count]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.cap-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count]
this.structCache.keys[this.structCache.cap-1] == this.structCache.keys[this.structCache.count]
this.out.getClass().getName() == java.io.ByteArrayOutputStream.class
this.rawOut.os != null
this.rawOut.bytesWritten >= 0
this.rawOut.buffer != null
this.rawOut.buffer[] == [0, 0, 0, 0, 0, 0, 0, 0]
this.rawOut.buffer[] elements == 0
this.priorityCache.cap == 16
this.priorityCache.hopidx has only one value
this.priorityCache.hopidx != null
this.priorityCache.hopidx[] elements one of { 0, 818770255 }
this.priorityCache.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.priorityCache.keys has only one value
this.priorityCache.keys != null
this.priorityCache.keys.getClass().getName() == java.lang.Object[].class
this.priorityCache.keys[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
this.priorityCache.count one of { 0, 1 }
this.structCache.cap == 16
this.structCache.hopidx has only one value
this.structCache.hopidx != null
this.structCache.hopidx[] elements one of { -581800205, 0 }
this.structCache.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.structCache.keys has only one value
this.structCache.keys != null
this.structCache.keys.getClass().getName() == java.lang.Object[].class
this.structCache.keys[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
this.structCache.count one of { 0, 1 }
this.stringBuffer[] elements >= 0
this.writeHandlerLookup != null
this.writeHandlerLookup.getClass().getName() == org.fressian.handlers.WriteHandlerLookup.class
size(this.rawOut.buffer[]) == 8
size(this.priorityCache.hopidx[]) == 64
size(this.structCache.hopidx[]) == 64
size(this.stringBuffer[]) one of { 15, 84 }
this.priorityCache.hopidx[this.priorityCache.cap] == 0
this.priorityCache.keys[this.priorityCache.count] == null
this.structCache.hopidx[this.structCache.cap] == 0
this.structCache.keys[this.structCache.count] == null
this.out.getClass().getName() != this.priorityCache.keys.getClass().getName()
this.out.getClass().getName() != this.structCache.keys.getClass().getName()
this.out.getClass().getName() != this.writeHandlerLookup.getClass().getName()
this.rawOut.bytesWritten != size(this.stringBuffer[])
this.rawOut.bytesWritten != size(this.stringBuffer[])-1
this.priorityCache.hopidx[] elements >= this.priorityCache.hopidx[this.priorityCache.cap]
this.priorityCache.keys.getClass().getName() in this.structCache.keys[].getClass().getName()
this.priorityCache.keys.getClass().getName() != this.writeHandlerLookup.getClass().getName()
this.structCache.keys[this.structCache.count] in this.priorityCache.keys[]
this.structCache.keys.getClass().getName() in this.priorityCache.keys[].getClass().getName()
this.priorityCache.count < size(this.priorityCache.hopidx[])-1
this.priorityCache.count < size(this.priorityCache.keys[])-1
this.priorityCache.count >= this.priorityCache.hopidx[this.priorityCache.cap]
this.structCache.hopidx[] elements <= this.structCache.count
this.structCache.hopidx[] elements < size(this.structCache.hopidx[])-1
this.structCache.hopidx[] elements < size(this.structCache.keys[])-1
this.structCache.hopidx[] elements <= this.structCache.hopidx[this.structCache.cap]
this.structCache.keys.getClass().getName() != this.writeHandlerLookup.getClass().getName()
this.priorityCache.keys[this.priorityCache.count] in this.structCache.keys[]
this.structCache.count < size(this.structCache.hopidx[])-1
this.structCache.count < size(this.structCache.keys[])-1
this.structCache.count >= this.structCache.hopidx[this.structCache.cap]
===========================================================================
org.fressian.FressianWriter.FressianWriter(java.io.OutputStream):::ENTER
arg0.getClass().getName() == java.io.ByteArrayOutputStream.class
===========================================================================
org.fressian.FressianWriter.FressianWriter(java.io.OutputStream):::EXIT
this.out == orig(arg0)
this.out.getClass().getName() == orig(arg0.getClass().getName())
this.rawOut.bytesWritten == 0
this.priorityCache == null
this.structCache == null
this.stringBuffer == null
===========================================================================
org.fressian.FressianWriter.FressianWriter(java.io.OutputStream, org.fressian.handlers.ILookup):::ENTER
arg0.getClass().getName() == java.io.ByteArrayOutputStream.class
===========================================================================
org.fressian.FressianWriter.FressianWriter(java.io.OutputStream, org.fressian.handlers.ILookup):::EXIT
this.out == orig(arg0)
this.out.getClass().getName() == orig(arg0.getClass().getName())
this.rawOut.bytesWritten == 0
this.priorityCache == null
this.structCache == null
this.stringBuffer == null
===========================================================================
org.fressian.FressianWriter.bitSwitch(long):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
===========================================================================
org.fressian.FressianWriter.bitSwitch(long):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.bytesWritten == orig(this.rawOut.bytesWritten)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.rawOut.bytesWritten != return
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
return != orig(arg0)
===========================================================================
org.fressian.FressianWriter.clearCaches():::ENTER
this.out == null
this.rawOut == null
this.priorityCache == null
this.structCache == null
this.stringBuffer == null
===========================================================================
org.fressian.FressianWriter.clearCaches():::EXIT
this.out == orig(this.out)
this.rawOut == orig(this.rawOut)
this.priorityCache == orig(this.priorityCache)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.out == null
this.rawOut == null
this.priorityCache == null
this.structCache == null
this.stringBuffer == null
===========================================================================
org.fressian.FressianWriter.doWrite(java.lang.String, java.lang.Object, org.fressian.handlers.WriteHandler, boolean):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0 == null
arg1 != null
arg2 != null
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != arg1.getClass().getName()
this.out.getClass().getName() != arg2.getClass().getName()
this.priorityCache.keys.getClass().getName() != arg1.getClass().getName()
this.priorityCache.keys.getClass().getName() != arg2.getClass().getName()
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg1.getClass().getName() in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg1.getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg2.getClass().getName()
arg1.getClass().getName() != arg2.getClass().getName()
===========================================================================
org.fressian.FressianWriter.doWrite(java.lang.String, java.lang.Object, org.fressian.handlers.WriteHandler, boolean):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[].getClass().getName() == orig(this.priorityCache.keys[].getClass().getName())
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[].getClass().getName() == orig(this.structCache.keys[].getClass().getName())
this.structCache.count == orig(this.structCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
size(this.stringBuffer[]) == orig(size(this.stringBuffer[]))
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1]) == this.priorityCache.hopidx[orig(this.priorityCache.cap)]
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[orig(this.priorityCache.count)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.priorityCache.keys[orig(this.priorityCache.cap)-1] == this.priorityCache.keys[orig(this.priorityCache.count)]
this.priorityCache.keys[orig(this.priorityCache.count)] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
orig(this.structCache.hopidx[post(this.structCache.cap)-1]) == this.structCache.hopidx[orig(this.structCache.cap)]
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count-1])
this.structCache.keys[orig(this.structCache.cap)-1] == this.structCache.keys[orig(this.structCache.count)]
this.structCache.keys[orig(this.structCache.count)] == orig(this.structCache.keys[this.structCache.cap-1])
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == 0
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.priorityCache.keys[orig(this.priorityCache.count)] == null
this.priorityCache.keys[orig(this.priorityCache.count)-1] has only one value
this.structCache.hopidx[orig(this.structCache.cap)] == 0
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[orig(this.structCache.count)] == null
this.structCache.keys[orig(this.structCache.count)-1] has only one value
this.out.getClass().getName() != orig(this.priorityCache.keys.getClass().getName())
this.out.getClass().getName() != orig(arg1.getClass().getName())
this.out.getClass().getName() != orig(arg2.getClass().getName())
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[]) (elementwise)
this.priorityCache.hopidx[] elements >= this.priorityCache.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.keys.getClass().getName() in orig(this.structCache.keys[].getClass().getName())
this.priorityCache.keys.getClass().getName() != orig(arg1.getClass().getName())
this.priorityCache.keys.getClass().getName() != orig(arg2.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[]) (elementwise)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)-1] in this.priorityCache.keys[]
orig(this.structCache.keys.getClass().getName()) in this.priorityCache.keys[].getClass().getName()
this.structCache.hopidx[] == orig(this.structCache.hopidx[]) (elementwise)
this.structCache.keys.getClass().getName() in orig(this.priorityCache.keys[].getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[]) (elementwise)
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
this.priorityCache.keys[orig(this.priorityCache.count)] in this.structCache.keys[]
this.priorityCache.keys[orig(this.priorityCache.count)-1] in this.structCache.keys[]
orig(this.priorityCache.keys.getClass().getName()) in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != orig(this.priorityCache.keys.getClass().getName())
this.writeHandlerLookup.getClass().getName() != orig(arg1.getClass().getName())
this.writeHandlerLookup.getClass().getName() != orig(arg2.getClass().getName())
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])-1
orig(this.priorityCache.hopidx[]) elements >= this.priorityCache.hopidx[this.priorityCache.cap]
this.priorityCache.hopidx[this.priorityCache.cap] in orig(this.priorityCache.hopidx[])
orig(this.priorityCache.hopidx[]) elements >= this.priorityCache.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.keys[this.priorityCache.count] in orig(this.priorityCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.priorityCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.priorityCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.priorityCache.keys[])
this.structCache.keys[orig(this.structCache.count)] in orig(this.priorityCache.keys[])
this.structCache.keys[orig(this.structCache.count)-1] in orig(this.priorityCache.keys[])
this.structCache.hopidx[this.structCache.cap] in orig(this.structCache.hopidx[])
this.priorityCache.keys[this.priorityCache.count] in orig(this.structCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.structCache.keys[])
this.priorityCache.keys[orig(this.priorityCache.count)] in orig(this.structCache.keys[])
this.priorityCache.keys[orig(this.priorityCache.count)-1] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.structCache.keys[])
===========================================================================
org.fressian.FressianWriter.getPriorityCache():::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this has only one value
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 0, 53 }
this.rawOut.buffer has only one value
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.getPriorityCache():::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.bytesWritten == orig(this.rawOut.bytesWritten)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == return
this.priorityCache.cap == return.cap
this.priorityCache.hopidx == return.hopidx
this.priorityCache.hopidx[] == return.hopidx[]
this.priorityCache.keys == return.keys
this.priorityCache.keys.getClass().getName() == return.keys.getClass().getName()
this.priorityCache.keys[] == return.keys[]
this.priorityCache.count == return.count
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
return.cap == size(this.priorityCache.keys[])
return.cap == size(return.keys[])
return.hopidx == orig(this.priorityCache.hopidx)
return.keys == orig(this.priorityCache.keys)
return.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
return.keys[].getClass().getName() == orig(this.priorityCache.keys[].getClass().getName())
return.count == orig(this.priorityCache.count)
this.priorityCache.hopidx[this.priorityCache.cap-1] == return.hopidx[return.cap]
this.priorityCache.keys[this.priorityCache.cap-1] == return.keys[return.count]
return.hopidx[this.priorityCache.cap-1] == return.hopidx[return.cap]
return.keys[this.priorityCache.cap-1] == return.keys[return.count]
orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1]) == return.hopidx[orig(this.priorityCache.cap)]
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == return.keys[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.count] == return.hopidx[return.cap]
this.priorityCache.hopidx[return.cap-1] == return.hopidx[return.cap]
this.priorityCache.hopidx[return.count] == return.hopidx[return.cap]
this.priorityCache.hopidx[orig(this.priorityCache.cap)-1] == return.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.hopidx[orig(this.priorityCache.count)] == return.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.hopidx[orig(this.priorityCache.count)-1] == return.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.keys[return.cap-1] == return.keys[return.count]
this.priorityCache.keys[orig(this.priorityCache.cap)-1] == return.keys[orig(this.priorityCache.count)]
return.hopidx[this.priorityCache.count] == return.hopidx[return.cap]
orig(this.priorityCache.hopidx[post(this.priorityCache.count)]) == return.hopidx[orig(this.priorityCache.cap)]
orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1]) == return.hopidx[orig(this.priorityCache.cap)]
return.hopidx[return.cap] == return.hopidx[return.cap-1]
return.hopidx[return.cap] == return.hopidx[return.count]
return.keys[return.cap-1] == return.keys[return.count]
orig(this.priorityCache.hopidx[post(return.cap)-1]) == return.hopidx[orig(this.priorityCache.cap)]
orig(this.priorityCache.keys[post(return.cap)-1]) == return.keys[orig(this.priorityCache.count)]
return.hopidx[orig(this.priorityCache.cap)] == return.hopidx[orig(this.priorityCache.cap)-1]
return.hopidx[orig(this.priorityCache.cap)] == return.hopidx[orig(this.priorityCache.count)]
return.hopidx[orig(this.priorityCache.cap)] == return.hopidx[orig(this.priorityCache.count)-1]
return.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(return.count)])
return.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(return.count)-1])
return.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
return.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count])
return.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
return.keys[orig(this.priorityCache.cap)-1] == return.keys[orig(this.priorityCache.count)]
return.keys[orig(this.priorityCache.count)] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 0, 53 }
this.rawOut.buffer has only one value
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
return has only one value
return.cap == 16
return.hopidx has only one value
return.hopidx[] elements one of { 0, 818770255 }
return.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
return.keys has only one value
return.keys.getClass().getName() == java.lang.Object[].class
return.keys[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
return.count one of { 0, 1 }
size(this.stringBuffer[]) == 15
size(return.hopidx[]) == 64
return.hopidx[return.cap] == 0
return.hopidx[orig(this.priorityCache.cap)] == 0
return.keys[return.count] == null
return.keys[orig(this.priorityCache.count)] == null
return.keys[orig(this.priorityCache.count)-1] has only one value
return.hopidx[] == orig(this.priorityCache.hopidx[]) (elementwise)
return.keys[] == orig(this.priorityCache.keys[]) (elementwise)
return.hopidx[return.cap] in orig(this.priorityCache.hopidx[])
return.keys[return.count] in orig(this.priorityCache.keys[])
===========================================================================
org.fressian.FressianWriter.getStructCache():::ENTER
this has only one value
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten == 0
this.rawOut.buffer has only one value
this.priorityCache == null
this.structCache == null
this.stringBuffer == null
this.writeHandlerLookup has only one value
===========================================================================
org.fressian.FressianWriter.getStructCache():::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.bytesWritten == orig(this.rawOut.bytesWritten)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.structCache == return
this.structCache.cap == return.cap
this.structCache.hopidx == return.hopidx
this.structCache.keys == return.keys
this.structCache.keys.getClass().getName() == return.keys.getClass().getName()
this.structCache.count == return.count
this.stringBuffer == orig(this.stringBuffer)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
return.cap == size(this.structCache.keys[])
return.cap == size(return.keys[])
return.count == this.structCache.hopidx[this.structCache.cap]
return.count == this.structCache.hopidx[this.structCache.cap-1]
return.count == this.structCache.hopidx[this.structCache.count]
return.count == this.structCache.hopidx[return.cap]
return.count == this.structCache.hopidx[return.cap-1]
return.count == this.structCache.hopidx[return.count]
size(this.structCache.hopidx[]) == size(return.hopidx[])
return.hopidx[this.structCache.cap-1] == return.hopidx[return.cap]
return.hopidx[this.structCache.count] == return.hopidx[return.cap]
return.hopidx[return.cap] == return.hopidx[return.cap-1]
return.hopidx[return.cap] == return.hopidx[return.count]
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten == 0
this.rawOut.buffer has only one value
this.priorityCache == null
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.hopidx[] elements == 0
this.structCache.keys[] contains only nulls and has only one value, of length 16
this.structCache.keys[] elements == null
this.stringBuffer == null
this.writeHandlerLookup has only one value
return has only one value
return.cap == 16
return.hopidx has only one value
return.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
return.hopidx[] elements == 0
return.keys has only one value
return.keys.getClass().getName() == java.lang.Object[].class
return.keys[] contains only nulls and has only one value, of length 16
return.keys[] elements == null
return.keys[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
return.keys[].getClass().getName() elements == null
return.count == 0
size(return.hopidx[]) == 64
this.structCache.hopidx[] elements == return.count
this.structCache.keys[] elements == this.structCache.keys[return.count]
return.hopidx[] elements == return.hopidx[return.cap]
return.keys[] elements == return.keys[return.count]
===========================================================================
org.fressian.FressianWriter.internalWriteInt(long):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
===========================================================================
org.fressian.FressianWriter.internalWriteInt(long):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.rawOut.bytesWritten != orig(arg0)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
1.9183208186209E13 * this.rawOut.bytesWritten - 1.9183208186184E13 * orig(this.rawOut.bytesWritten) - 55 * orig(arg0) - 1.9183208186204E13 == 0
===========================================================================
org.fressian.FressianWriter.shouldSkipCache(java.lang.Object):::ENTER
arg0 == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this has only one value
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 0, 53 }
this.rawOut.buffer has only one value
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
arg0 has only one value
arg0.getClass().getName() == java.util.Collections$UnmodifiableSet.class
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
arg0 in this.priorityCache.keys[]
===========================================================================
org.fressian.FressianWriter.shouldSkipCache(java.lang.Object):::EXIT427
===========================================================================
org.fressian.FressianWriter.shouldSkipCache(java.lang.Object):::EXIT427;condition="not(return == true)"
===========================================================================
org.fressian.FressianWriter.shouldSkipCache(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.bytesWritten == orig(this.rawOut.bytesWritten)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
orig(arg0) == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 0, 53 }
this.rawOut.buffer has only one value
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
return == false
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
orig(arg0) in this.priorityCache.keys[]
===========================================================================
org.fressian.FressianWriter.shouldSkipCache(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
org.fressian.FressianWriter.writeAs(java.lang.String, java.lang.Object):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0 == null
arg1 != null
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != arg1.getClass().getName()
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg1.getClass().getName() in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.FressianWriter.writeAs(java.lang.String, java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[].getClass().getName() == orig(this.structCache.keys[].getClass().getName())
this.structCache.count == orig(this.structCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
size(this.stringBuffer[]) == orig(size(this.stringBuffer[]))
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
orig(this.structCache.hopidx[post(this.structCache.cap)-1]) == this.structCache.hopidx[orig(this.structCache.cap)]
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count-1])
this.structCache.keys[orig(this.structCache.cap)-1] == this.structCache.keys[orig(this.structCache.count)]
this.structCache.keys[orig(this.structCache.count)] == orig(this.structCache.keys[this.structCache.cap-1])
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
return != null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.hopidx[orig(this.structCache.cap)] == 0
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[orig(this.structCache.count)] == null
this.structCache.keys[orig(this.structCache.count)-1] has only one value
this.out.getClass().getName() != return.getClass().getName()
this.out.getClass().getName() != orig(arg1.getClass().getName())
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.priorityCache.keys.getClass().getName() in orig(this.structCache.keys[].getClass().getName())
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)-1] in this.priorityCache.keys[]
orig(this.structCache.keys.getClass().getName()) in this.priorityCache.keys[].getClass().getName()
this.structCache.hopidx[] == orig(this.structCache.hopidx[]) (elementwise)
this.structCache.keys[] == orig(this.structCache.keys[]) (elementwise)
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
this.writeHandlerLookup.getClass().getName() != return.getClass().getName()
this.writeHandlerLookup.getClass().getName() != orig(arg1.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])-1
this.structCache.hopidx[this.structCache.cap] in orig(this.structCache.hopidx[])
this.priorityCache.keys[this.priorityCache.count] in orig(this.structCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.structCache.keys[])
===========================================================================
org.fressian.FressianWriter.writeAs(java.lang.String, java.lang.Object, boolean):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0 == null
arg1 != null
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != arg1.getClass().getName()
this.priorityCache.keys.getClass().getName() != arg1.getClass().getName()
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg1.getClass().getName() in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.FressianWriter.writeAs(java.lang.String, java.lang.Object, boolean):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[].getClass().getName() == orig(this.priorityCache.keys[].getClass().getName())
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[].getClass().getName() == orig(this.structCache.keys[].getClass().getName())
this.structCache.count == orig(this.structCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
size(this.stringBuffer[]) == orig(size(this.stringBuffer[]))
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1]) == this.priorityCache.hopidx[orig(this.priorityCache.cap)]
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[orig(this.priorityCache.count)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.priorityCache.keys[orig(this.priorityCache.cap)-1] == this.priorityCache.keys[orig(this.priorityCache.count)]
this.priorityCache.keys[orig(this.priorityCache.count)] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
orig(this.structCache.hopidx[post(this.structCache.cap)-1]) == this.structCache.hopidx[orig(this.structCache.cap)]
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count-1])
this.structCache.keys[orig(this.structCache.cap)-1] == this.structCache.keys[orig(this.structCache.count)]
this.structCache.keys[orig(this.structCache.count)] == orig(this.structCache.keys[this.structCache.cap-1])
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
return != null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == 0
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.priorityCache.keys[orig(this.priorityCache.count)] == null
this.priorityCache.keys[orig(this.priorityCache.count)-1] has only one value
this.structCache.hopidx[orig(this.structCache.cap)] == 0
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[orig(this.structCache.count)] == null
this.structCache.keys[orig(this.structCache.count)-1] has only one value
this.out.getClass().getName() != return.getClass().getName()
this.out.getClass().getName() != orig(this.priorityCache.keys.getClass().getName())
this.out.getClass().getName() != orig(arg1.getClass().getName())
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[]) (elementwise)
this.priorityCache.hopidx[] elements >= this.priorityCache.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.keys.getClass().getName() != return.getClass().getName()
this.priorityCache.keys.getClass().getName() in orig(this.structCache.keys[].getClass().getName())
this.priorityCache.keys.getClass().getName() != orig(arg1.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[]) (elementwise)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)-1] in this.priorityCache.keys[]
orig(this.structCache.keys.getClass().getName()) in this.priorityCache.keys[].getClass().getName()
this.structCache.hopidx[] == orig(this.structCache.hopidx[]) (elementwise)
this.structCache.keys.getClass().getName() in orig(this.priorityCache.keys[].getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[]) (elementwise)
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
this.priorityCache.keys[orig(this.priorityCache.count)] in this.structCache.keys[]
this.priorityCache.keys[orig(this.priorityCache.count)-1] in this.structCache.keys[]
orig(this.priorityCache.keys.getClass().getName()) in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != return.getClass().getName()
this.writeHandlerLookup.getClass().getName() != orig(this.priorityCache.keys.getClass().getName())
this.writeHandlerLookup.getClass().getName() != orig(arg1.getClass().getName())
return.getClass().getName() != orig(this.priorityCache.keys.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])-1
orig(this.priorityCache.hopidx[]) elements >= this.priorityCache.hopidx[this.priorityCache.cap]
this.priorityCache.hopidx[this.priorityCache.cap] in orig(this.priorityCache.hopidx[])
orig(this.priorityCache.hopidx[]) elements >= this.priorityCache.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.keys[this.priorityCache.count] in orig(this.priorityCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.priorityCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.priorityCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.priorityCache.keys[])
this.structCache.keys[orig(this.structCache.count)] in orig(this.priorityCache.keys[])
this.structCache.keys[orig(this.structCache.count)-1] in orig(this.priorityCache.keys[])
this.structCache.hopidx[this.structCache.cap] in orig(this.structCache.hopidx[])
this.priorityCache.keys[this.priorityCache.count] in orig(this.structCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.structCache.keys[])
this.priorityCache.keys[orig(this.priorityCache.count)] in orig(this.structCache.keys[])
this.priorityCache.keys[orig(this.priorityCache.count)-1] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.structCache.keys[])
===========================================================================
org.fressian.FressianWriter.writeBoolean(boolean):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.rawOut.bytesWritten one of { 10, 23 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
arg0 == false
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBoolean(boolean):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.rawOut.bytesWritten one of { 11, 24 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBoolean(java.lang.Object):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.rawOut.bytesWritten one of { 10, 23 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
arg0 has only one value
arg0.getClass().getName() == java.lang.Boolean.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBoolean(java.lang.Object):::EXIT67
===========================================================================
org.fressian.FressianWriter.writeBoolean(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.rawOut.bytesWritten one of { 11, 24 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBytes(byte[]):::ENTER
size(this.stringBuffer[]) == size(arg0[])-1
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [36, 108, 46, 114, 111, -22, 70, -63, -126, 108, -9, -109, -57, -52, 14, -57], [126, 55, -66, 32, 34, -64, -111, 75, 38, 127, -1, -1, -1] }
size(this.stringBuffer[]) == 15
size(arg0[]) one of { 13, 16 }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBytes(byte[]):::EXIT175
===========================================================================
org.fressian.FressianWriter.writeBytes(byte[]):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
arg0[] == orig(arg0[])
size(this.stringBuffer[]) == size(arg0[])-1
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [36, 108, 46, 114, 111, -22, 70, -63, -126, 108, -9, -109, -57, -52, 14, -57], [126, 55, -66, 32, 34, -64, -111, 75, 38, 127, -1, -1, -1] }
return.getClass().getName() == org.fressian.FressianWriter.class
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeBytes(byte[], int, int):::ENTER
arg2 == size(arg0[])
size(this.stringBuffer[]) == size(arg0[])-1
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [36, 108, 46, 114, 111, -22, 70, -63, -126, 108, -9, -109, -57, -52, 14, -57], [126, 55, -66, 32, 34, -64, -111, 75, 38, 127, -1, -1, -1] }
arg1 == 0
arg2 one of { 13, 16 }
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.stringBuffer[arg1] == 104
arg0[arg1] one of { -10, 36, 126 }
arg0[arg2-1] one of { -57, -1, 33 }
===========================================================================
org.fressian.FressianWriter.writeBytes(byte[], int, int):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
arg0[] == orig(arg0[])
size(this.stringBuffer[]) == size(arg0[])-1
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [36, 108, 46, 114, 111, -22, 70, -63, -126, 108, -9, -109, -57, -52, 14, -57], [126, 55, -66, 32, 34, -64, -111, 75, 38, 127, -1, -1, -1] }
return.getClass().getName() == org.fressian.FressianWriter.class
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.stringBuffer[orig(arg1)] == 104
arg0[orig(arg1)] one of { -10, 36, 126 }
arg0[orig(arg2)-1] one of { -57, -1, 33 }
===========================================================================
org.fressian.FressianWriter.writeCode(int):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.priorityCache.cap < arg0
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.count < arg0
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg0 > size(this.priorityCache.hopidx[])
arg0 > this.priorityCache.hopidx[this.priorityCache.cap]
===========================================================================
org.fressian.FressianWriter.writeCode(int):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
this.out != null
this.rawOut != null
this.rawOut.bytesWritten >= 1
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.rawOut.bytesWritten - orig(this.rawOut.bytesWritten) - 1 == 0
this.priorityCache.cap < orig(arg0)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.count < orig(arg0)
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
orig(arg0) > size(this.priorityCache.hopidx[])
orig(arg0) > this.priorityCache.hopidx[this.priorityCache.cap]
===========================================================================
org.fressian.FressianWriter.writeCount(int):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0 one of { 13, 16, 28 }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeCount(int):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[this.structCache.count]
this.structCache.keys[this.structCache.count] == this.structCache.keys[orig(this.structCache.cap)-1]
this.structCache.keys[this.structCache.count] == orig(this.structCache.keys[this.structCache.cap-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.rawOut.bytesWritten - orig(this.rawOut.bytesWritten) - 1 == 0
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeInt(java.lang.Object):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.rawOut.bytesWritten one of { 2, 3 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
arg0 has only one value
arg0.getClass().getName() == java.lang.Integer.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeInt(java.lang.Object):::EXIT82
===========================================================================
org.fressian.FressianWriter.writeInt(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.stringBuffer == orig(this.stringBuffer)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.rawOut.bytesWritten one of { 3, 4 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeInt(long):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeInt(long):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.stringBuffer == orig(this.stringBuffer)
this.stringBuffer[] == orig(this.stringBuffer[])
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != return.getClass().getName()
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.rawOut.bytesWritten != orig(arg0)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
this.writeHandlerLookup.getClass().getName() != return.getClass().getName()
1.9183208186209E13 * this.rawOut.bytesWritten - 1.9183208186184E13 * orig(this.rawOut.bytesWritten) - 55 * orig(arg0) - 1.9183208186204E13 == 0
===========================================================================
org.fressian.FressianWriter.writeIterator(int, java.util.Iterator):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.rawOut.bytesWritten one of { 1, 2 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
arg0 == 6
arg1.getClass().getName() == java.util.Collections$UnmodifiableCollection$1.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
===========================================================================
org.fressian.FressianWriter.writeIterator(int, java.util.Iterator):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.rawOut.bytesWritten one of { 52, 53 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.stringBuffer[orig(this.rawOut.bytesWritten)] one of { 101, 108 }
this.stringBuffer[orig(this.rawOut.bytesWritten)-1] one of { 101, 104 }
===========================================================================
org.fressian.FressianWriter.writeList(java.lang.Object):::ENTER
arg0 == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.rawOut.bytesWritten one of { 1, 2 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer == null
arg0.getClass().getName() == java.util.Collections$UnmodifiableSet.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
arg0 in this.priorityCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeList(java.lang.Object):::EXIT166
===========================================================================
org.fressian.FressianWriter.writeList(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
orig(arg0) == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.rawOut.bytesWritten one of { 52, 53 }
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
return.getClass().getName() == org.fressian.FressianWriter.class
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.stringBuffer[orig(this.rawOut.bytesWritten)] one of { 101, 108 }
this.stringBuffer[orig(this.rawOut.bytesWritten)-1] one of { 101, 104 }
orig(arg0) in this.priorityCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeObject(java.lang.Object):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0 != null
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != arg0.getClass().getName()
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg0.getClass().getName() in this.structCache.keys[].getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.fressian.FressianWriter.writeObject(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[].getClass().getName() == orig(this.structCache.keys[].getClass().getName())
this.structCache.count == orig(this.structCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
size(this.stringBuffer[]) == orig(size(this.stringBuffer[]))
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
orig(this.structCache.hopidx[post(this.structCache.cap)-1]) == this.structCache.hopidx[orig(this.structCache.cap)]
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[orig(this.structCache.cap)] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[orig(this.structCache.cap)] == orig(this.structCache.hopidx[this.structCache.count-1])
this.structCache.keys[orig(this.structCache.cap)-1] == this.structCache.keys[orig(this.structCache.count)]
this.structCache.keys[orig(this.structCache.count)] == orig(this.structCache.keys[this.structCache.cap-1])
this.out != null
this.rawOut != null
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
return != null
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.hopidx[orig(this.structCache.cap)] == 0
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[orig(this.structCache.count)] == null
this.structCache.keys[orig(this.structCache.count)-1] has only one value
this.out.getClass().getName() != return.getClass().getName()
this.out.getClass().getName() != orig(arg0.getClass().getName())
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.priorityCache.keys.getClass().getName() in orig(this.structCache.keys[].getClass().getName())
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)] in this.priorityCache.keys[]
this.structCache.keys[orig(this.structCache.count)-1] in this.priorityCache.keys[]
orig(this.structCache.keys.getClass().getName()) in this.priorityCache.keys[].getClass().getName()
this.structCache.hopidx[] == orig(this.structCache.hopidx[]) (elementwise)
this.structCache.keys[] == orig(this.structCache.keys[]) (elementwise)
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
this.writeHandlerLookup.getClass().getName() != return.getClass().getName()
this.writeHandlerLookup.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])
orig(this.rawOut.bytesWritten) != size(this.stringBuffer[])-1
this.structCache.hopidx[this.structCache.cap] in orig(this.structCache.hopidx[])
this.priorityCache.keys[this.priorityCache.count] in orig(this.structCache.keys[])
this.priorityCache.keys[this.priorityCache.count-1] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count] in orig(this.structCache.keys[])
this.structCache.keys[this.structCache.count-1] in orig(this.structCache.keys[])
===========================================================================
org.fressian.FressianWriter.writeObject(java.lang.Object, boolean):::ENTER
arg0 == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this has only one value
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 0, 53 }
this.rawOut.buffer has only one value
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
arg0 has only one value
arg0.getClass().getName() == java.util.Collections$UnmodifiableSet.class
arg1 == true
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
arg0 in this.priorityCache.keys[]
===========================================================================
org.fressian.FressianWriter.writeObject(java.lang.Object, boolean):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[].getClass().getName() == orig(this.priorityCache.keys[].getClass().getName())
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
orig(arg0) == this.priorityCache.keys[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1]) == this.priorityCache.hopidx[orig(this.priorityCache.cap)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.out has only one value
this.rawOut has only one value
this.rawOut.os has only one value
this.rawOut.bytesWritten one of { 53, 54 }
this.rawOut.buffer has only one value
this.priorityCache has only one value
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer has only one value
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.writeHandlerLookup has only one value
return has only one value
return.getClass().getName() == org.fressian.FressianWriter.class
size(this.stringBuffer[]) == 15
this.priorityCache.hopidx[orig(this.priorityCache.cap)] == 0
this.priorityCache.keys[orig(this.priorityCache.count)] == null
this.priorityCache.keys[orig(this.priorityCache.count)-1] has only one value
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[]) (elementwise)
this.priorityCache.keys[] == orig(this.priorityCache.keys[]) (elementwise)
this.stringBuffer[] == orig(this.stringBuffer[]) (elementwise)
this.priorityCache.hopidx[this.priorityCache.cap] in orig(this.priorityCache.hopidx[])
this.priorityCache.keys[this.priorityCache.count] in orig(this.priorityCache.keys[])
===========================================================================
org.fressian.FressianWriter.writeString(java.lang.Object):::ENTER
this.stringBuffer[this.rawOut.bytesWritten] == this.stringBuffer[this.rawOut.bytesWritten-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [74, 111, 104, 110, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
arg0.getClass().getName() == java.lang.String.class
size(this.stringBuffer[]) == 84
this.stringBuffer[this.rawOut.bytesWritten] == 0
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
arg0.getClass().getName() in this.structCache.keys[].getClass().getName()
===========================================================================
org.fressian.FressianWriter.writeString(java.lang.Object):::EXIT141
===========================================================================
org.fressian.FressianWriter.writeString(java.lang.Object):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.structCache == orig(this.structCache)
this.structCache.cap == orig(this.structCache.cap)
this.structCache.cap == orig(size(this.structCache.keys[]))
this.structCache.hopidx == orig(this.structCache.hopidx)
this.structCache.hopidx[] == orig(this.structCache.hopidx[])
this.structCache.keys == orig(this.structCache.keys)
this.structCache.keys.getClass().getName() == orig(this.structCache.keys.getClass().getName())
this.structCache.keys[] == orig(this.structCache.keys[])
this.structCache.count == orig(this.structCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
size(this.stringBuffer[]) == orig(size(this.stringBuffer[]))
orig(this.stringBuffer[post(this.rawOut.bytesWritten)]) == orig(this.stringBuffer[this.rawOut.bytesWritten])
orig(this.stringBuffer[post(this.rawOut.bytesWritten)-1]) == orig(this.stringBuffer[this.rawOut.bytesWritten])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.cap)-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.cap)-1]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)]
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[orig(this.structCache.count)-1]
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[post(this.structCache.count)-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count])
this.structCache.hopidx[this.structCache.cap] == orig(this.structCache.hopidx[this.structCache.count-1])
orig(this.structCache.keys[post(this.structCache.cap)-1]) == this.structCache.keys[this.structCache.count]
this.structCache.keys[this.structCache.count] == this.structCache.keys[orig(this.structCache.cap)-1]
this.structCache.keys[this.structCache.count] == orig(this.structCache.keys[this.structCache.cap-1])
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
orig(arg0.getClass().getName()) in this.structCache.keys[].getClass().getName()
orig(this.stringBuffer[this.rawOut.bytesWritten]) in this.stringBuffer[]
===========================================================================
org.fressian.FressianWriter.writeTag(java.lang.Object, int):::ENTER
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache == null
this.stringBuffer[] == [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0.getClass().getName() == java.lang.String.class
arg1 one of { 1, 2 }
size(this.stringBuffer[]) == 15
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.out.getClass().getName() != arg0.getClass().getName()
this.writeHandlerLookup.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.fressian.FressianWriter.writeTag(java.lang.Object, int):::EXIT
this.out == orig(this.out)
this.out.getClass().getName() == orig(this.out.getClass().getName())
this.rawOut == orig(this.rawOut)
this.rawOut.os == orig(this.rawOut.os)
this.rawOut.buffer == orig(this.rawOut.buffer)
this.rawOut.buffer[] == orig(this.rawOut.buffer[])
this.priorityCache == orig(this.priorityCache)
this.priorityCache.cap == orig(this.priorityCache.cap)
this.priorityCache.cap == orig(size(this.priorityCache.keys[]))
this.priorityCache.hopidx == orig(this.priorityCache.hopidx)
this.priorityCache.hopidx[] == orig(this.priorityCache.hopidx[])
this.priorityCache.keys == orig(this.priorityCache.keys)
this.priorityCache.keys.getClass().getName() == orig(this.priorityCache.keys.getClass().getName())
this.priorityCache.keys[] == orig(this.priorityCache.keys[])
this.priorityCache.count == orig(this.priorityCache.count)
this.writeHandlerLookup == orig(this.writeHandlerLookup)
this.writeHandlerLookup.getClass().getName() == orig(this.writeHandlerLookup.getClass().getName())
orig(arg0) == this.structCache.keys[this.structCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.cap)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[this.priorityCache.count-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.cap)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)]
this.priorityCache.hopidx[this.priorityCache.cap] == this.priorityCache.hopidx[orig(this.priorityCache.count)-1]
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[post(this.priorityCache.count)-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.cap-1])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count])
this.priorityCache.hopidx[this.priorityCache.cap] == orig(this.priorityCache.hopidx[this.priorityCache.count-1])
orig(this.priorityCache.keys[post(this.priorityCache.cap)-1]) == this.priorityCache.keys[this.priorityCache.count]
this.priorityCache.keys[this.priorityCache.count] == this.priorityCache.keys[orig(this.priorityCache.cap)-1]
this.priorityCache.keys[this.priorityCache.count] == orig(this.priorityCache.keys[this.priorityCache.cap-1])
this.structCache.hopidx[this.structCache.cap] == this.structCache.hopidx[this.structCache.count-1]
this.priorityCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.priorityCache.keys[] has only one value, of length 16
this.priorityCache.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.priorityCache.count == 1
this.structCache.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.structCache.keys[] has only one value, of length 16
this.structCache.keys[].getClass().getName() == [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.structCache.count == 1
this.stringBuffer[] one of { [104, 101, 108, 108, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [111, 114, 103, 46, 102, 114, 101, 115, 115, 105, 97, 110, 46, 69, 120, 97, 109, 112, 108, 101, 115, 46, 80, 101, 114, 115, 111, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
return.getClass().getName() == org.fressian.FressianWriter.class
this.priorityCache.keys[this.priorityCache.count-1] has only one value
this.structCache.keys[this.structCache.count-1] has only one value
this.out.getClass().getName() != return.getClass().getName()
this.out.getClass().getName() != orig(arg0.getClass().getName())
this.rawOut.bytesWritten > orig(this.rawOut.bytesWritten)
this.structCache.keys[this.structCache.count-1] in this.priorityCache.keys[]
orig(arg0) in this.structCache.keys[]
this.priorityCache.keys[this.priorityCache.count-1] in this.structCache.keys[]
orig(arg0.getClass().getName()) in this.structCache.keys[].getClass().getName()
this.stringBuffer[] == orig(this.stringBuffer[]) (elementwise)
this.writeHandlerLookup.getClass().getName() != return.getClass().getName()
this.writeHandlerLookup.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.fressian.TaggedObject:::OBJECT
this has only one value
this.tag has only one value
this.tag.getClass().getName() == java.lang.String.class
this.value has only one value
this.value.getClass().getName() == java.lang.Object[].class
this.value[] contains no nulls and has only one value, of length 2
this.value[].getClass().getName() == [java.lang.String, java.lang.String]
this.value[].getClass().getName() elements == java.lang.String.class
this.meta == null
size(this.value[]) == 2
this.tag.getClass().getName() in this.value[].getClass().getName()
===========================================================================
org.fressian.TaggedObject.TaggedObject(java.lang.Object, java.lang.Object[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String.class
arg1 has only one value
arg1.getClass().getName() == java.lang.Object[].class
arg1[] contains no nulls and has only one value, of length 2
size(arg1[]) == 2
===========================================================================
org.fressian.TaggedObject.TaggedObject(java.lang.Object, java.lang.Object[]):::EXIT
this.tag == orig(arg0)
this.tag.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
arg1[] == orig(arg1[])
arg1[] contains no nulls and has only one value, of length 2
===========================================================================
org.fressian.TaggedObject.TaggedObject(java.lang.Object, java.lang.Object[], java.util.Map):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String.class
arg1 has only one value
arg1.getClass().getName() == java.lang.Object[].class
arg1[] contains no nulls and has only one value, of length 2
arg2 == null
size(arg1[]) == 2
===========================================================================
org.fressian.TaggedObject.TaggedObject(java.lang.Object, java.lang.Object[], java.util.Map):::EXIT
this.tag == orig(arg0)
this.tag.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
arg1[] == orig(arg1[])
arg1[] contains no nulls and has only one value, of length 2
===========================================================================
org.fressian.TaggedObject.getValue():::ENTER
===========================================================================
org.fressian.TaggedObject.getValue():::EXIT
this.tag == orig(this.tag)
this.tag.getClass().getName() == orig(this.tag.getClass().getName())
this.value == return
this.value.getClass().getName() == return.getClass().getName()
this.value[] == orig(this.value[])
this.meta == orig(this.meta)
return == orig(this.value)
return.getClass().getName() == orig(this.value.getClass().getName())
return has only one value
return.getClass().getName() == java.lang.Object[].class
return[] contains no nulls and has only one value, of length 2
size(return[]) == 2
===========================================================================
org.fressian.handlers.WriteHandlerLookup:::OBJECT
this.chainedLookup != null
this.chainedLookup.getClass().getName() == org.fressian.impl.CachingLookup.class
===========================================================================
org.fressian.handlers.WriteHandlerLookup.WriteHandlerLookup(org.fressian.handlers.ILookup):::ENTER
===========================================================================
org.fressian.handlers.WriteHandlerLookup.WriteHandlerLookup(org.fressian.handlers.ILookup):::EXIT
===========================================================================
org.fressian.handlers.WriteHandlerLookup.createLookupChain(org.fressian.handlers.ILookup):::ENTER
===========================================================================
org.fressian.handlers.WriteHandlerLookup.createLookupChain(org.fressian.handlers.ILookup):::EXIT25
===========================================================================
org.fressian.handlers.WriteHandlerLookup.createLookupChain(org.fressian.handlers.ILookup):::EXIT
return.getClass().getName() == org.fressian.impl.CachingLookup.class
===========================================================================
org.fressian.handlers.WriteHandlerLookup.getWriteHandler(java.lang.String, java.lang.Object):::ENTER
arg0 == null
arg1 != null
this.chainedLookup.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.handlers.WriteHandlerLookup.getWriteHandler(java.lang.String, java.lang.Object):::EXIT41
===========================================================================
org.fressian.handlers.WriteHandlerLookup.getWriteHandler(java.lang.String, java.lang.Object):::EXIT
this.chainedLookup == orig(this.chainedLookup)
this.chainedLookup.getClass().getName() == orig(this.chainedLookup.getClass().getName())
return != null
this.chainedLookup.getClass().getName() != return.getClass().getName()
this.chainedLookup.getClass().getName() != orig(arg1.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.fressian.handlers.WriteHandlerLookup.requireWriteHandler(java.lang.String, java.lang.Object):::ENTER
arg0 == null
arg1 != null
this.chainedLookup.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.handlers.WriteHandlerLookup.requireWriteHandler(java.lang.String, java.lang.Object):::EXIT
this.chainedLookup == orig(this.chainedLookup)
this.chainedLookup.getClass().getName() == orig(this.chainedLookup.getClass().getName())
return != null
this.chainedLookup.getClass().getName() != return.getClass().getName()
this.chainedLookup.getClass().getName() != orig(arg1.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.fressian.impl.CachingLookup:::OBJECT
this.lookup != null
this.lookup.getClass().getName() == org.fressian.impl.ChainedLookup.class
this.map != null
this.nullKeyValue != null
===========================================================================
org.fressian.impl.CachingLookup.CachingLookup(org.fressian.handlers.ILookup):::ENTER
arg0.getClass().getName() == org.fressian.impl.ChainedLookup.class
===========================================================================
org.fressian.impl.CachingLookup.CachingLookup(org.fressian.handlers.ILookup):::EXIT
this.lookup == orig(arg0)
this.lookup.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.CachingLookup.valAt(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Class.class
this.lookup.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.fressian.impl.CachingLookup.valAt(java.lang.Object):::EXIT38
return.getClass().getName() == java.util.HashMap.class
===========================================================================
org.fressian.impl.CachingLookup.valAt(java.lang.Object):::EXIT41
===========================================================================
org.fressian.impl.CachingLookup.valAt(java.lang.Object):::EXIT
this.lookup == orig(this.lookup)
this.lookup.getClass().getName() == orig(this.lookup.getClass().getName())
this.map == orig(this.map)
this.nullKeyValue == orig(this.nullKeyValue)
return != null
this.lookup.getClass().getName() != return.getClass().getName()
this.lookup.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.ChainedLookup:::OBJECT
this.lookups != null
this.lookups.getClass().getName() == org.fressian.handlers.ILookup[].class
this.lookups[] elements != null
size(this.lookups[]) one of { 2, 3 }
===========================================================================
org.fressian.impl.ChainedLookup.ChainedLookup(org.fressian.handlers.ILookup[]):::ENTER
arg0.getClass().getName() == org.fressian.handlers.ILookup[].class
size(arg0[]) one of { 2, 3 }
===========================================================================
org.fressian.impl.ChainedLookup.ChainedLookup(org.fressian.handlers.ILookup[]):::EXIT
this.lookups == orig(arg0)
this.lookups.getClass().getName() == orig(arg0.getClass().getName())
arg0[] == orig(arg0[])
===========================================================================
org.fressian.impl.ChainedLookup.valAt(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Class.class
this.lookups.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.fressian.impl.ChainedLookup.valAt(java.lang.Object):::EXIT22
===========================================================================
org.fressian.impl.ChainedLookup.valAt(java.lang.Object):::EXIT
this.lookups == orig(this.lookups)
this.lookups.getClass().getName() == orig(this.lookups.getClass().getName())
this.lookups[] == orig(this.lookups[])
return != null
this.lookups.getClass().getName() != return.getClass().getName()
this.lookups.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.Fns.UUIDtoByteArray(java.util.UUID):::ENTER
===========================================================================
org.fressian.impl.Fns.UUIDtoByteArray(java.util.UUID):::EXIT
return[] one of { [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33], [36, 108, 46, 114, 111, -22, 70, -63, -126, 108, -9, -109, -57, -52, 14, -57] }
size(return[]) == 16
===========================================================================
org.fressian.impl.Fns.bufferStringChunkUTF8(java.lang.CharSequence, int, byte[]):::ENTER
arg0.getClass().getName() == java.lang.String.class
arg1 == 0
arg2[] elements >= 0
size(arg2[]) one of { 15, 84 }
arg2[arg1] one of { 0, 74, 111 }
===========================================================================
org.fressian.impl.Fns.bufferStringChunkUTF8(java.lang.CharSequence, int, byte[]):::EXIT
arg2[] elements >= 0
return[] elements are equal
size(return[]) == 2
===========================================================================
org.fressian.impl.Fns.byteArrayToUUID(byte[]):::ENTER
arg0 has only one value
arg0[] == [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33]
size(arg0[]) == 16
===========================================================================
org.fressian.impl.Fns.byteArrayToUUID(byte[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == [-10, -6, -65, 60, -3, 29, 74, -91, -95, 35, -27, -41, 36, -105, -50, 33]
return has only one value
===========================================================================
org.fressian.impl.Fns.getClassOrNull(java.lang.Object):::ENTER
arg0 != null
===========================================================================
org.fressian.impl.Fns.getClassOrNull(java.lang.Object):::EXIT72
===========================================================================
org.fressian.impl.Fns.getClassOrNull(java.lang.Object):::EXIT
return != null
===========================================================================
org.fressian.impl.Fns.intCast(long):::ENTER
===========================================================================
org.fressian.impl.Fns.intCast(long):::EXIT
return == orig(arg0)
===========================================================================
org.fressian.impl.Fns.lookup(org.fressian.handlers.ILookup, java.lang.Object):::ENTER
arg1 != null
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.impl.Fns.lookup(org.fressian.handlers.ILookup, java.lang.Object):::EXIT64
return == null
orig(arg0) == null
orig(arg1.getClass().getName()) == java.lang.String.class
===========================================================================
org.fressian.impl.Fns.lookup(org.fressian.handlers.ILookup, java.lang.Object):::EXIT65
return != null
orig(arg0) != null
===========================================================================
org.fressian.impl.Fns.lookup(org.fressian.handlers.ILookup, java.lang.Object):::EXIT
(return != null)  <==>  (orig(arg0) != null)
(return != null)  ==>  (orig(arg0.getClass().getName()) != orig(arg1.getClass().getName()))
(return != null)  ==>  (return.getClass().getName() != orig(arg0.getClass().getName()))
(return != null)  ==>  (return.getClass().getName() != orig(arg1.getClass().getName()))
(return == null)  <==>  (orig(arg0) == null)
(return == null)  ==>  (orig(arg1.getClass().getName()) == java.lang.String.class)
return.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.fressian.impl.Fns.readUTF8Chars(java.lang.StringBuffer, byte[], int, int):::ENTER
arg2 == 0
size(arg1[]) one of { 5, 28 }
arg1[arg3-1] one of { 101, 110, 111 }
arg2 < arg3
arg2 < size(arg1[])-1
arg3 <= size(arg1[])
arg3 != size(arg1[])-1
arg1[arg2] != arg1[arg3-1]
===========================================================================
org.fressian.impl.Fns.readUTF8Chars(java.lang.StringBuffer, byte[], int, int):::EXIT
arg1[] == orig(arg1[])
arg1[orig(arg3)-1] one of { 101, 110, 111 }
orig(arg2) < size(arg1[])-1
orig(arg3) != size(arg1[])-1
arg1[orig(arg2)] != arg1[orig(arg3)-1]
===========================================================================
org.fressian.impl.Fns.soloEntry(java.util.Map):::ENTER
arg0 != null
===========================================================================
org.fressian.impl.Fns.soloEntry(java.util.Map):::EXIT
return != null
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.Fns.soloMap(java.lang.Object, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
arg1 != null
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.fressian.impl.Fns.soloMap(java.lang.Object, java.lang.Object):::EXIT
return != null
return.getClass().getName() == java.util.HashMap.class
return.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.fressian.impl.Fns.utf8EncodingSize(int):::ENTER
===========================================================================
org.fressian.impl.Fns.utf8EncodingSize(int):::EXIT119
===========================================================================
org.fressian.impl.Fns.utf8EncodingSize(int):::EXIT
return == 1
===========================================================================
org.fressian.impl.Handlers$1:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$10:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$10.():::EXIT
===========================================================================
org.fressian.impl.Handlers$11:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$11.():::EXIT
===========================================================================
org.fressian.impl.Handlers$12:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$12.():::EXIT
===========================================================================
org.fressian.impl.Handlers$13:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$13.():::EXIT
===========================================================================
org.fressian.impl.Handlers$14:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$14.():::EXIT
===========================================================================
org.fressian.impl.Handlers$15:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$15.():::EXIT
===========================================================================
org.fressian.impl.Handlers$15.read(org.fressian.Reader, java.lang.Object, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianReader.class
arg1 has only one value
arg1.getClass().getName() == java.lang.String.class
arg2 == 1
===========================================================================
org.fressian.impl.Handlers$15.read(org.fressian.Reader, java.lang.Object, int):::EXIT
return has only one value
return.getClass().getName() == java.util.HashSet.class
===========================================================================
org.fressian.impl.Handlers$16:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$16.():::EXIT
===========================================================================
org.fressian.impl.Handlers$17:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$17.():::EXIT
===========================================================================
org.fressian.impl.Handlers$18:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$18.():::EXIT
===========================================================================
org.fressian.impl.Handlers$19:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$19.():::EXIT
===========================================================================
org.fressian.impl.Handlers$1.():::EXIT
===========================================================================
org.fressian.impl.Handlers$1.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1 has only one value
arg1.getClass().getName() == java.lang.Integer.class
===========================================================================
org.fressian.impl.Handlers$1.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$2:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$20:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$20.():::EXIT
===========================================================================
org.fressian.impl.Handlers$21:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$21.():::EXIT
===========================================================================
org.fressian.impl.Handlers$22:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$22.():::EXIT
===========================================================================
org.fressian.impl.Handlers$23:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$23.():::EXIT
===========================================================================
org.fressian.impl.Handlers$23.read(org.fressian.Reader, java.lang.Object, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianReader.class
arg1 has only one value
arg1.getClass().getName() == java.lang.String.class
arg2 == 2
===========================================================================
org.fressian.impl.Handlers$23.read(org.fressian.Reader, java.lang.Object, int):::EXIT
return has only one value
return.getClass().getName() == java.util.UUID.class
===========================================================================
org.fressian.impl.Handlers$24:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$24.():::EXIT
===========================================================================
org.fressian.impl.Handlers$25:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$25.():::EXIT
===========================================================================
org.fressian.impl.Handlers$26:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$26.():::EXIT
===========================================================================
org.fressian.impl.Handlers$26.read(org.fressian.Reader, java.lang.Object, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianReader.class
arg1 has only one value
arg1.getClass().getName() == java.lang.String.class
arg2 == 1
===========================================================================
org.fressian.impl.Handlers$26.read(org.fressian.Reader, java.lang.Object, int):::EXIT
return has only one value
return.getClass().getName() == java.math.BigInteger.class
===========================================================================
org.fressian.impl.Handlers$27:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$27.():::EXIT
===========================================================================
org.fressian.impl.Handlers$28:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$28.():::EXIT
===========================================================================
org.fressian.impl.Handlers$28.read(org.fressian.Reader, java.lang.Object, int):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.fressian.FressianReader.class
arg1 has only one value
arg1.getClass().getName() == java.lang.String.class
arg2 == 1
===========================================================================
org.fressian.impl.Handlers$28.read(org.fressian.Reader, java.lang.Object, int):::EXIT
return has only one value
return.getClass().getName() == java.util.Date.class
===========================================================================
org.fressian.impl.Handlers$29:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$29.():::EXIT
===========================================================================
org.fressian.impl.Handlers$2.():::EXIT
===========================================================================
org.fressian.impl.Handlers$2.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1 has only one value
arg1.getClass().getName() == java.lang.Boolean.class
===========================================================================
org.fressian.impl.Handlers$2.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$3:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$30:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$30.():::EXIT
===========================================================================
org.fressian.impl.Handlers$30.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1.getClass().getName() == java.util.Date.class
===========================================================================
org.fressian.impl.Handlers$30.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$31:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$31.():::EXIT
===========================================================================
org.fressian.impl.Handlers$31.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1.getClass().getName() == java.util.Collections$UnmodifiableSet.class
===========================================================================
org.fressian.impl.Handlers$31.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$32:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$32.():::EXIT
===========================================================================
org.fressian.impl.Handlers$33:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$33.():::EXIT
===========================================================================
org.fressian.impl.Handlers$33.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1.getClass().getName() == java.math.BigInteger.class
===========================================================================
org.fressian.impl.Handlers$33.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$34:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$34.():::EXIT
===========================================================================
org.fressian.impl.Handlers$35:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$35.():::EXIT
===========================================================================
org.fressian.impl.Handlers$36:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$36.():::EXIT
===========================================================================
org.fressian.impl.Handlers$37:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$37.():::EXIT
===========================================================================
org.fressian.impl.Handlers$37.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1.getClass().getName() == java.util.UUID.class
===========================================================================
org.fressian.impl.Handlers$37.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$3.():::EXIT
===========================================================================
org.fressian.impl.Handlers$4:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$4.():::EXIT
===========================================================================
org.fressian.impl.Handlers$5:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$5.():::EXIT
===========================================================================
org.fressian.impl.Handlers$6:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$6.():::EXIT
===========================================================================
org.fressian.impl.Handlers$6.write(org.fressian.Writer, java.lang.Object):::ENTER
arg0.getClass().getName() == org.fressian.FressianWriter.class
arg1.getClass().getName() == java.lang.String.class
===========================================================================
org.fressian.impl.Handlers$6.write(org.fressian.Writer, java.lang.Object):::EXIT
===========================================================================
org.fressian.impl.Handlers$7:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$7.():::EXIT
===========================================================================
org.fressian.impl.Handlers$8:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$8.():::EXIT
===========================================================================
org.fressian.impl.Handlers$9:::OBJECT
this has only one value
===========================================================================
org.fressian.impl.Handlers$9.():::EXIT
===========================================================================
org.fressian.impl.Handlers:::CLASS
org.fressian.impl.Handlers.tagToCode.getClass().getName() == org.fressian.impl.Handlers.extendedReadHandlers.getClass().getName()
org.fressian.impl.Handlers.coreWriteHandlers.getClass().getName() == org.fressian.impl.Handlers.extendedWriteHandlers.getClass().getName()
org.fressian.impl.Handlers.tagToCode has only one value
org.fressian.impl.Handlers.tagToCode.getClass().getName() == java.util.Collections$UnmodifiableMap.class
org.fressian.impl.Handlers.extendedReadHandlers has only one value
org.fressian.impl.Handlers.coreWriteHandlers has only one value
org.fressian.impl.Handlers.coreWriteHandlers.getClass().getName() == org.fressian.impl.InheritanceLookup.class
org.fressian.impl.Handlers.extendedWriteHandlers has only one value
===========================================================================
org.fressian.impl.Handlers.defaultWriteHandlers():::ENTER
===========================================================================
org.fressian.impl.Handlers.defaultWriteHandlers():::EXIT
org.fressian.impl.Handlers.tagToCode == orig(org.fressian.impl.Handlers.tagToCode)
org.fressian.impl.Handlers.tagToCode.getClass().getName() == orig(org.fressian.impl.Handlers.tagToCode.getClass().getName())
org.fressian.impl.Handlers.tagToCode.getClass().getName() == orig(org.fressian.impl.Handlers.extendedReadHandlers.getClass().getName())
org.fressian.impl.Handlers.extendedReadHandlers == orig(org.fressian.impl.Handlers.extendedReadHandlers)
org.fressian.impl.Handlers.coreWriteHandlers == orig(org.fressian.impl.Handlers.coreWriteHandlers)
org.fressian.impl.Handlers.coreWriteHandlers.getClass().getName() == orig(org.fressian.impl.Handlers.coreWriteHandlers.getClass().getName())
org.fressian.impl.Handlers.coreWriteHandlers.getClass().getName() == orig(org.fressian.impl.Handlers.extendedWriteHandlers.getClass().getName())
org.fressian.impl.Handlers.extendedWriteHandlers == orig(org.fressian.impl.Handlers.extendedWriteHandlers)
return.getClass().getName() == org.fressian.impl.CachingLookup.class
===========================================================================
org.fressian.impl.Handlers.installHandler(java.util.Map, java.lang.Class, java.lang.String, org.fressian.handlers.WriteHandler):::ENTER
arg0 != null
arg0.getClass().getName() == java.util.HashMap.class
arg2 != null
arg3 != null
arg0.getClass().getName() != arg3.getClass().getName()
===========================================================================
org.fressian.impl.Handlers.installHandler(java.util.Map, java.lang.Class, java.lang.String, org.fressian.handlers.WriteHandler):::EXIT
arg2.toString == orig(arg2.toString)
return == orig(arg0)
return.getClass().getName() == orig(arg0.getClass().getName())
return != null
return.getClass().getName() == java.util.HashMap.class
return.getClass().getName() != orig(arg3.getClass().getName())
===========================================================================
org.fressian.impl.InheritanceLookup:::OBJECT
this.lookup != null
this.lookup.getClass().getName() == org.fressian.impl.MapLookup.class
===========================================================================
org.fressian.impl.InheritanceLookup.InheritanceLookup(org.fressian.handlers.ILookup):::ENTER
arg0.getClass().getName() == org.fressian.impl.MapLookup.class
===========================================================================
org.fressian.impl.InheritanceLookup.InheritanceLookup(org.fressian.handlers.ILookup):::EXIT
this.lookup == orig(arg0)
this.lookup.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseClasses(java.lang.Class):::ENTER
arg0 != null
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseClasses(java.lang.Class):::EXIT27
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseClasses(java.lang.Class):::EXIT
this.lookup == orig(this.lookup)
this.lookup.getClass().getName() == orig(this.lookup.getClass().getName())
return == null
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseInterfaces(java.lang.Class):::ENTER
arg0 != null
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseInterfaces(java.lang.Class):::EXIT39
this.lookup has only one value
return == null
orig(this) has only one value
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseInterfaces(java.lang.Class):::EXIT40
===========================================================================
org.fressian.impl.InheritanceLookup.checkBaseInterfaces(java.lang.Class):::EXIT
this.lookup == orig(this.lookup)
this.lookup.getClass().getName() == orig(this.lookup.getClass().getName())
(return == null)  ==>  (orig(this) has only one value)
(return == null)  ==>  (this.lookup has only one value)
return.getClass().getName() == java.util.HashMap.class
===========================================================================
org.fressian.impl.InheritanceLookup.valAt(java.lang.Class):::ENTER
arg0 != null
===========================================================================
org.fressian.impl.InheritanceLookup.valAt(java.lang.Class):::EXIT
this.lookup == orig(this.lookup)
this.lookup.getClass().getName() == orig(this.lookup.getClass().getName())
return.getClass().getName() == java.util.HashMap.class
this.lookup.getClass().getName() != return.getClass().getName()
===========================================================================
org.fressian.impl.InterleavedIndexHopMap:::OBJECT
this.cap == size(this.keys[])
this.hopidx[this.cap] == this.hopidx[this.cap-1]
this.hopidx[this.cap] == this.hopidx[this.count]
this.keys[this.cap-1] == this.keys[this.count]
this.cap == 16
this.hopidx != null
this.hopidx[] elements one of { -581800205, 0, 818770255 }
this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.keys != null
this.keys.getClass().getName() == java.lang.Object[].class
this.count one of { 0, 1 }
size(this.hopidx[]) == 64
this.hopidx[this.cap] == 0
this.keys[this.count] == null
this.count < size(this.hopidx[])-1
this.count < size(this.keys[])-1
this.count >= this.hopidx[this.cap]
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.InterleavedIndexHopMap(int):::ENTER
arg0 == 16
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.InterleavedIndexHopMap(int):::EXIT
this.cap == orig(arg0)
this.count == this.hopidx[this.cap]
this.count == this.hopidx[this.cap-1]
this.count == this.hopidx[this.count]
this.count == this.hopidx[orig(arg0)]
this.count == this.hopidx[orig(arg0)-1]
this.keys[this.count] == this.keys[orig(arg0)-1]
this.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.hopidx[] elements == 0
this.keys[] contains only nulls and has only one value, of length 16
this.keys[] elements == null
this.keys[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.keys[].getClass().getName() elements == null
this.count == 0
this.hopidx[] elements == this.count
this.keys[] elements == this.keys[this.count]
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.hash(java.lang.Object):::ENTER
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.hash(java.lang.Object):::EXIT
return one of { -581800205, 818770255 }
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.intern(java.lang.Object):::ENTER
this.hopidx[] elements one of { 0, 818770255 }
this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.keys[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.intern(java.lang.Object):::EXIT118
this.hopidx[] == orig(this.hopidx[])
this.keys[] == orig(this.keys[])
this.count == orig(this.count)
return == this.hopidx[orig(this.count)-1]
return == orig(this.hopidx[this.count-1])
orig(arg0) == this.keys[orig(this.count)-1]
orig(arg0) == orig(this.keys[post(this.count)-1])
orig(arg0) == orig(this.keys[post(return)])
orig(arg0) == orig(this.keys[this.count-1])
this.hopidx has only one value
this.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.hopidx[] elements one of { 0, 818770255 }
this.keys has only one value
this.keys[] has only one value, of length 16
this.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
orig(this) has only one value
orig(arg0) has only one value
orig(arg0.getClass().getName()) == java.util.Collections$UnmodifiableSet.class
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.intern(java.lang.Object):::EXIT141
return == orig(this.count)
orig(arg0) == this.keys[orig(this.count)]
this.keys[this.count] == orig(this.keys[post(this.count)-1])
this.keys[this.count] == orig(this.keys[post(return)])
orig(this.hopidx[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.hopidx[]) elements == 0
orig(this.keys[]) contains only nulls and has only one value, of length 16
orig(this.keys[]) elements == null
orig(this.keys[].getClass().getName()) == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
orig(this.keys[].getClass().getName()) elements == null
orig(this.hopidx[]) elements == return
orig(this.keys[]) elements == this.keys[this.count]
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.intern(java.lang.Object):::EXIT
this.cap == orig(this.cap)
this.cap == orig(size(this.keys[]))
this.hopidx == orig(this.hopidx)
this.keys == orig(this.keys)
this.keys.getClass().getName() == orig(this.keys.getClass().getName())
return == this.hopidx[this.cap]
return == this.hopidx[this.cap-1]
return == orig(this.hopidx[post(this.cap)])
return == orig(this.hopidx[post(this.cap)-1])
return == this.hopidx[this.count]
return == this.hopidx[this.count-1]
return == this.hopidx[return]
return == this.hopidx[orig(this.cap)]
return == this.hopidx[orig(this.cap)-1]
return == this.hopidx[orig(this.count)]
return == orig(this.hopidx[post(this.count)])
return == orig(this.hopidx[post(this.count)-1])
return == orig(this.hopidx[post(return)])
return == orig(this.hopidx[this.cap])
return == orig(this.hopidx[this.cap-1])
return == orig(this.hopidx[this.count])
orig(arg0) == this.keys[this.count-1]
orig(arg0) == this.keys[return]
size(this.hopidx[]) == orig(size(this.hopidx[]))
orig(this.keys[post(this.cap)-1]) == this.keys[this.count]
this.keys[this.count] == this.keys[orig(this.cap)-1]
this.keys[this.count] == orig(this.keys[post(this.count)])
this.keys[this.count] == orig(this.keys[this.cap-1])
this.keys[this.count] == orig(this.keys[this.count])
orig(this.keys[post(this.count)-1]) == orig(this.keys[post(return)])
this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.keys[].getClass().getName() one of { [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
this.count == 1
return == 0
orig(this.keys[post(return)]) in this.keys[]
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.oldIndex(java.lang.Object):::ENTER
this.hopidx[] elements one of { 0, 818770255 }
this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.keys[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.oldIndex(java.lang.Object):::EXIT86
this.hopidx[] == orig(this.hopidx[])
this.keys[] == orig(this.keys[])
this.count == orig(this.count)
return == this.hopidx[this.cap]
return == this.hopidx[this.cap-1]
return == orig(this.hopidx[post(this.cap)])
return == orig(this.hopidx[post(this.cap)-1])
return == this.hopidx[this.count]
return == this.hopidx[this.count-1]
return == this.hopidx[return]
return == this.hopidx[orig(this.cap)]
return == this.hopidx[orig(this.cap)-1]
return == this.hopidx[orig(this.count)]
return == this.hopidx[orig(this.count)-1]
return == orig(this.hopidx[post(this.count)])
return == orig(this.hopidx[post(this.count)-1])
return == orig(this.hopidx[post(return)])
return == orig(this.hopidx[this.cap])
return == orig(this.hopidx[this.cap-1])
return == orig(this.hopidx[this.count])
return == orig(this.hopidx[this.count-1])
orig(arg0) == this.keys[return]
orig(arg0) == this.keys[orig(this.count)-1]
orig(arg0) == orig(this.keys[post(this.count)-1])
orig(arg0) == orig(this.keys[post(return)])
orig(arg0) == orig(this.keys[this.count-1])
this.hopidx has only one value
this.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0]
this.hopidx[] elements one of { 0, 818770255 }
this.keys has only one value
this.keys[] has only one value, of length 16
this.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
return == 0
orig(this) has only one value
orig(arg0) has only one value
orig(arg0.getClass().getName()) == java.util.Collections$UnmodifiableSet.class
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.oldIndex(java.lang.Object):::EXIT88
orig(this.count) == this.hopidx[this.cap]
orig(this.count) == this.hopidx[this.cap-1]
orig(this.count) == orig(this.hopidx[post(this.cap)])
orig(this.count) == orig(this.hopidx[post(this.cap)-1])
orig(this.count) == this.hopidx[this.count]
orig(this.count) == this.hopidx[this.count-1]
orig(this.count) == this.hopidx[orig(this.cap)]
orig(this.count) == this.hopidx[orig(this.cap)-1]
orig(this.count) == this.hopidx[orig(this.count)]
orig(this.count) == orig(this.hopidx[post(this.count)])
orig(this.count) == orig(this.hopidx[post(this.count)-1])
orig(this.count) == orig(this.hopidx[this.cap])
orig(this.count) == orig(this.hopidx[this.cap-1])
orig(this.count) == orig(this.hopidx[this.count])
orig(arg0) == this.keys[orig(this.count)]
this.keys[this.count] == orig(this.keys[post(this.count)-1])
return == -1
orig(this.hopidx[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.hopidx[]) elements == 0
orig(this.keys[]) contains only nulls and has only one value, of length 16
orig(this.keys[]) elements == null
orig(this.keys[].getClass().getName()) == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
orig(this.keys[].getClass().getName()) elements == null
orig(this.count) == 0
orig(this.hopidx[]) elements == orig(this.count)
orig(this.keys[]) elements == this.keys[this.count]
===========================================================================
org.fressian.impl.InterleavedIndexHopMap.oldIndex(java.lang.Object):::EXIT
this.cap == orig(this.cap)
this.cap == orig(size(this.keys[]))
this.hopidx == orig(this.hopidx)
this.keys == orig(this.keys)
this.keys.getClass().getName() == orig(this.keys.getClass().getName())
orig(arg0) == this.keys[this.count-1]
size(this.hopidx[]) == orig(size(this.hopidx[]))
this.hopidx[this.cap] == orig(this.hopidx[post(this.cap)])
this.hopidx[this.cap] == orig(this.hopidx[post(this.cap)-1])
this.hopidx[this.cap] == this.hopidx[this.count-1]
this.hopidx[this.cap] == this.hopidx[orig(this.cap)-1]
this.hopidx[this.cap] == this.hopidx[orig(this.count)]
this.hopidx[this.cap] == orig(this.hopidx[post(this.count)])
this.hopidx[this.cap] == orig(this.hopidx[post(this.count)-1])
this.hopidx[this.cap] == orig(this.hopidx[this.cap])
this.hopidx[this.cap] == orig(this.hopidx[this.cap-1])
this.hopidx[this.cap] == orig(this.hopidx[this.count])
orig(this.keys[post(this.cap)-1]) == this.keys[this.count]
this.keys[this.count] == this.keys[orig(this.cap)-1]
this.keys[this.count] == orig(this.keys[post(this.count)])
this.keys[this.count] == orig(this.keys[this.cap-1])
this.keys[this.count] == orig(this.keys[this.count])
(return == -1)  <==>  (orig(this.count) == 0)
(return == -1)  <==>  (orig(this.count) == this.hopidx[this.cap])
(return == -1)  <==>  (orig(this.hopidx[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
(return == -1)  <==>  (orig(this.keys[]) contains only nulls and has only one value, of length 16)
(return == -1)  <==>  (orig(this.keys[].getClass().getName()) == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null])
(return == -1)  <==>  (orig(this.keys[post(this.count)-1]) == null)
(return == -1)  ==>  (orig(arg0) == this.keys[orig(this.count)])
(return == -1)  ==>  (orig(this.hopidx[]) elements == 0)
(return == -1)  ==>  (orig(this.hopidx[]) elements == orig(this.count))
(return == -1)  ==>  (orig(this.hopidx[]) elements == this.hopidx[this.cap])
(return == -1)  ==>  (orig(this.keys[]) elements == null)
(return == -1)  ==>  (orig(this.keys[]) elements == orig(this.keys[post(this.count)-1]))
(return == -1)  ==>  (orig(this.keys[]) elements == this.keys[this.count])
(return == -1)  ==>  (orig(this.keys[].getClass().getName()) elements == null)
(return == -1)  ==>  (this.hopidx[] elements one of { -581800205, 0, 818770255 })
(return == -1)  ==>  (this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] })
(return == -1)  ==>  (this.keys[].getClass().getName() one of { [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] })
(return == -1)  ==>  (this.keys[this.count] == orig(this.keys[post(this.count)-1]))
(return == 0)  <==>  (orig(this.count) == 1)
(return == 0)  <==>  (orig(this.hopidx[]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0])
(return == 0)  <==>  (orig(this.keys[]) has only one value, of length 16)
(return == 0)  <==>  (orig(this.keys[].getClass().getName()) == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null])
(return == 0)  <==>  (orig(this.keys[post(this.count)-1]) has only one value)
(return == 0)  <==>  (return == this.hopidx[this.cap])
(return == 0)  <==>  (this.count == orig(this.count))
(return == 0)  <==>  (this.keys[orig(this.count)] == null)
(return == 0)  ==>  (orig(arg0) == orig(this.keys[post(return)]))
(return == 0)  ==>  (orig(arg0) == orig(this.keys[post(this.count)-1]))
(return == 0)  ==>  (orig(arg0) == orig(this.keys[this.count-1]))
(return == 0)  ==>  (orig(arg0) == this.keys[orig(this.count)-1])
(return == 0)  ==>  (orig(arg0) == this.keys[return])
(return == 0)  ==>  (orig(arg0) has only one value)
(return == 0)  ==>  (orig(arg0.getClass().getName()) == java.util.Collections$UnmodifiableSet.class)
(return == 0)  ==>  (orig(this) has only one value)
(return == 0)  ==>  (orig(this.hopidx[]) elements one of { 0, 818770255 })
(return == 0)  ==>  (orig(this.hopidx[post(return)]) == 0)
(return == 0)  ==>  (orig(this.hopidx[this.count-1]) == 0)
(return == 0)  ==>  (orig(this.keys[post(return)]) has only one value)
(return == 0)  ==>  (orig(this.keys[this.count-1]) has only one value)
(return == 0)  ==>  (return == orig(this.hopidx[post(return)]))
(return == 0)  ==>  (return == orig(this.hopidx[this.count-1]))
(return == 0)  ==>  (return == this.hopidx[orig(this.count)-1])
(return == 0)  ==>  (return == this.hopidx[return])
(return == 0)  ==>  (this.hopidx has only one value)
(return == 0)  ==>  (this.hopidx[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0])
(return == 0)  ==>  (this.hopidx[] elements one of { 0, 818770255 })
(return == 0)  ==>  (this.hopidx[orig(this.count)-1] == 0)
(return == 0)  ==>  (this.hopidx[return] == 0)
(return == 0)  ==>  (this.keys has only one value)
(return == 0)  ==>  (this.keys[] has only one value, of length 16)
(return == 0)  ==>  (this.keys[].getClass().getName() == [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null])
(return == 0)  ==>  (this.keys[orig(this.count)-1] has only one value)
(return == 0)  ==>  (this.keys[return] has only one value)
this.hopidx[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -581800205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 818770255, 0, 0, 0] }
this.keys[].getClass().getName() one of { [java.lang.String, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [java.util.Collections.UnmodifiableSet, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] }
this.count == 1
return one of { -1, 0 }
orig(this.keys[post(this.count)-1]) in this.keys[]
===========================================================================
org.fressian.impl.MapLookup:::OBJECT
this.map != null
===========================================================================
org.fressian.impl.MapLookup.MapLookup(java.util.Map):::ENTER
===========================================================================
org.fressian.impl.MapLookup.MapLookup(java.util.Map):::EXIT
this.map == orig(arg0)
this.map.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.MapLookup.valAt(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Class.class
this.map.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.fressian.impl.MapLookup.valAt(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
return.getClass().getName() == java.util.HashMap.class
this.map.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.fressian.impl.RawInput:::OBJECT
this.is != null
this.is.getClass().getName() == java.util.zip.CheckedInputStream.class
this.cis != null
this.dis != null
this.bytesRead >= 0
===========================================================================
org.fressian.impl.RawInput.RawInput(java.io.InputStream, boolean):::ENTER
arg0.getClass().getName() == java.io.ByteArrayInputStream.class
arg1 == true
===========================================================================
org.fressian.impl.RawInput.RawInput(java.io.InputStream, boolean):::EXIT
this.bytesRead == 0
===========================================================================
org.fressian.impl.RawInput.readFully(byte[], int, int):::ENTER
arg0[] elements >= 0
arg1 == 0
arg0[arg1] one of { 0, 74, 111 }
arg0[arg2-1] one of { 0, 46, 104 }
this.bytesRead > arg1
this.bytesRead != arg2
this.bytesRead != size(arg0[])
this.bytesRead != size(arg0[])-1
arg1 < arg2
arg1 < size(arg0[])-1
arg2 <= size(arg0[])
arg2 != size(arg0[])-1
===========================================================================
org.fressian.impl.RawInput.readFully(byte[], int, int):::EXIT
this.is == orig(this.is)
this.is.getClass().getName() == orig(this.is.getClass().getName())
this.cis == orig(this.cis)
this.dis == orig(this.dis)
this.bytesRead > orig(this.bytesRead)
this.bytesRead > orig(arg1)
this.bytesRead > orig(arg2)
this.bytesRead > orig(size(arg0[]))
orig(this.bytesRead) != size(arg0[])-1
orig(arg1) < size(arg0[])-1
orig(arg2) != size(arg0[])-1
arg0[orig(arg1)] != arg0[orig(arg2)-1]
arg0[orig(arg1)] != orig(arg0[arg1])
arg0[orig(arg1)] != orig(arg0[arg2-1])
arg0[orig(arg2)-1] != orig(arg0[arg1])
arg0[orig(arg2)-1] != orig(arg0[arg2-1])
this.bytesRead - orig(this.bytesRead) - orig(arg2) == 0
===========================================================================
org.fressian.impl.RawInput.readRawByte():::ENTER
===========================================================================
org.fressian.impl.RawInput.readRawByte():::EXIT
this.is == orig(this.is)
this.is.getClass().getName() == orig(this.is.getClass().getName())
this.cis == orig(this.cis)
this.dis == orig(this.dis)
this.bytesRead >= 1
this.bytesRead != return
this.bytesRead - orig(this.bytesRead) - 1 == 0
===========================================================================
org.fressian.impl.RawInput.readRawInt32():::ENTER
this has only one value
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 6
===========================================================================
org.fressian.impl.RawInput.readRawInt32():::EXIT
this.is == orig(this.is)
this.is.getClass().getName() == orig(this.is.getClass().getName())
this.cis == orig(this.cis)
this.dis == orig(this.dis)
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 10
return == 171294754
===========================================================================
org.fressian.impl.RawInput.readRawInt40():::ENTER
this has only one value
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 5
===========================================================================
org.fressian.impl.RawInput.readRawInt40():::EXIT
this.is == orig(this.is)
this.is.getClass().getName() == orig(this.is.getClass().getName())
this.cis == orig(this.cis)
this.dis == orig(this.dis)
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 10
return == 644416389154L
===========================================================================
org.fressian.impl.RawInput.readRawInt8():::ENTER
this has only one value
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 5
===========================================================================
org.fressian.impl.RawInput.readRawInt8():::EXIT
this.is == orig(this.is)
this.is.getClass().getName() == orig(this.is.getClass().getName())
this.cis == orig(this.cis)
this.dis == orig(this.dis)
this.is has only one value
this.cis has only one value
this.dis has only one value
this.bytesRead == 6
return == 150
===========================================================================
org.fressian.impl.RawOutput:::OBJECT
this.os != null
this.bytesWritten >= 0
this.buffer != null
this.buffer[] == [0, 0, 0, 0, 0, 0, 0, 0]
this.buffer[] elements == 0
size(this.buffer[]) == 8
===========================================================================
org.fressian.impl.RawOutput.RawOutput(java.io.OutputStream):::ENTER
arg0.getClass().getName() == java.io.ByteArrayOutputStream.class
===========================================================================
org.fressian.impl.RawOutput.RawOutput(java.io.OutputStream):::EXIT
this.bytesWritten == 0
===========================================================================
org.fressian.impl.RawOutput.notifyBytesWritten(int):::ENTER
arg0 >= 1
===========================================================================
org.fressian.impl.RawOutput.notifyBytesWritten(int):::EXIT
this.os == orig(this.os)
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.bytesWritten >= 1
this.bytesWritten > orig(this.bytesWritten)
this.bytesWritten >= orig(arg0)
this.bytesWritten - orig(this.bytesWritten) - orig(arg0) == 0
===========================================================================
org.fressian.impl.RawOutput.writeRawByte(int):::ENTER
===========================================================================
org.fressian.impl.RawOutput.writeRawByte(int):::EXIT
this.os == orig(this.os)
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.bytesWritten >= 1
this.bytesWritten - orig(this.bytesWritten) - 1 == 0
this.bytesWritten != orig(arg0)
===========================================================================
org.fressian.impl.RawOutput.writeRawBytes(byte[], int, int):::ENTER
arg1 == 0
this.bytesWritten > arg1
this.bytesWritten != arg2
this.bytesWritten != size(arg0[])
this.bytesWritten != size(arg0[])-1
this.bytesWritten != arg0[arg1]
this.bytesWritten != arg0[arg2-1]
arg1 < arg2
arg1 < size(arg0[])-1
arg1 != arg0[arg1]
arg1 != arg0[arg2-1]
arg2 <= size(arg0[])
size(arg0[]) % arg2 == 0
arg2 != size(arg0[])-1
arg2 != arg0[arg1]
arg2 != arg0[arg2-1]
size(arg0[]) != arg0[arg1]
size(arg0[]) != arg0[arg2-1]
size(arg0[])-1 != arg0[arg1]
size(arg0[])-1 != arg0[arg2-1]
arg0[arg1] != arg0[arg2-1]
===========================================================================
org.fressian.impl.RawOutput.writeRawBytes(byte[], int, int):::EXIT
this.os == orig(this.os)
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
arg0[] == orig(arg0[])
this.bytesWritten > orig(this.bytesWritten)
this.bytesWritten > orig(arg1)
this.bytesWritten > orig(arg2)
this.bytesWritten != size(arg0[])-1
this.bytesWritten != orig(size(arg0[]))
this.bytesWritten != arg0[orig(arg1)]
this.bytesWritten != arg0[orig(arg2)-1]
orig(this.bytesWritten) != size(arg0[])-1
orig(this.bytesWritten) != arg0[orig(arg1)]
orig(this.bytesWritten) != arg0[orig(arg2)-1]
orig(arg1) < size(arg0[])-1
orig(arg1) != arg0[orig(arg1)]
orig(arg1) != arg0[orig(arg2)-1]
orig(arg2) != size(arg0[])-1
orig(arg2) != arg0[orig(arg1)]
orig(arg2) != arg0[orig(arg2)-1]
size(arg0[])-1 != arg0[orig(arg1)]
size(arg0[])-1 != arg0[orig(arg2)-1]
orig(size(arg0[])) != arg0[orig(arg1)]
orig(size(arg0[])) != arg0[orig(arg2)-1]
arg0[orig(arg1)] != arg0[orig(arg2)-1]
this.bytesWritten - orig(this.bytesWritten) - orig(arg2) == 0
===========================================================================
org.fressian.impl.RawOutput.writeRawInt40(long):::ENTER
this.bytesWritten one of { 5, 26 }
arg0 one of { 1743928016930L, 1743928016981L }
===========================================================================
org.fressian.impl.RawOutput.writeRawInt40(long):::EXIT
this.os == orig(this.os)
this.buffer == orig(this.buffer)
this.buffer[] == orig(this.buffer[])
this.bytesWritten one of { 10, 31 }
===========================================================================
org.fressian.impl.StructType:::OBJECT
this.tag.getClass().getName() == java.lang.String.class
this.fields == 2
===========================================================================
org.fressian.impl.StructType.StructType(java.lang.Object, int):::ENTER
arg0.getClass().getName() == java.lang.String.class
arg1 == 2
===========================================================================
org.fressian.impl.StructType.StructType(java.lang.Object, int):::EXIT
this.tag == orig(arg0)
this.tag.getClass().getName() == orig(arg0.getClass().getName())
this.fields == orig(arg1)
Exiting Daikon.
