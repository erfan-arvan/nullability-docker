Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

missing variables in newEnterExitRel:
  parent = commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::ENTER
  child = commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@3a0ade18
parent varinfos missing from parent_to_child_map:
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode-1]
   arg1[commands.model3.TaskModule.this.domain.debugCode]
   arg1[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
rel.parent_to_child_map:
    commands.model3.TaskModule.this => orig(commands.model3.TaskModule.this)
    commands.model3.TaskModule.STATENAME => orig(commands.model3.TaskModule.STATENAME)
    commands.model3.TaskModule.STATENAME.toString => orig(commands.model3.TaskModule.STATENAME.toString)
    commands.model3.TaskModule.LIFTEDRFNAME => orig(commands.model3.TaskModule.LIFTEDRFNAME)
    commands.model3.TaskModule.LIFTEDRFNAME.toString => orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    commands.model3.TaskModule.GROUNDEDRFNAME => orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    commands.model3.TaskModule.GROUNDEDRFNAME.toString => orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    commands.model3.TaskModule.BINDINGNAME => orig(commands.model3.TaskModule.BINDINGNAME)
    commands.model3.TaskModule.BINDINGNAME.toString => orig(commands.model3.TaskModule.BINDINGNAME.toString)
    commands.model3.TaskModule.this.stateVariable => orig(commands.model3.TaskModule.this.stateVariable)
    commands.model3.TaskModule.this.stateVariable.name => orig(commands.model3.TaskModule.this.stateVariable.name)
    commands.model3.TaskModule.this.stateVariable.name.toString => orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    commands.model3.TaskModule.this.stateVariable.moduleOwner => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies => orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    commands.model3.TaskModule.this.stateVariable.dependencies[..] => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.parameters => orig(commands.model3.TaskModule.this.stateVariable.parameters)
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.isInput => orig(commands.model3.TaskModule.this.stateVariable.isInput)
    commands.model3.TaskModule.this.liftedRFVariable => orig(commands.model3.TaskModule.this.liftedRFVariable)
    commands.model3.TaskModule.this.liftedRFVariable.name => orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    commands.model3.TaskModule.this.liftedRFVariable.name.toString => orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.parameters => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.isInput => orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    commands.model3.TaskModule.this.groundedRFVariable => orig(commands.model3.TaskModule.this.groundedRFVariable)
    commands.model3.TaskModule.this.groundedRFVariable.name => orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    commands.model3.TaskModule.this.groundedRFVariable.name.toString => orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.parameters => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.isInput => orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    commands.model3.TaskModule.this.bindingConstraintVariable => orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    commands.model3.TaskModule.this.bindingConstraintVariable.name => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..] => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput => orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    commands.model3.TaskModule.this.liftedRFValues => orig(commands.model3.TaskModule.this.liftedRFValues)
    commands.model3.TaskModule.this.liftedRFValues[..] => orig(commands.model3.TaskModule.this.liftedRFValues[..])
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    commands.model3.TaskModule.this.domain => orig(commands.model3.TaskModule.this.domain)
    commands.model3.TaskModule.this.domain.getClass().getName() => orig(commands.model3.TaskModule.this.domain.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses => orig(commands.model3.TaskModule.this.domain.objectClasses)
    commands.model3.TaskModule.this.domain.objectClasses[..] => orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClassMap => orig(commands.model3.TaskModule.this.domain.objectClassMap)
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    commands.model3.TaskModule.this.domain.attributes => orig(commands.model3.TaskModule.this.domain.attributes)
    commands.model3.TaskModule.this.domain.attributes[..] => orig(commands.model3.TaskModule.this.domain.attributes[..])
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    commands.model3.TaskModule.this.domain.attributes.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    commands.model3.TaskModule.this.domain.attributeMap => orig(commands.model3.TaskModule.this.domain.attributeMap)
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions => orig(commands.model3.TaskModule.this.domain.propFunctions)
    commands.model3.TaskModule.this.domain.propFunctions[..] => orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctionMap => orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain => orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    commands.model3.TaskModule.this.domain.debugCode => orig(commands.model3.TaskModule.this.domain.debugCode)
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs => orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize => orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    commands.model3.TaskModule.this.name => orig(commands.model3.TaskModule.this.name)
    commands.model3.TaskModule.this.name.toString => orig(commands.model3.TaskModule.this.name.toString)
    commands.model3.TaskModule.this.owner => orig(commands.model3.TaskModule.this.owner)
    commands.model3.TaskModule.this.owner.modules => orig(commands.model3.TaskModule.this.owner.modules)
    commands.model3.TaskModule.this.owner.modules[..] => orig(commands.model3.TaskModule.this.owner.modules[..])
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    commands.model3.TaskModule.this.owner.modules.getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    commands.model3.TaskModule.this.owner.moduleMap => orig(commands.model3.TaskModule.this.owner.moduleMap)
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() => orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables => orig(commands.model3.TaskModule.this.owner.inputVariables)
    commands.model3.TaskModule.this.owner.inputVariables[..] => orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    commands.model3.TaskModule.this.owner.variableOwnerResolver => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    commands.model3.TaskModule.this.owner.queryCache => orig(commands.model3.TaskModule.this.owner.queryCache)
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    commands.model3.TaskModule.this.owner.logQueryCache => orig(commands.model3.TaskModule.this.owner.logQueryCache)
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    commands.model3.TaskModule.this.rVariables => orig(commands.model3.TaskModule.this.rVariables)
    commands.model3.TaskModule.this.rVariables[..] => orig(commands.model3.TaskModule.this.rVariables[..])
    commands.model3.TaskModule.this.rVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    commands.model3.TaskModule.this.rVariables.getClass().getName() => orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    commands.model3.TaskModule.this.rVariableMap => orig(commands.model3.TaskModule.this.rVariableMap)
    commands.model3.TaskModule.this.rVariableMap.getClass().getName() => orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList => orig(commands.model3.TaskModule.this.externalDependencyList)
    commands.model3.TaskModule.this.externalDependencyList[..] => orig(commands.model3.TaskModule.this.externalDependencyList[..])
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    arg1 => orig(arg1)
    arg1[..] => orig(arg1[..])
    arg1[..].getClass().getName() => orig(arg1[..].getClass().getName())
    arg1.getClass().getName() => orig(arg1.getClass().getName())
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFValues[..]) => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..]) => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1 => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    size(commands.model3.TaskModule.this.domain.attributes[..]) => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    size(commands.model3.TaskModule.this.domain.attributes[..])-1 => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..]) => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1 => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    size(commands.model3.TaskModule.this.owner.modules[..]) => orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    size(commands.model3.TaskModule.this.owner.modules[..])-1 => orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..]) => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1 => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    size(commands.model3.TaskModule.this.rVariables[..]) => orig(size(commands.model3.TaskModule.this.rVariables[..]))
    size(commands.model3.TaskModule.this.rVariables[..])-1 => orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    size(commands.model3.TaskModule.this.externalDependencyList[..]) => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1 => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    size(arg1[..]) => orig(size(arg1[..]))
    size(arg1[..])-1 => orig(size(arg1[..]))-1
child.var_infos:
    this
    this.stateVal
    this.stateVal.s
    this.stateVal.s.objectInstances
    this.stateVal.s.objectInstances[..]
    this.stateVal.s.objectInstances[..].getClass().getName()
    this.stateVal.s.objectInstances.getClass().getName()
    this.stateVal.s.hiddenObjectInstances
    this.stateVal.s.hiddenObjectInstances[..]
    this.stateVal.s.hiddenObjectInstances[..].getClass().getName()
    this.stateVal.s.hiddenObjectInstances.getClass().getName()
    this.stateVal.s.objectMap
    this.stateVal.s.objectMap.getClass().getName()
    this.stateVal.s.objectIndexByTrueClass
    this.stateVal.s.objectIndexByTrueClass.getClass().getName()
    this.stateVal.sh
    this.stateVal.sh.getClass().getName()
    this.stateVal.sh.s
    this.stateVal.sh.hashCode
    this.stateVal.sh.needToRecomputeHashCode
    this.stateVal.owner
    this.stateVal.owner.name
    this.stateVal.owner.name.toString
    this.stateVal.owner.moduleOwner
    this.stateVal.owner.moduleOwner.getClass().getName()
    this.stateVal.owner.dependencies
    this.stateVal.owner.dependencies[..]
    this.stateVal.owner.dependencies[..].getClass().getName()
    this.stateVal.owner.dependencies.getClass().getName()
    this.stateVal.owner.parameters
    this.stateVal.owner.parameters.getClass().getName()
    this.stateVal.owner.isInput
    this.liftedRFVal
    this.liftedRFVal.freeVariableToClassMapping
    this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
    this.liftedRFVal.conditions
    this.liftedRFVal.conditions[..]
    this.liftedRFVal.conditions[..].getClass().getName()
    this.liftedRFVal.conditions.getClass().getName()
    this.liftedRFVal.owner
    this.liftedRFVal.owner.name
    this.liftedRFVal.owner.name.toString
    this.liftedRFVal.owner.moduleOwner
    this.liftedRFVal.owner.moduleOwner.getClass().getName()
    this.liftedRFVal.owner.dependencies
    this.liftedRFVal.owner.dependencies[..]
    this.liftedRFVal.owner.dependencies[..].getClass().getName()
    this.liftedRFVal.owner.dependencies.getClass().getName()
    this.liftedRFVal.owner.parameters
    this.liftedRFVal.owner.parameters.getClass().getName()
    this.liftedRFVal.owner.isInput
    this.groundedRFVal
    this.groundedRFVal.rf
    this.groundedRFVal.rf.gps
    this.groundedRFVal.rf.gps[..]
    this.groundedRFVal.rf.gps[..].getClass().getName()
    this.groundedRFVal.rf.gps.getClass().getName()
    this.groundedRFVal.rf.goalR
    this.groundedRFVal.rf.nonGoalR
    this.groundedRFVal.owner
    this.groundedRFVal.owner.name
    this.groundedRFVal.owner.name.toString
    this.groundedRFVal.owner.moduleOwner
    this.groundedRFVal.owner.moduleOwner.getClass().getName()
    this.groundedRFVal.owner.dependencies
    this.groundedRFVal.owner.dependencies[..]
    this.groundedRFVal.owner.dependencies[..].getClass().getName()
    this.groundedRFVal.owner.dependencies.getClass().getName()
    this.groundedRFVal.owner.parameters
    this.groundedRFVal.owner.parameters.getClass().getName()
    this.groundedRFVal.owner.isInput
    this.bindingConstraints
    this.bindingConstraints[..]
    this.bindingConstraints[..].getClass().getName()
    this.bindingConstraints.getClass().getName()
    this.next
    this.uni
    commands.model3.TaskModule.this
    commands.model3.TaskModule.STATENAME
    commands.model3.TaskModule.STATENAME.toString
    commands.model3.TaskModule.LIFTEDRFNAME
    commands.model3.TaskModule.LIFTEDRFNAME.toString
    commands.model3.TaskModule.GROUNDEDRFNAME
    commands.model3.TaskModule.GROUNDEDRFNAME.toString
    commands.model3.TaskModule.BINDINGNAME
    commands.model3.TaskModule.BINDINGNAME.toString
    commands.model3.TaskModule.this.stateVariable
    commands.model3.TaskModule.this.stateVariable.name
    commands.model3.TaskModule.this.stateVariable.name.toString
    commands.model3.TaskModule.this.stateVariable.moduleOwner
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies
    commands.model3.TaskModule.this.stateVariable.dependencies[..]
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.parameters
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.isInput
    commands.model3.TaskModule.this.liftedRFVariable
    commands.model3.TaskModule.this.liftedRFVariable.name
    commands.model3.TaskModule.this.liftedRFVariable.name.toString
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.parameters
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.isInput
    commands.model3.TaskModule.this.groundedRFVariable
    commands.model3.TaskModule.this.groundedRFVariable.name
    commands.model3.TaskModule.this.groundedRFVariable.name.toString
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.parameters
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.isInput
    commands.model3.TaskModule.this.bindingConstraintVariable
    commands.model3.TaskModule.this.bindingConstraintVariable.name
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput
    commands.model3.TaskModule.this.liftedRFValues
    commands.model3.TaskModule.this.liftedRFValues[..]
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
    commands.model3.TaskModule.this.domain
    commands.model3.TaskModule.this.domain.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses
    commands.model3.TaskModule.this.domain.objectClasses[..]
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClassMap
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName()
    commands.model3.TaskModule.this.domain.attributes
    commands.model3.TaskModule.this.domain.attributes[..]
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName()
    commands.model3.TaskModule.this.domain.attributes.getClass().getName()
    commands.model3.TaskModule.this.domain.attributeMap
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions
    commands.model3.TaskModule.this.domain.propFunctions[..]
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctionMap
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName()
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain
    commands.model3.TaskModule.this.domain.debugCode
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize
    commands.model3.TaskModule.this.name
    commands.model3.TaskModule.this.name.toString
    commands.model3.TaskModule.this.owner
    commands.model3.TaskModule.this.owner.modules
    commands.model3.TaskModule.this.owner.modules[..]
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName()
    commands.model3.TaskModule.this.owner.modules.getClass().getName()
    commands.model3.TaskModule.this.owner.moduleMap
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables
    commands.model3.TaskModule.this.owner.inputVariables[..]
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
    commands.model3.TaskModule.this.owner.variableOwnerResolver
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName()
    commands.model3.TaskModule.this.owner.queryCache
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName()
    commands.model3.TaskModule.this.owner.logQueryCache
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName()
    commands.model3.TaskModule.this.rVariables
    commands.model3.TaskModule.this.rVariables[..]
    commands.model3.TaskModule.this.rVariables[..].getClass().getName()
    commands.model3.TaskModule.this.rVariables.getClass().getName()
    commands.model3.TaskModule.this.rVariableMap
    commands.model3.TaskModule.this.rVariableMap.getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList
    commands.model3.TaskModule.this.externalDependencyList[..]
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
    this.modelOwner
    this.modelOwner.modules
    this.modelOwner.modules[..]
    this.modelOwner.modules[..].getClass().getName()
    this.modelOwner.modules.getClass().getName()
    this.modelOwner.moduleMap
    this.modelOwner.moduleMap.getClass().getName()
    this.modelOwner.inputVariables
    this.modelOwner.inputVariables[..]
    this.modelOwner.inputVariables[..].getClass().getName()
    this.modelOwner.inputVariables.getClass().getName()
    this.modelOwner.variableOwnerResolver
    this.modelOwner.variableOwnerResolver.getClass().getName()
    this.modelOwner.queryCache
    this.modelOwner.queryCache.getClass().getName()
    this.modelOwner.logQueryCache
    this.modelOwner.logQueryCache.getClass().getName()
    this.cache
    arg1
    arg1[..]
    arg1[..].getClass().getName()
    arg1.getClass().getName()
    orig(commands.model3.TaskModule.this)
    orig(commands.model3.TaskModule.STATENAME)
    orig(commands.model3.TaskModule.STATENAME.toString)
    orig(commands.model3.TaskModule.LIFTEDRFNAME)
    orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    orig(commands.model3.TaskModule.BINDINGNAME)
    orig(commands.model3.TaskModule.BINDINGNAME.toString)
    orig(commands.model3.TaskModule.this.stateVariable)
    orig(commands.model3.TaskModule.this.stateVariable.name)
    orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.parameters)
    orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFVariable)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.groundedRFVariable)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFValues)
    orig(commands.model3.TaskModule.this.liftedRFValues[..])
    orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    orig(commands.model3.TaskModule.this.domain)
    orig(commands.model3.TaskModule.this.domain.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses)
    orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClassMap)
    orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes)
    orig(commands.model3.TaskModule.this.domain.attributes[..])
    orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributeMap)
    orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions)
    orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    orig(commands.model3.TaskModule.this.domain.debugCode)
    orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    orig(commands.model3.TaskModule.this.name)
    orig(commands.model3.TaskModule.this.name.toString)
    orig(commands.model3.TaskModule.this.owner)
    orig(commands.model3.TaskModule.this.owner.modules)
    orig(commands.model3.TaskModule.this.owner.modules[..])
    orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.moduleMap)
    orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables)
    orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.queryCache)
    orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.logQueryCache)
    orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables)
    orig(commands.model3.TaskModule.this.rVariables[..])
    orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariableMap)
    orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList)
    orig(commands.model3.TaskModule.this.externalDependencyList[..])
    orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    orig(arg1)
    orig(arg1[..])
    orig(arg1[..].getClass().getName())
    orig(arg1.getClass().getName())
    size(this.stateVal.s.objectInstances[..])
    size(this.stateVal.s.objectInstances[..])-1
    size(this.stateVal.s.hiddenObjectInstances[..])
    size(this.stateVal.s.hiddenObjectInstances[..])-1
    size(this.stateVal.owner.dependencies[..])
    size(this.stateVal.owner.dependencies[..])-1
    size(this.liftedRFVal.conditions[..])
    size(this.liftedRFVal.conditions[..])-1
    size(this.liftedRFVal.owner.dependencies[..])
    size(this.liftedRFVal.owner.dependencies[..])-1
    size(this.groundedRFVal.rf.gps[..])
    size(this.groundedRFVal.rf.gps[..])-1
    size(this.groundedRFVal.owner.dependencies[..])
    size(this.groundedRFVal.owner.dependencies[..])-1
    size(this.bindingConstraints[..])
    size(this.bindingConstraints[..])-1
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFValues[..])
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..])
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1
    size(commands.model3.TaskModule.this.domain.attributes[..])
    size(commands.model3.TaskModule.this.domain.attributes[..])-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..])
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1
    size(commands.model3.TaskModule.this.owner.modules[..])
    size(commands.model3.TaskModule.this.owner.modules[..])-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..])
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1
    size(commands.model3.TaskModule.this.rVariables[..])
    size(commands.model3.TaskModule.this.rVariables[..])-1
    size(commands.model3.TaskModule.this.externalDependencyList[..])
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1
    size(this.modelOwner.modules[..])
    size(this.modelOwner.modules[..])-1
    size(this.modelOwner.inputVariables[..])
    size(this.modelOwner.inputVariables[..])-1
    size(arg1[..])
    size(arg1[..])-1
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.rVariables[..]))
    orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    orig(size(arg1[..]))
    orig(size(arg1[..]))-1
End of diagnostics for newEnterExitRel(commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::ENTER, commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::EXIT)
missing variables in newEnterExitRel:
  parent = commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER
  child = commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@64df048
parent varinfos missing from parent_to_child_map:
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode-1]
   arg1[commands.model3.TaskModule.this.domain.debugCode]
   arg1[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
rel.parent_to_child_map:
    commands.model3.TaskModule.this => orig(commands.model3.TaskModule.this)
    commands.model3.TaskModule.STATENAME => orig(commands.model3.TaskModule.STATENAME)
    commands.model3.TaskModule.STATENAME.toString => orig(commands.model3.TaskModule.STATENAME.toString)
    commands.model3.TaskModule.LIFTEDRFNAME => orig(commands.model3.TaskModule.LIFTEDRFNAME)
    commands.model3.TaskModule.LIFTEDRFNAME.toString => orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    commands.model3.TaskModule.GROUNDEDRFNAME => orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    commands.model3.TaskModule.GROUNDEDRFNAME.toString => orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    commands.model3.TaskModule.BINDINGNAME => orig(commands.model3.TaskModule.BINDINGNAME)
    commands.model3.TaskModule.BINDINGNAME.toString => orig(commands.model3.TaskModule.BINDINGNAME.toString)
    commands.model3.TaskModule.this.stateVariable => orig(commands.model3.TaskModule.this.stateVariable)
    commands.model3.TaskModule.this.stateVariable.name => orig(commands.model3.TaskModule.this.stateVariable.name)
    commands.model3.TaskModule.this.stateVariable.name.toString => orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    commands.model3.TaskModule.this.stateVariable.moduleOwner => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies => orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    commands.model3.TaskModule.this.stateVariable.dependencies[..] => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.parameters => orig(commands.model3.TaskModule.this.stateVariable.parameters)
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.isInput => orig(commands.model3.TaskModule.this.stateVariable.isInput)
    commands.model3.TaskModule.this.liftedRFVariable => orig(commands.model3.TaskModule.this.liftedRFVariable)
    commands.model3.TaskModule.this.liftedRFVariable.name => orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    commands.model3.TaskModule.this.liftedRFVariable.name.toString => orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.parameters => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.isInput => orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    commands.model3.TaskModule.this.groundedRFVariable => orig(commands.model3.TaskModule.this.groundedRFVariable)
    commands.model3.TaskModule.this.groundedRFVariable.name => orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    commands.model3.TaskModule.this.groundedRFVariable.name.toString => orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.parameters => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.isInput => orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    commands.model3.TaskModule.this.bindingConstraintVariable => orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    commands.model3.TaskModule.this.bindingConstraintVariable.name => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..] => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput => orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    commands.model3.TaskModule.this.liftedRFValues => orig(commands.model3.TaskModule.this.liftedRFValues)
    commands.model3.TaskModule.this.liftedRFValues[..] => orig(commands.model3.TaskModule.this.liftedRFValues[..])
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    commands.model3.TaskModule.this.domain => orig(commands.model3.TaskModule.this.domain)
    commands.model3.TaskModule.this.domain.getClass().getName() => orig(commands.model3.TaskModule.this.domain.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses => orig(commands.model3.TaskModule.this.domain.objectClasses)
    commands.model3.TaskModule.this.domain.objectClasses[..] => orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClassMap => orig(commands.model3.TaskModule.this.domain.objectClassMap)
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    commands.model3.TaskModule.this.domain.attributes => orig(commands.model3.TaskModule.this.domain.attributes)
    commands.model3.TaskModule.this.domain.attributes[..] => orig(commands.model3.TaskModule.this.domain.attributes[..])
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    commands.model3.TaskModule.this.domain.attributes.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    commands.model3.TaskModule.this.domain.attributeMap => orig(commands.model3.TaskModule.this.domain.attributeMap)
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions => orig(commands.model3.TaskModule.this.domain.propFunctions)
    commands.model3.TaskModule.this.domain.propFunctions[..] => orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctionMap => orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain => orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    commands.model3.TaskModule.this.domain.debugCode => orig(commands.model3.TaskModule.this.domain.debugCode)
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs => orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize => orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    commands.model3.TaskModule.this.name => orig(commands.model3.TaskModule.this.name)
    commands.model3.TaskModule.this.name.toString => orig(commands.model3.TaskModule.this.name.toString)
    commands.model3.TaskModule.this.owner => orig(commands.model3.TaskModule.this.owner)
    commands.model3.TaskModule.this.owner.modules => orig(commands.model3.TaskModule.this.owner.modules)
    commands.model3.TaskModule.this.owner.modules[..] => orig(commands.model3.TaskModule.this.owner.modules[..])
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    commands.model3.TaskModule.this.owner.modules.getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    commands.model3.TaskModule.this.owner.moduleMap => orig(commands.model3.TaskModule.this.owner.moduleMap)
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() => orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables => orig(commands.model3.TaskModule.this.owner.inputVariables)
    commands.model3.TaskModule.this.owner.inputVariables[..] => orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    commands.model3.TaskModule.this.owner.variableOwnerResolver => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    commands.model3.TaskModule.this.owner.queryCache => orig(commands.model3.TaskModule.this.owner.queryCache)
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    commands.model3.TaskModule.this.owner.logQueryCache => orig(commands.model3.TaskModule.this.owner.logQueryCache)
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    commands.model3.TaskModule.this.rVariables => orig(commands.model3.TaskModule.this.rVariables)
    commands.model3.TaskModule.this.rVariables[..] => orig(commands.model3.TaskModule.this.rVariables[..])
    commands.model3.TaskModule.this.rVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    commands.model3.TaskModule.this.rVariables.getClass().getName() => orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    commands.model3.TaskModule.this.rVariableMap => orig(commands.model3.TaskModule.this.rVariableMap)
    commands.model3.TaskModule.this.rVariableMap.getClass().getName() => orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList => orig(commands.model3.TaskModule.this.externalDependencyList)
    commands.model3.TaskModule.this.externalDependencyList[..] => orig(commands.model3.TaskModule.this.externalDependencyList[..])
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    arg1 => orig(arg1)
    arg1[..] => orig(arg1[..])
    arg1[..].getClass().getName() => orig(arg1[..].getClass().getName())
    arg1.getClass().getName() => orig(arg1.getClass().getName())
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFValues[..]) => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..]) => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1 => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    size(commands.model3.TaskModule.this.domain.attributes[..]) => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    size(commands.model3.TaskModule.this.domain.attributes[..])-1 => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..]) => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1 => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    size(commands.model3.TaskModule.this.owner.modules[..]) => orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    size(commands.model3.TaskModule.this.owner.modules[..])-1 => orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..]) => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1 => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    size(commands.model3.TaskModule.this.rVariables[..]) => orig(size(commands.model3.TaskModule.this.rVariables[..]))
    size(commands.model3.TaskModule.this.rVariables[..])-1 => orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    size(commands.model3.TaskModule.this.externalDependencyList[..]) => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1 => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    size(arg1[..]) => orig(size(arg1[..]))
    size(arg1[..])-1 => orig(size(arg1[..]))-1
child.var_infos:
    this
    this.stateVal
    this.stateVal.s
    this.stateVal.s.objectInstances
    this.stateVal.s.objectInstances[..]
    this.stateVal.s.objectInstances[..].getClass().getName()
    this.stateVal.s.objectInstances.getClass().getName()
    this.stateVal.s.hiddenObjectInstances
    this.stateVal.s.hiddenObjectInstances[..]
    this.stateVal.s.hiddenObjectInstances[..].getClass().getName()
    this.stateVal.s.hiddenObjectInstances.getClass().getName()
    this.stateVal.s.objectMap
    this.stateVal.s.objectMap.getClass().getName()
    this.stateVal.s.objectIndexByTrueClass
    this.stateVal.s.objectIndexByTrueClass.getClass().getName()
    this.stateVal.sh
    this.stateVal.sh.getClass().getName()
    this.stateVal.sh.s
    this.stateVal.sh.hashCode
    this.stateVal.sh.needToRecomputeHashCode
    this.stateVal.owner
    this.stateVal.owner.name
    this.stateVal.owner.name.toString
    this.stateVal.owner.moduleOwner
    this.stateVal.owner.moduleOwner.getClass().getName()
    this.stateVal.owner.dependencies
    this.stateVal.owner.dependencies[..]
    this.stateVal.owner.dependencies[..].getClass().getName()
    this.stateVal.owner.dependencies.getClass().getName()
    this.stateVal.owner.parameters
    this.stateVal.owner.parameters.getClass().getName()
    this.stateVal.owner.isInput
    this.liftedRFVal
    this.liftedRFVal.freeVariableToClassMapping
    this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
    this.liftedRFVal.conditions
    this.liftedRFVal.conditions[..]
    this.liftedRFVal.conditions[..].getClass().getName()
    this.liftedRFVal.conditions.getClass().getName()
    this.liftedRFVal.owner
    this.liftedRFVal.owner.name
    this.liftedRFVal.owner.name.toString
    this.liftedRFVal.owner.moduleOwner
    this.liftedRFVal.owner.moduleOwner.getClass().getName()
    this.liftedRFVal.owner.dependencies
    this.liftedRFVal.owner.dependencies[..]
    this.liftedRFVal.owner.dependencies[..].getClass().getName()
    this.liftedRFVal.owner.dependencies.getClass().getName()
    this.liftedRFVal.owner.parameters
    this.liftedRFVal.owner.parameters.getClass().getName()
    this.liftedRFVal.owner.isInput
    this.rfVals
    this.rfVals[..]
    this.rfVals[..].getClass().getName()
    this.rfVals.getClass().getName()
    this.next
    this.uniProb
    commands.model3.TaskModule.this
    commands.model3.TaskModule.STATENAME
    commands.model3.TaskModule.STATENAME.toString
    commands.model3.TaskModule.LIFTEDRFNAME
    commands.model3.TaskModule.LIFTEDRFNAME.toString
    commands.model3.TaskModule.GROUNDEDRFNAME
    commands.model3.TaskModule.GROUNDEDRFNAME.toString
    commands.model3.TaskModule.BINDINGNAME
    commands.model3.TaskModule.BINDINGNAME.toString
    commands.model3.TaskModule.this.stateVariable
    commands.model3.TaskModule.this.stateVariable.name
    commands.model3.TaskModule.this.stateVariable.name.toString
    commands.model3.TaskModule.this.stateVariable.moduleOwner
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies
    commands.model3.TaskModule.this.stateVariable.dependencies[..]
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.parameters
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.isInput
    commands.model3.TaskModule.this.liftedRFVariable
    commands.model3.TaskModule.this.liftedRFVariable.name
    commands.model3.TaskModule.this.liftedRFVariable.name.toString
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.parameters
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.isInput
    commands.model3.TaskModule.this.groundedRFVariable
    commands.model3.TaskModule.this.groundedRFVariable.name
    commands.model3.TaskModule.this.groundedRFVariable.name.toString
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.parameters
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.isInput
    commands.model3.TaskModule.this.bindingConstraintVariable
    commands.model3.TaskModule.this.bindingConstraintVariable.name
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput
    commands.model3.TaskModule.this.liftedRFValues
    commands.model3.TaskModule.this.liftedRFValues[..]
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
    commands.model3.TaskModule.this.domain
    commands.model3.TaskModule.this.domain.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses
    commands.model3.TaskModule.this.domain.objectClasses[..]
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClassMap
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName()
    commands.model3.TaskModule.this.domain.attributes
    commands.model3.TaskModule.this.domain.attributes[..]
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName()
    commands.model3.TaskModule.this.domain.attributes.getClass().getName()
    commands.model3.TaskModule.this.domain.attributeMap
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions
    commands.model3.TaskModule.this.domain.propFunctions[..]
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctionMap
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName()
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain
    commands.model3.TaskModule.this.domain.debugCode
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize
    commands.model3.TaskModule.this.name
    commands.model3.TaskModule.this.name.toString
    commands.model3.TaskModule.this.owner
    commands.model3.TaskModule.this.owner.modules
    commands.model3.TaskModule.this.owner.modules[..]
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName()
    commands.model3.TaskModule.this.owner.modules.getClass().getName()
    commands.model3.TaskModule.this.owner.moduleMap
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables
    commands.model3.TaskModule.this.owner.inputVariables[..]
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
    commands.model3.TaskModule.this.owner.variableOwnerResolver
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName()
    commands.model3.TaskModule.this.owner.queryCache
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName()
    commands.model3.TaskModule.this.owner.logQueryCache
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName()
    commands.model3.TaskModule.this.rVariables
    commands.model3.TaskModule.this.rVariables[..]
    commands.model3.TaskModule.this.rVariables[..].getClass().getName()
    commands.model3.TaskModule.this.rVariables.getClass().getName()
    commands.model3.TaskModule.this.rVariableMap
    commands.model3.TaskModule.this.rVariableMap.getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList
    commands.model3.TaskModule.this.externalDependencyList[..]
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
    this.modelOwner
    this.modelOwner.modules
    this.modelOwner.modules[..]
    this.modelOwner.modules[..].getClass().getName()
    this.modelOwner.modules.getClass().getName()
    this.modelOwner.moduleMap
    this.modelOwner.moduleMap.getClass().getName()
    this.modelOwner.inputVariables
    this.modelOwner.inputVariables[..]
    this.modelOwner.inputVariables[..].getClass().getName()
    this.modelOwner.inputVariables.getClass().getName()
    this.modelOwner.variableOwnerResolver
    this.modelOwner.variableOwnerResolver.getClass().getName()
    this.modelOwner.queryCache
    this.modelOwner.queryCache.getClass().getName()
    this.modelOwner.logQueryCache
    this.modelOwner.logQueryCache.getClass().getName()
    this.cache
    arg1
    arg1[..]
    arg1[..].getClass().getName()
    arg1.getClass().getName()
    orig(commands.model3.TaskModule.this)
    orig(commands.model3.TaskModule.STATENAME)
    orig(commands.model3.TaskModule.STATENAME.toString)
    orig(commands.model3.TaskModule.LIFTEDRFNAME)
    orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    orig(commands.model3.TaskModule.BINDINGNAME)
    orig(commands.model3.TaskModule.BINDINGNAME.toString)
    orig(commands.model3.TaskModule.this.stateVariable)
    orig(commands.model3.TaskModule.this.stateVariable.name)
    orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.parameters)
    orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFVariable)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.groundedRFVariable)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFValues)
    orig(commands.model3.TaskModule.this.liftedRFValues[..])
    orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    orig(commands.model3.TaskModule.this.domain)
    orig(commands.model3.TaskModule.this.domain.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses)
    orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClassMap)
    orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes)
    orig(commands.model3.TaskModule.this.domain.attributes[..])
    orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributeMap)
    orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions)
    orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    orig(commands.model3.TaskModule.this.domain.debugCode)
    orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    orig(commands.model3.TaskModule.this.name)
    orig(commands.model3.TaskModule.this.name.toString)
    orig(commands.model3.TaskModule.this.owner)
    orig(commands.model3.TaskModule.this.owner.modules)
    orig(commands.model3.TaskModule.this.owner.modules[..])
    orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.moduleMap)
    orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables)
    orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.queryCache)
    orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.logQueryCache)
    orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables)
    orig(commands.model3.TaskModule.this.rVariables[..])
    orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariableMap)
    orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList)
    orig(commands.model3.TaskModule.this.externalDependencyList[..])
    orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    orig(arg1)
    orig(arg1[..])
    orig(arg1[..].getClass().getName())
    orig(arg1.getClass().getName())
    size(this.stateVal.s.objectInstances[..])
    size(this.stateVal.s.objectInstances[..])-1
    size(this.stateVal.s.hiddenObjectInstances[..])
    size(this.stateVal.s.hiddenObjectInstances[..])-1
    size(this.stateVal.owner.dependencies[..])
    size(this.stateVal.owner.dependencies[..])-1
    size(this.liftedRFVal.conditions[..])
    size(this.liftedRFVal.conditions[..])-1
    size(this.liftedRFVal.owner.dependencies[..])
    size(this.liftedRFVal.owner.dependencies[..])-1
    size(this.rfVals[..])
    size(this.rfVals[..])-1
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFValues[..])
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..])
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1
    size(commands.model3.TaskModule.this.domain.attributes[..])
    size(commands.model3.TaskModule.this.domain.attributes[..])-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..])
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1
    size(commands.model3.TaskModule.this.owner.modules[..])
    size(commands.model3.TaskModule.this.owner.modules[..])-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..])
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1
    size(commands.model3.TaskModule.this.rVariables[..])
    size(commands.model3.TaskModule.this.rVariables[..])-1
    size(commands.model3.TaskModule.this.externalDependencyList[..])
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1
    size(this.modelOwner.modules[..])
    size(this.modelOwner.modules[..])-1
    size(this.modelOwner.inputVariables[..])
    size(this.modelOwner.inputVariables[..])-1
    size(arg1[..])
    size(arg1[..])-1
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.rVariables[..]))
    orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    orig(size(arg1[..]))
    orig(size(arg1[..]))-1
End of diagnostics for newEnterExitRel(commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER, commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT)
missing variables in newEnterExitRel:
  parent = commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER
  child = commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@46710006
parent varinfos missing from parent_to_child_map:
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.stateVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.groundedRFVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.liftedRFValues[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.objectClasses[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.attributes[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.domain.propFunctions[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.domain.debugCode-1]
   arg1[commands.model3.TaskModule.this.domain.debugCode]
   arg1[commands.model3.TaskModule.this.domain.debugCode-1]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.modules[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.owner.inputVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.rVariables[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   commands.model3.TaskModule.this.externalDependencyList[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize]
   arg1[commands.model3.TaskModule.this.maxBindingConstraintsComponentSize-1]
rel.parent_to_child_map:
    commands.model3.TaskModule.this => orig(commands.model3.TaskModule.this)
    commands.model3.TaskModule.STATENAME => orig(commands.model3.TaskModule.STATENAME)
    commands.model3.TaskModule.STATENAME.toString => orig(commands.model3.TaskModule.STATENAME.toString)
    commands.model3.TaskModule.LIFTEDRFNAME => orig(commands.model3.TaskModule.LIFTEDRFNAME)
    commands.model3.TaskModule.LIFTEDRFNAME.toString => orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    commands.model3.TaskModule.GROUNDEDRFNAME => orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    commands.model3.TaskModule.GROUNDEDRFNAME.toString => orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    commands.model3.TaskModule.BINDINGNAME => orig(commands.model3.TaskModule.BINDINGNAME)
    commands.model3.TaskModule.BINDINGNAME.toString => orig(commands.model3.TaskModule.BINDINGNAME.toString)
    commands.model3.TaskModule.this.stateVariable => orig(commands.model3.TaskModule.this.stateVariable)
    commands.model3.TaskModule.this.stateVariable.name => orig(commands.model3.TaskModule.this.stateVariable.name)
    commands.model3.TaskModule.this.stateVariable.name.toString => orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    commands.model3.TaskModule.this.stateVariable.moduleOwner => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies => orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    commands.model3.TaskModule.this.stateVariable.dependencies[..] => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.parameters => orig(commands.model3.TaskModule.this.stateVariable.parameters)
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.stateVariable.isInput => orig(commands.model3.TaskModule.this.stateVariable.isInput)
    commands.model3.TaskModule.this.liftedRFVariable => orig(commands.model3.TaskModule.this.liftedRFVariable)
    commands.model3.TaskModule.this.liftedRFVariable.name => orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    commands.model3.TaskModule.this.liftedRFVariable.name.toString => orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.parameters => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.liftedRFVariable.isInput => orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    commands.model3.TaskModule.this.groundedRFVariable => orig(commands.model3.TaskModule.this.groundedRFVariable)
    commands.model3.TaskModule.this.groundedRFVariable.name => orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    commands.model3.TaskModule.this.groundedRFVariable.name.toString => orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..] => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.parameters => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.groundedRFVariable.isInput => orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    commands.model3.TaskModule.this.bindingConstraintVariable => orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    commands.model3.TaskModule.this.bindingConstraintVariable.name => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString => orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..] => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() => orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput => orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    commands.model3.TaskModule.this.liftedRFValues => orig(commands.model3.TaskModule.this.liftedRFValues)
    commands.model3.TaskModule.this.liftedRFValues[..] => orig(commands.model3.TaskModule.this.liftedRFValues[..])
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName() => orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    commands.model3.TaskModule.this.domain => orig(commands.model3.TaskModule.this.domain)
    commands.model3.TaskModule.this.domain.getClass().getName() => orig(commands.model3.TaskModule.this.domain.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses => orig(commands.model3.TaskModule.this.domain.objectClasses)
    commands.model3.TaskModule.this.domain.objectClasses[..] => orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    commands.model3.TaskModule.this.domain.objectClassMap => orig(commands.model3.TaskModule.this.domain.objectClassMap)
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    commands.model3.TaskModule.this.domain.attributes => orig(commands.model3.TaskModule.this.domain.attributes)
    commands.model3.TaskModule.this.domain.attributes[..] => orig(commands.model3.TaskModule.this.domain.attributes[..])
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    commands.model3.TaskModule.this.domain.attributes.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    commands.model3.TaskModule.this.domain.attributeMap => orig(commands.model3.TaskModule.this.domain.attributeMap)
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions => orig(commands.model3.TaskModule.this.domain.propFunctions)
    commands.model3.TaskModule.this.domain.propFunctions[..] => orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    commands.model3.TaskModule.this.domain.propFunctionMap => orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() => orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain => orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    commands.model3.TaskModule.this.domain.debugCode => orig(commands.model3.TaskModule.this.domain.debugCode)
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs => orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize => orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    commands.model3.TaskModule.this.name => orig(commands.model3.TaskModule.this.name)
    commands.model3.TaskModule.this.name.toString => orig(commands.model3.TaskModule.this.name.toString)
    commands.model3.TaskModule.this.owner => orig(commands.model3.TaskModule.this.owner)
    commands.model3.TaskModule.this.owner.modules => orig(commands.model3.TaskModule.this.owner.modules)
    commands.model3.TaskModule.this.owner.modules[..] => orig(commands.model3.TaskModule.this.owner.modules[..])
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    commands.model3.TaskModule.this.owner.modules.getClass().getName() => orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    commands.model3.TaskModule.this.owner.moduleMap => orig(commands.model3.TaskModule.this.owner.moduleMap)
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() => orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables => orig(commands.model3.TaskModule.this.owner.inputVariables)
    commands.model3.TaskModule.this.owner.inputVariables[..] => orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() => orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    commands.model3.TaskModule.this.owner.variableOwnerResolver => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() => orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    commands.model3.TaskModule.this.owner.queryCache => orig(commands.model3.TaskModule.this.owner.queryCache)
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    commands.model3.TaskModule.this.owner.logQueryCache => orig(commands.model3.TaskModule.this.owner.logQueryCache)
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() => orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    commands.model3.TaskModule.this.rVariables => orig(commands.model3.TaskModule.this.rVariables)
    commands.model3.TaskModule.this.rVariables[..] => orig(commands.model3.TaskModule.this.rVariables[..])
    commands.model3.TaskModule.this.rVariables[..].getClass().getName() => orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    commands.model3.TaskModule.this.rVariables.getClass().getName() => orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    commands.model3.TaskModule.this.rVariableMap => orig(commands.model3.TaskModule.this.rVariableMap)
    commands.model3.TaskModule.this.rVariableMap.getClass().getName() => orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList => orig(commands.model3.TaskModule.this.externalDependencyList)
    commands.model3.TaskModule.this.externalDependencyList[..] => orig(commands.model3.TaskModule.this.externalDependencyList[..])
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName() => orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    arg1 => orig(arg1)
    arg1[..] => orig(arg1[..])
    arg1[..].getClass().getName() => orig(arg1[..].getClass().getName())
    arg1.getClass().getName() => orig(arg1.getClass().getName())
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]) => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1 => orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    size(commands.model3.TaskModule.this.liftedRFValues[..]) => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1 => orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..]) => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1 => orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    size(commands.model3.TaskModule.this.domain.attributes[..]) => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    size(commands.model3.TaskModule.this.domain.attributes[..])-1 => orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..]) => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1 => orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    size(commands.model3.TaskModule.this.owner.modules[..]) => orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    size(commands.model3.TaskModule.this.owner.modules[..])-1 => orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..]) => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1 => orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    size(commands.model3.TaskModule.this.rVariables[..]) => orig(size(commands.model3.TaskModule.this.rVariables[..]))
    size(commands.model3.TaskModule.this.rVariables[..])-1 => orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    size(commands.model3.TaskModule.this.externalDependencyList[..]) => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1 => orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    size(arg1[..]) => orig(size(arg1[..]))
    size(arg1[..])-1 => orig(size(arg1[..]))-1
child.var_infos:
    this
    this.sourceIterator
    this.sourceIterator.getClass().getName()
    commands.model3.TaskModule.this
    commands.model3.TaskModule.STATENAME
    commands.model3.TaskModule.STATENAME.toString
    commands.model3.TaskModule.LIFTEDRFNAME
    commands.model3.TaskModule.LIFTEDRFNAME.toString
    commands.model3.TaskModule.GROUNDEDRFNAME
    commands.model3.TaskModule.GROUNDEDRFNAME.toString
    commands.model3.TaskModule.BINDINGNAME
    commands.model3.TaskModule.BINDINGNAME.toString
    commands.model3.TaskModule.this.stateVariable
    commands.model3.TaskModule.this.stateVariable.name
    commands.model3.TaskModule.this.stateVariable.name.toString
    commands.model3.TaskModule.this.stateVariable.moduleOwner
    commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies
    commands.model3.TaskModule.this.stateVariable.dependencies[..]
    commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.parameters
    commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.stateVariable.isInput
    commands.model3.TaskModule.this.liftedRFVariable
    commands.model3.TaskModule.this.liftedRFVariable.name
    commands.model3.TaskModule.this.liftedRFVariable.name.toString
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
    commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.parameters
    commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.liftedRFVariable.isInput
    commands.model3.TaskModule.this.groundedRFVariable
    commands.model3.TaskModule.this.groundedRFVariable.name
    commands.model3.TaskModule.this.groundedRFVariable.name.toString
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
    commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]
    commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.parameters
    commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.groundedRFVariable.isInput
    commands.model3.TaskModule.this.bindingConstraintVariable
    commands.model3.TaskModule.this.bindingConstraintVariable.name
    commands.model3.TaskModule.this.bindingConstraintVariable.name.toString
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
    commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters
    commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName()
    commands.model3.TaskModule.this.bindingConstraintVariable.isInput
    commands.model3.TaskModule.this.liftedRFValues
    commands.model3.TaskModule.this.liftedRFValues[..]
    commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName()
    commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
    commands.model3.TaskModule.this.domain
    commands.model3.TaskModule.this.domain.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses
    commands.model3.TaskModule.this.domain.objectClasses[..]
    commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName()
    commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
    commands.model3.TaskModule.this.domain.objectClassMap
    commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName()
    commands.model3.TaskModule.this.domain.attributes
    commands.model3.TaskModule.this.domain.attributes[..]
    commands.model3.TaskModule.this.domain.attributes[..].getClass().getName()
    commands.model3.TaskModule.this.domain.attributes.getClass().getName()
    commands.model3.TaskModule.this.domain.attributeMap
    commands.model3.TaskModule.this.domain.attributeMap.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions
    commands.model3.TaskModule.this.domain.propFunctions[..]
    commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
    commands.model3.TaskModule.this.domain.propFunctionMap
    commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName()
    commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain
    commands.model3.TaskModule.this.domain.debugCode
    commands.model3.TaskModule.this.permitInitiallySatisfiedRFs
    commands.model3.TaskModule.this.maxBindingConstraintsComponentSize
    commands.model3.TaskModule.this.name
    commands.model3.TaskModule.this.name.toString
    commands.model3.TaskModule.this.owner
    commands.model3.TaskModule.this.owner.modules
    commands.model3.TaskModule.this.owner.modules[..]
    commands.model3.TaskModule.this.owner.modules[..].getClass().getName()
    commands.model3.TaskModule.this.owner.modules.getClass().getName()
    commands.model3.TaskModule.this.owner.moduleMap
    commands.model3.TaskModule.this.owner.moduleMap.getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables
    commands.model3.TaskModule.this.owner.inputVariables[..]
    commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName()
    commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
    commands.model3.TaskModule.this.owner.variableOwnerResolver
    commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName()
    commands.model3.TaskModule.this.owner.queryCache
    commands.model3.TaskModule.this.owner.queryCache.getClass().getName()
    commands.model3.TaskModule.this.owner.logQueryCache
    commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName()
    commands.model3.TaskModule.this.rVariables
    commands.model3.TaskModule.this.rVariables[..]
    commands.model3.TaskModule.this.rVariables[..].getClass().getName()
    commands.model3.TaskModule.this.rVariables.getClass().getName()
    commands.model3.TaskModule.this.rVariableMap
    commands.model3.TaskModule.this.rVariableMap.getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList
    commands.model3.TaskModule.this.externalDependencyList[..]
    commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName()
    commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
    this.modelOwner
    this.modelOwner.modules
    this.modelOwner.modules[..]
    this.modelOwner.modules[..].getClass().getName()
    this.modelOwner.modules.getClass().getName()
    this.modelOwner.moduleMap
    this.modelOwner.moduleMap.getClass().getName()
    this.modelOwner.inputVariables
    this.modelOwner.inputVariables[..]
    this.modelOwner.inputVariables[..].getClass().getName()
    this.modelOwner.inputVariables.getClass().getName()
    this.modelOwner.variableOwnerResolver
    this.modelOwner.variableOwnerResolver.getClass().getName()
    this.modelOwner.queryCache
    this.modelOwner.queryCache.getClass().getName()
    this.modelOwner.logQueryCache
    this.modelOwner.logQueryCache.getClass().getName()
    this.cache
    arg1
    arg1[..]
    arg1[..].getClass().getName()
    arg1.getClass().getName()
    orig(commands.model3.TaskModule.this)
    orig(commands.model3.TaskModule.STATENAME)
    orig(commands.model3.TaskModule.STATENAME.toString)
    orig(commands.model3.TaskModule.LIFTEDRFNAME)
    orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME)
    orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
    orig(commands.model3.TaskModule.BINDINGNAME)
    orig(commands.model3.TaskModule.BINDINGNAME.toString)
    orig(commands.model3.TaskModule.this.stateVariable)
    orig(commands.model3.TaskModule.this.stateVariable.name)
    orig(commands.model3.TaskModule.this.stateVariable.name.toString)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies)
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.stateVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.parameters)
    orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.stateVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFVariable)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name)
    orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.groundedRFVariable)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name)
    orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
    orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..].getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
    orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
    orig(commands.model3.TaskModule.this.liftedRFValues)
    orig(commands.model3.TaskModule.this.liftedRFValues[..])
    orig(commands.model3.TaskModule.this.liftedRFValues[..].getClass().getName())
    orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
    orig(commands.model3.TaskModule.this.domain)
    orig(commands.model3.TaskModule.this.domain.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses)
    orig(commands.model3.TaskModule.this.domain.objectClasses[..])
    orig(commands.model3.TaskModule.this.domain.objectClasses[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectClassMap)
    orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes)
    orig(commands.model3.TaskModule.this.domain.attributes[..])
    orig(commands.model3.TaskModule.this.domain.attributes[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.attributeMap)
    orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions)
    orig(commands.model3.TaskModule.this.domain.propFunctions[..])
    orig(commands.model3.TaskModule.this.domain.propFunctions[..].getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.propFunctionMap)
    orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
    orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
    orig(commands.model3.TaskModule.this.domain.debugCode)
    orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
    orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
    orig(commands.model3.TaskModule.this.name)
    orig(commands.model3.TaskModule.this.name.toString)
    orig(commands.model3.TaskModule.this.owner)
    orig(commands.model3.TaskModule.this.owner.modules)
    orig(commands.model3.TaskModule.this.owner.modules[..])
    orig(commands.model3.TaskModule.this.owner.modules[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.moduleMap)
    orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables)
    orig(commands.model3.TaskModule.this.owner.inputVariables[..])
    orig(commands.model3.TaskModule.this.owner.inputVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
    orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.queryCache)
    orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.owner.logQueryCache)
    orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables)
    orig(commands.model3.TaskModule.this.rVariables[..])
    orig(commands.model3.TaskModule.this.rVariables[..].getClass().getName())
    orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
    orig(commands.model3.TaskModule.this.rVariableMap)
    orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList)
    orig(commands.model3.TaskModule.this.externalDependencyList[..])
    orig(commands.model3.TaskModule.this.externalDependencyList[..].getClass().getName())
    orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
    orig(arg1)
    orig(arg1[..])
    orig(arg1[..].getClass().getName())
    orig(arg1.getClass().getName())
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])
    size(commands.model3.TaskModule.this.stateVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])
    size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])
    size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..])-1
    size(commands.model3.TaskModule.this.liftedRFValues[..])
    size(commands.model3.TaskModule.this.liftedRFValues[..])-1
    size(commands.model3.TaskModule.this.domain.objectClasses[..])
    size(commands.model3.TaskModule.this.domain.objectClasses[..])-1
    size(commands.model3.TaskModule.this.domain.attributes[..])
    size(commands.model3.TaskModule.this.domain.attributes[..])-1
    size(commands.model3.TaskModule.this.domain.propFunctions[..])
    size(commands.model3.TaskModule.this.domain.propFunctions[..])-1
    size(commands.model3.TaskModule.this.owner.modules[..])
    size(commands.model3.TaskModule.this.owner.modules[..])-1
    size(commands.model3.TaskModule.this.owner.inputVariables[..])
    size(commands.model3.TaskModule.this.owner.inputVariables[..])-1
    size(commands.model3.TaskModule.this.rVariables[..])
    size(commands.model3.TaskModule.this.rVariables[..])-1
    size(commands.model3.TaskModule.this.externalDependencyList[..])
    size(commands.model3.TaskModule.this.externalDependencyList[..])-1
    size(this.modelOwner.modules[..])
    size(this.modelOwner.modules[..])-1
    size(this.modelOwner.inputVariables[..])
    size(this.modelOwner.inputVariables[..])-1
    size(arg1[..])
    size(arg1[..])-1
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.stateVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))
    orig(size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[..]))-1
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))
    orig(size(commands.model3.TaskModule.this.liftedRFValues[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))
    orig(size(commands.model3.TaskModule.this.domain.objectClasses[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))
    orig(size(commands.model3.TaskModule.this.domain.attributes[..]))-1
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))
    orig(size(commands.model3.TaskModule.this.domain.propFunctions[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))
    orig(size(commands.model3.TaskModule.this.owner.modules[..]))-1
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))
    orig(size(commands.model3.TaskModule.this.owner.inputVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.rVariables[..]))
    orig(size(commands.model3.TaskModule.this.rVariables[..]))-1
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))
    orig(size(commands.model3.TaskModule.this.externalDependencyList[..]))-1
    orig(size(arg1[..]))
    orig(size(arg1[..]))-1
End of diagnostics for newEnterExitRel(commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER, commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT)
missing variables in newEnterExitRel:
  parent = domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::ENTER
  child = domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@5c90cba8
parent varinfos missing from parent_to_child_map:
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
rel.parent_to_child_map:
    domain.singleagent.sokoban2.Sokoban2Domain.this => orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    arg1 => orig(arg1)
    arg1.toString => orig(arg1.toString)
    arg2 => orig(arg2)
    arg2.getClass().getName() => orig(arg2.getClass().getName())
    arg2.objectClasses => orig(arg2.objectClasses)
    arg2.objectClasses[..] => orig(arg2.objectClasses[..])
    arg2.objectClasses[..].getClass().getName() => orig(arg2.objectClasses[..].getClass().getName())
    arg2.objectClasses.getClass().getName() => orig(arg2.objectClasses.getClass().getName())
    arg2.objectClassMap => orig(arg2.objectClassMap)
    arg2.objectClassMap.getClass().getName() => orig(arg2.objectClassMap.getClass().getName())
    arg2.attributes => orig(arg2.attributes)
    arg2.attributes[..] => orig(arg2.attributes[..])
    arg2.attributes[..].getClass().getName() => orig(arg2.attributes[..].getClass().getName())
    arg2.attributes.getClass().getName() => orig(arg2.attributes.getClass().getName())
    arg2.attributeMap => orig(arg2.attributeMap)
    arg2.attributeMap.getClass().getName() => orig(arg2.attributeMap.getClass().getName())
    arg2.propFunctions => orig(arg2.propFunctions)
    arg2.propFunctions[..] => orig(arg2.propFunctions[..])
    arg2.propFunctions[..].getClass().getName() => orig(arg2.propFunctions[..].getClass().getName())
    arg2.propFunctions.getClass().getName() => orig(arg2.propFunctions.getClass().getName())
    arg2.propFunctionMap => orig(arg2.propFunctionMap)
    arg2.propFunctionMap.getClass().getName() => orig(arg2.propFunctionMap.getClass().getName())
    arg2.objectIdentifierDependentDomain => orig(arg2.objectIdentifierDependentDomain)
    arg2.debugCode => orig(arg2.debugCode)
    arg3 => orig(arg3)
    arg4 => orig(arg4)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    size(arg2.objectClasses[..]) => orig(size(arg2.objectClasses[..]))
    size(arg2.objectClasses[..])-1 => orig(size(arg2.objectClasses[..]))-1
    size(arg2.attributes[..]) => orig(size(arg2.attributes[..]))
    size(arg2.attributes[..])-1 => orig(size(arg2.attributes[..]))-1
    size(arg2.propFunctions[..]) => orig(size(arg2.propFunctions[..]))
    size(arg2.propFunctions[..])-1 => orig(size(arg2.propFunctions[..]))-1
child.var_infos:
    this
    this.xdelta
    this.ydelta
    domain.singleagent.sokoban2.Sokoban2Domain.this
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs
    this.name
    this.name.toString
    this.domain
    this.domain.getClass().getName()
    this.domain.objectClasses
    this.domain.objectClasses[..]
    this.domain.objectClasses[..].getClass().getName()
    this.domain.objectClasses.getClass().getName()
    this.domain.objectClassMap
    this.domain.objectClassMap.getClass().getName()
    this.domain.attributes
    this.domain.attributes[..]
    this.domain.attributes[..].getClass().getName()
    this.domain.attributes.getClass().getName()
    this.domain.attributeMap
    this.domain.attributeMap.getClass().getName()
    this.domain.propFunctions
    this.domain.propFunctions[..]
    this.domain.propFunctions[..].getClass().getName()
    this.domain.propFunctions.getClass().getName()
    this.domain.propFunctionMap
    this.domain.propFunctionMap.getClass().getName()
    this.domain.objectIdentifierDependentDomain
    this.domain.debugCode
    this.parameterClasses
    this.parameterClasses.getClass().getName()
    this.parameterClasses[..]
    this.parameterClasses[..].getClass().getName()
    this.parameterClasses[..].toString
    this.parameterOrderGroup
    this.parameterOrderGroup.getClass().getName()
    this.parameterOrderGroup[..]
    this.parameterOrderGroup[..].getClass().getName()
    this.parameterOrderGroup[..].toString
    this.actionObservers
    this.actionObservers[..]
    this.actionObservers[..].getClass().getName()
    this.actionObservers.getClass().getName()
    arg1
    arg1.toString
    arg2
    arg2.getClass().getName()
    arg2.objectClasses
    arg2.objectClasses[..]
    arg2.objectClasses[..].getClass().getName()
    arg2.objectClasses.getClass().getName()
    arg2.objectClassMap
    arg2.objectClassMap.getClass().getName()
    arg2.attributes
    arg2.attributes[..]
    arg2.attributes[..].getClass().getName()
    arg2.attributes.getClass().getName()
    arg2.attributeMap
    arg2.attributeMap.getClass().getName()
    arg2.propFunctions
    arg2.propFunctions[..]
    arg2.propFunctions[..].getClass().getName()
    arg2.propFunctions.getClass().getName()
    arg2.propFunctionMap
    arg2.propFunctionMap.getClass().getName()
    arg2.objectIdentifierDependentDomain
    arg2.debugCode
    arg3
    arg4
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    orig(arg1)
    orig(arg1.toString)
    orig(arg2)
    orig(arg2.getClass().getName())
    orig(arg2.objectClasses)
    orig(arg2.objectClasses[..])
    orig(arg2.objectClasses[..].getClass().getName())
    orig(arg2.objectClasses.getClass().getName())
    orig(arg2.objectClassMap)
    orig(arg2.objectClassMap.getClass().getName())
    orig(arg2.attributes)
    orig(arg2.attributes[..])
    orig(arg2.attributes[..].getClass().getName())
    orig(arg2.attributes.getClass().getName())
    orig(arg2.attributeMap)
    orig(arg2.attributeMap.getClass().getName())
    orig(arg2.propFunctions)
    orig(arg2.propFunctions[..])
    orig(arg2.propFunctions[..].getClass().getName())
    orig(arg2.propFunctions.getClass().getName())
    orig(arg2.propFunctionMap)
    orig(arg2.propFunctionMap.getClass().getName())
    orig(arg2.objectIdentifierDependentDomain)
    orig(arg2.debugCode)
    orig(arg3)
    orig(arg4)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1
    size(this.domain.objectClasses[..])
    size(this.domain.objectClasses[..])-1
    size(this.domain.attributes[..])
    size(this.domain.attributes[..])-1
    size(this.domain.propFunctions[..])
    size(this.domain.propFunctions[..])-1
    size(this.parameterClasses[..])
    size(this.parameterClasses[..])-1
    size(this.parameterOrderGroup[..])
    size(this.parameterOrderGroup[..])-1
    size(this.actionObservers[..])
    size(this.actionObservers[..])-1
    size(arg2.objectClasses[..])
    size(arg2.objectClasses[..])-1
    size(arg2.attributes[..])
    size(arg2.attributes[..])-1
    size(arg2.propFunctions[..])
    size(arg2.propFunctions[..])-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    orig(size(arg2.objectClasses[..]))
    orig(size(arg2.objectClasses[..]))-1
    orig(size(arg2.attributes[..]))
    orig(size(arg2.attributes[..]))-1
    orig(size(arg2.propFunctions[..]))
    orig(size(arg2.propFunctions[..]))-1
End of diagnostics for newEnterExitRel(domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::ENTER, domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::EXIT)
missing variables in newEnterExitRel:
  parent = domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::ENTER
  child = domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@a1d0386
parent varinfos missing from parent_to_child_map:
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
rel.parent_to_child_map:
    domain.singleagent.sokoban2.Sokoban2Domain.this => orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    arg1 => orig(arg1)
    arg1.toString => orig(arg1.toString)
    arg2 => orig(arg2)
    arg2.getClass().getName() => orig(arg2.getClass().getName())
    arg2.objectClasses => orig(arg2.objectClasses)
    arg2.objectClasses[..] => orig(arg2.objectClasses[..])
    arg2.objectClasses[..].getClass().getName() => orig(arg2.objectClasses[..].getClass().getName())
    arg2.objectClasses.getClass().getName() => orig(arg2.objectClasses.getClass().getName())
    arg2.objectClassMap => orig(arg2.objectClassMap)
    arg2.objectClassMap.getClass().getName() => orig(arg2.objectClassMap.getClass().getName())
    arg2.attributes => orig(arg2.attributes)
    arg2.attributes[..] => orig(arg2.attributes[..])
    arg2.attributes[..].getClass().getName() => orig(arg2.attributes[..].getClass().getName())
    arg2.attributes.getClass().getName() => orig(arg2.attributes.getClass().getName())
    arg2.attributeMap => orig(arg2.attributeMap)
    arg2.attributeMap.getClass().getName() => orig(arg2.attributeMap.getClass().getName())
    arg2.propFunctions => orig(arg2.propFunctions)
    arg2.propFunctions[..] => orig(arg2.propFunctions[..])
    arg2.propFunctions[..].getClass().getName() => orig(arg2.propFunctions[..].getClass().getName())
    arg2.propFunctions.getClass().getName() => orig(arg2.propFunctions.getClass().getName())
    arg2.propFunctionMap => orig(arg2.propFunctionMap)
    arg2.propFunctionMap.getClass().getName() => orig(arg2.propFunctionMap.getClass().getName())
    arg2.objectIdentifierDependentDomain => orig(arg2.objectIdentifierDependentDomain)
    arg2.debugCode => orig(arg2.debugCode)
    arg3 => orig(arg3)
    arg3.getClass().getName() => orig(arg3.getClass().getName())
    arg3[..] => orig(arg3[..])
    arg3[..].toString => orig(arg3[..].toString)
    arg4 => orig(arg4)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    size(arg2.objectClasses[..]) => orig(size(arg2.objectClasses[..]))
    size(arg2.objectClasses[..])-1 => orig(size(arg2.objectClasses[..]))-1
    size(arg2.attributes[..]) => orig(size(arg2.attributes[..]))
    size(arg2.attributes[..])-1 => orig(size(arg2.attributes[..]))-1
    size(arg2.propFunctions[..]) => orig(size(arg2.propFunctions[..]))
    size(arg2.propFunctions[..])-1 => orig(size(arg2.propFunctions[..]))-1
    size(arg3[..]) => orig(size(arg3[..]))
    size(arg3[..])-1 => orig(size(arg3[..]))-1
child.var_infos:
    this
    this.countBoundary
    domain.singleagent.sokoban2.Sokoban2Domain.this
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs
    this.name
    this.name.toString
    this.domain
    this.domain.getClass().getName()
    this.domain.objectClasses
    this.domain.objectClasses[..]
    this.domain.objectClasses[..].getClass().getName()
    this.domain.objectClasses.getClass().getName()
    this.domain.objectClassMap
    this.domain.objectClassMap.getClass().getName()
    this.domain.attributes
    this.domain.attributes[..]
    this.domain.attributes[..].getClass().getName()
    this.domain.attributes.getClass().getName()
    this.domain.attributeMap
    this.domain.attributeMap.getClass().getName()
    this.domain.propFunctions
    this.domain.propFunctions[..]
    this.domain.propFunctions[..].getClass().getName()
    this.domain.propFunctions.getClass().getName()
    this.domain.propFunctionMap
    this.domain.propFunctionMap.getClass().getName()
    this.domain.objectIdentifierDependentDomain
    this.domain.debugCode
    this.parameterClasses
    this.parameterClasses.getClass().getName()
    this.parameterClasses[..]
    this.parameterClasses[..].getClass().getName()
    this.parameterClasses[..].toString
    this.parameterOrderGroup
    this.parameterOrderGroup.getClass().getName()
    this.parameterOrderGroup[..]
    this.parameterOrderGroup[..].getClass().getName()
    this.parameterOrderGroup[..].toString
    this.pfClass
    this.pfClass.toString
    arg1
    arg1.toString
    arg2
    arg2.getClass().getName()
    arg2.objectClasses
    arg2.objectClasses[..]
    arg2.objectClasses[..].getClass().getName()
    arg2.objectClasses.getClass().getName()
    arg2.objectClassMap
    arg2.objectClassMap.getClass().getName()
    arg2.attributes
    arg2.attributes[..]
    arg2.attributes[..].getClass().getName()
    arg2.attributes.getClass().getName()
    arg2.attributeMap
    arg2.attributeMap.getClass().getName()
    arg2.propFunctions
    arg2.propFunctions[..]
    arg2.propFunctions[..].getClass().getName()
    arg2.propFunctions.getClass().getName()
    arg2.propFunctionMap
    arg2.propFunctionMap.getClass().getName()
    arg2.objectIdentifierDependentDomain
    arg2.debugCode
    arg3
    arg3.getClass().getName()
    arg3[..]
    arg3[..].toString
    arg4
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    orig(arg1)
    orig(arg1.toString)
    orig(arg2)
    orig(arg2.getClass().getName())
    orig(arg2.objectClasses)
    orig(arg2.objectClasses[..])
    orig(arg2.objectClasses[..].getClass().getName())
    orig(arg2.objectClasses.getClass().getName())
    orig(arg2.objectClassMap)
    orig(arg2.objectClassMap.getClass().getName())
    orig(arg2.attributes)
    orig(arg2.attributes[..])
    orig(arg2.attributes[..].getClass().getName())
    orig(arg2.attributes.getClass().getName())
    orig(arg2.attributeMap)
    orig(arg2.attributeMap.getClass().getName())
    orig(arg2.propFunctions)
    orig(arg2.propFunctions[..])
    orig(arg2.propFunctions[..].getClass().getName())
    orig(arg2.propFunctions.getClass().getName())
    orig(arg2.propFunctionMap)
    orig(arg2.propFunctionMap.getClass().getName())
    orig(arg2.objectIdentifierDependentDomain)
    orig(arg2.debugCode)
    orig(arg3)
    orig(arg3.getClass().getName())
    orig(arg3[..])
    orig(arg3[..].toString)
    orig(arg4)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1
    size(this.domain.objectClasses[..])
    size(this.domain.objectClasses[..])-1
    size(this.domain.attributes[..])
    size(this.domain.attributes[..])-1
    size(this.domain.propFunctions[..])
    size(this.domain.propFunctions[..])-1
    size(this.parameterClasses[..])
    size(this.parameterClasses[..])-1
    size(this.parameterOrderGroup[..])
    size(this.parameterOrderGroup[..])-1
    size(arg2.objectClasses[..])
    size(arg2.objectClasses[..])-1
    size(arg2.attributes[..])
    size(arg2.attributes[..])-1
    size(arg2.propFunctions[..])
    size(arg2.propFunctions[..])-1
    size(arg3[..])
    size(arg3[..])-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    orig(size(arg2.objectClasses[..]))
    orig(size(arg2.objectClasses[..]))-1
    orig(size(arg2.attributes[..]))
    orig(size(arg2.attributes[..]))-1
    orig(size(arg2.propFunctions[..]))
    orig(size(arg2.propFunctions[..]))-1
    orig(size(arg3[..]))
    orig(size(arg3[..]))-1
End of diagnostics for newEnterExitRel(domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::ENTER, domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::EXIT)
missing variables in newEnterExitRel:
  parent = domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER
  child = domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@49f29640
parent varinfos missing from parent_to_child_map:
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
rel.parent_to_child_map:
    domain.singleagent.sokoban2.Sokoban2Domain.this => orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    arg1 => orig(arg1)
    arg1.toString => orig(arg1.toString)
    arg2 => orig(arg2)
    arg2.getClass().getName() => orig(arg2.getClass().getName())
    arg2.objectClasses => orig(arg2.objectClasses)
    arg2.objectClasses[..] => orig(arg2.objectClasses[..])
    arg2.objectClasses[..].getClass().getName() => orig(arg2.objectClasses[..].getClass().getName())
    arg2.objectClasses.getClass().getName() => orig(arg2.objectClasses.getClass().getName())
    arg2.objectClassMap => orig(arg2.objectClassMap)
    arg2.objectClassMap.getClass().getName() => orig(arg2.objectClassMap.getClass().getName())
    arg2.attributes => orig(arg2.attributes)
    arg2.attributes[..] => orig(arg2.attributes[..])
    arg2.attributes[..].getClass().getName() => orig(arg2.attributes[..].getClass().getName())
    arg2.attributes.getClass().getName() => orig(arg2.attributes.getClass().getName())
    arg2.attributeMap => orig(arg2.attributeMap)
    arg2.attributeMap.getClass().getName() => orig(arg2.attributeMap.getClass().getName())
    arg2.propFunctions => orig(arg2.propFunctions)
    arg2.propFunctions[..] => orig(arg2.propFunctions[..])
    arg2.propFunctions[..].getClass().getName() => orig(arg2.propFunctions[..].getClass().getName())
    arg2.propFunctions.getClass().getName() => orig(arg2.propFunctions.getClass().getName())
    arg2.propFunctionMap => orig(arg2.propFunctionMap)
    arg2.propFunctionMap.getClass().getName() => orig(arg2.propFunctionMap.getClass().getName())
    arg2.objectIdentifierDependentDomain => orig(arg2.objectIdentifierDependentDomain)
    arg2.debugCode => orig(arg2.debugCode)
    arg3 => orig(arg3)
    arg3.getClass().getName() => orig(arg3.getClass().getName())
    arg3[..] => orig(arg3[..])
    arg3[..].toString => orig(arg3[..].toString)
    arg4 => orig(arg4)
    arg4.toString => orig(arg4.toString)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    size(arg2.objectClasses[..]) => orig(size(arg2.objectClasses[..]))
    size(arg2.objectClasses[..])-1 => orig(size(arg2.objectClasses[..]))-1
    size(arg2.attributes[..]) => orig(size(arg2.attributes[..]))
    size(arg2.attributes[..])-1 => orig(size(arg2.attributes[..]))-1
    size(arg2.propFunctions[..]) => orig(size(arg2.propFunctions[..]))
    size(arg2.propFunctions[..])-1 => orig(size(arg2.propFunctions[..]))-1
    size(arg3[..]) => orig(size(arg3[..]))
    size(arg3[..])-1 => orig(size(arg3[..]))-1
child.var_infos:
    this
    this.colorName
    this.colorName.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs
    this.name
    this.name.toString
    this.domain
    this.domain.getClass().getName()
    this.domain.objectClasses
    this.domain.objectClasses[..]
    this.domain.objectClasses[..].getClass().getName()
    this.domain.objectClasses.getClass().getName()
    this.domain.objectClassMap
    this.domain.objectClassMap.getClass().getName()
    this.domain.attributes
    this.domain.attributes[..]
    this.domain.attributes[..].getClass().getName()
    this.domain.attributes.getClass().getName()
    this.domain.attributeMap
    this.domain.attributeMap.getClass().getName()
    this.domain.propFunctions
    this.domain.propFunctions[..]
    this.domain.propFunctions[..].getClass().getName()
    this.domain.propFunctions.getClass().getName()
    this.domain.propFunctionMap
    this.domain.propFunctionMap.getClass().getName()
    this.domain.objectIdentifierDependentDomain
    this.domain.debugCode
    this.parameterClasses
    this.parameterClasses.getClass().getName()
    this.parameterClasses[..]
    this.parameterClasses[..].getClass().getName()
    this.parameterClasses[..].toString
    this.parameterOrderGroup
    this.parameterOrderGroup.getClass().getName()
    this.parameterOrderGroup[..]
    this.parameterOrderGroup[..].getClass().getName()
    this.parameterOrderGroup[..].toString
    this.pfClass
    this.pfClass.toString
    arg1
    arg1.toString
    arg2
    arg2.getClass().getName()
    arg2.objectClasses
    arg2.objectClasses[..]
    arg2.objectClasses[..].getClass().getName()
    arg2.objectClasses.getClass().getName()
    arg2.objectClassMap
    arg2.objectClassMap.getClass().getName()
    arg2.attributes
    arg2.attributes[..]
    arg2.attributes[..].getClass().getName()
    arg2.attributes.getClass().getName()
    arg2.attributeMap
    arg2.attributeMap.getClass().getName()
    arg2.propFunctions
    arg2.propFunctions[..]
    arg2.propFunctions[..].getClass().getName()
    arg2.propFunctions.getClass().getName()
    arg2.propFunctionMap
    arg2.propFunctionMap.getClass().getName()
    arg2.objectIdentifierDependentDomain
    arg2.debugCode
    arg3
    arg3.getClass().getName()
    arg3[..]
    arg3[..].toString
    arg4
    arg4.toString
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    orig(arg1)
    orig(arg1.toString)
    orig(arg2)
    orig(arg2.getClass().getName())
    orig(arg2.objectClasses)
    orig(arg2.objectClasses[..])
    orig(arg2.objectClasses[..].getClass().getName())
    orig(arg2.objectClasses.getClass().getName())
    orig(arg2.objectClassMap)
    orig(arg2.objectClassMap.getClass().getName())
    orig(arg2.attributes)
    orig(arg2.attributes[..])
    orig(arg2.attributes[..].getClass().getName())
    orig(arg2.attributes.getClass().getName())
    orig(arg2.attributeMap)
    orig(arg2.attributeMap.getClass().getName())
    orig(arg2.propFunctions)
    orig(arg2.propFunctions[..])
    orig(arg2.propFunctions[..].getClass().getName())
    orig(arg2.propFunctions.getClass().getName())
    orig(arg2.propFunctionMap)
    orig(arg2.propFunctionMap.getClass().getName())
    orig(arg2.objectIdentifierDependentDomain)
    orig(arg2.debugCode)
    orig(arg3)
    orig(arg3.getClass().getName())
    orig(arg3[..])
    orig(arg3[..].toString)
    orig(arg4)
    orig(arg4.toString)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1
    size(this.domain.objectClasses[..])
    size(this.domain.objectClasses[..])-1
    size(this.domain.attributes[..])
    size(this.domain.attributes[..])-1
    size(this.domain.propFunctions[..])
    size(this.domain.propFunctions[..])-1
    size(this.parameterClasses[..])
    size(this.parameterClasses[..])-1
    size(this.parameterOrderGroup[..])
    size(this.parameterOrderGroup[..])-1
    size(arg2.objectClasses[..])
    size(arg2.objectClasses[..])-1
    size(arg2.attributes[..])
    size(arg2.attributes[..])-1
    size(arg2.propFunctions[..])
    size(arg2.propFunctions[..])-1
    size(arg3[..])
    size(arg3[..])-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    orig(size(arg2.objectClasses[..]))
    orig(size(arg2.objectClasses[..]))-1
    orig(size(arg2.attributes[..]))
    orig(size(arg2.attributes[..]))-1
    orig(size(arg2.propFunctions[..]))
    orig(size(arg2.propFunctions[..]))-1
    orig(size(arg3[..]))
    orig(size(arg3[..]))-1
End of diagnostics for newEnterExitRel(domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER, domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT)
missing variables in newEnterExitRel:
  parent = domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER
  child = domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@17f31ff6
parent varinfos missing from parent_to_child_map:
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.COLORS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxX-1]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.objectClasses[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.attributes[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg2.propFunctions[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY]
   arg3[domain.singleagent.sokoban2.Sokoban2Domain.this.maxY-1]
rel.parent_to_child_map:
    domain.singleagent.sokoban2.Sokoban2Domain.this => orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..] => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName() => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString => orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs => orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    arg1 => orig(arg1)
    arg1.toString => orig(arg1.toString)
    arg2 => orig(arg2)
    arg2.getClass().getName() => orig(arg2.getClass().getName())
    arg2.objectClasses => orig(arg2.objectClasses)
    arg2.objectClasses[..] => orig(arg2.objectClasses[..])
    arg2.objectClasses[..].getClass().getName() => orig(arg2.objectClasses[..].getClass().getName())
    arg2.objectClasses.getClass().getName() => orig(arg2.objectClasses.getClass().getName())
    arg2.objectClassMap => orig(arg2.objectClassMap)
    arg2.objectClassMap.getClass().getName() => orig(arg2.objectClassMap.getClass().getName())
    arg2.attributes => orig(arg2.attributes)
    arg2.attributes[..] => orig(arg2.attributes[..])
    arg2.attributes[..].getClass().getName() => orig(arg2.attributes[..].getClass().getName())
    arg2.attributes.getClass().getName() => orig(arg2.attributes.getClass().getName())
    arg2.attributeMap => orig(arg2.attributeMap)
    arg2.attributeMap.getClass().getName() => orig(arg2.attributeMap.getClass().getName())
    arg2.propFunctions => orig(arg2.propFunctions)
    arg2.propFunctions[..] => orig(arg2.propFunctions[..])
    arg2.propFunctions[..].getClass().getName() => orig(arg2.propFunctions[..].getClass().getName())
    arg2.propFunctions.getClass().getName() => orig(arg2.propFunctions.getClass().getName())
    arg2.propFunctionMap => orig(arg2.propFunctionMap)
    arg2.propFunctionMap.getClass().getName() => orig(arg2.propFunctionMap.getClass().getName())
    arg2.objectIdentifierDependentDomain => orig(arg2.objectIdentifierDependentDomain)
    arg2.debugCode => orig(arg2.debugCode)
    arg3 => orig(arg3)
    arg3.getClass().getName() => orig(arg3.getClass().getName())
    arg3[..] => orig(arg3[..])
    arg3[..].toString => orig(arg3[..].toString)
    arg4 => orig(arg4)
    arg4.toString => orig(arg4.toString)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]) => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1 => orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    size(arg2.objectClasses[..]) => orig(size(arg2.objectClasses[..]))
    size(arg2.objectClasses[..])-1 => orig(size(arg2.objectClasses[..]))-1
    size(arg2.attributes[..]) => orig(size(arg2.attributes[..]))
    size(arg2.attributes[..])-1 => orig(size(arg2.attributes[..]))-1
    size(arg2.propFunctions[..]) => orig(size(arg2.propFunctions[..]))
    size(arg2.propFunctions[..])-1 => orig(size(arg2.propFunctions[..]))-1
    size(arg3[..]) => orig(size(arg3[..]))
    size(arg3[..])-1 => orig(size(arg3[..]))-1
child.var_infos:
    this
    this.shapeName
    this.shapeName.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX
    domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY
    domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP
    domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM
    domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT
    domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR
    domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE
    domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL
    domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR
    domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST
    domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName()
    domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
    domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxX
    domain.singleagent.sokoban2.Sokoban2Domain.this.maxY
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute
    domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction
    domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs
    this.name
    this.name.toString
    this.domain
    this.domain.getClass().getName()
    this.domain.objectClasses
    this.domain.objectClasses[..]
    this.domain.objectClasses[..].getClass().getName()
    this.domain.objectClasses.getClass().getName()
    this.domain.objectClassMap
    this.domain.objectClassMap.getClass().getName()
    this.domain.attributes
    this.domain.attributes[..]
    this.domain.attributes[..].getClass().getName()
    this.domain.attributes.getClass().getName()
    this.domain.attributeMap
    this.domain.attributeMap.getClass().getName()
    this.domain.propFunctions
    this.domain.propFunctions[..]
    this.domain.propFunctions[..].getClass().getName()
    this.domain.propFunctions.getClass().getName()
    this.domain.propFunctionMap
    this.domain.propFunctionMap.getClass().getName()
    this.domain.objectIdentifierDependentDomain
    this.domain.debugCode
    this.parameterClasses
    this.parameterClasses.getClass().getName()
    this.parameterClasses[..]
    this.parameterClasses[..].getClass().getName()
    this.parameterClasses[..].toString
    this.parameterOrderGroup
    this.parameterOrderGroup.getClass().getName()
    this.parameterOrderGroup[..]
    this.parameterOrderGroup[..].getClass().getName()
    this.parameterOrderGroup[..].toString
    this.pfClass
    this.pfClass.toString
    arg1
    arg1.toString
    arg2
    arg2.getClass().getName()
    arg2.objectClasses
    arg2.objectClasses[..]
    arg2.objectClasses[..].getClass().getName()
    arg2.objectClasses.getClass().getName()
    arg2.objectClassMap
    arg2.objectClassMap.getClass().getName()
    arg2.attributes
    arg2.attributes[..]
    arg2.attributes[..].getClass().getName()
    arg2.attributes.getClass().getName()
    arg2.attributeMap
    arg2.attributeMap.getClass().getName()
    arg2.propFunctions
    arg2.propFunctions[..]
    arg2.propFunctions[..].getClass().getName()
    arg2.propFunctions.getClass().getName()
    arg2.propFunctionMap
    arg2.propFunctionMap.getClass().getName()
    arg2.objectIdentifierDependentDomain
    arg2.debugCode
    arg3
    arg3.getClass().getName()
    arg3[..]
    arg3[..].toString
    arg4
    arg4.toString
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].getClass().getName())
    orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..].toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
    orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
    orig(arg1)
    orig(arg1.toString)
    orig(arg2)
    orig(arg2.getClass().getName())
    orig(arg2.objectClasses)
    orig(arg2.objectClasses[..])
    orig(arg2.objectClasses[..].getClass().getName())
    orig(arg2.objectClasses.getClass().getName())
    orig(arg2.objectClassMap)
    orig(arg2.objectClassMap.getClass().getName())
    orig(arg2.attributes)
    orig(arg2.attributes[..])
    orig(arg2.attributes[..].getClass().getName())
    orig(arg2.attributes.getClass().getName())
    orig(arg2.attributeMap)
    orig(arg2.attributeMap.getClass().getName())
    orig(arg2.propFunctions)
    orig(arg2.propFunctions[..])
    orig(arg2.propFunctions[..].getClass().getName())
    orig(arg2.propFunctions.getClass().getName())
    orig(arg2.propFunctionMap)
    orig(arg2.propFunctionMap.getClass().getName())
    orig(arg2.objectIdentifierDependentDomain)
    orig(arg2.debugCode)
    orig(arg3)
    orig(arg3.getClass().getName())
    orig(arg3[..])
    orig(arg3[..].toString)
    orig(arg4)
    orig(arg4.toString)
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..])-1
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])
    size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..])-1
    size(this.domain.objectClasses[..])
    size(this.domain.objectClasses[..])-1
    size(this.domain.attributes[..])
    size(this.domain.attributes[..])-1
    size(this.domain.propFunctions[..])
    size(this.domain.propFunctions[..])-1
    size(this.parameterClasses[..])
    size(this.parameterClasses[..])-1
    size(this.parameterOrderGroup[..])
    size(this.parameterOrderGroup[..])-1
    size(arg2.objectClasses[..])
    size(arg2.objectClasses[..])-1
    size(arg2.attributes[..])
    size(arg2.attributes[..])-1
    size(arg2.propFunctions[..])
    size(arg2.propFunctions[..])-1
    size(arg3[..])
    size(arg3[..])-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[..]))-1
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))
    orig(size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[..]))-1
    orig(size(arg2.objectClasses[..]))
    orig(size(arg2.objectClasses[..]))-1
    orig(size(arg2.attributes[..]))
    orig(size(arg2.attributes[..]))-1
    orig(size(arg2.propFunctions[..]))
    orig(size(arg2.propFunctions[..]))-1
    orig(size(arg3[..]))
    orig(size(arg3[..]))-1
End of diagnostics for newEnterExitRel(domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER, domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT)
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple:::OBJECT
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == this.s.objectInstances.getClass().getName()
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == this.s.hiddenObjectInstances.getClass().getName()
this.s.objectMap.getClass().getName() == this.s.objectIndexByTrueClass.getClass().getName()
this has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[] contains no nulls and has only one value, of length 7
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[].getClass().getName() elements == java.lang.String.class
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == java.util.ArrayList.class
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName() == java.util.HashSet.class
this.s has only one value
this.s.objectInstances has only one value
this.s.objectInstances[] contains no nulls and has only one value, of length 7
this.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.s.hiddenObjectInstances has only one value
this.s.hiddenObjectInstances[] == []
this.s.hiddenObjectInstances[].getClass().getName() == []
this.s.objectMap has only one value
this.s.objectMap.getClass().getName() == java.util.HashMap.class
this.s.objectIndexByTrueClass has only one value
this.hashCode one of { -1098037574, 0 }
size(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[]) == 7
size(this.s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.NameDependentStateHashTuple(burlap.behavior.statehashing.NameDependentStateHashFactory, burlap.oomdp.core.State):::ENTER
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
burlap.behavior.statehashing.NameDependentStateHashFactory.this has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[] contains no nulls and has only one value, of length 7
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[].getClass().getName() elements == java.lang.String.class
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == java.util.ArrayList.class
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames has only one value
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName() == java.util.HashSet.class
s has only one value
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[]) == 7
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.NameDependentStateHashTuple(burlap.behavior.statehashing.NameDependentStateHashFactory, burlap.oomdp.core.State):::EXIT
burlap.behavior.statehashing.NameDependentStateHashFactory.this == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[] == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[])
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName() == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName())
this.s == orig(s)
this.s.objectInstances == s.objectInstances
this.s.objectInstances.getClass().getName() == s.objectInstances.getClass().getName()
this.s.hiddenObjectInstances == s.hiddenObjectInstances
this.s.hiddenObjectInstances.getClass().getName() == s.objectInstances.getClass().getName()
this.s.objectMap == s.objectMap
this.s.objectMap.getClass().getName() == s.objectMap.getClass().getName()
this.s.objectIndexByTrueClass == s.objectIndexByTrueClass
this.s.objectIndexByTrueClass.getClass().getName() == s.objectMap.getClass().getName()
s.objectInstances == orig(s.objectInstances)
s.objectInstances[] == orig(s.objectInstances[])
s.objectInstances.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectInstances.getClass().getName() == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName())
s.objectInstances.getClass().getName() == orig(s.objectInstances.getClass().getName())
s.objectInstances.getClass().getName() == orig(s.hiddenObjectInstances.getClass().getName())
s.hiddenObjectInstances == orig(s.hiddenObjectInstances)
s.hiddenObjectInstances[] == orig(s.hiddenObjectInstances[])
s.objectMap == orig(s.objectMap)
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == orig(s.objectMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectIndexByTrueClass.getClass().getName())
s.objectIndexByTrueClass == orig(s.objectIndexByTrueClass)
this.hashCode == 0
this.needToRecomputeHashCode == true
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.objectInstances.getClass().getName() == java.util.ArrayList.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.computeHashCode():::ENTER
this.hashCode == 0
this.needToRecomputeHashCode == true
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.computeHashCode():::EXIT
burlap.behavior.statehashing.NameDependentStateHashFactory.this == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[] == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder[])
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName())
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == orig(this.s.objectInstances.getClass().getName())
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNameOrder.getClass().getName() == orig(this.s.hiddenObjectInstances.getClass().getName())
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames)
burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName() == orig(burlap.behavior.statehashing.NameDependentStateHashFactory.this.objectNames.getClass().getName())
this.s == orig(this.s)
this.s.objectInstances == orig(this.s.objectInstances)
this.s.objectInstances[] == orig(this.s.objectInstances[])
this.s.hiddenObjectInstances == orig(this.s.hiddenObjectInstances)
this.s.hiddenObjectInstances[] == orig(this.s.hiddenObjectInstances[])
this.s.objectMap == orig(this.s.objectMap)
this.s.objectMap.getClass().getName() == orig(this.s.objectMap.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.s.objectIndexByTrueClass.getClass().getName())
this.s.objectIndexByTrueClass == orig(this.s.objectIndexByTrueClass)
this.hashCode == -1098037574
this.needToRecomputeHashCode == false
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory:::OBJECT
this has only one value
this.objectNameOrder has only one value
this.objectNameOrder[].getClass().getName() elements == java.lang.String.class
this.objectNameOrder[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.objectNameOrder.getClass().getName() == java.util.ArrayList.class
this.objectNames has only one value
this.objectNames.getClass().getName() == java.util.HashSet.class
size(this.objectNameOrder[]) one of { 0, 7 }
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory.NameDependentStateHashFactory():::EXIT
this.objectNameOrder[] == []
this.objectNameOrder[].getClass().getName() == []
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory.addNewObjectNames(burlap.oomdp.core.State):::ENTER
this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
this.objectNameOrder[] == []
this.objectNameOrder[].getClass().getName() == []
s has only one value
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory.addNewObjectNames(burlap.oomdp.core.State):::EXIT
this.objectNameOrder == orig(this.objectNameOrder)
this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == orig(this.objectNameOrder.getClass().getName())
this.objectNameOrder.getClass().getName() == orig(s.objectInstances.getClass().getName())
this.objectNameOrder.getClass().getName() == orig(s.hiddenObjectInstances.getClass().getName())
this.objectNames == orig(this.objectNames)
this.objectNames.getClass().getName() == orig(this.objectNames.getClass().getName())
s.objectInstances == orig(s.objectInstances)
s.objectInstances[] == orig(s.objectInstances[])
s.hiddenObjectInstances == orig(s.hiddenObjectInstances)
s.hiddenObjectInstances[] == orig(s.hiddenObjectInstances[])
s.objectMap == orig(s.objectMap)
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == orig(s.objectMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectIndexByTrueClass.getClass().getName())
s.objectIndexByTrueClass == orig(s.objectIndexByTrueClass)
this.objectNameOrder[] contains no nulls and has only one value, of length 7
this.objectNameOrder[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(this.objectNameOrder[]) == 7
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory.hashState(burlap.oomdp.core.State):::ENTER
this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
this.objectNameOrder[] == []
this.objectNameOrder[].getClass().getName() == []
s has only one value
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.NameDependentStateHashFactory.hashState(burlap.oomdp.core.State):::EXIT
this.objectNameOrder == orig(this.objectNameOrder)
this.objectNameOrder.getClass().getName() == s.objectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == return.s.objectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == return.s.hiddenObjectInstances.getClass().getName()
this.objectNameOrder.getClass().getName() == orig(this.objectNameOrder.getClass().getName())
this.objectNameOrder.getClass().getName() == orig(s.objectInstances.getClass().getName())
this.objectNameOrder.getClass().getName() == orig(s.hiddenObjectInstances.getClass().getName())
this.objectNames == orig(this.objectNames)
this.objectNames.getClass().getName() == orig(this.objectNames.getClass().getName())
s.objectInstances == return.s.objectInstances
s.objectInstances == orig(s.objectInstances)
s.objectInstances[] == orig(s.objectInstances[])
s.hiddenObjectInstances == return.s.hiddenObjectInstances
s.hiddenObjectInstances == orig(s.hiddenObjectInstances)
s.hiddenObjectInstances[] == orig(s.hiddenObjectInstances[])
s.objectMap == return.s.objectMap
s.objectMap == orig(s.objectMap)
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == return.s.objectMap.getClass().getName()
s.objectMap.getClass().getName() == return.s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == orig(s.objectMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectIndexByTrueClass.getClass().getName())
s.objectIndexByTrueClass == return.s.objectIndexByTrueClass
s.objectIndexByTrueClass == orig(s.objectIndexByTrueClass)
return.s == orig(s)
this.objectNameOrder[] contains no nulls and has only one value, of length 7
this.objectNameOrder[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
return has only one value
return.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.class
return.s has only one value
return.s.objectInstances[] contains no nulls and has only one value, of length 7
return.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
return.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.s.hiddenObjectInstances[] == []
return.s.hiddenObjectInstances[].getClass().getName() == []
return.hashCode == 0
return.needToRecomputeHashCode == true
size(this.objectNameOrder[]) == 7
size(s.objectInstances[]) == 7
size(return.s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.StateHashTuple:::OBJECT
this.s.objectInstances.getClass().getName() == this.s.hiddenObjectInstances.getClass().getName()
this.s.objectMap.getClass().getName() == this.s.objectIndexByTrueClass.getClass().getName()
this has only one value
this.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.class
this.s has only one value
this.s != null
this.s.objectInstances has only one value
this.s.objectInstances != null
this.s.objectInstances[] contains no nulls and has only one value, of length 7
this.s.objectInstances[] elements != null
this.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.s.objectInstances.getClass().getName() == java.util.ArrayList.class
this.s.hiddenObjectInstances has only one value
this.s.hiddenObjectInstances != null
this.s.hiddenObjectInstances[] == []
this.s.hiddenObjectInstances[].getClass().getName() == []
this.s.objectMap has only one value
this.s.objectMap != null
this.s.objectMap.getClass().getName() == java.util.HashMap.class
this.s.objectIndexByTrueClass has only one value
this.s.objectIndexByTrueClass != null
this.hashCode one of { -1098037574, 0 }
size(this.s.objectInstances[]) == 7
this.getClass().getName() != this.s.objectInstances.getClass().getName()
this.getClass().getName() != this.s.objectMap.getClass().getName()
this.s.objectInstances.getClass().getName() != this.s.objectMap.getClass().getName()
===========================================================================
burlap.behavior.statehashing.StateHashTuple.StateHashTuple(burlap.oomdp.core.State):::ENTER
s.objectInstances.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s has only one value
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.objectInstances.getClass().getName() == java.util.ArrayList.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.StateHashTuple.StateHashTuple(burlap.oomdp.core.State):::EXIT
this.s == orig(s)
this.s.objectInstances == s.objectInstances
this.s.objectInstances.getClass().getName() == s.objectInstances.getClass().getName()
this.s.hiddenObjectInstances == s.hiddenObjectInstances
this.s.hiddenObjectInstances.getClass().getName() == s.objectInstances.getClass().getName()
this.s.objectMap == s.objectMap
this.s.objectMap.getClass().getName() == s.objectMap.getClass().getName()
this.s.objectIndexByTrueClass == s.objectIndexByTrueClass
this.s.objectIndexByTrueClass.getClass().getName() == s.objectMap.getClass().getName()
s.objectInstances == orig(s.objectInstances)
s.objectInstances[] == orig(s.objectInstances[])
s.objectInstances.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectInstances.getClass().getName() == orig(s.objectInstances.getClass().getName())
s.objectInstances.getClass().getName() == orig(s.hiddenObjectInstances.getClass().getName())
s.hiddenObjectInstances == orig(s.hiddenObjectInstances)
s.hiddenObjectInstances[] == orig(s.hiddenObjectInstances[])
s.objectMap == orig(s.objectMap)
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == orig(s.objectMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectIndexByTrueClass.getClass().getName())
s.objectIndexByTrueClass == orig(s.objectIndexByTrueClass)
this.hashCode == 0
this.needToRecomputeHashCode == true
s.objectInstances has only one value
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.objectInstances.getClass().getName() == java.util.ArrayList.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
size(s.objectInstances[]) == 7
===========================================================================
burlap.behavior.statehashing.StateHashTuple.hashCode():::ENTER
===========================================================================
burlap.behavior.statehashing.StateHashTuple.hashCode():::EXIT
this.s == orig(this.s)
this.s.objectInstances == orig(this.s.objectInstances)
this.s.objectInstances[] == orig(this.s.objectInstances[])
this.s.objectInstances.getClass().getName() == orig(this.s.objectInstances.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.s.hiddenObjectInstances.getClass().getName())
this.s.hiddenObjectInstances == orig(this.s.hiddenObjectInstances)
this.s.hiddenObjectInstances[] == orig(this.s.hiddenObjectInstances[])
this.s.objectMap == orig(this.s.objectMap)
this.s.objectMap.getClass().getName() == orig(this.s.objectMap.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.s.objectIndexByTrueClass.getClass().getName())
this.s.objectIndexByTrueClass == orig(this.s.objectIndexByTrueClass)
this.hashCode == -1098037574
this.needToRecomputeHashCode == false
return == -1098037574
this.s.objectInstances.getClass().getName() != orig(this.getClass().getName())
this.s.objectMap.getClass().getName() != orig(this.getClass().getName())
this.hashCode <= orig(this.hashCode)
===========================================================================
burlap.oomdp.core.Attribute$AttributeType:::OBJECT
===========================================================================
burlap.oomdp.core.Attribute$AttributeType.AttributeType(java.lang.String, int, int):::ENTER
===========================================================================
burlap.oomdp.core.Attribute$AttributeType.AttributeType(java.lang.String, int, int):::EXIT
this.intVal == orig(i)
$hidden$1.toString == orig($hidden$1.toString)
===========================================================================
burlap.oomdp.core.Attribute:::OBJECT
this.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.discValuesHash.getClass().getName()
this.domain.attributeMap.getClass().getName() == this.discValuesHash.getClass().getName()
this.domain.propFunctionMap.getClass().getName() == this.discValuesHash.getClass().getName()
this.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == 1
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == 2
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == 3
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == 4
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == 5
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == 6
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == 7
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == 8
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == 9
this.type.intVal == 0
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses[].getClass().getName() one of { [], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctions[].getClass().getName() one of { [], [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape] }
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.lowerLim == 0.0
this.discValuesHash != null
this.discValuesHash.getClass().getName() == java.util.HashMap.class
this.discValues != null
this.discValues[] elements != null
this.discValues[].getClass().getName() elements == java.lang.String.class
this.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(this.domain.objectClasses[]) one of { 0, 4 }
size(this.domain.objectClasses[])-1 != 0
size(this.domain.propFunctions[]) one of { 0, 18 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.discValues.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.discValuesHash.getClass().getName()
this.domain.getClass().getName() != this.discValues.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.discValuesHash.getClass().getName()
this.discValuesHash.getClass().getName() != this.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.Attribute.Attribute(burlap.oomdp.core.Domain, java.lang.String, burlap.oomdp.core.Attribute$AttributeType):::ENTER
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
type == burlap.oomdp.core.Attribute$AttributeType.DISC
domain has only one value
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses[] == []
domain.objectClasses[].getClass().getName() == []
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == 1
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == 2
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == 3
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == 4
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == 5
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == 6
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == 7
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == 8
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == 9
type.intVal == 0
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
domain.getClass().getName() != domain.objectClasses.getClass().getName()
domain.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
domain.objectClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.objectClasses.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
domain.objectClassMap.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
===========================================================================
burlap.oomdp.core.Attribute.Attribute(burlap.oomdp.core.Domain, java.lang.String, burlap.oomdp.core.Attribute$AttributeType):::EXIT
this.name == orig(name)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DISC.intVal)
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INT.intVal)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal)
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.STRING.intVal)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal)
this.type.intVal == type.intVal
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClasses.getClass().getName() == this.discValues.getClass().getName()
this.domain.objectClassMap == domain.objectClassMap
this.domain.attributes == domain.attributes
this.domain.attributes.getClass().getName() == this.discValues.getClass().getName()
this.domain.attributeMap == domain.attributeMap
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctions.getClass().getName() == this.discValues.getClass().getName()
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.discValuesHash.getClass().getName() == domain.objectClassMap.getClass().getName()
this.discValuesHash.getClass().getName() == domain.attributeMap.getClass().getName()
this.discValuesHash.getClass().getName() == domain.propFunctionMap.getClass().getName()
this.discValuesHash.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(domain.attributeMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
this.discValues.getClass().getName() == domain.objectClasses.getClass().getName()
this.discValues.getClass().getName() == domain.attributes.getClass().getName()
this.discValues.getClass().getName() == domain.propFunctions.getClass().getName()
this.discValues.getClass().getName() == orig(domain.objectClasses.getClass().getName())
this.discValues.getClass().getName() == orig(domain.attributes.getClass().getName())
this.discValues.getClass().getName() == orig(domain.propFunctions.getClass().getName())
domain.objectClasses == orig(domain.objectClasses)
domain.objectClasses[] == orig(domain.objectClasses[])
domain.objectClassMap == orig(domain.objectClassMap)
domain.attributes == orig(domain.attributes)
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctions[] == orig(domain.propFunctions[])
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
name.toString == orig(name.toString)
type.intVal == orig(type.intVal)
size(domain.attributes[])-1 == orig(size(domain.attributes[]))
this.domain.objectClasses[] == []
this.domain.objectClasses[].getClass().getName() == []
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.upperLim == 0.0
this.discValues[] == []
this.discValues[].getClass().getName() == []
this.discValues.getClass().getName() == java.util.ArrayList.class
domain.objectClasses has only one value
domain.objectClasses[] == []
domain.objectClasses[].getClass().getName() == []
domain.objectClassMap has only one value
domain.attributes has only one value
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
type.intVal == 0
===========================================================================
burlap.oomdp.core.Attribute.setDiscValues(java.lang.String[]):::ENTER
this.domain.objectClasses.getClass().getName() == this.discValues.getClass().getName()
this.domain.attributes.getClass().getName() == this.discValues.getClass().getName()
this.domain.propFunctions.getClass().getName() == this.discValues.getClass().getName()
this.name.toString one of { "color", "shape" }
this.domain.objectClasses[] == []
this.domain.objectClasses[].getClass().getName() == []
this.domain.attributes[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.upperLim == 0.0
this.discValues[] == []
this.discValues[].getClass().getName() == []
this.discValues.getClass().getName() == java.util.ArrayList.class
vals.getClass().getName() == java.lang.String[].class
vals[].toString one of { [blue, green, magenta, red, yellow], [chair, bag, backpack, basket] }
size(this.domain.attributes[]) one of { 7, 8 }
size(vals[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.Attribute.setDiscValues(java.lang.String[]):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DISC.intVal)
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INT.intVal)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal)
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.STRING.intVal)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal)
this.type.intVal == orig(this.type.intVal)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.discValues.getClass().getName())
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.lowerLim == orig(this.lowerLim)
this.discValuesHash.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.discValuesHash.getClass().getName())
this.hidden == orig(this.hidden)
vals[] == orig(vals[])
this.name.toString one of { "color", "shape" }
this.domain.objectClasses[] == []
this.domain.objectClasses[].getClass().getName() == []
this.domain.attributes[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.upperLim one of { 3.0, 4.0 }
this.discValues[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.discValues.getClass().getName() == java.util.Arrays$ArrayList.class
vals[].toString one of { [blue, green, magenta, red, yellow], [chair, bag, backpack, basket] }
size(this.domain.attributes[]) one of { 7, 8 }
size(this.discValues[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.Attribute.setDiscValuesForRange(int, int, int):::ENTER
this.domain.objectClasses.getClass().getName() == this.discValues.getClass().getName()
this.domain.attributes.getClass().getName() == this.discValues.getClass().getName()
this.domain.propFunctions.getClass().getName() == this.discValues.getClass().getName()
this.domain.objectClasses[] == []
this.domain.objectClasses[].getClass().getName() == []
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.upperLim == 0.0
this.discValues[] == []
this.discValues[].getClass().getName() == []
this.discValues.getClass().getName() == java.util.ArrayList.class
low == 0
high == 24
step == 1
===========================================================================
burlap.oomdp.core.Attribute.setDiscValuesForRange(int, int, int):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DISC.intVal)
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INT.intVal)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal)
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.STRING.intVal)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal)
this.type.intVal == orig(this.type.intVal)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == this.discValues.getClass().getName()
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributes.getClass().getName() == this.discValues.getClass().getName()
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctions.getClass().getName() == this.discValues.getClass().getName()
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.lowerLim == orig(this.lowerLim)
this.discValuesHash.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.discValuesHash.getClass().getName())
this.discValues.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.discValues.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.discValues.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.discValues.getClass().getName() == orig(this.discValues.getClass().getName())
this.hidden == orig(this.hidden)
this.domain.objectClasses[] == []
this.domain.objectClasses[].getClass().getName() == []
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.upperLim == 24.0
this.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.discValues.getClass().getName() == java.util.ArrayList.class
size(this.discValues[]) == 25
===========================================================================
burlap.oomdp.core.Attribute.valueConstructor():::ENTER
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.upperLim one of { 3.0, 4.0, 24.0 }
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.domain.propFunctions[]) == 18
size(this.discValues[]) one of { 4, 5, 25 }
===========================================================================
burlap.oomdp.core.Attribute.valueConstructor():::EXIT366
===========================================================================
burlap.oomdp.core.Attribute.valueConstructor():::EXIT
this.name == return.attribute.name
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == return.attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
burlap.oomdp.core.Attribute$AttributeType.DISC.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DISC.intVal)
burlap.oomdp.core.Attribute$AttributeType.REAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND.intVal)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL.intVal)
burlap.oomdp.core.Attribute$AttributeType.INT.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INT.intVal)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN.intVal)
burlap.oomdp.core.Attribute$AttributeType.STRING.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.STRING.intVal)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY.intVal)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY.intVal)
this.type.intVal == orig(this.type.intVal)
this.domain == return.attribute.domain
this.domain == orig(this.domain)
this.domain.getClass().getName() == return.attribute.domain.getClass().getName()
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.lowerLim == return.attribute.lowerLim
this.lowerLim == orig(this.lowerLim)
this.upperLim == return.attribute.upperLim
this.upperLim == orig(this.upperLim)
this.discValuesHash == return.attribute.discValuesHash
this.discValuesHash == orig(this.discValuesHash)
this.discValuesHash.getClass().getName() == return.attribute.discValuesHash.getClass().getName()
this.discValuesHash.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.discValuesHash.getClass().getName() == orig(this.discValuesHash.getClass().getName())
this.discValues == return.attribute.discValues
this.discValues == orig(this.discValues)
this.discValues[] == orig(this.discValues[])
this.discValues.getClass().getName() == return.attribute.discValues.getClass().getName()
this.discValues.getClass().getName() == orig(this.discValues.getClass().getName())
this.hidden == return.attribute.hidden
this.hidden == orig(this.hidden)
return.attribute == orig(this)
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.upperLim one of { 3.0, 4.0, 24.0 }
return != null
return.getClass().getName() == burlap.oomdp.core.values.DiscreteValue.class
return.attribute != null
return.attribute.discValues[] elements != null
return.attribute.discValues[].getClass().getName() elements == java.lang.String.class
return.isObservable == true
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.domain.propFunctions[]) == 18
size(this.discValues[]) one of { 4, 5, 25 }
size(return.attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != return.getClass().getName()
this.domain.getClass().getName() != return.getClass().getName()
this.domain.objectClasses.getClass().getName() != return.getClass().getName()
this.discValuesHash.getClass().getName() != return.getClass().getName()
this.discValues.getClass().getName() != return.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain:::OBJECT
this.objectClasses.getClass().getName() == this.attributes.getClass().getName()
this.objectClasses.getClass().getName() == this.propFunctions.getClass().getName()
this.objectClassMap.getClass().getName() == this.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == this.propFunctionMap.getClass().getName()
this has only one value
this.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.objectClasses has only one value
this.objectClasses != null
this.objectClasses[] elements != null
this.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.objectClasses.getClass().getName() == java.util.ArrayList.class
this.objectClassMap has only one value
this.objectClassMap != null
this.objectClassMap.getClass().getName() == java.util.HashMap.class
this.attributes has only one value
this.attributes != null
this.attributes[] elements != null
this.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.attributeMap has only one value
this.attributeMap != null
this.propFunctions has only one value
this.propFunctions != null
this.propFunctions[] elements != null
this.propFunctionMap has only one value
this.propFunctionMap != null
this.objectIdentifierDependentDomain == false
this.debugCode == 111
this.getClass().getName() != this.objectClasses.getClass().getName()
this.getClass().getName() != this.objectClassMap.getClass().getName()
this.objectClasses.getClass().getName() != this.objectClassMap.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.Domain():::EXIT
this.objectClasses[] == []
this.objectClasses[].getClass().getName() == []
this.attributes[] == []
this.attributes[].getClass().getName() == []
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
===========================================================================
burlap.oomdp.core.Domain.addAttribute(burlap.oomdp.core.Attribute):::ENTER
this == att.domain
this.getClass().getName() == att.domain.getClass().getName()
this.objectClasses == att.domain.objectClasses
this.objectClasses.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == att.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == att.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == att.discValues.getClass().getName()
this.objectClassMap == att.domain.objectClassMap
this.objectClassMap.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.discValuesHash.getClass().getName()
this.attributes == att.domain.attributes
this.attributeMap == att.domain.attributeMap
this.propFunctions == att.domain.propFunctions
this.propFunctionMap == att.domain.propFunctionMap
this.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.debugCode == att.domain.debugCode
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.objectClasses[] == []
this.objectClasses[].getClass().getName() == []
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain has only one value
att.domain.objectClasses[] == []
att.domain.objectClasses[].getClass().getName() == []
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim == 0.0
att.discValues[] == []
att.discValues[].getClass().getName() == []
att.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
this.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClasses.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClassMap.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.addAttribute(burlap.oomdp.core.Attribute):::EXIT
this.objectClasses == att.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses == orig(att.domain.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == att.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == att.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == att.discValues.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClasses.getClass().getName() == orig(att.domain.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(att.domain.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(att.domain.propFunctions.getClass().getName())
this.objectClasses.getClass().getName() == orig(att.discValues.getClass().getName())
this.objectClassMap == att.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap == orig(att.domain.objectClassMap)
this.objectClassMap.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == att.discValuesHash.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(att.domain.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(att.domain.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(att.domain.propFunctionMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(att.discValuesHash.getClass().getName())
this.attributes == att.domain.attributes
this.attributes == orig(this.attributes)
this.attributes == orig(att.domain.attributes)
this.attributeMap == att.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.attributeMap == orig(att.domain.attributeMap)
this.propFunctions == att.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions == orig(att.domain.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == att.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.propFunctionMap == orig(att.domain.propFunctionMap)
this.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.objectIdentifierDependentDomain == orig(att.domain.objectIdentifierDependentDomain)
this.debugCode == att.domain.debugCode
this.debugCode == orig(this.debugCode)
this.debugCode == orig(att.domain.debugCode)
att.name == orig(att.name)
att.name.toString == orig(att.name.toString)
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(att.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
att.type.intVal == orig(att.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
att.domain == orig(this)
att.domain == orig(att.domain)
att.domain.getClass().getName() == orig(this.getClass().getName())
att.domain.getClass().getName() == orig(att.domain.getClass().getName())
att.domain.objectClasses[] == orig(att.domain.objectClasses[])
att.domain.propFunctions[] == orig(att.domain.propFunctions[])
att.lowerLim == orig(att.lowerLim)
att.upperLim == orig(att.upperLim)
att.discValuesHash == orig(att.discValuesHash)
att.discValues == orig(att.discValues)
att.discValues[] == orig(att.discValues[])
att.hidden == orig(att.hidden)
size(this.attributes[])-1 == orig(size(this.attributes[]))
size(att.domain.attributes[])-1 == orig(size(att.domain.attributes[]))
this.objectClasses[] == []
this.objectClasses[].getClass().getName() == []
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain has only one value
att.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
att.domain.objectClasses[] == []
att.domain.objectClasses[].getClass().getName() == []
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim == 0.0
att.discValues[] == []
att.discValues[].getClass().getName() == []
att.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
this.objectClasses.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClasses.getClass().getName() != att.domain.getClass().getName()
this.objectClassMap.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClassMap.getClass().getName() != att.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != att.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.addObjectClass(burlap.oomdp.core.ObjectClass):::ENTER
this == oc.domain
this.getClass().getName() == oc.domain.getClass().getName()
this.objectClasses == oc.domain.objectClasses
this.objectClasses.getClass().getName() == oc.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == oc.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == oc.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == oc.attributeList.getClass().getName()
this.objectClasses.getClass().getName() == oc.observableAttributeIndices.getClass().getName()
this.objectClassMap == oc.domain.objectClassMap
this.objectClassMap.getClass().getName() == oc.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.attributeIndex.getClass().getName()
this.objectClassMap.getClass().getName() == oc.attributeMap.getClass().getName()
this.attributes == oc.domain.attributes
this.attributeMap == oc.domain.attributeMap
this.propFunctions == oc.domain.propFunctions
this.propFunctionMap == oc.domain.propFunctionMap
this.objectIdentifierDependentDomain == oc.domain.objectIdentifierDependentDomain
this.debugCode == oc.domain.debugCode
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
oc.domain has only one value
oc.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
oc.domain.attributes[] contains no nulls and has only one value, of length 8
oc.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
oc.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
oc.domain.propFunctions[] == []
oc.domain.propFunctions[].getClass().getName() == []
oc.attributeList[] == []
oc.attributeList[].getClass().getName() == []
oc.observableAttributeIndices[] == []
oc.observableAttributeIndices[].getClass().getName() == []
oc.hidden == false
size(this.attributes[]) == 8
size(oc.domain.attributes[]) == 8
===========================================================================
burlap.oomdp.core.Domain.addObjectClass(burlap.oomdp.core.ObjectClass):::EXIT
this.objectClasses == oc.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses == orig(oc.domain.objectClasses)
this.objectClasses.getClass().getName() == oc.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == oc.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == oc.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == oc.attributeList.getClass().getName()
this.objectClasses.getClass().getName() == oc.observableAttributeIndices.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClasses.getClass().getName() == orig(oc.domain.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(oc.domain.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(oc.domain.propFunctions.getClass().getName())
this.objectClasses.getClass().getName() == orig(oc.attributeList.getClass().getName())
this.objectClasses.getClass().getName() == orig(oc.observableAttributeIndices.getClass().getName())
this.objectClassMap == oc.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap == orig(oc.domain.objectClassMap)
this.objectClassMap.getClass().getName() == oc.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == oc.attributeIndex.getClass().getName()
this.objectClassMap.getClass().getName() == oc.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(oc.domain.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(oc.domain.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(oc.domain.propFunctionMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(oc.attributeIndex.getClass().getName())
this.objectClassMap.getClass().getName() == orig(oc.attributeMap.getClass().getName())
this.attributes == oc.domain.attributes
this.attributes == orig(this.attributes)
this.attributes == orig(oc.domain.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == oc.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.attributeMap == orig(oc.domain.attributeMap)
this.propFunctions == oc.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions == orig(oc.domain.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == oc.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.propFunctionMap == orig(oc.domain.propFunctionMap)
this.objectIdentifierDependentDomain == oc.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.objectIdentifierDependentDomain == orig(oc.domain.objectIdentifierDependentDomain)
this.debugCode == oc.domain.debugCode
this.debugCode == orig(this.debugCode)
this.debugCode == orig(oc.domain.debugCode)
oc.name == orig(oc.name)
oc.name.toString == orig(oc.name.toString)
oc.domain == orig(this)
oc.domain == orig(oc.domain)
oc.domain.getClass().getName() == orig(this.getClass().getName())
oc.domain.getClass().getName() == orig(oc.domain.getClass().getName())
oc.domain.attributes[] == orig(oc.domain.attributes[])
oc.domain.propFunctions[] == orig(oc.domain.propFunctions[])
oc.attributeIndex == orig(oc.attributeIndex)
oc.attributeMap == orig(oc.attributeMap)
oc.attributeList == orig(oc.attributeList)
oc.attributeList[] == orig(oc.attributeList[])
oc.observableAttributeIndices == orig(oc.observableAttributeIndices)
oc.observableAttributeIndices[] == orig(oc.observableAttributeIndices[])
oc.hidden == orig(oc.hidden)
size(this.objectClasses[])-1 == orig(size(this.objectClasses[]))
size(oc.domain.objectClasses[])-1 == orig(size(oc.domain.objectClasses[]))
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
oc.domain has only one value
oc.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
oc.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
oc.domain.attributes[] contains no nulls and has only one value, of length 8
oc.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
oc.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
oc.domain.propFunctions[] == []
oc.domain.propFunctions[].getClass().getName() == []
oc.attributeList[] == []
oc.attributeList[].getClass().getName() == []
oc.observableAttributeIndices[] == []
oc.observableAttributeIndices[].getClass().getName() == []
oc.hidden == false
size(this.attributes[]) == 8
size(oc.domain.attributes[]) == 8
===========================================================================
burlap.oomdp.core.Domain.addPropositionalFunction(burlap.oomdp.core.PropositionalFunction):::ENTER
this == prop.domain
this.getClass().getName() == prop.domain.getClass().getName()
this.objectClasses == prop.domain.objectClasses
this.objectClasses.getClass().getName() == prop.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == prop.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == prop.domain.propFunctions.getClass().getName()
this.objectClassMap == prop.domain.objectClassMap
this.objectClassMap.getClass().getName() == prop.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == prop.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == prop.domain.propFunctionMap.getClass().getName()
this.attributes == prop.domain.attributes
this.attributeMap == prop.domain.attributeMap
this.propFunctions == prop.domain.propFunctions
this.propFunctionMap == prop.domain.propFunctionMap
this.objectIdentifierDependentDomain == prop.domain.objectIdentifierDependentDomain
this.debugCode == prop.domain.debugCode
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
prop != null
prop.name != null
prop.domain has only one value
prop.domain != null
prop.domain.objectClasses[] contains no nulls and has only one value, of length 4
prop.domain.objectClasses[] elements != null
prop.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
prop.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
prop.domain.attributes[] contains no nulls and has only one value, of length 8
prop.domain.attributes[] elements != null
prop.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
prop.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
prop.domain.propFunctions[] elements != null
prop.parameterClasses == null
prop.parameterOrderGroup == null
prop.pfClass == null
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(prop.domain.objectClasses[]) == 4
size(prop.domain.attributes[]) == 8
this.getClass().getName() != prop.getClass().getName()
this.objectClasses.getClass().getName() != prop.getClass().getName()
this.objectClassMap.getClass().getName() != prop.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.addPropositionalFunction(burlap.oomdp.core.PropositionalFunction):::EXIT
this.objectClasses == prop.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses == orig(prop.domain.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == prop.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == prop.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == prop.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClasses.getClass().getName() == orig(prop.domain.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(prop.domain.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(prop.domain.propFunctions.getClass().getName())
this.objectClassMap == prop.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap == orig(prop.domain.objectClassMap)
this.objectClassMap.getClass().getName() == prop.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == prop.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == prop.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(prop.domain.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(prop.domain.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(prop.domain.propFunctionMap.getClass().getName())
this.attributes == prop.domain.attributes
this.attributes == orig(this.attributes)
this.attributes == orig(prop.domain.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == prop.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.attributeMap == orig(prop.domain.attributeMap)
this.propFunctions == prop.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions == orig(prop.domain.propFunctions)
this.propFunctionMap == prop.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.propFunctionMap == orig(prop.domain.propFunctionMap)
this.objectIdentifierDependentDomain == prop.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.objectIdentifierDependentDomain == orig(prop.domain.objectIdentifierDependentDomain)
this.debugCode == prop.domain.debugCode
this.debugCode == orig(this.debugCode)
this.debugCode == orig(prop.domain.debugCode)
prop.name == orig(prop.name)
prop.name.toString == orig(prop.name.toString)
prop.domain == orig(this)
prop.domain == orig(prop.domain)
prop.domain.getClass().getName() == orig(this.getClass().getName())
prop.domain.getClass().getName() == orig(prop.domain.getClass().getName())
prop.domain.objectClasses[] == orig(prop.domain.objectClasses[])
prop.domain.attributes[] == orig(prop.domain.attributes[])
prop.parameterClasses == orig(prop.parameterClasses)
prop.parameterOrderGroup == orig(prop.parameterOrderGroup)
prop.pfClass == orig(prop.pfClass)
size(this.propFunctions[])-1 == orig(size(this.propFunctions[]))
size(prop.domain.propFunctions[])-1 == orig(size(prop.domain.propFunctions[]))
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
prop.name != null
prop.domain has only one value
prop.domain != null
prop.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
prop.domain.objectClasses[] contains no nulls and has only one value, of length 4
prop.domain.objectClasses[] elements != null
prop.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
prop.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
prop.domain.attributes[] contains no nulls and has only one value, of length 8
prop.domain.attributes[] elements != null
prop.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
prop.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
prop.domain.propFunctions[] elements != null
prop.parameterClasses == null
prop.parameterOrderGroup == null
prop.pfClass == null
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(prop.domain.objectClasses[]) == 4
size(prop.domain.attributes[]) == 8
this.objectClasses.getClass().getName() != prop.domain.getClass().getName()
this.objectClasses.getClass().getName() != orig(prop.getClass().getName())
this.objectClassMap.getClass().getName() != prop.domain.getClass().getName()
this.objectClassMap.getClass().getName() != orig(prop.getClass().getName())
prop.domain.getClass().getName() != orig(prop.getClass().getName())
===========================================================================
burlap.oomdp.core.Domain.getAttribute(java.lang.String):::ENTER
this.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
size(this.objectClasses[]) one of { 3, 4 }
size(this.attributes[]) == 8
===========================================================================
burlap.oomdp.core.Domain.getAttribute(java.lang.String):::EXIT
this.objectClasses == return.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == return.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == return.discValues.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClassMap == return.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap.getClass().getName() == return.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.discValuesHash.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.attributes == return.domain.attributes
this.attributes == orig(this.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == return.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.propFunctions == return.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == return.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.objectIdentifierDependentDomain == return.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.debugCode == return.domain.debugCode
this.debugCode == orig(this.debugCode)
name.toString == orig(name.toString)
return.name == orig(name)
return.type == burlap.oomdp.core.Attribute$AttributeType.DISC
return.domain == orig(this)
return.domain.getClass().getName() == orig(this.getClass().getName())
this.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
return.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
return.domain has only one value
return.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
return.domain.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
return.domain.attributes[] contains no nulls and has only one value, of length 8
return.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.domain.propFunctions[] == []
return.domain.propFunctions[].getClass().getName() == []
return.lowerLim == 0.0
return.upperLim == 24.0
return.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
return.discValues[].getClass().getName() elements == java.lang.String.class
return.hidden == false
size(this.objectClasses[]) one of { 3, 4 }
size(this.attributes[]) == 8
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(return.domain.objectClasses[]) one of { 3, 4 }
size(return.domain.attributes[]) == 8
size(return.discValues[]) == 25
this.objectClasses.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClasses.getClass().getName() != return.domain.getClass().getName()
this.objectClassMap.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.objectClassMap.getClass().getName() != return.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != return.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.getObjectClass(java.lang.String):::ENTER
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
===========================================================================
burlap.oomdp.core.Domain.getObjectClass(java.lang.String):::EXIT
this.objectClasses == return.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == return.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == return.attributeList.getClass().getName()
this.objectClasses.getClass().getName() == return.observableAttributeIndices.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClassMap == return.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap.getClass().getName() == return.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.attributeIndex.getClass().getName()
this.objectClassMap.getClass().getName() == return.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.attributes == return.domain.attributes
this.attributes == orig(this.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == return.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.propFunctions == return.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == return.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.objectIdentifierDependentDomain == return.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.debugCode == return.domain.debugCode
this.debugCode == orig(this.debugCode)
name.toString == orig(name.toString)
return.name == orig(name)
return.domain == orig(this)
return.domain.getClass().getName() == orig(this.getClass().getName())
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.domain has only one value
return.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.domain.objectClasses[] contains no nulls and has only one value, of length 4
return.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
return.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
return.domain.attributes[] contains no nulls and has only one value, of length 8
return.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.domain.propFunctions[] contains no nulls and has only one value, of length 18
return.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
return.hidden == false
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
size(return.domain.objectClasses[]) == 4
size(return.domain.attributes[]) == 8
size(return.domain.propFunctions[]) == 18
size(return.attributeList[]) one of { 2, 4, 5 }
size(return.observableAttributeIndices[]) one of { 2, 4, 5 }
this.objectClasses.getClass().getName() != return.domain.getClass().getName()
this.objectClassMap.getClass().getName() != return.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.Domain.getPropFunction(java.lang.String):::ENTER
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
name.toString one of { "agentInRoom", "blockInRoom" }
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
===========================================================================
burlap.oomdp.core.Domain.getPropFunction(java.lang.String):::EXIT
this.objectClasses == return.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == return.domain.objectClasses.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.attributes.getClass().getName()
this.objectClasses.getClass().getName() == return.domain.propFunctions.getClass().getName()
this.objectClasses.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.attributes.getClass().getName())
this.objectClasses.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClassMap == return.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap.getClass().getName() == return.domain.objectClassMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.attributeMap.getClass().getName()
this.objectClassMap.getClass().getName() == return.domain.propFunctionMap.getClass().getName()
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.attributes == return.domain.attributes
this.attributes == orig(this.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == return.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.propFunctions == return.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == return.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.objectIdentifierDependentDomain == return.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.debugCode == return.domain.debugCode
this.debugCode == orig(this.debugCode)
name.toString == orig(name.toString)
return.name == return.pfClass
return.name == orig(name)
return.domain == orig(this)
return.domain.getClass().getName() == orig(this.getClass().getName())
return.parameterClasses.getClass().getName() == return.parameterOrderGroup.getClass().getName()
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
name.toString one of { "agentInRoom", "blockInRoom" }
return.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
return.name.toString one of { "agentInRoom", "blockInRoom" }
return.domain has only one value
return.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.domain.objectClasses[] contains no nulls and has only one value, of length 4
return.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
return.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
return.domain.attributes[] contains no nulls and has only one value, of length 8
return.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.domain.propFunctions[] contains no nulls and has only one value, of length 18
return.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.parameterClasses.getClass().getName() == java.lang.String[].class
return.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
return.parameterClasses[].getClass().getName() elements == java.lang.String.class
return.parameterClasses[].toString elements one of { "agent", "block", "room" }
return.parameterClasses[].toString one of { [agent, room], [block, room] }
return.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
return.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
return.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
return.pfClass.toString one of { "agentInRoom", "blockInRoom" }
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
size(return.domain.objectClasses[]) == 4
size(return.domain.attributes[]) == 8
size(return.domain.propFunctions[]) == 18
size(return.parameterClasses[]) == 2
size(return.parameterOrderGroup[]) == 2
===========================================================================
burlap.oomdp.core.Domain.getPropFunctions():::ENTER
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
===========================================================================
burlap.oomdp.core.Domain.getPropFunctions():::EXIT
this.objectClasses == orig(this.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClasses.getClass().getName() == return.getClass().getName()
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.objectClassMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.attributes == orig(this.attributes)
this.attributes[] == orig(this.attributes[])
this.attributes.getClass().getName() == return.getClass().getName()
this.attributeMap == orig(this.attributeMap)
this.propFunctions == orig(this.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctions.getClass().getName() == return.getClass().getName()
this.propFunctionMap == orig(this.propFunctionMap)
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.debugCode == orig(this.debugCode)
return.getClass().getName() == orig(this.objectClasses.getClass().getName())
return.getClass().getName() == orig(this.attributes.getClass().getName())
return.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.propFunctions[] contains no nulls and has only one value, of length 18
this.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return[] contains no nulls and has only one value, of length 18
return[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.getClass().getName() == java.util.ArrayList.class
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(this.propFunctions[]) == 18
size(return[]) == 18
===========================================================================
burlap.oomdp.core.GroundedProp:::OBJECT
this.pf != null
this.pf.name != null
this.pf.domain has only one value
this.pf.domain != null
this.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.pf.domain.objectClasses has only one value
this.pf.domain.objectClasses != null
this.pf.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.pf.domain.objectClasses[] elements != null
this.pf.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.pf.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.pf.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.pf.domain.objectClassMap has only one value
this.pf.domain.objectClassMap != null
this.pf.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.pf.domain.attributes has only one value
this.pf.domain.attributes != null
this.pf.domain.attributes[] contains no nulls and has only one value, of length 8
this.pf.domain.attributes[] elements != null
this.pf.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.pf.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.pf.domain.attributes.getClass().getName() == java.util.ArrayList.class
this.pf.domain.attributeMap has only one value
this.pf.domain.attributeMap != null
this.pf.domain.attributeMap.getClass().getName() == java.util.HashMap.class
this.pf.domain.propFunctions has only one value
this.pf.domain.propFunctions != null
this.pf.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.pf.domain.propFunctions[] elements != null
this.pf.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.pf.domain.propFunctions.getClass().getName() == java.util.ArrayList.class
this.pf.domain.propFunctionMap has only one value
this.pf.domain.propFunctionMap != null
this.pf.domain.propFunctionMap.getClass().getName() == java.util.HashMap.class
this.pf.domain.objectIdentifierDependentDomain == false
this.pf.domain.debugCode == 111
this.pf.parameterClasses != null
this.pf.parameterClasses.getClass().getName() == java.lang.String[].class
this.pf.parameterClasses[] elements != null
this.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
this.pf.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.pf.parameterOrderGroup != null
this.pf.parameterOrderGroup.getClass().getName() == java.lang.String[].class
this.pf.parameterOrderGroup[] elements != null
this.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
this.pf.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.pf.pfClass != null
this.params != null
this.params.getClass().getName() == java.lang.String[].class
this.params[] elements != null
this.params[].getClass().getName() elements == java.lang.String.class
this.params[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
size(this.pf.domain.objectClasses[]) == 4
size(this.pf.domain.attributes[]) == 8
size(this.pf.domain.propFunctions[]) == 18
size(this.pf.parameterClasses[]) one of { 1, 2 }
size(this.pf.parameterOrderGroup[]) one of { 1, 2 }
size(this.params[]) one of { 1, 2 }
===========================================================================
burlap.oomdp.core.GroundedProp.GroundedProp(burlap.oomdp.core.PropositionalFunction, java.lang.String[]):::ENTER
p.name == p.pfClass
p.domain.objectClasses.getClass().getName() == p.domain.attributes.getClass().getName()
p.domain.objectClasses.getClass().getName() == p.domain.propFunctions.getClass().getName()
p.domain.objectClassMap.getClass().getName() == p.domain.attributeMap.getClass().getName()
p.domain.objectClassMap.getClass().getName() == p.domain.propFunctionMap.getClass().getName()
p.parameterClasses.getClass().getName() == par.getClass().getName()
p.parameterOrderGroup.getClass().getName() == par.getClass().getName()
p != null
p.name != null
p.domain has only one value
p.domain != null
p.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
p.domain.objectClasses has only one value
p.domain.objectClasses != null
p.domain.objectClasses[] contains no nulls and has only one value, of length 4
p.domain.objectClasses[] elements != null
p.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
p.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
p.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
p.domain.objectClassMap has only one value
p.domain.objectClassMap != null
p.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
p.domain.attributes has only one value
p.domain.attributes != null
p.domain.attributes[] contains no nulls and has only one value, of length 8
p.domain.attributes[] elements != null
p.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
p.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
p.domain.attributeMap has only one value
p.domain.attributeMap != null
p.domain.propFunctions has only one value
p.domain.propFunctions != null
p.domain.propFunctions[] contains no nulls and has only one value, of length 18
p.domain.propFunctions[] elements != null
p.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
p.domain.propFunctionMap has only one value
p.domain.propFunctionMap != null
p.domain.objectIdentifierDependentDomain == false
p.domain.debugCode == 111
p.parameterClasses != null
p.parameterClasses[] elements != null
p.parameterClasses[].getClass().getName() elements == java.lang.String.class
p.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
p.parameterOrderGroup != null
p.parameterOrderGroup[] elements != null
p.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
p.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
par != null
par.getClass().getName() == java.lang.String[].class
par[] elements != null
size(p.domain.objectClasses[]) == 4
size(p.domain.attributes[]) == 8
size(p.domain.propFunctions[]) == 18
size(p.parameterClasses[]) one of { 1, 2 }
size(p.parameterOrderGroup[]) one of { 1, 2 }
size(par[]) one of { 1, 2 }
p.getClass().getName() != p.domain.getClass().getName()
p.getClass().getName() != p.domain.objectClasses.getClass().getName()
p.getClass().getName() != p.domain.objectClassMap.getClass().getName()
p.getClass().getName() != par.getClass().getName()
p.domain.getClass().getName() != p.domain.objectClasses.getClass().getName()
p.domain.getClass().getName() != p.domain.objectClassMap.getClass().getName()
p.domain.getClass().getName() != par.getClass().getName()
p.domain.objectClasses.getClass().getName() != p.domain.objectClassMap.getClass().getName()
p.domain.objectClasses.getClass().getName() != par.getClass().getName()
p.domain.objectClassMap.getClass().getName() != par.getClass().getName()
===========================================================================
burlap.oomdp.core.GroundedProp.GroundedProp(burlap.oomdp.core.PropositionalFunction, java.lang.String[]):::EXIT
this.pf == orig(p)
this.pf.getClass().getName() == orig(p.getClass().getName())
this.pf.name == p.name
this.pf.domain == p.domain
this.pf.domain.getClass().getName() == p.domain.getClass().getName()
this.pf.domain.objectClasses == p.domain.objectClasses
this.pf.domain.objectClasses.getClass().getName() == p.domain.objectClasses.getClass().getName()
this.pf.domain.objectClassMap == p.domain.objectClassMap
this.pf.domain.objectClassMap.getClass().getName() == p.domain.objectClassMap.getClass().getName()
this.pf.domain.attributes == p.domain.attributes
this.pf.domain.attributes.getClass().getName() == p.domain.objectClasses.getClass().getName()
this.pf.domain.attributeMap == p.domain.attributeMap
this.pf.domain.attributeMap.getClass().getName() == p.domain.objectClassMap.getClass().getName()
this.pf.domain.propFunctions == p.domain.propFunctions
this.pf.domain.propFunctions.getClass().getName() == p.domain.objectClasses.getClass().getName()
this.pf.domain.propFunctionMap == p.domain.propFunctionMap
this.pf.domain.propFunctionMap.getClass().getName() == p.domain.objectClassMap.getClass().getName()
this.pf.domain.objectIdentifierDependentDomain == p.domain.objectIdentifierDependentDomain
this.pf.domain.debugCode == p.domain.debugCode
this.pf.parameterClasses == p.parameterClasses
this.pf.parameterClasses.getClass().getName() == this.params.getClass().getName()
this.pf.parameterOrderGroup == p.parameterOrderGroup
this.pf.parameterOrderGroup.getClass().getName() == this.params.getClass().getName()
this.pf.pfClass == p.name
this.params == orig(par)
this.params.getClass().getName() == p.parameterClasses.getClass().getName()
this.params.getClass().getName() == p.parameterOrderGroup.getClass().getName()
this.params.getClass().getName() == orig(p.parameterClasses.getClass().getName())
this.params.getClass().getName() == orig(p.parameterOrderGroup.getClass().getName())
this.params.getClass().getName() == orig(par.getClass().getName())
p.name == p.pfClass
p.name == orig(p.name)
p.name == orig(p.pfClass)
p.name.toString == orig(p.name.toString)
p.domain == orig(p.domain)
p.domain.getClass().getName() == orig(p.domain.getClass().getName())
p.domain.objectClasses == orig(p.domain.objectClasses)
p.domain.objectClasses[] == orig(p.domain.objectClasses[])
p.domain.objectClasses.getClass().getName() == p.domain.attributes.getClass().getName()
p.domain.objectClasses.getClass().getName() == p.domain.propFunctions.getClass().getName()
p.domain.objectClasses.getClass().getName() == orig(p.domain.objectClasses.getClass().getName())
p.domain.objectClasses.getClass().getName() == orig(p.domain.attributes.getClass().getName())
p.domain.objectClasses.getClass().getName() == orig(p.domain.propFunctions.getClass().getName())
p.domain.objectClassMap == orig(p.domain.objectClassMap)
p.domain.objectClassMap.getClass().getName() == p.domain.attributeMap.getClass().getName()
p.domain.objectClassMap.getClass().getName() == p.domain.propFunctionMap.getClass().getName()
p.domain.objectClassMap.getClass().getName() == orig(p.domain.objectClassMap.getClass().getName())
p.domain.objectClassMap.getClass().getName() == orig(p.domain.attributeMap.getClass().getName())
p.domain.objectClassMap.getClass().getName() == orig(p.domain.propFunctionMap.getClass().getName())
p.domain.attributes == orig(p.domain.attributes)
p.domain.attributes[] == orig(p.domain.attributes[])
p.domain.attributeMap == orig(p.domain.attributeMap)
p.domain.propFunctions == orig(p.domain.propFunctions)
p.domain.propFunctions[] == orig(p.domain.propFunctions[])
p.domain.propFunctionMap == orig(p.domain.propFunctionMap)
p.domain.objectIdentifierDependentDomain == orig(p.domain.objectIdentifierDependentDomain)
p.domain.debugCode == orig(p.domain.debugCode)
p.parameterClasses == orig(p.parameterClasses)
p.parameterClasses[] == orig(p.parameterClasses[])
p.parameterOrderGroup == orig(p.parameterOrderGroup)
p.parameterOrderGroup[] == orig(p.parameterOrderGroup[])
p.pfClass.toString == orig(p.pfClass.toString)
par[] == orig(par[])
p.name != null
p.domain has only one value
p.domain != null
p.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
p.domain.objectClasses has only one value
p.domain.objectClasses != null
p.domain.objectClasses[] contains no nulls and has only one value, of length 4
p.domain.objectClasses[] elements != null
p.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
p.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
p.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
p.domain.objectClassMap has only one value
p.domain.objectClassMap != null
p.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
p.domain.attributes has only one value
p.domain.attributes != null
p.domain.attributes[] contains no nulls and has only one value, of length 8
p.domain.attributes[] elements != null
p.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
p.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
p.domain.attributeMap has only one value
p.domain.attributeMap != null
p.domain.propFunctions has only one value
p.domain.propFunctions != null
p.domain.propFunctions[] contains no nulls and has only one value, of length 18
p.domain.propFunctions[] elements != null
p.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
p.domain.propFunctionMap has only one value
p.domain.propFunctionMap != null
p.domain.objectIdentifierDependentDomain == false
p.domain.debugCode == 111
p.parameterClasses != null
p.parameterClasses[] elements != null
p.parameterClasses[].getClass().getName() elements == java.lang.String.class
p.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
p.parameterOrderGroup != null
p.parameterOrderGroup[] elements != null
p.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
p.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
par[] elements != null
size(p.domain.objectClasses[]) == 4
size(p.domain.attributes[]) == 8
size(p.domain.propFunctions[]) == 18
size(p.parameterClasses[]) one of { 1, 2 }
size(p.parameterOrderGroup[]) one of { 1, 2 }
this.pf.getClass().getName() != this.params.getClass().getName()
this.pf.getClass().getName() != p.domain.getClass().getName()
this.pf.getClass().getName() != p.domain.objectClasses.getClass().getName()
this.pf.getClass().getName() != p.domain.objectClassMap.getClass().getName()
this.params.getClass().getName() != p.domain.getClass().getName()
this.params.getClass().getName() != p.domain.objectClasses.getClass().getName()
this.params.getClass().getName() != p.domain.objectClassMap.getClass().getName()
p.domain.getClass().getName() != p.domain.objectClasses.getClass().getName()
p.domain.getClass().getName() != p.domain.objectClassMap.getClass().getName()
p.domain.objectClasses.getClass().getName() != p.domain.objectClassMap.getClass().getName()
===========================================================================
burlap.oomdp.core.GroundedProp.isTrue(burlap.oomdp.core.State):::ENTER
this.pf.name == this.pf.pfClass
this.pf.domain.objectClasses.getClass().getName() == this.pf.domain.attributes.getClass().getName()
this.pf.domain.objectClasses.getClass().getName() == this.pf.domain.propFunctions.getClass().getName()
this.pf.domain.objectClasses.getClass().getName() == s.objectInstances.getClass().getName()
this.pf.domain.objectClasses.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
this.pf.domain.objectClassMap.getClass().getName() == this.pf.domain.attributeMap.getClass().getName()
this.pf.domain.objectClassMap.getClass().getName() == this.pf.domain.propFunctionMap.getClass().getName()
this.pf.domain.objectClassMap.getClass().getName() == s.objectMap.getClass().getName()
this.pf.domain.objectClassMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
this.pf.parameterClasses.getClass().getName() == this.params.getClass().getName()
this.pf.parameterOrderGroup.getClass().getName() == this.params.getClass().getName()
s has only one value
s != null
s.objectInstances has only one value
s.objectInstances != null
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[] elements != null
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances != null
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap != null
s.objectIndexByTrueClass has only one value
s.objectIndexByTrueClass != null
size(s.objectInstances[]) == 7
this.pf.getClass().getName() != this.pf.domain.getClass().getName()
this.pf.getClass().getName() != this.pf.domain.objectClasses.getClass().getName()
this.pf.getClass().getName() != this.pf.domain.objectClassMap.getClass().getName()
this.pf.getClass().getName() != this.params.getClass().getName()
this.pf.domain.getClass().getName() != this.pf.domain.objectClasses.getClass().getName()
this.pf.domain.getClass().getName() != this.pf.domain.objectClassMap.getClass().getName()
this.pf.domain.getClass().getName() != this.params.getClass().getName()
this.pf.domain.objectClasses.getClass().getName() != this.pf.domain.objectClassMap.getClass().getName()
this.pf.domain.objectClasses.getClass().getName() != this.params.getClass().getName()
this.pf.domain.objectClassMap.getClass().getName() != this.params.getClass().getName()
===========================================================================
burlap.oomdp.core.GroundedProp.isTrue(burlap.oomdp.core.State):::EXIT
this.pf == orig(this.pf)
this.pf.getClass().getName() == orig(this.pf.getClass().getName())
this.pf.name == this.pf.pfClass
this.pf.name == orig(this.pf.name)
this.pf.name == orig(this.pf.pfClass)
this.pf.name.toString == orig(this.pf.name.toString)
this.pf.domain == orig(this.pf.domain)
this.pf.domain.getClass().getName() == orig(this.pf.domain.getClass().getName())
this.pf.domain.objectClasses == orig(this.pf.domain.objectClasses)
this.pf.domain.objectClasses[] == orig(this.pf.domain.objectClasses[])
this.pf.domain.objectClasses.getClass().getName() == s.objectInstances.getClass().getName()
this.pf.domain.objectClassMap == orig(this.pf.domain.objectClassMap)
this.pf.domain.objectClassMap.getClass().getName() == s.objectMap.getClass().getName()
this.pf.domain.attributes == orig(this.pf.domain.attributes)
this.pf.domain.attributes[] == orig(this.pf.domain.attributes[])
this.pf.domain.attributes.getClass().getName() == s.objectInstances.getClass().getName()
this.pf.domain.attributeMap == orig(this.pf.domain.attributeMap)
this.pf.domain.attributeMap.getClass().getName() == s.objectMap.getClass().getName()
this.pf.domain.propFunctions == orig(this.pf.domain.propFunctions)
this.pf.domain.propFunctions[] == orig(this.pf.domain.propFunctions[])
this.pf.domain.propFunctions.getClass().getName() == s.objectInstances.getClass().getName()
this.pf.domain.propFunctionMap == orig(this.pf.domain.propFunctionMap)
this.pf.domain.propFunctionMap.getClass().getName() == s.objectMap.getClass().getName()
this.pf.domain.objectIdentifierDependentDomain == orig(this.pf.domain.objectIdentifierDependentDomain)
this.pf.domain.debugCode == orig(this.pf.domain.debugCode)
this.pf.parameterClasses == orig(this.pf.parameterClasses)
this.pf.parameterClasses.getClass().getName() == this.params.getClass().getName()
this.pf.parameterClasses[] == orig(this.pf.parameterClasses[])
this.pf.parameterOrderGroup == orig(this.pf.parameterOrderGroup)
this.pf.parameterOrderGroup.getClass().getName() == this.params.getClass().getName()
this.pf.parameterOrderGroup[] == orig(this.pf.parameterOrderGroup[])
this.pf.pfClass.toString == orig(this.pf.pfClass.toString)
this.params == orig(this.params)
this.params.getClass().getName() == orig(this.pf.parameterClasses.getClass().getName())
this.params.getClass().getName() == orig(this.pf.parameterOrderGroup.getClass().getName())
this.params.getClass().getName() == orig(this.params.getClass().getName())
this.params[] == orig(this.params[])
s.objectInstances == orig(s.objectInstances)
s.objectInstances[] == orig(s.objectInstances[])
s.objectInstances.getClass().getName() == s.hiddenObjectInstances.getClass().getName()
s.objectInstances.getClass().getName() == orig(this.pf.domain.objectClasses.getClass().getName())
s.objectInstances.getClass().getName() == orig(this.pf.domain.attributes.getClass().getName())
s.objectInstances.getClass().getName() == orig(this.pf.domain.propFunctions.getClass().getName())
s.objectInstances.getClass().getName() == orig(s.objectInstances.getClass().getName())
s.objectInstances.getClass().getName() == orig(s.hiddenObjectInstances.getClass().getName())
s.hiddenObjectInstances == orig(s.hiddenObjectInstances)
s.hiddenObjectInstances[] == orig(s.hiddenObjectInstances[])
s.objectMap == orig(s.objectMap)
s.objectMap.getClass().getName() == s.objectIndexByTrueClass.getClass().getName()
s.objectMap.getClass().getName() == orig(this.pf.domain.objectClassMap.getClass().getName())
s.objectMap.getClass().getName() == orig(this.pf.domain.attributeMap.getClass().getName())
s.objectMap.getClass().getName() == orig(this.pf.domain.propFunctionMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectMap.getClass().getName())
s.objectMap.getClass().getName() == orig(s.objectIndexByTrueClass.getClass().getName())
s.objectIndexByTrueClass == orig(s.objectIndexByTrueClass)
(return == true)  ==>  (this.pf.parameterClasses[].toString elements one of { "agent", "block", "room" })
s.objectInstances has only one value
s.objectInstances != null
s.objectInstances[] contains no nulls and has only one value, of length 7
s.objectInstances[] elements != null
s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
s.objectInstances.getClass().getName() == java.util.ArrayList.class
s.hiddenObjectInstances has only one value
s.hiddenObjectInstances != null
s.hiddenObjectInstances[] == []
s.hiddenObjectInstances[].getClass().getName() == []
s.objectMap has only one value
s.objectMap != null
s.objectMap.getClass().getName() == java.util.HashMap.class
s.objectIndexByTrueClass has only one value
s.objectIndexByTrueClass != null
size(s.objectInstances[]) == 7
this.pf.getClass().getName() != this.pf.domain.getClass().getName()
this.pf.getClass().getName() != this.params.getClass().getName()
this.pf.getClass().getName() != s.objectInstances.getClass().getName()
this.pf.getClass().getName() != s.objectMap.getClass().getName()
this.pf.domain.getClass().getName() != this.params.getClass().getName()
this.pf.domain.getClass().getName() != s.objectInstances.getClass().getName()
this.pf.domain.getClass().getName() != s.objectMap.getClass().getName()
this.params.getClass().getName() != s.objectInstances.getClass().getName()
this.params.getClass().getName() != s.objectMap.getClass().getName()
s.objectInstances.getClass().getName() != s.objectMap.getClass().getName()
===========================================================================
burlap.oomdp.core.GroundedProp.isTrue(burlap.oomdp.core.State):::EXIT;condition="return == true"
this.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
return == true
===========================================================================
burlap.oomdp.core.GroundedProp.isTrue(burlap.oomdp.core.State):::EXIT;condition="not(return == true)"
return == false
===========================================================================
burlap.oomdp.core.GroundedProp.toString():::ENTER
this.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
===========================================================================
burlap.oomdp.core.GroundedProp.toString():::EXIT
this.pf == orig(this.pf)
this.pf.getClass().getName() == orig(this.pf.getClass().getName())
this.pf.name == orig(this.pf.name)
this.pf.name.toString == orig(this.pf.name.toString)
this.pf.domain == orig(this.pf.domain)
this.pf.domain.getClass().getName() == orig(this.pf.domain.getClass().getName())
this.pf.domain.objectClasses == orig(this.pf.domain.objectClasses)
this.pf.domain.objectClasses[] == orig(this.pf.domain.objectClasses[])
this.pf.domain.objectClasses.getClass().getName() == orig(this.pf.domain.objectClasses.getClass().getName())
this.pf.domain.objectClassMap == orig(this.pf.domain.objectClassMap)
this.pf.domain.objectClassMap.getClass().getName() == orig(this.pf.domain.objectClassMap.getClass().getName())
this.pf.domain.attributes == orig(this.pf.domain.attributes)
this.pf.domain.attributes[] == orig(this.pf.domain.attributes[])
this.pf.domain.attributes.getClass().getName() == orig(this.pf.domain.attributes.getClass().getName())
this.pf.domain.attributeMap == orig(this.pf.domain.attributeMap)
this.pf.domain.attributeMap.getClass().getName() == orig(this.pf.domain.attributeMap.getClass().getName())
this.pf.domain.propFunctions == orig(this.pf.domain.propFunctions)
this.pf.domain.propFunctions[] == orig(this.pf.domain.propFunctions[])
this.pf.domain.propFunctions.getClass().getName() == orig(this.pf.domain.propFunctions.getClass().getName())
this.pf.domain.propFunctionMap == orig(this.pf.domain.propFunctionMap)
this.pf.domain.propFunctionMap.getClass().getName() == orig(this.pf.domain.propFunctionMap.getClass().getName())
this.pf.domain.objectIdentifierDependentDomain == orig(this.pf.domain.objectIdentifierDependentDomain)
this.pf.domain.debugCode == orig(this.pf.domain.debugCode)
this.pf.parameterClasses == orig(this.pf.parameterClasses)
this.pf.parameterClasses.getClass().getName() == orig(this.pf.parameterClasses.getClass().getName())
this.pf.parameterClasses[] == orig(this.pf.parameterClasses[])
this.pf.parameterOrderGroup == orig(this.pf.parameterOrderGroup)
this.pf.parameterOrderGroup.getClass().getName() == orig(this.pf.parameterOrderGroup.getClass().getName())
this.pf.parameterOrderGroup[] == orig(this.pf.parameterOrderGroup[])
this.pf.pfClass == orig(this.pf.pfClass)
this.pf.pfClass.toString == orig(this.pf.pfClass.toString)
this.params == orig(this.params)
this.params.getClass().getName() == orig(this.params.getClass().getName())
this.params[] == orig(this.params[])
this.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
return != null
===========================================================================
burlap.oomdp.core.ObjectClass:::OBJECT
this.domain.objectClasses.getClass().getName() == this.attributeList.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.attributeIndex.getClass().getName()
this.domain.attributes.getClass().getName() == this.attributeList.getClass().getName()
this.domain.attributeMap.getClass().getName() == this.attributeIndex.getClass().getName()
this.domain.propFunctions.getClass().getName() == this.attributeList.getClass().getName()
this.domain.propFunctionMap.getClass().getName() == this.attributeIndex.getClass().getName()
this.attributeIndex.getClass().getName() == this.attributeMap.getClass().getName()
this.attributeList.getClass().getName() == this.observableAttributeIndices.getClass().getName()
this.name != null
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctions[].getClass().getName() one of { [], [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape] }
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.attributeIndex != null
this.attributeIndex.getClass().getName() == java.util.HashMap.class
this.attributeMap != null
this.attributeList != null
this.attributeList[] elements != null
this.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.attributeList.getClass().getName() == java.util.ArrayList.class
this.observableAttributeIndices != null
this.observableAttributeIndices[] elements != null
this.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
this.hidden == false
size(this.domain.attributes[]) == 8
size(this.domain.propFunctions[]) one of { 0, 18 }
size(this.domain.propFunctions[])-1 != 0
this.domain.getClass().getName() != this.attributeIndex.getClass().getName()
this.domain.getClass().getName() != this.attributeList.getClass().getName()
this.attributeIndex.getClass().getName() != this.attributeList.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectClass.ObjectClass(burlap.oomdp.core.Domain, java.lang.String):::ENTER
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain has only one value
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.core.ObjectClass.ObjectClass(burlap.oomdp.core.Domain, java.lang.String):::EXIT
this.name == orig(name)
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClassMap == domain.objectClassMap
this.domain.attributes == domain.attributes
this.domain.attributeMap == domain.attributeMap
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.attributeIndex.getClass().getName() == domain.objectClassMap.getClass().getName()
this.attributeIndex.getClass().getName() == domain.attributeMap.getClass().getName()
this.attributeIndex.getClass().getName() == domain.propFunctionMap.getClass().getName()
this.attributeIndex.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
this.attributeList.getClass().getName() == domain.objectClasses.getClass().getName()
this.attributeList.getClass().getName() == domain.attributes.getClass().getName()
this.attributeList.getClass().getName() == domain.propFunctions.getClass().getName()
this.attributeList.getClass().getName() == orig(domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(domain.propFunctions.getClass().getName())
domain.objectClasses == orig(domain.objectClasses)
domain.objectClassMap == orig(domain.objectClassMap)
domain.attributes == orig(domain.attributes)
domain.attributes[] == orig(domain.attributes[])
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctions[] == orig(domain.propFunctions[])
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
name.toString == orig(name.toString)
size(domain.objectClasses[])-1 == orig(size(domain.objectClasses[]))
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.attributeList[] == []
this.attributeList[].getClass().getName() == []
this.observableAttributeIndices[] == []
this.observableAttributeIndices[].getClass().getName() == []
domain.objectClasses has only one value
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClassMap has only one value
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.core.ObjectClass.addAttribute(burlap.oomdp.core.Attribute):::ENTER
this.domain == att.domain
this.domain.getClass().getName() == att.domain.getClass().getName()
this.domain.objectClasses == att.domain.objectClasses
this.domain.objectClassMap == att.domain.objectClassMap
this.domain.attributes == att.domain.attributes
this.domain.attributeMap == att.domain.attributeMap
this.domain.propFunctions == att.domain.propFunctions
this.domain.propFunctionMap == att.domain.propFunctionMap
this.domain.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.domain.debugCode == att.domain.debugCode
this.attributeIndex.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.discValuesHash.getClass().getName()
this.attributeList.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.attributeList.getClass().getName() == att.domain.attributes.getClass().getName()
this.attributeList.getClass().getName() == att.domain.propFunctions.getClass().getName()
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
att != null
att.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain.objectClasses[] elements != null
att.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
att.domain.attributes[] contains no nulls and has only one value, of length 8
att.domain.attributes[] elements != null
att.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim one of { 3.0, 4.0, 24.0 }
att.discValuesHash != null
att.discValues != null
att.discValues[] elements != null
att.discValues[].getClass().getName() elements == java.lang.String.class
att.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(att.domain.attributes[]) == 8
size(att.discValues[]) one of { 4, 5, 25 }
this.domain.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.domain.getClass().getName() != att.discValues.getClass().getName()
this.attributeIndex.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.attributeIndex.getClass().getName() != att.discValues.getClass().getName()
this.attributeList.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != att.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectClass.addAttribute(burlap.oomdp.core.Attribute):::EXIT132
===========================================================================
burlap.oomdp.core.ObjectClass.addAttribute(burlap.oomdp.core.Attribute):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == att.domain
this.domain == orig(this.domain)
this.domain == orig(att.domain)
this.domain.getClass().getName() == att.domain.getClass().getName()
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.getClass().getName() == orig(att.domain.getClass().getName())
this.domain.objectClasses == att.domain.objectClasses
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses == orig(att.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == att.domain.objectClassMap
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap == orig(att.domain.objectClassMap)
this.domain.attributes == att.domain.attributes
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes == orig(att.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == att.domain.attributeMap
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.attributeMap == orig(att.domain.attributeMap)
this.domain.propFunctions == att.domain.propFunctions
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions == orig(att.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == att.domain.propFunctionMap
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.propFunctionMap == orig(att.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.objectIdentifierDependentDomain == orig(att.domain.objectIdentifierDependentDomain)
this.domain.debugCode == att.domain.debugCode
this.domain.debugCode == orig(this.domain.debugCode)
this.domain.debugCode == orig(att.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.discValuesHash.getClass().getName()
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.discValuesHash.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.attributeList.getClass().getName() == att.domain.attributes.getClass().getName()
this.attributeList.getClass().getName() == att.domain.propFunctions.getClass().getName()
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.propFunctions.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.hidden == orig(this.hidden)
att.name == orig(att.name)
att.name.toString == orig(att.name.toString)
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(att.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
att.type.intVal == orig(att.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
att.domain.objectClasses[] == orig(att.domain.objectClasses[])
att.domain.attributes[] == orig(att.domain.attributes[])
att.domain.propFunctions[] == orig(att.domain.propFunctions[])
att.lowerLim == orig(att.lowerLim)
att.upperLim == orig(att.upperLim)
att.discValuesHash == orig(att.discValuesHash)
att.discValues == orig(att.discValues)
att.discValues[] == orig(att.discValues[])
att.discValues.getClass().getName() == orig(att.discValues.getClass().getName())
att.hidden == orig(att.hidden)
size(this.attributeList[])-1 == orig(size(this.attributeList[]))
size(this.observableAttributeIndices[])-1 == orig(size(this.observableAttributeIndices[]))
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
att.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain.objectClasses[] elements != null
att.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
att.domain.attributes[] contains no nulls and has only one value, of length 8
att.domain.attributes[] elements != null
att.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim one of { 3.0, 4.0, 24.0 }
att.discValuesHash != null
att.discValues != null
att.discValues[] elements != null
att.discValues[].getClass().getName() elements == java.lang.String.class
att.hidden == false
size(this.attributeList[]) >= 1
size(this.observableAttributeIndices[]) >= 1
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(att.domain.attributes[]) == 8
size(att.discValues[]) one of { 4, 5, 25 }
this.domain.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.domain.getClass().getName() != att.discValues.getClass().getName()
this.attributeIndex.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.attributeIndex.getClass().getName() != att.discValues.getClass().getName()
this.attributeList.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != att.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectClass.attributeIndex(java.lang.String):::ENTER
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
attName != null
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) one of { 2, 4, 5 }
size(this.observableAttributeIndices[]) one of { 2, 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectClass.attributeIndex(java.lang.String):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList[] == orig(this.attributeList[])
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.observableAttributeIndices[] == orig(this.observableAttributeIndices[])
this.hidden == orig(this.hidden)
attName.toString == orig(attName.toString)
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return >= 0
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) one of { 2, 4, 5 }
size(this.observableAttributeIndices[]) one of { 2, 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectClass.getAttribute(java.lang.String):::ENTER
this has only one value
this.name has only one value
this.name.toString == "agent"
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.attributeIndex has only one value
this.attributeMap has only one value
this.attributeList has only one value
this.attributeList[] contains no nulls and has only one value, of length 2
this.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.observableAttributeIndices has only one value
this.observableAttributeIndices[] contains no nulls and has only one value, of length 2
this.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer]
name has only one value
name.toString == "direction"
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) == 2
size(this.observableAttributeIndices[]) == 2
===========================================================================
burlap.oomdp.core.ObjectClass.getAttribute(java.lang.String):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList[] == orig(this.attributeList[])
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.observableAttributeIndices[] == orig(this.observableAttributeIndices[])
this.hidden == orig(this.hidden)
name.toString == orig(name.toString)
this.name has only one value
this.name.toString == "agent"
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.attributeIndex has only one value
this.attributeMap has only one value
this.attributeList has only one value
this.attributeList[] contains no nulls and has only one value, of length 2
this.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.observableAttributeIndices has only one value
this.observableAttributeIndices[] contains no nulls and has only one value, of length 2
this.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer]
name.toString == "direction"
return == null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) == 2
size(this.observableAttributeIndices[]) == 2
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(burlap.oomdp.core.Attribute):::ENTER
this.domain == att.domain
this.domain.getClass().getName() == att.domain.getClass().getName()
this.domain.objectClasses == att.domain.objectClasses
this.domain.objectClassMap == att.domain.objectClassMap
this.domain.attributes == att.domain.attributes
this.domain.attributeMap == att.domain.attributeMap
this.domain.propFunctions == att.domain.propFunctions
this.domain.propFunctionMap == att.domain.propFunctionMap
this.domain.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.domain.debugCode == att.domain.debugCode
this.attributeIndex.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.discValuesHash.getClass().getName()
this.attributeList.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.attributeList.getClass().getName() == att.domain.attributes.getClass().getName()
this.attributeList.getClass().getName() == att.domain.propFunctions.getClass().getName()
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
att != null
att.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain.objectClasses[] elements != null
att.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
att.domain.attributes[] contains no nulls and has only one value, of length 8
att.domain.attributes[] elements != null
att.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim one of { 3.0, 4.0, 24.0 }
att.discValuesHash != null
att.discValues != null
att.discValues[] elements != null
att.discValues[].getClass().getName() elements == java.lang.String.class
att.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(att.domain.attributes[]) == 8
size(att.discValues[]) one of { 4, 5, 25 }
this.domain.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.domain.getClass().getName() != att.discValues.getClass().getName()
this.attributeIndex.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.attributeIndex.getClass().getName() != att.discValues.getClass().getName()
this.attributeList.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != att.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(burlap.oomdp.core.Attribute):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == att.domain
this.domain == orig(this.domain)
this.domain == orig(att.domain)
this.domain.getClass().getName() == att.domain.getClass().getName()
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.getClass().getName() == orig(att.domain.getClass().getName())
this.domain.objectClasses == att.domain.objectClasses
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses == orig(att.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == att.domain.objectClassMap
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap == orig(att.domain.objectClassMap)
this.domain.attributes == att.domain.attributes
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes == orig(att.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == att.domain.attributeMap
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.attributeMap == orig(att.domain.attributeMap)
this.domain.propFunctions == att.domain.propFunctions
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions == orig(att.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == att.domain.propFunctionMap
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.propFunctionMap == orig(att.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == att.domain.objectIdentifierDependentDomain
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.objectIdentifierDependentDomain == orig(att.domain.objectIdentifierDependentDomain)
this.domain.debugCode == att.domain.debugCode
this.domain.debugCode == orig(this.domain.debugCode)
this.domain.debugCode == orig(att.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == att.domain.objectClassMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.attributeMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.domain.propFunctionMap.getClass().getName()
this.attributeIndex.getClass().getName() == att.discValuesHash.getClass().getName()
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(att.discValuesHash.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList[] == orig(this.attributeList[])
this.attributeList.getClass().getName() == att.domain.objectClasses.getClass().getName()
this.attributeList.getClass().getName() == att.domain.attributes.getClass().getName()
this.attributeList.getClass().getName() == att.domain.propFunctions.getClass().getName()
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(att.domain.propFunctions.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.observableAttributeIndices[] == orig(this.observableAttributeIndices[])
this.hidden == orig(this.hidden)
att.name == orig(att.name)
att.name.toString == orig(att.name.toString)
att.type == burlap.oomdp.core.Attribute$AttributeType.DISC
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(att.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
att.type.intVal == orig(att.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
att.domain.objectClasses[] == orig(att.domain.objectClasses[])
att.domain.attributes[] == orig(att.domain.attributes[])
att.domain.propFunctions[] == orig(att.domain.propFunctions[])
att.lowerLim == orig(att.lowerLim)
att.upperLim == orig(att.upperLim)
att.discValuesHash == orig(att.discValuesHash)
att.discValues == orig(att.discValues)
att.discValues[] == orig(att.discValues[])
att.discValues.getClass().getName() == orig(att.discValues.getClass().getName())
att.hidden == orig(att.hidden)
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
att.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
att.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
att.domain.objectClasses[] elements != null
att.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
att.domain.attributes[] contains no nulls and has only one value, of length 8
att.domain.attributes[] elements != null
att.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
att.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
att.domain.propFunctions[] == []
att.domain.propFunctions[].getClass().getName() == []
att.lowerLim == 0.0
att.upperLim one of { 3.0, 4.0, 24.0 }
att.discValuesHash != null
att.discValues != null
att.discValues[] elements != null
att.discValues[].getClass().getName() elements == java.lang.String.class
att.hidden == false
return == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(att.domain.attributes[]) == 8
size(att.discValues[]) one of { 4, 5, 25 }
this.domain.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.domain.getClass().getName() != att.discValues.getClass().getName()
this.attributeIndex.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.attributeIndex.getClass().getName() != att.discValues.getClass().getName()
this.attributeList.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != att.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(burlap.oomdp.core.Attribute):::EXIT;condition="not(return == true)"
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(java.lang.String):::ENTER
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
attName != null
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(java.lang.String):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList[] == orig(this.attributeList[])
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.observableAttributeIndices[] == orig(this.observableAttributeIndices[])
this.hidden == orig(this.hidden)
attName.toString == orig(attName.toString)
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
return == false
===========================================================================
burlap.oomdp.core.ObjectClass.hasAttribute(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
burlap.oomdp.core.ObjectClass.numAttributes():::ENTER
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) one of { 2, 4, 5 }
size(this.observableAttributeIndices[]) one of { 2, 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectClass.numAttributes():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.attributeIndex == orig(this.attributeIndex)
this.attributeIndex.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeIndex.getClass().getName())
this.attributeIndex.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.attributeMap == orig(this.attributeMap)
this.attributeList == orig(this.attributeList)
this.attributeList[] == orig(this.attributeList[])
this.attributeList.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.attributeList.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.attributeList.getClass().getName() == orig(this.attributeList.getClass().getName())
this.attributeList.getClass().getName() == orig(this.observableAttributeIndices.getClass().getName())
this.observableAttributeIndices == orig(this.observableAttributeIndices)
this.observableAttributeIndices[] == orig(this.observableAttributeIndices[])
this.hidden == orig(this.hidden)
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return one of { 2, 4, 5 }
size(this.domain.objectClasses[]) == 4
size(this.domain.propFunctions[]) == 18
size(this.attributeList[]) one of { 2, 4, 5 }
size(this.observableAttributeIndices[]) one of { 2, 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectInstance:::OBJECT
this.obClass.domain.objectClasses.getClass().getName() == this.obClass.attributeList.getClass().getName()
this.obClass.domain.objectClassMap.getClass().getName() == this.obClass.attributeIndex.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.obClass.attributeList.getClass().getName()
this.obClass.domain.attributeMap.getClass().getName() == this.obClass.attributeIndex.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.obClass.attributeList.getClass().getName()
this.obClass.domain.propFunctionMap.getClass().getName() == this.obClass.attributeIndex.getClass().getName()
this.obClass.attributeIndex.getClass().getName() == this.obClass.attributeMap.getClass().getName()
this.obClass.attributeList.getClass().getName() == this.obClass.observableAttributeIndices.getClass().getName()
this.obClass.attributeList.getClass().getName() == this.values.getClass().getName()
this.obClass != null
this.obClass.name != null
this.obClass.domain has only one value
this.obClass.domain != null
this.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.obClass.domain.objectClasses has only one value
this.obClass.domain.objectClasses != null
this.obClass.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.obClass.domain.objectClasses[] elements != null
this.obClass.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.obClass.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.obClass.domain.objectClassMap has only one value
this.obClass.domain.objectClassMap != null
this.obClass.domain.attributes has only one value
this.obClass.domain.attributes != null
this.obClass.domain.attributes[] contains no nulls and has only one value, of length 8
this.obClass.domain.attributes[] elements != null
this.obClass.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.obClass.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.obClass.domain.attributeMap has only one value
this.obClass.domain.attributeMap != null
this.obClass.domain.propFunctions has only one value
this.obClass.domain.propFunctions != null
this.obClass.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.obClass.domain.propFunctions[] elements != null
this.obClass.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.obClass.domain.propFunctionMap has only one value
this.obClass.domain.propFunctionMap != null
this.obClass.domain.objectIdentifierDependentDomain == false
this.obClass.domain.debugCode == 111
this.obClass.attributeIndex != null
this.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
this.obClass.attributeMap != null
this.obClass.attributeList != null
this.obClass.attributeList[] elements != null
this.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.obClass.attributeList.getClass().getName() == java.util.ArrayList.class
this.obClass.observableAttributeIndices != null
this.obClass.observableAttributeIndices[] elements != null
this.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
this.obClass.hidden == false
this.name != null
this.values[] elements != null
this.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
this.values.getClass().getName() == java.util.ArrayList.class
size(this.obClass.domain.objectClasses[]) == 4
size(this.obClass.domain.attributes[]) == 8
size(this.obClass.domain.propFunctions[]) == 18
size(this.obClass.attributeList[]) one of { 2, 4, 5 }
size(this.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(this.values[]) one of { 2, 4, 5 }
this.obClass.domain.getClass().getName() != this.obClass.attributeIndex.getClass().getName()
this.obClass.domain.getClass().getName() != this.obClass.attributeList.getClass().getName()
this.obClass.domain.getClass().getName() != this.values.getClass().getName()
this.obClass.attributeIndex.getClass().getName() != this.obClass.attributeList.getClass().getName()
this.obClass.attributeIndex.getClass().getName() != this.values.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.ObjectInstance(burlap.oomdp.core.ObjectClass, java.lang.String):::ENTER
obClass.domain.objectClasses.getClass().getName() == obClass.attributeList.getClass().getName()
obClass.domain.objectClassMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.domain.attributes.getClass().getName() == obClass.attributeList.getClass().getName()
obClass.domain.attributeMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.domain.propFunctions.getClass().getName() == obClass.attributeList.getClass().getName()
obClass.domain.propFunctionMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.attributeIndex.getClass().getName() == obClass.attributeMap.getClass().getName()
obClass.attributeList.getClass().getName() == obClass.observableAttributeIndices.getClass().getName()
obClass.domain has only one value
obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
obClass.domain.objectClasses has only one value
obClass.domain.objectClasses[] contains no nulls and has only one value, of length 4
obClass.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
obClass.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
obClass.domain.objectClassMap has only one value
obClass.domain.attributes has only one value
obClass.domain.attributes[] contains no nulls and has only one value, of length 8
obClass.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
obClass.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
obClass.domain.attributeMap has only one value
obClass.domain.propFunctions has only one value
obClass.domain.propFunctions[] contains no nulls and has only one value, of length 18
obClass.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
obClass.domain.propFunctionMap has only one value
obClass.domain.objectIdentifierDependentDomain == false
obClass.domain.debugCode == 111
obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
obClass.attributeList.getClass().getName() == java.util.ArrayList.class
obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
obClass.hidden == false
size(obClass.domain.objectClasses[]) == 4
size(obClass.domain.attributes[]) == 8
size(obClass.domain.propFunctions[]) == 18
size(obClass.attributeList[]) one of { 2, 4, 5 }
size(obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
obClass.domain.getClass().getName() != obClass.attributeIndex.getClass().getName()
obClass.domain.getClass().getName() != obClass.attributeList.getClass().getName()
obClass.attributeIndex.getClass().getName() != obClass.attributeList.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.ObjectInstance(burlap.oomdp.core.ObjectClass, java.lang.String):::EXIT
this.obClass == orig(obClass)
this.obClass.name == obClass.name
this.obClass.domain == obClass.domain
this.obClass.domain.getClass().getName() == obClass.domain.getClass().getName()
this.obClass.domain.objectClasses == obClass.domain.objectClasses
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == obClass.domain.objectClassMap
this.obClass.domain.objectClassMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
this.obClass.domain.attributes == obClass.domain.attributes
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == obClass.domain.attributeMap
this.obClass.domain.attributeMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
this.obClass.domain.propFunctions == obClass.domain.propFunctions
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == obClass.domain.propFunctionMap
this.obClass.domain.propFunctionMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
this.obClass.domain.objectIdentifierDependentDomain == obClass.domain.objectIdentifierDependentDomain
this.obClass.domain.debugCode == obClass.domain.debugCode
this.obClass.attributeIndex == obClass.attributeIndex
this.obClass.attributeIndex.getClass().getName() == obClass.attributeIndex.getClass().getName()
this.obClass.attributeMap == obClass.attributeMap
this.obClass.attributeMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
this.obClass.attributeList == obClass.attributeList
this.obClass.observableAttributeIndices == obClass.observableAttributeIndices
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == obClass.hidden
this.name == orig(name)
this.values.getClass().getName() == obClass.domain.objectClasses.getClass().getName()
this.values.getClass().getName() == obClass.domain.attributes.getClass().getName()
this.values.getClass().getName() == obClass.domain.propFunctions.getClass().getName()
this.values.getClass().getName() == obClass.attributeList.getClass().getName()
this.values.getClass().getName() == obClass.observableAttributeIndices.getClass().getName()
this.values.getClass().getName() == orig(obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(obClass.observableAttributeIndices.getClass().getName())
obClass.name == orig(obClass.name)
obClass.name.toString == orig(obClass.name.toString)
obClass.domain == orig(obClass.domain)
obClass.domain.getClass().getName() == orig(obClass.domain.getClass().getName())
obClass.domain.objectClasses == orig(obClass.domain.objectClasses)
obClass.domain.objectClasses[] == orig(obClass.domain.objectClasses[])
obClass.domain.objectClassMap == orig(obClass.domain.objectClassMap)
obClass.domain.objectClassMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.domain.attributes == orig(obClass.domain.attributes)
obClass.domain.attributes[] == orig(obClass.domain.attributes[])
obClass.domain.attributeMap == orig(obClass.domain.attributeMap)
obClass.domain.attributeMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.domain.propFunctions == orig(obClass.domain.propFunctions)
obClass.domain.propFunctions[] == orig(obClass.domain.propFunctions[])
obClass.domain.propFunctionMap == orig(obClass.domain.propFunctionMap)
obClass.domain.propFunctionMap.getClass().getName() == obClass.attributeIndex.getClass().getName()
obClass.domain.objectIdentifierDependentDomain == orig(obClass.domain.objectIdentifierDependentDomain)
obClass.domain.debugCode == orig(obClass.domain.debugCode)
obClass.attributeIndex == orig(obClass.attributeIndex)
obClass.attributeIndex.getClass().getName() == obClass.attributeMap.getClass().getName()
obClass.attributeIndex.getClass().getName() == orig(obClass.domain.objectClassMap.getClass().getName())
obClass.attributeIndex.getClass().getName() == orig(obClass.domain.attributeMap.getClass().getName())
obClass.attributeIndex.getClass().getName() == orig(obClass.domain.propFunctionMap.getClass().getName())
obClass.attributeIndex.getClass().getName() == orig(obClass.attributeIndex.getClass().getName())
obClass.attributeIndex.getClass().getName() == orig(obClass.attributeMap.getClass().getName())
obClass.attributeMap == orig(obClass.attributeMap)
obClass.attributeList == orig(obClass.attributeList)
obClass.attributeList[] == orig(obClass.attributeList[])
obClass.observableAttributeIndices == orig(obClass.observableAttributeIndices)
obClass.observableAttributeIndices[] == orig(obClass.observableAttributeIndices[])
obClass.hidden == orig(obClass.hidden)
name.toString == orig(name.toString)
obClass.domain has only one value
obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
obClass.domain.objectClasses has only one value
obClass.domain.objectClasses[] contains no nulls and has only one value, of length 4
obClass.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
obClass.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
obClass.domain.objectClassMap has only one value
obClass.domain.attributes has only one value
obClass.domain.attributes[] contains no nulls and has only one value, of length 8
obClass.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
obClass.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
obClass.domain.attributeMap has only one value
obClass.domain.propFunctions has only one value
obClass.domain.propFunctions[] contains no nulls and has only one value, of length 18
obClass.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
obClass.domain.propFunctionMap has only one value
obClass.domain.objectIdentifierDependentDomain == false
obClass.domain.debugCode == 111
obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
obClass.hidden == false
size(obClass.domain.objectClasses[]) == 4
size(obClass.domain.attributes[]) == 8
size(obClass.domain.propFunctions[]) == 18
size(obClass.attributeList[]) one of { 2, 4, 5 }
size(obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
this.values.getClass().getName() != obClass.domain.getClass().getName()
this.values.getClass().getName() != obClass.attributeIndex.getClass().getName()
obClass.domain.getClass().getName() != obClass.attributeIndex.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.getDiscValForAttribute(java.lang.String):::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.values != null
attName != null
===========================================================================
burlap.oomdp.core.ObjectInstance.getDiscValForAttribute(java.lang.String):::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
attName.toString == orig(attName.toString)
this.values != null
===========================================================================
burlap.oomdp.core.ObjectInstance.getName():::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.values != null
===========================================================================
burlap.oomdp.core.ObjectInstance.getName():::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == return
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
return == orig(this.name)
this.values != null
return != null
===========================================================================
burlap.oomdp.core.ObjectInstance.getObjectClass():::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.getObjectClass():::EXIT
this.obClass == return
this.obClass.name == return.name
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == return.domain
this.obClass.domain.getClass().getName() == return.domain.getClass().getName()
this.obClass.domain.objectClasses == return.domain.objectClasses
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == return.domain.objectClassMap
this.obClass.domain.objectClassMap.getClass().getName() == return.attributeIndex.getClass().getName()
this.obClass.domain.attributes == return.domain.attributes
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == return.domain.attributeMap
this.obClass.domain.attributeMap.getClass().getName() == return.attributeIndex.getClass().getName()
this.obClass.domain.propFunctions == return.domain.propFunctions
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == return.domain.propFunctionMap
this.obClass.domain.propFunctionMap.getClass().getName() == return.attributeIndex.getClass().getName()
this.obClass.domain.objectIdentifierDependentDomain == return.domain.objectIdentifierDependentDomain
this.obClass.domain.debugCode == return.domain.debugCode
this.obClass.attributeIndex == return.attributeIndex
this.obClass.attributeIndex.getClass().getName() == return.attributeIndex.getClass().getName()
this.obClass.attributeMap == return.attributeMap
this.obClass.attributeMap.getClass().getName() == return.attributeIndex.getClass().getName()
this.obClass.attributeList == return.attributeList
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == return.observableAttributeIndices
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == return.hidden
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == return.domain.objectClasses.getClass().getName()
this.values.getClass().getName() == return.domain.attributes.getClass().getName()
this.values.getClass().getName() == return.domain.propFunctions.getClass().getName()
this.values.getClass().getName() == return.attributeList.getClass().getName()
this.values.getClass().getName() == return.observableAttributeIndices.getClass().getName()
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
return == orig(this.obClass)
return.name == orig(this.obClass.name)
return.domain == orig(this.obClass.domain)
return.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
return.domain.objectClasses == orig(this.obClass.domain.objectClasses)
return.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
return.domain.objectClassMap.getClass().getName() == return.attributeIndex.getClass().getName()
return.domain.attributes == orig(this.obClass.domain.attributes)
return.domain.attributeMap == orig(this.obClass.domain.attributeMap)
return.domain.attributeMap.getClass().getName() == return.attributeIndex.getClass().getName()
return.domain.propFunctions == orig(this.obClass.domain.propFunctions)
return.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
return.domain.propFunctionMap.getClass().getName() == return.attributeIndex.getClass().getName()
return.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
return.domain.debugCode == orig(this.obClass.domain.debugCode)
return.attributeIndex == orig(this.obClass.attributeIndex)
return.attributeIndex.getClass().getName() == return.attributeMap.getClass().getName()
return.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
return.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
return.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
return.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
return.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
return.attributeMap == orig(this.obClass.attributeMap)
return.attributeList == orig(this.obClass.attributeList)
return.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
return.hidden == orig(this.obClass.hidden)
return.domain has only one value
return.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.domain.objectClasses has only one value
return.domain.objectClasses[] contains no nulls and has only one value, of length 4
return.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
return.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
return.domain.objectClassMap has only one value
return.domain.attributes has only one value
return.domain.attributes[] contains no nulls and has only one value, of length 8
return.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.domain.attributeMap has only one value
return.domain.propFunctions has only one value
return.domain.propFunctions[] contains no nulls and has only one value, of length 18
return.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.domain.propFunctionMap has only one value
return.domain.objectIdentifierDependentDomain == false
return.domain.debugCode == 111
return.attributeIndex.getClass().getName() == java.util.HashMap.class
return.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
return.hidden == false
size(return.domain.objectClasses[]) == 4
size(return.domain.attributes[]) == 8
size(return.domain.propFunctions[]) == 18
size(return.attributeList[]) one of { 2, 4, 5 }
size(return.observableAttributeIndices[]) one of { 2, 4, 5 }
this.values.getClass().getName() != return.domain.getClass().getName()
this.values.getClass().getName() != return.attributeIndex.getClass().getName()
return.domain.getClass().getName() != return.attributeIndex.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.getObjectDescription():::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
===========================================================================
burlap.oomdp.core.ObjectInstance.getObjectDescription():::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
===========================================================================
burlap.oomdp.core.ObjectInstance.getStringValForAttribute(java.lang.String):::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.name.toString one of { "block", "room" }
this.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
this.values != null
this.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
attName != null
attName.toString one of { "color", "shape" }
size(this.obClass.attributeList[]) one of { 4, 5 }
size(this.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(this.values[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectInstance.getStringValForAttribute(java.lang.String):::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
attName.toString == orig(attName.toString)
this.obClass.name.toString one of { "block", "room" }
this.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
this.values != null
this.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
attName.toString one of { "color", "shape" }
return != null
size(this.obClass.attributeList[]) one of { 4, 5 }
size(this.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(this.values[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectInstance.getTrueClassName():::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.values != null
===========================================================================
burlap.oomdp.core.ObjectInstance.getTrueClassName():::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == return
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values[] == orig(this.values[])
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
return == orig(this.obClass.name)
this.values != null
return != null
===========================================================================
burlap.oomdp.core.ObjectInstance.initializeValueObjects():::ENTER
this.values == null
===========================================================================
burlap.oomdp.core.ObjectInstance.initializeValueObjects():::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
===========================================================================
burlap.oomdp.core.ObjectInstance.setValue(java.lang.String, int):::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.values != null
attName != null
v >= 0
===========================================================================
burlap.oomdp.core.ObjectInstance.setValue(java.lang.String, int):::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
attName.toString == orig(attName.toString)
size(this.values[]) == orig(size(this.values[]))
this.values != null
===========================================================================
burlap.oomdp.core.ObjectInstance.setValue(java.lang.String, java.lang.String):::ENTER
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.name.toString one of { "block", "room" }
this.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
this.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
attName.toString one of { "color", "shape" }
size(this.obClass.attributeList[]) one of { 4, 5 }
size(this.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(this.values[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.ObjectInstance.setValue(java.lang.String, java.lang.String):::EXIT
this.obClass == orig(this.obClass)
this.obClass.name == orig(this.obClass.name)
this.obClass.name.toString == orig(this.obClass.name.toString)
this.obClass.domain == orig(this.obClass.domain)
this.obClass.domain.getClass().getName() == orig(this.obClass.domain.getClass().getName())
this.obClass.domain.objectClasses == orig(this.obClass.domain.objectClasses)
this.obClass.domain.objectClasses[] == orig(this.obClass.domain.objectClasses[])
this.obClass.domain.objectClasses.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.objectClassMap == orig(this.obClass.domain.objectClassMap)
this.obClass.domain.attributes == orig(this.obClass.domain.attributes)
this.obClass.domain.attributes[] == orig(this.obClass.domain.attributes[])
this.obClass.domain.attributes.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.attributeMap == orig(this.obClass.domain.attributeMap)
this.obClass.domain.propFunctions == orig(this.obClass.domain.propFunctions)
this.obClass.domain.propFunctions[] == orig(this.obClass.domain.propFunctions[])
this.obClass.domain.propFunctions.getClass().getName() == this.values.getClass().getName()
this.obClass.domain.propFunctionMap == orig(this.obClass.domain.propFunctionMap)
this.obClass.domain.objectIdentifierDependentDomain == orig(this.obClass.domain.objectIdentifierDependentDomain)
this.obClass.domain.debugCode == orig(this.obClass.domain.debugCode)
this.obClass.attributeIndex == orig(this.obClass.attributeIndex)
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.objectClassMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.attributeMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.domain.propFunctionMap.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeIndex.getClass().getName())
this.obClass.attributeIndex.getClass().getName() == orig(this.obClass.attributeMap.getClass().getName())
this.obClass.attributeMap == orig(this.obClass.attributeMap)
this.obClass.attributeList == orig(this.obClass.attributeList)
this.obClass.attributeList[] == orig(this.obClass.attributeList[])
this.obClass.observableAttributeIndices == orig(this.obClass.observableAttributeIndices)
this.obClass.observableAttributeIndices[] == orig(this.obClass.observableAttributeIndices[])
this.obClass.observableAttributeIndices.getClass().getName() == this.values.getClass().getName()
this.obClass.hidden == orig(this.obClass.hidden)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.values == orig(this.values)
this.values.getClass().getName() == orig(this.obClass.domain.objectClasses.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.attributes.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.domain.propFunctions.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.attributeList.getClass().getName())
this.values.getClass().getName() == orig(this.obClass.observableAttributeIndices.getClass().getName())
this.values.getClass().getName() == orig(this.values.getClass().getName())
attName.toString == orig(attName.toString)
v.toString == orig(v.toString)
size(this.values[]) == orig(size(this.values[]))
this.obClass.name.toString one of { "block", "room" }
this.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
this.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
attName.toString one of { "color", "shape" }
size(this.obClass.attributeList[]) one of { 4, 5 }
size(this.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(this.values[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.PropositionalFunction:::OBJECT
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
this.parameterClasses.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses.getClass().getName() == java.lang.String[].class
this.parameterClasses[] elements != null
this.parameterClasses[].getClass().getName() elements == java.lang.String.class
this.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.parameterOrderGroup[] elements != null
this.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
this.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.parameterClasses[]) one of { 1, 2 }
size(this.parameterOrderGroup[]) one of { 1, 2 }
this.getClass().getName() != this.domain.getClass().getName()
this.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.objectClassMap.getClass().getName() != this.parameterClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.PropositionalFunction.PropositionalFunction(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[]):::ENTER
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
name != null
domain has only one value
domain != null
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses != null
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[] elements != null
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap != null
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes != null
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[] elements != null
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.attributeMap != null
domain.propFunctions has only one value
domain.propFunctions != null
domain.propFunctions[] elements != null
domain.propFunctionMap has only one value
domain.propFunctionMap != null
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses != null
parameterClasses.getClass().getName() == java.lang.String[].class
parameterClasses[] elements != null
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
size(parameterClasses[]) one of { 1, 2 }
domain.getClass().getName() != domain.objectClasses.getClass().getName()
domain.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.getClass().getName() != parameterClasses.getClass().getName()
domain.objectClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.objectClasses.getClass().getName() != parameterClasses.getClass().getName()
domain.objectClassMap.getClass().getName() != parameterClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.PropositionalFunction.PropositionalFunction(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[]):::EXIT
this.name == this.pfClass
this.name == orig(name)
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClasses.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.objectClassMap == domain.objectClassMap
this.domain.objectClassMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.attributes == domain.attributes
this.domain.attributes.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.attributeMap == domain.attributeMap
this.domain.attributeMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctions.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.parameterClasses == orig(parameterClasses)
this.parameterClasses.getClass().getName() == orig(parameterClasses.getClass().getName())
name.toString == orig(name.toString)
domain.objectClasses == orig(domain.objectClasses)
domain.objectClasses[] == orig(domain.objectClasses[])
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClasses.getClass().getName() == orig(domain.objectClasses.getClass().getName())
domain.objectClasses.getClass().getName() == orig(domain.attributes.getClass().getName())
domain.objectClasses.getClass().getName() == orig(domain.propFunctions.getClass().getName())
domain.objectClassMap == orig(domain.objectClassMap)
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain.objectClassMap.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.attributeMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
domain.attributes == orig(domain.attributes)
domain.attributes[] == orig(domain.attributes[])
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
parameterClasses[] == orig(parameterClasses[])
size(domain.propFunctions[])-1 == orig(size(domain.propFunctions[]))
this.name != null
this.domain has only one value
this.domain != null
this.parameterClasses != null
this.parameterOrderGroup != null
domain.objectClasses has only one value
domain.objectClasses != null
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[] elements != null
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap != null
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes != null
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[] elements != null
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.attributeMap != null
domain.propFunctions has only one value
domain.propFunctions != null
domain.propFunctions[] elements != null
domain.propFunctionMap has only one value
domain.propFunctionMap != null
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses[] elements != null
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
this.domain.getClass().getName() != domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != domain.objectClassMap.getClass().getName()
this.parameterClasses.getClass().getName() != domain.objectClasses.getClass().getName()
this.parameterClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.objectClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
===========================================================================
burlap.oomdp.core.PropositionalFunction.getName():::ENTER
this.parameterClasses == this.parameterOrderGroup
this.name != null
this.domain has only one value
this.domain != null
this.parameterClasses == null
this.pfClass == null
===========================================================================
burlap.oomdp.core.PropositionalFunction.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == this.parameterOrderGroup
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses == orig(this.parameterOrderGroup)
this.pfClass == orig(this.pfClass)
return == orig(this.name)
this.domain has only one value
this.domain != null
this.parameterClasses == null
this.pfClass == null
return != null
this.domain.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClasses.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClassMap.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.core.PropositionalFunction.getParameterClasses():::ENTER
this.name == this.pfClass
this.name != null
this.domain has only one value
this.domain != null
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.parameterClasses != null
this.parameterOrderGroup != null
size(this.domain.propFunctions[]) == 18
===========================================================================
burlap.oomdp.core.PropositionalFunction.getParameterClasses():::EXIT
this.name == this.pfClass
this.name == orig(this.name)
this.name == orig(this.pfClass)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == return
this.parameterClasses.getClass().getName() == return.getClass().getName()
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(this.parameterOrderGroup)
this.parameterOrderGroup.getClass().getName() == return.getClass().getName()
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.pfClass.toString == orig(this.pfClass.toString)
return == orig(this.parameterClasses)
return.getClass().getName() == orig(this.parameterClasses.getClass().getName())
return.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
this.name != null
this.domain has only one value
this.domain != null
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.parameterOrderGroup != null
return != null
return.getClass().getName() == java.lang.String[].class
return[] elements != null
size(this.domain.propFunctions[]) == 18
size(return[]) one of { 1, 2 }
this.domain.getClass().getName() != return.getClass().getName()
this.domain.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClasses.getClass().getName() != return.getClass().getName()
this.domain.objectClasses.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClassMap.getClass().getName() != return.getClass().getName()
this.domain.objectClassMap.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.core.PropositionalFunction.getParameterOrderGroups():::ENTER
this.name == this.pfClass
this.name != null
this.domain has only one value
this.domain != null
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.parameterClasses != null
this.parameterOrderGroup != null
size(this.domain.propFunctions[]) == 18
===========================================================================
burlap.oomdp.core.PropositionalFunction.getParameterOrderGroups():::EXIT
this.name == this.pfClass
this.name == orig(this.name)
this.name == orig(this.pfClass)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.domain.objectClasses.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses.getClass().getName() == return.getClass().getName()
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == return
this.parameterOrderGroup.getClass().getName() == return.getClass().getName()
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.pfClass.toString == orig(this.pfClass.toString)
return == orig(this.parameterOrderGroup)
return.getClass().getName() == orig(this.parameterClasses.getClass().getName())
return.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
this.name != null
this.domain has only one value
this.domain != null
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.parameterClasses != null
return != null
return.getClass().getName() == java.lang.String[].class
return[] elements != null
size(this.domain.propFunctions[]) == 18
size(return[]) one of { 1, 2 }
this.domain.getClass().getName() != return.getClass().getName()
this.domain.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClasses.getClass().getName() != return.getClass().getName()
this.domain.objectClasses.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClassMap.getClass().getName() != return.getClass().getName()
this.domain.objectClassMap.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.core.PropositionalFunction.init(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String[], java.lang.String):::ENTER
this.name == this.pfClass
this.parameterClasses == this.parameterOrderGroup
name == pfClass
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
parameterClasses.getClass().getName() == parameterOrderGroup.getClass().getName()
this.name == null
this.domain == null
this.parameterClasses == null
name != null
domain has only one value
domain != null
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses != null
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[] elements != null
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap != null
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes != null
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[] elements != null
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.attributeMap != null
domain.propFunctions has only one value
domain.propFunctions != null
domain.propFunctions[] elements != null
domain.propFunctionMap has only one value
domain.propFunctionMap != null
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses != null
parameterClasses.getClass().getName() == java.lang.String[].class
parameterClasses[] elements != null
parameterOrderGroup != null
parameterOrderGroup[] elements != null
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
size(parameterClasses[]) one of { 1, 2 }
size(parameterOrderGroup[]) one of { 1, 2 }
this.getClass().getName() != domain.getClass().getName()
this.getClass().getName() != domain.objectClasses.getClass().getName()
this.getClass().getName() != domain.objectClassMap.getClass().getName()
this.getClass().getName() != parameterClasses.getClass().getName()
domain.getClass().getName() != domain.objectClasses.getClass().getName()
domain.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.getClass().getName() != parameterClasses.getClass().getName()
domain.objectClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.objectClasses.getClass().getName() != parameterClasses.getClass().getName()
domain.objectClassMap.getClass().getName() != parameterClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.PropositionalFunction.init(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String[], java.lang.String):::EXIT
this.name == this.pfClass
this.name == orig(name)
this.name == orig(pfClass)
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClasses.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.objectClassMap == domain.objectClassMap
this.domain.objectClassMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.attributes == domain.attributes
this.domain.attributes.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.attributeMap == domain.attributeMap
this.domain.attributeMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctions.getClass().getName() == domain.objectClasses.getClass().getName()
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.parameterClasses == orig(parameterClasses)
this.parameterClasses.getClass().getName() == orig(parameterClasses.getClass().getName())
this.parameterClasses.getClass().getName() == orig(parameterOrderGroup.getClass().getName())
this.parameterOrderGroup == orig(parameterOrderGroup)
name.toString == orig(name.toString)
domain.objectClasses == orig(domain.objectClasses)
domain.objectClasses[] == orig(domain.objectClasses[])
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClasses.getClass().getName() == orig(domain.objectClasses.getClass().getName())
domain.objectClasses.getClass().getName() == orig(domain.attributes.getClass().getName())
domain.objectClasses.getClass().getName() == orig(domain.propFunctions.getClass().getName())
domain.objectClassMap == orig(domain.objectClassMap)
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain.objectClassMap.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.attributeMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
domain.attributes == orig(domain.attributes)
domain.attributes[] == orig(domain.attributes[])
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
parameterClasses[] == orig(parameterClasses[])
parameterOrderGroup[] == orig(parameterOrderGroup[])
pfClass.toString == orig(pfClass.toString)
size(domain.propFunctions[])-1 == orig(size(domain.propFunctions[]))
this.name != null
this.domain has only one value
this.domain != null
this.parameterClasses != null
this.parameterOrderGroup != null
domain.objectClasses has only one value
domain.objectClasses != null
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[] elements != null
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap != null
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes != null
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[] elements != null
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.attributeMap != null
domain.propFunctions has only one value
domain.propFunctions != null
domain.propFunctions[] elements != null
domain.propFunctionMap has only one value
domain.propFunctionMap != null
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses[] elements != null
parameterOrderGroup[] elements != null
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
this.domain.getClass().getName() != domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != orig(this.getClass().getName())
this.parameterClasses.getClass().getName() != domain.objectClasses.getClass().getName()
this.parameterClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
this.parameterClasses.getClass().getName() != orig(this.getClass().getName())
domain.objectClasses.getClass().getName() != domain.objectClassMap.getClass().getName()
domain.objectClasses.getClass().getName() != orig(this.getClass().getName())
domain.objectClassMap.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.core.State:::OBJECT
this.objectInstances.getClass().getName() == this.hiddenObjectInstances.getClass().getName()
this.objectMap.getClass().getName() == this.objectIndexByTrueClass.getClass().getName()
this has only one value
this.objectInstances[] elements != null
this.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.objectInstances.getClass().getName() == java.util.ArrayList.class
this.hiddenObjectInstances[] == []
this.hiddenObjectInstances[].getClass().getName() == []
this.objectMap.getClass().getName() == java.util.HashMap.class
this.objectInstances.getClass().getName() != this.objectMap.getClass().getName()
===========================================================================
burlap.oomdp.core.State.State():::EXIT
this.objectInstances has only one value
this.objectInstances[] == []
this.objectInstances[].getClass().getName() == []
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
===========================================================================
burlap.oomdp.core.State.addObject(burlap.oomdp.core.ObjectInstance):::ENTER
this.objectInstances.getClass().getName() == o.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == o.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == o.values.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeMap.getClass().getName()
this.objectInstances has only one value
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
o.obClass.domain has only one value
o.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
o.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
o.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
o.obClass.hidden == false
o.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(o.obClass.attributeList[]) one of { 2, 4, 5 }
size(o.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(o.values[]) one of { 2, 4, 5 }
this.objectInstances.getClass().getName() != o.obClass.domain.getClass().getName()
this.objectMap.getClass().getName() != o.obClass.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.State.addObject(burlap.oomdp.core.ObjectInstance):::EXIT173
===========================================================================
burlap.oomdp.core.State.addObject(burlap.oomdp.core.ObjectInstance):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances.getClass().getName() == o.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == o.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == o.values.getClass().getName()
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.obClass.attributeList.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.obClass.observableAttributeIndices.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.values.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == o.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectMap.getClass().getName() == orig(o.obClass.attributeIndex.getClass().getName())
this.objectMap.getClass().getName() == orig(o.obClass.attributeMap.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
o.obClass == orig(o.obClass)
o.obClass.name == orig(o.obClass.name)
o.obClass.name.toString == orig(o.obClass.name.toString)
o.obClass.domain == orig(o.obClass.domain)
o.obClass.domain.getClass().getName() == orig(o.obClass.domain.getClass().getName())
o.obClass.attributeIndex == orig(o.obClass.attributeIndex)
o.obClass.attributeMap == orig(o.obClass.attributeMap)
o.obClass.attributeList == orig(o.obClass.attributeList)
o.obClass.attributeList[] == orig(o.obClass.attributeList[])
o.obClass.observableAttributeIndices == orig(o.obClass.observableAttributeIndices)
o.obClass.observableAttributeIndices[] == orig(o.obClass.observableAttributeIndices[])
o.obClass.hidden == orig(o.obClass.hidden)
o.name == orig(o.name)
o.name.toString == orig(o.name.toString)
o.values == orig(o.values)
o.values[] == orig(o.values[])
size(this.objectInstances[])-1 == orig(size(this.objectInstances[]))
this.objectInstances has only one value
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
o.obClass.domain has only one value
o.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
o.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
o.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
o.obClass.hidden == false
o.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(o.obClass.attributeList[]) one of { 2, 4, 5 }
size(o.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(o.values[]) one of { 2, 4, 5 }
this.objectInstances.getClass().getName() != o.obClass.domain.getClass().getName()
this.objectMap.getClass().getName() != o.obClass.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.State.addObjectClassIndexing(burlap.oomdp.core.ObjectInstance):::ENTER
this.objectInstances.getClass().getName() == o.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == o.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == o.values.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeMap.getClass().getName()
this.objectInstances has only one value
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
o.obClass.domain has only one value
o.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
o.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
o.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
o.obClass.hidden == false
o.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(o.obClass.attributeList[]) one of { 2, 4, 5 }
size(o.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(o.values[]) one of { 2, 4, 5 }
this.objectInstances.getClass().getName() != o.obClass.domain.getClass().getName()
this.objectMap.getClass().getName() != o.obClass.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.State.addObjectClassIndexing(burlap.oomdp.core.ObjectInstance):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == o.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == o.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == o.values.getClass().getName()
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.obClass.attributeList.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.obClass.observableAttributeIndices.getClass().getName())
this.objectInstances.getClass().getName() == orig(o.values.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == o.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == o.obClass.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectMap.getClass().getName() == orig(o.obClass.attributeIndex.getClass().getName())
this.objectMap.getClass().getName() == orig(o.obClass.attributeMap.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
o.obClass == orig(o.obClass)
o.obClass.name == orig(o.obClass.name)
o.obClass.name.toString == orig(o.obClass.name.toString)
o.obClass.domain == orig(o.obClass.domain)
o.obClass.domain.getClass().getName() == orig(o.obClass.domain.getClass().getName())
o.obClass.attributeIndex == orig(o.obClass.attributeIndex)
o.obClass.attributeMap == orig(o.obClass.attributeMap)
o.obClass.attributeList == orig(o.obClass.attributeList)
o.obClass.attributeList[] == orig(o.obClass.attributeList[])
o.obClass.observableAttributeIndices == orig(o.obClass.observableAttributeIndices)
o.obClass.observableAttributeIndices[] == orig(o.obClass.observableAttributeIndices[])
o.obClass.hidden == orig(o.obClass.hidden)
o.name == orig(o.name)
o.name.toString == orig(o.name.toString)
o.values == orig(o.values)
o.values[] == orig(o.values[])
this.objectInstances has only one value
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
o.obClass.domain has only one value
o.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
o.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
o.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
o.obClass.hidden == false
o.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(o.obClass.attributeList[]) one of { 2, 4, 5 }
size(o.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(o.values[]) one of { 2, 4, 5 }
this.objectInstances.getClass().getName() != o.obClass.domain.getClass().getName()
this.objectMap.getClass().getName() != o.obClass.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getAllCombinationsOfObjects(java.util.List, int):::ENTER
this.objectInstances.getClass().getName() == objects.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
k == 1
size(this.objectInstances[]) == 7
size(objects[]) one of { 1, 2, 3 }
===========================================================================
burlap.oomdp.core.State.getAllCombinationsOfObjects(java.util.List, int):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
objects[] == orig(objects[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(objects.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return != null
return[] elements != null
return[].getClass().getName() elements == java.util.ArrayList.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2, 3 }
this.objectMap.getClass().getName() != return.getClass().getName()
return.getClass().getName() in return[].getClass().getName()
===========================================================================
burlap.oomdp.core.State.getAllGroundedPropsFor(burlap.oomdp.core.PropositionalFunction):::ENTER
this.objectInstances.getClass().getName() == pf.domain.objectClasses.getClass().getName()
this.objectInstances.getClass().getName() == pf.domain.attributes.getClass().getName()
this.objectInstances.getClass().getName() == pf.domain.propFunctions.getClass().getName()
this.objectMap.getClass().getName() == pf.domain.objectClassMap.getClass().getName()
this.objectMap.getClass().getName() == pf.domain.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == pf.domain.propFunctionMap.getClass().getName()
pf.name == pf.pfClass
pf.parameterClasses.getClass().getName() == pf.parameterOrderGroup.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
pf != null
pf.name != null
pf.domain has only one value
pf.domain != null
pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
pf.domain.objectClasses has only one value
pf.domain.objectClasses != null
pf.domain.objectClasses[] contains no nulls and has only one value, of length 4
pf.domain.objectClasses[] elements != null
pf.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
pf.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
pf.domain.objectClassMap has only one value
pf.domain.objectClassMap != null
pf.domain.attributes has only one value
pf.domain.attributes != null
pf.domain.attributes[] contains no nulls and has only one value, of length 8
pf.domain.attributes[] elements != null
pf.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
pf.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
pf.domain.attributeMap has only one value
pf.domain.attributeMap != null
pf.domain.propFunctions has only one value
pf.domain.propFunctions != null
pf.domain.propFunctions[] contains no nulls and has only one value, of length 18
pf.domain.propFunctions[] elements != null
pf.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
pf.domain.propFunctionMap has only one value
pf.domain.propFunctionMap != null
pf.domain.objectIdentifierDependentDomain == false
pf.domain.debugCode == 111
pf.parameterClasses != null
pf.parameterClasses.getClass().getName() == java.lang.String[].class
pf.parameterClasses[] elements != null
pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
pf.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
pf.parameterOrderGroup != null
pf.parameterOrderGroup[] elements != null
pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
pf.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
size(this.objectInstances[]) == 7
size(pf.domain.objectClasses[]) == 4
size(pf.domain.attributes[]) == 8
size(pf.domain.propFunctions[]) == 18
size(pf.parameterClasses[]) one of { 1, 2 }
size(pf.parameterOrderGroup[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != pf.getClass().getName()
this.objectInstances.getClass().getName() != pf.domain.getClass().getName()
this.objectInstances.getClass().getName() != pf.parameterClasses.getClass().getName()
this.objectMap.getClass().getName() != pf.getClass().getName()
this.objectMap.getClass().getName() != pf.domain.getClass().getName()
this.objectMap.getClass().getName() != pf.parameterClasses.getClass().getName()
pf.getClass().getName() != pf.domain.getClass().getName()
pf.getClass().getName() != pf.parameterClasses.getClass().getName()
pf.domain.getClass().getName() != pf.parameterClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getAllGroundedPropsFor(burlap.oomdp.core.PropositionalFunction):::EXIT628
===========================================================================
burlap.oomdp.core.State.getAllGroundedPropsFor(burlap.oomdp.core.PropositionalFunction):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == pf.domain.objectClassMap.getClass().getName()
this.objectMap.getClass().getName() == pf.domain.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == pf.domain.propFunctionMap.getClass().getName()
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectMap.getClass().getName() == orig(pf.domain.objectClassMap.getClass().getName())
this.objectMap.getClass().getName() == orig(pf.domain.attributeMap.getClass().getName())
this.objectMap.getClass().getName() == orig(pf.domain.propFunctionMap.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
pf.name == pf.pfClass
pf.name == orig(pf.name)
pf.name == orig(pf.pfClass)
pf.name.toString == orig(pf.name.toString)
pf.domain == orig(pf.domain)
pf.domain.getClass().getName() == orig(pf.domain.getClass().getName())
pf.domain.objectClasses == orig(pf.domain.objectClasses)
pf.domain.objectClasses[] == orig(pf.domain.objectClasses[])
pf.domain.objectClasses.getClass().getName() == return.getClass().getName()
pf.domain.objectClassMap == orig(pf.domain.objectClassMap)
pf.domain.attributes == orig(pf.domain.attributes)
pf.domain.attributes[] == orig(pf.domain.attributes[])
pf.domain.attributes.getClass().getName() == return.getClass().getName()
pf.domain.attributeMap == orig(pf.domain.attributeMap)
pf.domain.propFunctions == orig(pf.domain.propFunctions)
pf.domain.propFunctions[] == orig(pf.domain.propFunctions[])
pf.domain.propFunctions.getClass().getName() == return.getClass().getName()
pf.domain.propFunctionMap == orig(pf.domain.propFunctionMap)
pf.domain.objectIdentifierDependentDomain == orig(pf.domain.objectIdentifierDependentDomain)
pf.domain.debugCode == orig(pf.domain.debugCode)
pf.parameterClasses == orig(pf.parameterClasses)
pf.parameterClasses.getClass().getName() == pf.parameterOrderGroup.getClass().getName()
pf.parameterClasses.getClass().getName() == orig(pf.parameterClasses.getClass().getName())
pf.parameterClasses.getClass().getName() == orig(pf.parameterOrderGroup.getClass().getName())
pf.parameterClasses[] == orig(pf.parameterClasses[])
pf.parameterOrderGroup == orig(pf.parameterOrderGroup)
pf.parameterOrderGroup[] == orig(pf.parameterOrderGroup[])
pf.pfClass.toString == orig(pf.pfClass.toString)
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(pf.domain.objectClasses.getClass().getName())
return.getClass().getName() == orig(pf.domain.attributes.getClass().getName())
return.getClass().getName() == orig(pf.domain.propFunctions.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
pf.name != null
pf.domain has only one value
pf.domain != null
pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
pf.domain.objectClasses has only one value
pf.domain.objectClasses != null
pf.domain.objectClasses[] contains no nulls and has only one value, of length 4
pf.domain.objectClasses[] elements != null
pf.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
pf.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
pf.domain.objectClassMap has only one value
pf.domain.objectClassMap != null
pf.domain.attributes has only one value
pf.domain.attributes != null
pf.domain.attributes[] contains no nulls and has only one value, of length 8
pf.domain.attributes[] elements != null
pf.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
pf.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
pf.domain.attributeMap has only one value
pf.domain.attributeMap != null
pf.domain.propFunctions has only one value
pf.domain.propFunctions != null
pf.domain.propFunctions[] contains no nulls and has only one value, of length 18
pf.domain.propFunctions[] elements != null
pf.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
pf.domain.propFunctionMap has only one value
pf.domain.propFunctionMap != null
pf.domain.objectIdentifierDependentDomain == false
pf.domain.debugCode == 111
pf.parameterClasses != null
pf.parameterClasses.getClass().getName() == java.lang.String[].class
pf.parameterClasses[] elements != null
pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
pf.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
pf.parameterOrderGroup != null
pf.parameterOrderGroup[] elements != null
pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
pf.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return != null
return[] elements != null
return[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(pf.domain.objectClasses[]) == 4
size(pf.domain.attributes[]) == 8
size(pf.domain.propFunctions[]) == 18
size(pf.parameterClasses[]) one of { 1, 2 }
size(pf.parameterOrderGroup[]) one of { 1, 2 }
size(return[]) one of { 1, 2, 3 }
this.objectMap.getClass().getName() != pf.domain.getClass().getName()
this.objectMap.getClass().getName() != pf.parameterClasses.getClass().getName()
this.objectMap.getClass().getName() != return.getClass().getName()
this.objectMap.getClass().getName() != orig(pf.getClass().getName())
pf.domain.getClass().getName() != pf.parameterClasses.getClass().getName()
pf.domain.getClass().getName() != return.getClass().getName()
pf.domain.getClass().getName() != orig(pf.getClass().getName())
pf.parameterClasses.getClass().getName() != return.getClass().getName()
pf.parameterClasses.getClass().getName() != orig(pf.getClass().getName())
return.getClass().getName() != orig(pf.getClass().getName())
===========================================================================
burlap.oomdp.core.State.getBindngFromCombinationSet(java.util.List, java.util.List, java.lang.String[]):::ENTER
this.objectInstances.getClass().getName() == comboSets.getClass().getName()
this.objectInstances.getClass().getName() == orderGroupAssociatedWithSet.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
comboSets != null
comboSets[] elements != null
comboSets[].getClass().getName() elements == java.util.ArrayList.class
comboSets[].getClass().getName() one of { [java.util.ArrayList], [java.util.ArrayList, java.util.ArrayList] }
orderGroupAssociatedWithSet != null
orderGroupAssociatedWithSet[] elements != null
orderGroupAssociatedWithSet[].getClass().getName() elements == java.lang.String.class
orderGroupAssociatedWithSet[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
orderGroups != null
orderGroups.getClass().getName() == java.lang.String[].class
orderGroups[] elements != null
size(this.objectInstances[]) == 7
size(comboSets[]) one of { 1, 2 }
size(orderGroupAssociatedWithSet[]) one of { 1, 2 }
size(orderGroups[]) one of { 1, 2 }
this.objectInstances.getClass().getName() in comboSets[].getClass().getName()
this.objectInstances.getClass().getName() != orderGroups.getClass().getName()
this.objectMap.getClass().getName() != orderGroups.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getBindngFromCombinationSet(java.util.List, java.util.List, java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
comboSets[] == orig(comboSets[])
orderGroupAssociatedWithSet[] == orig(orderGroupAssociatedWithSet[])
orderGroups[] == orig(orderGroups[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(comboSets.getClass().getName())
return.getClass().getName() == orig(orderGroupAssociatedWithSet.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
comboSets[] elements != null
comboSets[].getClass().getName() elements == java.util.ArrayList.class
comboSets[].getClass().getName() one of { [java.util.ArrayList], [java.util.ArrayList, java.util.ArrayList] }
orderGroupAssociatedWithSet[] elements != null
orderGroupAssociatedWithSet[].getClass().getName() elements == java.lang.String.class
orderGroupAssociatedWithSet[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
orderGroups[] elements != null
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.String.class
return[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2 }
this.objectMap.getClass().getName() != return.getClass().getName()
this.objectMap.getClass().getName() != orig(orderGroups.getClass().getName())
return.getClass().getName() in comboSets[].getClass().getName()
return.getClass().getName() != orig(orderGroups.getClass().getName())
===========================================================================
burlap.oomdp.core.State.getFirstObjectOfClass(java.lang.String):::ENTER
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
oclass has only one value
oclass.toString == "agent"
size(this.objectInstances[]) == 7
===========================================================================
burlap.oomdp.core.State.getFirstObjectOfClass(java.lang.String):::EXIT495
===========================================================================
burlap.oomdp.core.State.getFirstObjectOfClass(java.lang.String):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == return.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == return.values.getClass().getName()
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == return.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == return.obClass.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
oclass.toString == orig(oclass.toString)
return.obClass.name == orig(oclass)
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
oclass.toString == "agent"
return has only one value
return.obClass has only one value
return.obClass.name.toString == "agent"
return.obClass.domain has only one value
return.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.obClass.attributeIndex has only one value
return.obClass.attributeMap has only one value
return.obClass.attributeList has only one value
return.obClass.attributeList[] contains no nulls and has only one value, of length 2
return.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.obClass.observableAttributeIndices has only one value
return.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 2
return.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer]
return.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
return.obClass.hidden == false
return.name has only one value
return.name.toString == "agent0"
return.values has only one value
return.values[] contains no nulls and has only one value, of length 2
return.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue]
return.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(this.objectInstances[]) == 7
size(return.obClass.attributeList[]) == 2
size(return.obClass.observableAttributeIndices[]) == 2
size(return.values[]) == 2
===========================================================================
burlap.oomdp.core.State.getListOfBindingsFromCombination(java.util.List, int[]):::ENTER
this.objectInstances.getClass().getName() == objects.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
comb != null
comb[] elements one of { 0, 1, 2 }
comb[] one of { [0], [1], [2] }
size(this.objectInstances[]) == 7
size(objects[]) one of { 1, 2, 3 }
size(comb[]) == 1
comb[] elements >= size(comb[])-1
===========================================================================
burlap.oomdp.core.State.getListOfBindingsFromCombination(java.util.List, int[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
objects[] == orig(objects[])
comb[] == orig(comb[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(objects.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
comb[] elements one of { 0, 1, 2 }
comb[] one of { [0], [1], [2] }
return != null
return[] elements != null
return[].getClass().getName() == [java.lang.String]
return[].getClass().getName() elements == java.lang.String.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) == 1
this.objectMap.getClass().getName() != return.getClass().getName()
comb[] elements >= size(comb[])-1
===========================================================================
burlap.oomdp.core.State.getNumOccurencesOfClassInParameters(java.lang.String, java.lang.String[]):::ENTER
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
className != null
paramClasses != null
paramClasses.getClass().getName() == java.lang.String[].class
paramClasses[] elements != null
size(this.objectInstances[]) == 7
size(paramClasses[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != paramClasses.getClass().getName()
this.objectMap.getClass().getName() != paramClasses.getClass().getName()
className in paramClasses[]
===========================================================================
burlap.oomdp.core.State.getNumOccurencesOfClassInParameters(java.lang.String, java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
className.toString == orig(className.toString)
paramClasses[] == orig(paramClasses[])
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
paramClasses[] elements != null
return == 1
size(this.objectInstances[]) == 7
this.objectInstances.getClass().getName() != orig(paramClasses.getClass().getName())
this.objectMap.getClass().getName() != orig(paramClasses.getClass().getName())
orig(className) in paramClasses[]
===========================================================================
burlap.oomdp.core.State.getObject(java.lang.String):::ENTER
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
oname != null
size(this.objectInstances[]) == 7
===========================================================================
burlap.oomdp.core.State.getObject(java.lang.String):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.obClass.attributeList.getClass().getName()
this.objectInstances.getClass().getName() == return.obClass.observableAttributeIndices.getClass().getName()
this.objectInstances.getClass().getName() == return.values.getClass().getName()
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == return.obClass.attributeIndex.getClass().getName()
this.objectMap.getClass().getName() == return.obClass.attributeMap.getClass().getName()
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
oname.toString == orig(oname.toString)
return.name == orig(oname)
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
return != null
return.obClass != null
return.obClass.name != null
return.obClass.domain has only one value
return.obClass.domain != null
return.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.obClass.attributeIndex != null
return.obClass.attributeMap != null
return.obClass.attributeList != null
return.obClass.attributeList[] elements != null
return.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.obClass.observableAttributeIndices != null
return.obClass.observableAttributeIndices[] elements != null
return.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
return.obClass.hidden == false
return.name != null
return.values != null
return.values[] elements != null
return.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
size(this.objectInstances[]) == 7
size(return.obClass.attributeList[]) one of { 2, 4, 5 }
size(return.obClass.observableAttributeIndices[]) one of { 2, 4, 5 }
size(return.values[]) one of { 2, 4, 5 }
this.objectInstances.getClass().getName() != return.obClass.domain.getClass().getName()
this.objectMap.getClass().getName() != return.obClass.domain.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getObjectsOfTrueClass(java.lang.String):::ENTER
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
size(this.objectInstances[]) == 7
===========================================================================
burlap.oomdp.core.State.getObjectsOfTrueClass(java.lang.String):::EXIT483
===========================================================================
burlap.oomdp.core.State.getObjectsOfTrueClass(java.lang.String):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
oclass.toString == orig(oclass.toString)
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
return[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2, 3 }
this.objectMap.getClass().getName() != return.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getObservableObjects():::ENTER
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
size(this.objectInstances[]) == 7
===========================================================================
burlap.oomdp.core.State.getObservableObjects():::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances has only one value
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
return[] contains no nulls and has only one value, of length 7
return[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
return[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) == 7
===========================================================================
burlap.oomdp.core.State.getPossibleBindingsGivenParamOrderGroups(java.lang.String[], java.lang.String[]):::ENTER
paramClasses.getClass().getName() == paramOrderGroups.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
paramClasses != null
paramClasses.getClass().getName() == java.lang.String[].class
paramClasses[] elements != null
paramOrderGroups != null
paramOrderGroups[] elements != null
size(this.objectInstances[]) == 7
size(paramClasses[]) one of { 1, 2 }
size(paramOrderGroups[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != paramClasses.getClass().getName()
this.objectMap.getClass().getName() != paramClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getPossibleBindingsGivenParamOrderGroups(java.lang.String[], java.lang.String[]):::EXIT683
===========================================================================
burlap.oomdp.core.State.getPossibleBindingsGivenParamOrderGroups(java.lang.String[], java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
paramClasses[] == orig(paramClasses[])
paramOrderGroups[] == orig(paramOrderGroups[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
paramClasses[] elements != null
paramOrderGroups[] elements != null
return != null
return[] elements != null
return[].getClass().getName() elements == java.util.ArrayList.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2, 3 }
this.objectMap.getClass().getName() != return.getClass().getName()
this.objectMap.getClass().getName() != orig(paramClasses.getClass().getName())
return.getClass().getName() in return[].getClass().getName()
return.getClass().getName() != orig(paramClasses.getClass().getName())
===========================================================================
burlap.oomdp.core.State.getPossibleRenameBindingsHelper(java.util.List, java.util.List, int, java.util.List, java.util.List, java.lang.String[], java.lang.String[]):::ENTER
this.objectInstances.getClass().getName() == res.getClass().getName()
this.objectInstances.getClass().getName() == currentBindingSets.getClass().getName()
this.objectInstances.getClass().getName() == remainingObjects.getClass().getName()
this.objectInstances.getClass().getName() == uniqueOrderGroups.getClass().getName()
paramClasses.getClass().getName() == paramOrderGroups.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
res != null
res[] elements != null
res[].getClass().getName() elements == java.util.ArrayList.class
currentBindingSets != null
currentBindingSets[] elements != null
currentBindingSets[].getClass().getName() elements == java.util.ArrayList.class
bindIndex one of { 0, 1, 2 }
remainingObjects != null
remainingObjects[] elements != null
remainingObjects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
uniqueOrderGroups != null
uniqueOrderGroups[] elements != null
uniqueOrderGroups[].getClass().getName() elements == java.lang.String.class
uniqueOrderGroups[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
paramClasses != null
paramClasses.getClass().getName() == java.lang.String[].class
paramClasses[] elements != null
paramOrderGroups != null
paramOrderGroups[] elements != null
size(this.objectInstances[]) == 7
size(res[]) one of { 0, 1, 2 }
size(currentBindingSets[]) one of { 0, 1, 2 }
size(remainingObjects[]) one of { 5, 6, 7 }
size(uniqueOrderGroups[]) one of { 1, 2 }
size(paramClasses[]) one of { 1, 2 }
size(paramOrderGroups[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != paramClasses.getClass().getName()
this.objectMap.getClass().getName() != paramClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.State.getPossibleRenameBindingsHelper(java.util.List, java.util.List, int, java.util.List, java.util.List, java.lang.String[], java.lang.String[]):::EXIT704
size(res[])-1 == orig(size(res[]))
currentBindingSets[].getClass().getName() one of { [java.util.ArrayList], [java.util.ArrayList, java.util.ArrayList] }
remainingObjects[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
orig(bindIndex) one of { 1, 2 }
orig(size(currentBindingSets[])) one of { 1, 2 }
orig(size(remainingObjects[])) one of { 5, 6 }
this.objectInstances.getClass().getName() in currentBindingSets[].getClass().getName()
===========================================================================
burlap.oomdp.core.State.getPossibleRenameBindingsHelper(java.util.List, java.util.List, int, java.util.List, java.util.List, java.lang.String[], java.lang.String[]):::EXIT730
currentBindingSets[].getClass().getName() one of { [], [java.util.ArrayList] }
remainingObjects[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
orig(res[]) == []
orig(res[].getClass().getName()) == []
orig(bindIndex) one of { 0, 1 }
orig(size(currentBindingSets[])) one of { 0, 1 }
orig(size(remainingObjects[])) one of { 6, 7 }
===========================================================================
burlap.oomdp.core.State.getPossibleRenameBindingsHelper(java.util.List, java.util.List, int, java.util.List, java.util.List, java.lang.String[], java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(res.getClass().getName())
this.objectInstances.getClass().getName() == orig(currentBindingSets.getClass().getName())
this.objectInstances.getClass().getName() == orig(remainingObjects.getClass().getName())
this.objectInstances.getClass().getName() == orig(uniqueOrderGroups.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
currentBindingSets[] == orig(currentBindingSets[])
remainingObjects[] == orig(remainingObjects[])
uniqueOrderGroups[] == orig(uniqueOrderGroups[])
paramClasses[] == orig(paramClasses[])
paramOrderGroups[] == orig(paramOrderGroups[])
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
res[] elements != null
res[].getClass().getName() elements == java.util.ArrayList.class
currentBindingSets[] elements != null
currentBindingSets[].getClass().getName() elements == java.util.ArrayList.class
remainingObjects[] elements != null
remainingObjects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
uniqueOrderGroups[] elements != null
uniqueOrderGroups[].getClass().getName() elements == java.lang.String.class
uniqueOrderGroups[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
paramClasses[] elements != null
paramOrderGroups[] elements != null
size(this.objectInstances[]) == 7
this.objectInstances.getClass().getName() in res[].getClass().getName()
this.objectInstances.getClass().getName() != orig(paramClasses.getClass().getName())
this.objectMap.getClass().getName() != orig(paramClasses.getClass().getName())
size(res[])-1 >= orig(size(res[]))
===========================================================================
burlap.oomdp.core.State.identifyUniqueClassesInParameters(java.lang.String[]):::ENTER
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
paramClasses != null
paramClasses.getClass().getName() == java.lang.String[].class
paramClasses[] elements != null
size(this.objectInstances[]) == 7
size(paramClasses[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != paramClasses.getClass().getName()
this.objectMap.getClass().getName() != paramClasses.getClass().getName()
===========================================================================
burlap.oomdp.core.State.identifyUniqueClassesInParameters(java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
paramClasses[] == orig(paramClasses[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
paramClasses[] elements != null
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.String.class
return[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2 }
this.objectMap.getClass().getName() != return.getClass().getName()
this.objectMap.getClass().getName() != orig(paramClasses.getClass().getName())
return.getClass().getName() != orig(paramClasses.getClass().getName())
===========================================================================
burlap.oomdp.core.State.initDataStructures():::ENTER
this.objectInstances == null
this.hiddenObjectInstances == null
this.objectMap == null
this.objectIndexByTrueClass == null
===========================================================================
burlap.oomdp.core.State.initDataStructures():::EXIT
this.objectInstances has only one value
this.objectInstances[] == []
this.objectInstances[].getClass().getName() == []
this.hiddenObjectInstances has only one value
this.objectMap has only one value
this.objectIndexByTrueClass has only one value
===========================================================================
burlap.oomdp.core.State.initialComb(int, int):::ENTER
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
k == 1
n one of { 1, 2, 3 }
size(this.objectInstances[]) == 7
===========================================================================
burlap.oomdp.core.State.initialComb(int, int):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
orig(k) == size(return[])
size(return[])-1 == return[orig(k)-1]
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
return != null
return[] == [0]
return[] elements == 0
size(this.objectInstances[]) == 7
return[] elements == size(return[])-1
===========================================================================
burlap.oomdp.core.State.nextComb(int[], int, int):::ENTER
k == size(comb[])
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
comb != null
comb[] elements one of { 0, 1, 2 }
comb[] one of { [0], [1], [2] }
k == 1
n one of { 1, 2, 3 }
size(this.objectInstances[]) == 7
comb[] elements < n
comb[] elements >= size(comb[])-1
comb[] elements == comb[k-1]
k <= n
n > comb[k-1]
size(comb[])-1 <= comb[k-1]
===========================================================================
burlap.oomdp.core.State.nextComb(int[], int, int):::EXIT895
orig(n) == comb[orig(k)-1]
return == 0
comb[] elements == orig(n)
===========================================================================
burlap.oomdp.core.State.nextComb(int[], int, int):::EXIT904
comb[] elements one of { 1, 2 }
comb[] one of { [1], [2] }
return == 1
orig(comb[]) elements one of { 0, 1 }
orig(comb[]) one of { [0], [1] }
orig(n) one of { 2, 3 }
comb[] elements < orig(n)
orig(comb[]) elements <= orig(k)
orig(k) < orig(n)
orig(k) >= orig(comb[k-1])
orig(n) > comb[orig(k)-1]
===========================================================================
burlap.oomdp.core.State.nextComb(int[], int, int):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
(return == 0)  <==>  (orig(n) == comb[orig(k)-1])
(return == 0)  ==>  (comb[] elements == orig(n))
(return == 0)  ==>  (comb[] elements one of { 1, 2, 3 })
(return == 0)  ==>  (comb[] one of { [1], [2], [3] })
(return == 0)  ==>  (comb[orig(k)-1] one of { 1, 2, 3 })
(return == 0)  ==>  (orig(comb[]) elements one of { 0, 1, 2 })
(return == 0)  ==>  (orig(comb[]) one of { [0], [1], [2] })
(return == 0)  ==>  (orig(n) one of { 1, 2, 3 })
(return == 1)  <==>  (orig(n) > comb[orig(k)-1])
(return == 1)  ==>  (comb[] elements < orig(n))
(return == 1)  ==>  (comb[] elements one of { 1, 2 })
(return == 1)  ==>  (comb[] one of { [1], [2] })
(return == 1)  ==>  (orig(comb[]) elements <= orig(k))
(return == 1)  ==>  (orig(comb[]) elements one of { 0, 1 })
(return == 1)  ==>  (orig(comb[]) one of { [0], [1] })
(return == 1)  ==>  (orig(k) < orig(n))
(return == 1)  ==>  (orig(k) >= orig(comb[k-1]))
(return == 1)  ==>  (orig(n) one of { 2, 3 })
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
comb[] elements one of { 1, 2, 3 }
comb[] one of { [1], [2], [3] }
return one of { 0, 1 }
size(this.objectInstances[]) == 7
comb[] > orig(comb[]) (elementwise)
comb[] elements >= orig(k)
comb[] elements <= orig(n)
comb[] elements == comb[orig(k)-1]
comb[] elements > orig(comb[k-1])
orig(comb[]) elements >= size(comb[])-1
orig(comb[]) elements < comb[orig(k)-1]
orig(k) <= comb[orig(k)-1]
orig(n) >= comb[orig(k)-1]
size(comb[])-1 <= orig(comb[k-1])
===========================================================================
burlap.oomdp.core.State.numOccurencesOfOrderGroup(java.lang.String, java.lang.String[]):::ENTER
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
rename != null
orderGroups != null
orderGroups.getClass().getName() == java.lang.String[].class
orderGroups[] elements != null
size(this.objectInstances[]) == 7
size(orderGroups[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != orderGroups.getClass().getName()
this.objectMap.getClass().getName() != orderGroups.getClass().getName()
rename in orderGroups[]
===========================================================================
burlap.oomdp.core.State.numOccurencesOfOrderGroup(java.lang.String, java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
rename.toString == orig(rename.toString)
orderGroups[] == orig(orderGroups[])
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
orderGroups[] elements != null
return == 1
size(this.objectInstances[]) == 7
this.objectInstances.getClass().getName() != orig(orderGroups.getClass().getName())
this.objectMap.getClass().getName() != orig(orderGroups.getClass().getName())
orig(rename) in orderGroups[]
===========================================================================
burlap.oomdp.core.State.objectListDifference(java.util.List, java.util.List):::ENTER
this.objectInstances.getClass().getName() == objects.getClass().getName()
this.objectInstances.getClass().getName() == toRemove.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
objects[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
toRemove != null
toRemove[] elements != null
toRemove[].getClass().getName() == [java.lang.String]
toRemove[].getClass().getName() elements == java.lang.String.class
size(this.objectInstances[]) == 7
size(objects[]) one of { 6, 7 }
size(toRemove[]) == 1
===========================================================================
burlap.oomdp.core.State.objectListDifference(java.util.List, java.util.List):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
objects[] == orig(objects[])
toRemove[] == orig(toRemove[])
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(objects.getClass().getName())
return.getClass().getName() == orig(toRemove.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
objects[] elements != null
objects[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
objects[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
toRemove[] elements != null
toRemove[].getClass().getName() == [java.lang.String]
toRemove[].getClass().getName() elements == java.lang.String.class
return != null
return[] elements != null
return[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 5, 6 }
this.objectMap.getClass().getName() != return.getClass().getName()
===========================================================================
burlap.oomdp.core.State.objectsMatchingClass(java.util.List, java.lang.String):::ENTER
this.objectInstances.getClass().getName() == sourceObs.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
sourceObs != null
sourceObs[] elements != null
sourceObs[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
sourceObs[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
cname != null
size(this.objectInstances[]) == 7
size(sourceObs[]) one of { 6, 7 }
===========================================================================
burlap.oomdp.core.State.objectsMatchingClass(java.util.List, java.lang.String):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == return.getClass().getName()
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
sourceObs[] == orig(sourceObs[])
cname.toString == orig(cname.toString)
return.getClass().getName() == orig(this.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(sourceObs.getClass().getName())
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
sourceObs[] elements != null
sourceObs[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
sourceObs[].getClass().getName() one of { [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance], [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance] }
return != null
return[] elements != null
return[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.getClass().getName() == java.util.ArrayList.class
size(this.objectInstances[]) == 7
size(return[]) one of { 1, 2, 3 }
this.objectMap.getClass().getName() != return.getClass().getName()
===========================================================================
burlap.oomdp.core.State.parameterClassAssociatedWithOrderGroup(java.lang.String, java.lang.String[], java.lang.String[]):::ENTER
orderGroups.getClass().getName() == paramClasses.getClass().getName()
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
orderGroup != null
orderGroups != null
orderGroups.getClass().getName() == java.lang.String[].class
orderGroups[] elements != null
paramClasses != null
paramClasses[] elements != null
size(this.objectInstances[]) == 7
size(orderGroups[]) one of { 1, 2 }
size(paramClasses[]) one of { 1, 2 }
this.objectInstances.getClass().getName() != orderGroups.getClass().getName()
this.objectMap.getClass().getName() != orderGroups.getClass().getName()
orderGroup in orderGroups[]
===========================================================================
burlap.oomdp.core.State.parameterClassAssociatedWithOrderGroup(java.lang.String, java.lang.String[], java.lang.String[]):::EXIT781
===========================================================================
burlap.oomdp.core.State.parameterClassAssociatedWithOrderGroup(java.lang.String, java.lang.String[], java.lang.String[]):::EXIT
this.objectInstances == orig(this.objectInstances)
this.objectInstances[] == orig(this.objectInstances[])
this.objectInstances.getClass().getName() == orig(this.objectInstances.getClass().getName())
this.objectInstances.getClass().getName() == orig(this.hiddenObjectInstances.getClass().getName())
this.hiddenObjectInstances == orig(this.hiddenObjectInstances)
this.hiddenObjectInstances[] == orig(this.hiddenObjectInstances[])
this.objectMap == orig(this.objectMap)
this.objectMap.getClass().getName() == orig(this.objectMap.getClass().getName())
this.objectMap.getClass().getName() == orig(this.objectIndexByTrueClass.getClass().getName())
this.objectIndexByTrueClass == orig(this.objectIndexByTrueClass)
orderGroup.toString == orig(orderGroup.toString)
orderGroups[] == orig(orderGroups[])
paramClasses[] == orig(paramClasses[])
this.objectInstances has only one value
this.objectInstances != null
this.objectInstances[] contains no nulls and has only one value, of length 7
this.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.hiddenObjectInstances has only one value
this.hiddenObjectInstances != null
this.objectMap has only one value
this.objectMap != null
this.objectIndexByTrueClass has only one value
this.objectIndexByTrueClass != null
orderGroups[] elements != null
paramClasses[] elements != null
return != null
size(this.objectInstances[]) == 7
this.objectInstances.getClass().getName() != orig(orderGroups.getClass().getName())
this.objectMap.getClass().getName() != orig(orderGroups.getClass().getName())
orig(orderGroup) in orderGroups[]
return in paramClasses[]
===========================================================================
burlap.oomdp.core.Value:::OBJECT
this.attribute.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.domain.attributes.getClass().getName()
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.domain.propFunctions.getClass().getName()
this.attribute.domain.objectClassMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.attributeMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.propFunctionMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.getClass().getName() == burlap.oomdp.core.values.DiscreteValue.class
this.attribute != null
this.attribute.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
this.attribute.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
this.attribute.domain has only one value
this.attribute.domain != null
this.attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.attribute.domain.objectClasses has only one value
this.attribute.domain.objectClasses != null
this.attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.attribute.domain.objectClasses[] elements != null
this.attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.attribute.domain.objectClassMap has only one value
this.attribute.domain.objectClassMap != null
this.attribute.domain.attributes has only one value
this.attribute.domain.attributes != null
this.attribute.domain.attributes[] contains no nulls and has only one value, of length 8
this.attribute.domain.attributes[] elements != null
this.attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.attribute.domain.attributeMap has only one value
this.attribute.domain.attributeMap != null
this.attribute.domain.propFunctions has only one value
this.attribute.domain.propFunctions != null
this.attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.attribute.domain.propFunctions[] elements != null
this.attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.attribute.domain.propFunctionMap has only one value
this.attribute.domain.propFunctionMap != null
this.attribute.domain.objectIdentifierDependentDomain == false
this.attribute.domain.debugCode == 111
this.attribute.lowerLim == 0.0
this.attribute.upperLim one of { 3.0, 4.0, 24.0 }
this.attribute.discValuesHash != null
this.attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
this.attribute.discValues != null
this.attribute.discValues[] elements != null
this.attribute.discValues[].getClass().getName() elements == java.lang.String.class
this.attribute.hidden == false
this.isObservable == true
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(this.attribute.domain.objectClasses[]) == 4
size(this.attribute.domain.attributes[]) == 8
size(this.attribute.domain.propFunctions[]) == 18
size(this.attribute.discValues[]) one of { 4, 5, 25 }
this.getClass().getName() != burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName()
this.getClass().getName() != this.attribute.domain.getClass().getName()
this.getClass().getName() != this.attribute.domain.objectClasses.getClass().getName()
this.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
this.getClass().getName() != this.attribute.discValues.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.discValues.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.discValues.getClass().getName()
this.attribute.domain.objectClasses.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
this.attribute.discValuesHash.getClass().getName() != this.attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.Value.Value(burlap.oomdp.core.Attribute):::ENTER
attribute.type == burlap.oomdp.core.Attribute$AttributeType.DISC
attribute.domain.objectClasses.getClass().getName() == attribute.domain.attributes.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == attribute.domain.propFunctions.getClass().getName()
attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute != null
attribute.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
attribute.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
attribute.domain has only one value
attribute.domain != null
attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
attribute.domain.objectClasses has only one value
attribute.domain.objectClasses != null
attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
attribute.domain.objectClasses[] elements != null
attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
attribute.domain.objectClassMap has only one value
attribute.domain.objectClassMap != null
attribute.domain.attributes has only one value
attribute.domain.attributes != null
attribute.domain.attributes[] contains no nulls and has only one value, of length 8
attribute.domain.attributes[] elements != null
attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
attribute.domain.attributeMap has only one value
attribute.domain.attributeMap != null
attribute.domain.propFunctions has only one value
attribute.domain.propFunctions != null
attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
attribute.domain.propFunctions[] elements != null
attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
attribute.domain.propFunctionMap has only one value
attribute.domain.propFunctionMap != null
attribute.domain.objectIdentifierDependentDomain == false
attribute.domain.debugCode == 111
attribute.lowerLim == 0.0
attribute.upperLim one of { 3.0, 4.0, 24.0 }
attribute.discValuesHash != null
attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
attribute.discValues != null
attribute.discValues[] elements != null
attribute.discValues[].getClass().getName() elements == java.lang.String.class
attribute.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(attribute.domain.objectClasses[]) == 4
size(attribute.domain.attributes[]) == 8
size(attribute.domain.propFunctions[]) == 18
size(attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.objectClasses.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.discValuesHash.getClass().getName() != attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.Value.Value(burlap.oomdp.core.Attribute):::EXIT
this.attribute == orig(attribute)
this.attribute.name == attribute.name
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == attribute.type.intVal
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == attribute.domain
this.attribute.domain.getClass().getName() == attribute.domain.getClass().getName()
this.attribute.domain.objectClasses == attribute.domain.objectClasses
this.attribute.domain.objectClasses.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.objectClassMap == attribute.domain.objectClassMap
this.attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.attributes == attribute.domain.attributes
this.attribute.domain.attributes.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.attributeMap == attribute.domain.attributeMap
this.attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.propFunctions == attribute.domain.propFunctions
this.attribute.domain.propFunctions.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.propFunctionMap == attribute.domain.propFunctionMap
this.attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.objectIdentifierDependentDomain == attribute.domain.objectIdentifierDependentDomain
this.attribute.domain.debugCode == attribute.domain.debugCode
this.attribute.lowerLim == attribute.lowerLim
this.attribute.upperLim == attribute.upperLim
this.attribute.discValuesHash == attribute.discValuesHash
this.attribute.discValuesHash.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.discValues == attribute.discValues
this.attribute.discValues.getClass().getName() == attribute.discValues.getClass().getName()
this.attribute.hidden == attribute.hidden
attribute.name == orig(attribute.name)
attribute.name.toString == orig(attribute.name.toString)
attribute.type.intVal == orig(attribute.type.intVal)
attribute.domain == orig(attribute.domain)
attribute.domain.getClass().getName() == orig(attribute.domain.getClass().getName())
attribute.domain.objectClasses == orig(attribute.domain.objectClasses)
attribute.domain.objectClasses[] == orig(attribute.domain.objectClasses[])
attribute.domain.objectClasses.getClass().getName() == attribute.domain.attributes.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == attribute.domain.propFunctions.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.objectClasses.getClass().getName())
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.attributes.getClass().getName())
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.propFunctions.getClass().getName())
attribute.domain.objectClassMap == orig(attribute.domain.objectClassMap)
attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.attributes == orig(attribute.domain.attributes)
attribute.domain.attributes[] == orig(attribute.domain.attributes[])
attribute.domain.attributeMap == orig(attribute.domain.attributeMap)
attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.propFunctions == orig(attribute.domain.propFunctions)
attribute.domain.propFunctions[] == orig(attribute.domain.propFunctions[])
attribute.domain.propFunctionMap == orig(attribute.domain.propFunctionMap)
attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.objectIdentifierDependentDomain == orig(attribute.domain.objectIdentifierDependentDomain)
attribute.domain.debugCode == orig(attribute.domain.debugCode)
attribute.lowerLim == orig(attribute.lowerLim)
attribute.upperLim == orig(attribute.upperLim)
attribute.discValuesHash == orig(attribute.discValuesHash)
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.objectClassMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.attributeMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.propFunctionMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.discValuesHash.getClass().getName())
attribute.discValues == orig(attribute.discValues)
attribute.discValues[] == orig(attribute.discValues[])
attribute.discValues.getClass().getName() == orig(attribute.discValues.getClass().getName())
attribute.hidden == orig(attribute.hidden)
attribute.name != null
attribute.type.intVal == 0
attribute.domain has only one value
attribute.domain != null
attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
attribute.domain.objectClasses has only one value
attribute.domain.objectClasses != null
attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
attribute.domain.objectClasses[] elements != null
attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
attribute.domain.objectClassMap has only one value
attribute.domain.objectClassMap != null
attribute.domain.attributes has only one value
attribute.domain.attributes != null
attribute.domain.attributes[] contains no nulls and has only one value, of length 8
attribute.domain.attributes[] elements != null
attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
attribute.domain.attributeMap has only one value
attribute.domain.attributeMap != null
attribute.domain.propFunctions has only one value
attribute.domain.propFunctions != null
attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
attribute.domain.propFunctions[] elements != null
attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
attribute.domain.propFunctionMap has only one value
attribute.domain.propFunctionMap != null
attribute.domain.objectIdentifierDependentDomain == false
attribute.domain.debugCode == 111
attribute.lowerLim == 0.0
attribute.upperLim one of { 3.0, 4.0, 24.0 }
attribute.discValuesHash != null
attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
attribute.discValues != null
attribute.discValues[] elements != null
attribute.discValues[].getClass().getName() elements == java.lang.String.class
attribute.hidden == false
size(attribute.domain.objectClasses[]) == 4
size(attribute.domain.attributes[]) == 8
size(attribute.domain.propFunctions[]) == 18
size(attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.objectClasses.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.discValuesHash.getClass().getName() != attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.Value.Value(burlap.oomdp.core.Value):::ENTER
v != null
v.getClass().getName() == burlap.oomdp.core.values.DiscreteValue.class
v.attribute != null
v.attribute.name != null
v.attribute.type has only one value
v.attribute.type != null
v.attribute.domain has only one value
v.attribute.domain != null
v.attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
v.attribute.lowerLim == 0.0
v.attribute.upperLim one of { 3.0, 4.0, 24.0 }
v.attribute.discValuesHash != null
v.attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
v.attribute.discValues != null
v.attribute.discValues[] elements != null
v.attribute.discValues[].getClass().getName() elements == java.lang.String.class
v.attribute.hidden == false
v.isObservable == true
size(v.attribute.discValues[]) one of { 4, 5, 25 }
v.getClass().getName() != v.attribute.domain.getClass().getName()
v.getClass().getName() != v.attribute.discValuesHash.getClass().getName()
v.getClass().getName() != v.attribute.discValues.getClass().getName()
v.attribute.domain.getClass().getName() != v.attribute.discValuesHash.getClass().getName()
v.attribute.domain.getClass().getName() != v.attribute.discValues.getClass().getName()
v.attribute.discValuesHash.getClass().getName() != v.attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.Value.Value(burlap.oomdp.core.Value):::EXIT
this.attribute == v.attribute
this.attribute == orig(v.attribute)
this.attribute.name == v.attribute.name
this.attribute.name == orig(v.attribute.name)
burlap.oomdp.core.Attribute$AttributeType.DISC == v.attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(v.attribute.type)
this.attribute.domain == v.attribute.domain
this.attribute.domain == orig(v.attribute.domain)
this.attribute.domain.getClass().getName() == v.attribute.domain.getClass().getName()
this.attribute.domain.getClass().getName() == orig(v.attribute.domain.getClass().getName())
this.attribute.lowerLim == v.attribute.lowerLim
this.attribute.lowerLim == orig(v.attribute.lowerLim)
this.attribute.upperLim == v.attribute.upperLim
this.attribute.upperLim == orig(v.attribute.upperLim)
this.attribute.discValuesHash == v.attribute.discValuesHash
this.attribute.discValuesHash == orig(v.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == v.attribute.discValuesHash.getClass().getName()
this.attribute.discValuesHash.getClass().getName() == orig(v.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == v.attribute.discValues
this.attribute.discValues == orig(v.attribute.discValues)
this.attribute.discValues.getClass().getName() == v.attribute.discValues.getClass().getName()
this.attribute.discValues.getClass().getName() == orig(v.attribute.discValues.getClass().getName())
this.attribute.hidden == v.attribute.hidden
this.attribute.hidden == orig(v.attribute.hidden)
v.attribute.name.toString == orig(v.attribute.name.toString)
v.attribute.discValues[] == orig(v.attribute.discValues[])
v.isObservable == orig(v.isObservable)
v.attribute.discValues[] elements != null
v.attribute.discValues[].getClass().getName() elements == java.lang.String.class
v.isObservable == true
size(v.attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != orig(v.getClass().getName())
this.attribute.domain.getClass().getName() != orig(v.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() != orig(v.getClass().getName())
this.attribute.discValuesHash.getClass().getName() != orig(v.getClass().getName())
this.attribute.discValues.getClass().getName() != orig(v.getClass().getName())
===========================================================================
burlap.oomdp.core.Value.attName():::ENTER
===========================================================================
burlap.oomdp.core.Value.attName():::EXIT
this.attribute == orig(this.attribute)
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
return != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.attribute.domain.getClass().getName() != orig(this.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() != orig(this.getClass().getName())
this.attribute.discValuesHash.getClass().getName() != orig(this.getClass().getName())
this.attribute.discValues.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.core.values.DiscreteValue:::OBJECT
this.attribute.type == burlap.oomdp.core.Attribute$AttributeType.DISC
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.domain.attributes.getClass().getName()
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.domain.propFunctions.getClass().getName()
this.attribute.domain.objectClassMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.attributeMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.propFunctionMap.getClass().getName() == this.attribute.discValuesHash.getClass().getName()
this.attribute != null
this.attribute.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
this.attribute.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
this.attribute.domain has only one value
this.attribute.domain != null
this.attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.attribute.domain.objectClasses has only one value
this.attribute.domain.objectClasses != null
this.attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.attribute.domain.objectClasses[] elements != null
this.attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.attribute.domain.objectClassMap has only one value
this.attribute.domain.objectClassMap != null
this.attribute.domain.attributes has only one value
this.attribute.domain.attributes != null
this.attribute.domain.attributes[] contains no nulls and has only one value, of length 8
this.attribute.domain.attributes[] elements != null
this.attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.attribute.domain.attributeMap has only one value
this.attribute.domain.attributeMap != null
this.attribute.domain.propFunctions has only one value
this.attribute.domain.propFunctions != null
this.attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.attribute.domain.propFunctions[] elements != null
this.attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.attribute.domain.propFunctionMap has only one value
this.attribute.domain.propFunctionMap != null
this.attribute.domain.objectIdentifierDependentDomain == false
this.attribute.domain.debugCode == 111
this.attribute.lowerLim == 0.0
this.attribute.upperLim one of { 3.0, 4.0, 24.0 }
this.attribute.discValuesHash != null
this.attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
this.attribute.discValues != null
this.attribute.discValues[] elements != null
this.attribute.discValues[].getClass().getName() elements == java.lang.String.class
this.attribute.hidden == false
this.isObservable == true
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(this.attribute.domain.objectClasses[]) == 4
size(this.attribute.domain.attributes[]) == 8
size(this.attribute.domain.propFunctions[]) == 18
size(this.attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != this.attribute.discValues.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
this.attribute.domain.getClass().getName() != this.attribute.discValues.getClass().getName()
this.attribute.domain.objectClasses.getClass().getName() != this.attribute.discValuesHash.getClass().getName()
this.attribute.discValuesHash.getClass().getName() != this.attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.values.DiscreteValue.DiscreteValue(burlap.oomdp.core.Attribute):::ENTER
attribute.type == burlap.oomdp.core.Attribute$AttributeType.DISC
attribute.domain.objectClasses.getClass().getName() == attribute.domain.attributes.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == attribute.domain.propFunctions.getClass().getName()
attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute != null
attribute.name != null
burlap.oomdp.core.Attribute$AttributeType.NOTYPE has only one value
burlap.oomdp.core.Attribute$AttributeType.NOTYPE != null
burlap.oomdp.core.Attribute$AttributeType.DISC has only one value
burlap.oomdp.core.Attribute$AttributeType.DISC != null
burlap.oomdp.core.Attribute$AttributeType.REAL has only one value
burlap.oomdp.core.Attribute$AttributeType.REAL != null
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND has only one value
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND != null
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL has only one value
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL != null
burlap.oomdp.core.Attribute$AttributeType.INT has only one value
burlap.oomdp.core.Attribute$AttributeType.INT != null
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN has only one value
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN != null
burlap.oomdp.core.Attribute$AttributeType.STRING has only one value
burlap.oomdp.core.Attribute$AttributeType.STRING != null
burlap.oomdp.core.Attribute$AttributeType.INTARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.INTARRAY != null
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY has only one value
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY != null
attribute.type.intVal == 0
burlap.oomdp.core.Attribute$AttributeType.$VALUES has only one value
burlap.oomdp.core.Attribute$AttributeType.$VALUES != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == burlap.oomdp.core.Attribute$AttributeType[].class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] contains no nulls and has only one value, of length 11
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] elements != null
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() == [burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType, burlap.oomdp.core.Attribute.AttributeType]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].getClass().getName() elements == burlap.oomdp.core.Attribute.AttributeType.class
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal elements >= -1
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal sorted by <
attribute.domain has only one value
attribute.domain != null
attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
attribute.domain.objectClasses has only one value
attribute.domain.objectClasses != null
attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
attribute.domain.objectClasses[] elements != null
attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
attribute.domain.objectClassMap has only one value
attribute.domain.objectClassMap != null
attribute.domain.attributes has only one value
attribute.domain.attributes != null
attribute.domain.attributes[] contains no nulls and has only one value, of length 8
attribute.domain.attributes[] elements != null
attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
attribute.domain.attributeMap has only one value
attribute.domain.attributeMap != null
attribute.domain.propFunctions has only one value
attribute.domain.propFunctions != null
attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
attribute.domain.propFunctions[] elements != null
attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
attribute.domain.propFunctionMap has only one value
attribute.domain.propFunctionMap != null
attribute.domain.objectIdentifierDependentDomain == false
attribute.domain.debugCode == 111
attribute.lowerLim == 0.0
attribute.upperLim one of { 3.0, 4.0, 24.0 }
attribute.discValuesHash != null
attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
attribute.discValues != null
attribute.discValues[] elements != null
attribute.discValues[].getClass().getName() elements == java.lang.String.class
attribute.hidden == false
size(burlap.oomdp.core.Attribute$AttributeType.$VALUES[]) == 11
size(attribute.domain.objectClasses[]) == 4
size(attribute.domain.attributes[]) == 8
size(attribute.domain.propFunctions[]) == 18
size(attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.objectClasses.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.discValuesHash.getClass().getName() != attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.values.DiscreteValue.DiscreteValue(burlap.oomdp.core.Attribute):::EXIT
this.attribute == orig(attribute)
this.attribute.name == attribute.name
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == attribute.type.intVal
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == attribute.domain
this.attribute.domain.getClass().getName() == attribute.domain.getClass().getName()
this.attribute.domain.objectClasses == attribute.domain.objectClasses
this.attribute.domain.objectClasses.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.objectClassMap == attribute.domain.objectClassMap
this.attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.attributes == attribute.domain.attributes
this.attribute.domain.attributes.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.attributeMap == attribute.domain.attributeMap
this.attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.propFunctions == attribute.domain.propFunctions
this.attribute.domain.propFunctions.getClass().getName() == attribute.domain.objectClasses.getClass().getName()
this.attribute.domain.propFunctionMap == attribute.domain.propFunctionMap
this.attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.domain.objectIdentifierDependentDomain == attribute.domain.objectIdentifierDependentDomain
this.attribute.domain.debugCode == attribute.domain.debugCode
this.attribute.lowerLim == attribute.lowerLim
this.attribute.upperLim == attribute.upperLim
this.attribute.discValuesHash == attribute.discValuesHash
this.attribute.discValuesHash.getClass().getName() == attribute.discValuesHash.getClass().getName()
this.attribute.discValues == attribute.discValues
this.attribute.discValues.getClass().getName() == attribute.discValues.getClass().getName()
this.attribute.hidden == attribute.hidden
attribute.name == orig(attribute.name)
attribute.name.toString == orig(attribute.name.toString)
attribute.type.intVal == orig(attribute.type.intVal)
attribute.domain == orig(attribute.domain)
attribute.domain.getClass().getName() == orig(attribute.domain.getClass().getName())
attribute.domain.objectClasses == orig(attribute.domain.objectClasses)
attribute.domain.objectClasses[] == orig(attribute.domain.objectClasses[])
attribute.domain.objectClasses.getClass().getName() == attribute.domain.attributes.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == attribute.domain.propFunctions.getClass().getName()
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.objectClasses.getClass().getName())
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.attributes.getClass().getName())
attribute.domain.objectClasses.getClass().getName() == orig(attribute.domain.propFunctions.getClass().getName())
attribute.domain.objectClassMap == orig(attribute.domain.objectClassMap)
attribute.domain.objectClassMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.attributes == orig(attribute.domain.attributes)
attribute.domain.attributes[] == orig(attribute.domain.attributes[])
attribute.domain.attributeMap == orig(attribute.domain.attributeMap)
attribute.domain.attributeMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.propFunctions == orig(attribute.domain.propFunctions)
attribute.domain.propFunctions[] == orig(attribute.domain.propFunctions[])
attribute.domain.propFunctionMap == orig(attribute.domain.propFunctionMap)
attribute.domain.propFunctionMap.getClass().getName() == attribute.discValuesHash.getClass().getName()
attribute.domain.objectIdentifierDependentDomain == orig(attribute.domain.objectIdentifierDependentDomain)
attribute.domain.debugCode == orig(attribute.domain.debugCode)
attribute.lowerLim == orig(attribute.lowerLim)
attribute.upperLim == orig(attribute.upperLim)
attribute.discValuesHash == orig(attribute.discValuesHash)
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.objectClassMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.attributeMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.domain.propFunctionMap.getClass().getName())
attribute.discValuesHash.getClass().getName() == orig(attribute.discValuesHash.getClass().getName())
attribute.discValues == orig(attribute.discValues)
attribute.discValues[] == orig(attribute.discValues[])
attribute.discValues.getClass().getName() == orig(attribute.discValues.getClass().getName())
attribute.hidden == orig(attribute.hidden)
this.discVal == -1
attribute.name != null
attribute.type.intVal == 0
attribute.domain has only one value
attribute.domain != null
attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
attribute.domain.objectClasses has only one value
attribute.domain.objectClasses != null
attribute.domain.objectClasses[] contains no nulls and has only one value, of length 4
attribute.domain.objectClasses[] elements != null
attribute.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
attribute.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
attribute.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
attribute.domain.objectClassMap has only one value
attribute.domain.objectClassMap != null
attribute.domain.attributes has only one value
attribute.domain.attributes != null
attribute.domain.attributes[] contains no nulls and has only one value, of length 8
attribute.domain.attributes[] elements != null
attribute.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
attribute.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
attribute.domain.attributeMap has only one value
attribute.domain.attributeMap != null
attribute.domain.propFunctions has only one value
attribute.domain.propFunctions != null
attribute.domain.propFunctions[] contains no nulls and has only one value, of length 18
attribute.domain.propFunctions[] elements != null
attribute.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
attribute.domain.propFunctionMap has only one value
attribute.domain.propFunctionMap != null
attribute.domain.objectIdentifierDependentDomain == false
attribute.domain.debugCode == 111
attribute.lowerLim == 0.0
attribute.upperLim one of { 3.0, 4.0, 24.0 }
attribute.discValuesHash != null
attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
attribute.discValues != null
attribute.discValues[] elements != null
attribute.discValues[].getClass().getName() elements == java.lang.String.class
attribute.hidden == false
size(attribute.domain.objectClasses[]) == 4
size(attribute.domain.attributes[]) == 8
size(attribute.domain.propFunctions[]) == 18
size(attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValuesHash.getClass().getName()
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.getClass().getName() != attribute.domain.objectClasses.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.domain.getClass().getName() != attribute.discValues.getClass().getName()
attribute.domain.objectClasses.getClass().getName() != attribute.discValuesHash.getClass().getName()
attribute.discValuesHash.getClass().getName() != attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.values.DiscreteValue.DiscreteValue(burlap.oomdp.core.Value):::ENTER
v != null
v.getClass().getName() == burlap.oomdp.core.values.DiscreteValue.class
v.attribute != null
v.attribute.name != null
v.attribute.type has only one value
v.attribute.type != null
v.attribute.domain has only one value
v.attribute.domain != null
v.attribute.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
v.attribute.lowerLim == 0.0
v.attribute.upperLim one of { 3.0, 4.0, 24.0 }
v.attribute.discValuesHash != null
v.attribute.discValuesHash.getClass().getName() == java.util.HashMap.class
v.attribute.discValues != null
v.attribute.discValues[] elements != null
v.attribute.discValues[].getClass().getName() elements == java.lang.String.class
v.attribute.hidden == false
v.isObservable == true
size(v.attribute.discValues[]) one of { 4, 5, 25 }
v.getClass().getName() != v.attribute.domain.getClass().getName()
v.getClass().getName() != v.attribute.discValuesHash.getClass().getName()
v.getClass().getName() != v.attribute.discValues.getClass().getName()
v.attribute.domain.getClass().getName() != v.attribute.discValuesHash.getClass().getName()
v.attribute.domain.getClass().getName() != v.attribute.discValues.getClass().getName()
v.attribute.discValuesHash.getClass().getName() != v.attribute.discValues.getClass().getName()
===========================================================================
burlap.oomdp.core.values.DiscreteValue.DiscreteValue(burlap.oomdp.core.Value):::EXIT
this.attribute == v.attribute
this.attribute == orig(v.attribute)
this.attribute.name == v.attribute.name
this.attribute.name == orig(v.attribute.name)
burlap.oomdp.core.Attribute$AttributeType.DISC == v.attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(v.attribute.type)
this.attribute.domain == v.attribute.domain
this.attribute.domain == orig(v.attribute.domain)
this.attribute.domain.getClass().getName() == v.attribute.domain.getClass().getName()
this.attribute.domain.getClass().getName() == orig(v.attribute.domain.getClass().getName())
this.attribute.lowerLim == v.attribute.lowerLim
this.attribute.lowerLim == orig(v.attribute.lowerLim)
this.attribute.upperLim == v.attribute.upperLim
this.attribute.upperLim == orig(v.attribute.upperLim)
this.attribute.discValuesHash == v.attribute.discValuesHash
this.attribute.discValuesHash == orig(v.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == v.attribute.discValuesHash.getClass().getName()
this.attribute.discValuesHash.getClass().getName() == orig(v.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == v.attribute.discValues
this.attribute.discValues == orig(v.attribute.discValues)
this.attribute.discValues.getClass().getName() == v.attribute.discValues.getClass().getName()
this.attribute.discValues.getClass().getName() == orig(v.attribute.discValues.getClass().getName())
this.attribute.hidden == v.attribute.hidden
this.attribute.hidden == orig(v.attribute.hidden)
v.attribute.name.toString == orig(v.attribute.name.toString)
v.attribute.discValues[] == orig(v.attribute.discValues[])
v.isObservable == orig(v.isObservable)
this.discVal == -1
v.attribute.discValues[] elements != null
v.attribute.discValues[].getClass().getName() elements == java.lang.String.class
v.isObservable == true
size(v.attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != orig(v.getClass().getName())
this.attribute.domain.getClass().getName() != orig(v.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() != orig(v.getClass().getName())
this.attribute.discValuesHash.getClass().getName() != orig(v.getClass().getName())
this.attribute.discValues.getClass().getName() != orig(v.getClass().getName())
===========================================================================
burlap.oomdp.core.values.DiscreteValue.copy():::ENTER
this.discVal == -1
===========================================================================
burlap.oomdp.core.values.DiscreteValue.copy():::EXIT
this.discVal == orig(this.discVal)
this.attribute == return.attribute
this.attribute == orig(this.attribute)
this.attribute.name == return.attribute.name
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == return.attribute.type
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == return.attribute.domain
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == return.attribute.domain.getClass().getName()
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == return.attribute.lowerLim
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == return.attribute.upperLim
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == return.attribute.discValuesHash
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == return.attribute.discValuesHash.getClass().getName()
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == return.attribute.discValues
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == return.attribute.discValues.getClass().getName()
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == return.attribute.hidden
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
this.discVal == -1
return != null
return.getClass().getName() == burlap.oomdp.core.values.DiscreteValue.class
return.attribute.discValues[] elements != null
return.attribute.discValues[].getClass().getName() elements == java.lang.String.class
return.isObservable == true
size(return.attribute.discValues[]) one of { 4, 5, 25 }
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() != return.getClass().getName()
this.attribute.domain.getClass().getName() != return.getClass().getName()
this.attribute.domain.objectClasses.getClass().getName() != return.getClass().getName()
this.attribute.discValuesHash.getClass().getName() != return.getClass().getName()
this.attribute.discValues.getClass().getName() != return.getClass().getName()
===========================================================================
burlap.oomdp.core.values.DiscreteValue.getDiscVal():::ENTER
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.attributes.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.propFunctions.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.upperLim == 24.0
this.attribute.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.attribute.discValues.getClass().getName() == java.util.ArrayList.class
size(this.attribute.discValues[]) == 25
===========================================================================
burlap.oomdp.core.values.DiscreteValue.getDiscVal():::EXIT
this.discVal == return
this.attribute == orig(this.attribute)
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributes.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctions.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
return == orig(this.discVal)
this.attribute.upperLim == 24.0
this.attribute.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.attribute.discValues.getClass().getName() == java.util.ArrayList.class
size(this.attribute.discValues[]) == 25
===========================================================================
burlap.oomdp.core.values.DiscreteValue.getStringVal():::ENTER
this.discVal >= 0
===========================================================================
burlap.oomdp.core.values.DiscreteValue.getStringVal():::EXIT
this.discVal == orig(this.discVal)
this.attribute == orig(this.attribute)
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
this.discVal >= 0
return != null
===========================================================================
burlap.oomdp.core.values.DiscreteValue.setValue(int):::ENTER
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.attributes.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.propFunctions.getClass().getName() == this.attribute.discValues.getClass().getName()
this.discVal == -1
this.attribute.upperLim == 24.0
this.attribute.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.attribute.discValues.getClass().getName() == java.util.ArrayList.class
v >= 0
size(this.attribute.discValues[]) == 25
this.discVal < v
===========================================================================
burlap.oomdp.core.values.DiscreteValue.setValue(int):::EXIT
this.discVal == orig(v)
this.attribute == orig(this.attribute)
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributes.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctions.getClass().getName() == this.attribute.discValues.getClass().getName()
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
this.discVal >= 0
this.attribute.upperLim == 24.0
this.attribute.discValues[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.attribute.discValues.getClass().getName() == java.util.ArrayList.class
size(this.attribute.discValues[]) == 25
this.discVal > orig(this.discVal)
===========================================================================
burlap.oomdp.core.values.DiscreteValue.setValue(java.lang.String):::ENTER
this.discVal == -1
this.attribute.name.toString one of { "color", "shape" }
this.attribute.upperLim one of { 3.0, 4.0 }
this.attribute.discValues[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.attribute.discValues.getClass().getName() == java.util.Arrays$ArrayList.class
size(this.attribute.discValues[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.core.values.DiscreteValue.setValue(java.lang.String):::EXIT
this.attribute == orig(this.attribute)
this.attribute.name == orig(this.attribute.name)
this.attribute.name.toString == orig(this.attribute.name.toString)
burlap.oomdp.core.Attribute$AttributeType.NOTYPE == orig(burlap.oomdp.core.Attribute$AttributeType.NOTYPE)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(this.attribute.type)
burlap.oomdp.core.Attribute$AttributeType.DISC == orig(burlap.oomdp.core.Attribute$AttributeType.DISC)
burlap.oomdp.core.Attribute$AttributeType.REAL == orig(burlap.oomdp.core.Attribute$AttributeType.REAL)
burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND == orig(burlap.oomdp.core.Attribute$AttributeType.REALUNBOUND)
burlap.oomdp.core.Attribute$AttributeType.RELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.RELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL == orig(burlap.oomdp.core.Attribute$AttributeType.MULTITARGETRELATIONAL)
burlap.oomdp.core.Attribute$AttributeType.INT == orig(burlap.oomdp.core.Attribute$AttributeType.INT)
burlap.oomdp.core.Attribute$AttributeType.BOOLEAN == orig(burlap.oomdp.core.Attribute$AttributeType.BOOLEAN)
burlap.oomdp.core.Attribute$AttributeType.STRING == orig(burlap.oomdp.core.Attribute$AttributeType.STRING)
burlap.oomdp.core.Attribute$AttributeType.INTARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.INTARRAY)
burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY == orig(burlap.oomdp.core.Attribute$AttributeType.DOUBLEARRAY)
this.attribute.type.intVal == orig(this.attribute.type.intVal)
burlap.oomdp.core.Attribute$AttributeType.$VALUES == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES)
burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName() == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES.getClass().getName())
burlap.oomdp.core.Attribute$AttributeType.$VALUES[] == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[])
burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal == orig(burlap.oomdp.core.Attribute$AttributeType.$VALUES[].intVal)
this.attribute.domain == orig(this.attribute.domain)
this.attribute.domain.getClass().getName() == orig(this.attribute.domain.getClass().getName())
this.attribute.domain.objectClasses == orig(this.attribute.domain.objectClasses)
this.attribute.domain.objectClasses[] == orig(this.attribute.domain.objectClasses[])
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.objectClasses.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.attributes.getClass().getName())
this.attribute.domain.objectClasses.getClass().getName() == orig(this.attribute.domain.propFunctions.getClass().getName())
this.attribute.domain.objectClassMap == orig(this.attribute.domain.objectClassMap)
this.attribute.domain.attributes == orig(this.attribute.domain.attributes)
this.attribute.domain.attributes[] == orig(this.attribute.domain.attributes[])
this.attribute.domain.attributeMap == orig(this.attribute.domain.attributeMap)
this.attribute.domain.propFunctions == orig(this.attribute.domain.propFunctions)
this.attribute.domain.propFunctions[] == orig(this.attribute.domain.propFunctions[])
this.attribute.domain.propFunctionMap == orig(this.attribute.domain.propFunctionMap)
this.attribute.domain.objectIdentifierDependentDomain == orig(this.attribute.domain.objectIdentifierDependentDomain)
this.attribute.domain.debugCode == orig(this.attribute.domain.debugCode)
this.attribute.lowerLim == orig(this.attribute.lowerLim)
this.attribute.upperLim == orig(this.attribute.upperLim)
this.attribute.discValuesHash == orig(this.attribute.discValuesHash)
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.objectClassMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.attributeMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.domain.propFunctionMap.getClass().getName())
this.attribute.discValuesHash.getClass().getName() == orig(this.attribute.discValuesHash.getClass().getName())
this.attribute.discValues == orig(this.attribute.discValues)
this.attribute.discValues[] == orig(this.attribute.discValues[])
this.attribute.discValues.getClass().getName() == orig(this.attribute.discValues.getClass().getName())
this.attribute.hidden == orig(this.attribute.hidden)
this.isObservable == orig(this.isObservable)
v.toString == orig(v.toString)
this.discVal one of { 0, 1, 3 }
this.attribute.name.toString one of { "color", "shape" }
this.attribute.upperLim one of { 3.0, 4.0 }
this.attribute.discValues[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.attribute.discValues.getClass().getName() == java.util.Arrays$ArrayList.class
size(this.attribute.discValues[]) one of { 4, 5 }
===========================================================================
burlap.oomdp.singleagent.Action:::OBJECT
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
this.parameterClasses.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.class
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses != null
this.parameterClasses.getClass().getName() == java.lang.String[].class
this.parameterClasses[] == []
this.parameterClasses[].getClass().getName() == []
this.parameterClasses[].toString == []
this.parameterOrderGroup != null
this.parameterOrderGroup[] == []
this.parameterOrderGroup[].getClass().getName() == []
this.parameterOrderGroup[].toString == []
this.actionObservers != null
this.actionObservers[] == []
this.actionObservers[].getClass().getName() == []
this.actionObservers.getClass().getName() == java.util.ArrayList.class
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
this.getClass().getName() != this.domain.getClass().getName()
this.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.getClass().getName() != this.parameterClasses.getClass().getName()
this.getClass().getName() != this.actionObservers.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.getClass().getName() != this.actionObservers.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.objectClassMap.getClass().getName() != this.parameterClasses.getClass().getName()
this.domain.objectClassMap.getClass().getName() != this.actionObservers.getClass().getName()
this.parameterClasses.getClass().getName() != this.actionObservers.getClass().getName()
===========================================================================
burlap.oomdp.singleagent.Action.Action(java.lang.String, burlap.oomdp.core.Domain, java.lang.String):::ENTER
domain.objectClasses.getClass().getName() == domain.attributes.getClass().getName()
domain.objectClasses.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain has only one value
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClasses.getClass().getName() == java.util.ArrayList.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses has only one value
parameterClasses.toString == ""
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.singleagent.Action.Action(java.lang.String, burlap.oomdp.core.Domain, java.lang.String):::EXIT
this.name == orig(name)
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClassMap == domain.objectClassMap
this.domain.objectClassMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.attributes == domain.attributes
this.domain.attributes.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.attributeMap == domain.attributeMap
this.domain.attributeMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctions.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.actionObservers.getClass().getName() == domain.objectClasses.getClass().getName()
this.actionObservers.getClass().getName() == domain.attributes.getClass().getName()
this.actionObservers.getClass().getName() == domain.propFunctions.getClass().getName()
this.actionObservers.getClass().getName() == orig(domain.objectClasses.getClass().getName())
this.actionObservers.getClass().getName() == orig(domain.attributes.getClass().getName())
this.actionObservers.getClass().getName() == orig(domain.propFunctions.getClass().getName())
name.toString == orig(name.toString)
domain.objectClasses == orig(domain.objectClasses)
domain.objectClasses[] == orig(domain.objectClasses[])
domain.objectClassMap == orig(domain.objectClassMap)
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain.objectClassMap.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.attributeMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
domain.attributes == orig(domain.attributes)
domain.attributes[] == orig(domain.attributes[])
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctions[] == orig(domain.propFunctions[])
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
parameterClasses.toString == orig(parameterClasses.toString)
this.domain has only one value
domain.objectClasses has only one value
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses.toString == ""
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.singleagent.Action.getName():::ENTER
this.domain.attributes.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.propFunctions.getClass().getName() == this.actionObservers.getClass().getName()
this.domain has only one value
===========================================================================
burlap.oomdp.singleagent.Action.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.domain.objectClassMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributes.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctions.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses.getClass().getName() == orig(this.parameterClasses.getClass().getName())
this.parameterClasses.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(this.parameterOrderGroup)
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.actionObservers == orig(this.actionObservers)
this.actionObservers[] == orig(this.actionObservers[])
this.actionObservers.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.actionObservers.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.actionObservers.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.actionObservers.getClass().getName() == orig(this.actionObservers.getClass().getName())
return == orig(this.name)
this.domain has only one value
this.domain.getClass().getName() != orig(this.getClass().getName())
this.domain.objectClassMap.getClass().getName() != orig(this.getClass().getName())
this.parameterClasses.getClass().getName() != orig(this.getClass().getName())
this.actionObservers.getClass().getName() != orig(this.getClass().getName())
===========================================================================
burlap.oomdp.singleagent.Action.init(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String[]):::ENTER
this.parameterClasses.getClass().getName() == parameterClasses.getClass().getName()
this.parameterClasses.getClass().getName() == parameterOrderGroups.getClass().getName()
this.actionObservers.getClass().getName() == domain.objectClasses.getClass().getName()
this.actionObservers.getClass().getName() == domain.attributes.getClass().getName()
this.actionObservers.getClass().getName() == domain.propFunctions.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
this.name == null
this.domain == null
domain has only one value
domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
domain.objectClasses has only one value
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses[] == []
parameterClasses[].toString == []
parameterOrderGroups[] == []
parameterOrderGroups[].toString == []
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.singleagent.Action.init(java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String[]):::EXIT
this.name == orig(name)
this.domain == orig(domain)
this.domain.getClass().getName() == orig(domain.getClass().getName())
this.domain.objectClasses == domain.objectClasses
this.domain.objectClassMap == domain.objectClassMap
this.domain.objectClassMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.attributes == domain.attributes
this.domain.attributes.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.attributeMap == domain.attributeMap
this.domain.attributeMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.propFunctions == domain.propFunctions
this.domain.propFunctions.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.propFunctionMap == domain.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == domain.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == domain.objectIdentifierDependentDomain
this.domain.debugCode == domain.debugCode
this.parameterClasses == orig(parameterClasses)
this.parameterClasses.getClass().getName() == orig(this.parameterClasses.getClass().getName())
this.parameterClasses.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
this.parameterClasses.getClass().getName() == orig(parameterClasses.getClass().getName())
this.parameterClasses.getClass().getName() == orig(parameterOrderGroups.getClass().getName())
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(parameterOrderGroups)
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.actionObservers == orig(this.actionObservers)
this.actionObservers[] == orig(this.actionObservers[])
this.actionObservers.getClass().getName() == domain.objectClasses.getClass().getName()
this.actionObservers.getClass().getName() == domain.attributes.getClass().getName()
this.actionObservers.getClass().getName() == domain.propFunctions.getClass().getName()
this.actionObservers.getClass().getName() == orig(this.actionObservers.getClass().getName())
this.actionObservers.getClass().getName() == orig(domain.objectClasses.getClass().getName())
this.actionObservers.getClass().getName() == orig(domain.attributes.getClass().getName())
this.actionObservers.getClass().getName() == orig(domain.propFunctions.getClass().getName())
name.toString == orig(name.toString)
domain.objectClasses == orig(domain.objectClasses)
domain.objectClasses[] == orig(domain.objectClasses[])
domain.objectClassMap == orig(domain.objectClassMap)
domain.objectClassMap.getClass().getName() == domain.attributeMap.getClass().getName()
domain.objectClassMap.getClass().getName() == domain.propFunctionMap.getClass().getName()
domain.objectClassMap.getClass().getName() == orig(domain.objectClassMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.attributeMap.getClass().getName())
domain.objectClassMap.getClass().getName() == orig(domain.propFunctionMap.getClass().getName())
domain.attributes == orig(domain.attributes)
domain.attributes[] == orig(domain.attributes[])
domain.attributeMap == orig(domain.attributeMap)
domain.propFunctions == orig(domain.propFunctions)
domain.propFunctions[] == orig(domain.propFunctions[])
domain.propFunctionMap == orig(domain.propFunctionMap)
domain.objectIdentifierDependentDomain == orig(domain.objectIdentifierDependentDomain)
domain.debugCode == orig(domain.debugCode)
parameterClasses[] == orig(parameterClasses[])
parameterOrderGroups[] == orig(parameterOrderGroups[])
this.domain has only one value
domain.objectClasses has only one value
domain.objectClasses[] contains no nulls and has only one value, of length 4
domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
domain.objectClassMap has only one value
domain.objectClassMap.getClass().getName() == java.util.HashMap.class
domain.attributes has only one value
domain.attributes[] contains no nulls and has only one value, of length 8
domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
domain.attributeMap has only one value
domain.propFunctions has only one value
domain.propFunctions[] == []
domain.propFunctions[].getClass().getName() == []
domain.propFunctionMap has only one value
domain.objectIdentifierDependentDomain == false
domain.debugCode == 111
parameterClasses[] == []
parameterClasses[].toString == []
parameterOrderGroups[] == []
parameterOrderGroups[].toString == []
size(domain.objectClasses[]) == 4
size(domain.attributes[]) == 8
===========================================================================
burlap.oomdp.singleagent.SADomain:::OBJECT
this.actions.getClass().getName() == this.objectClasses.getClass().getName()
this.actions.getClass().getName() == this.attributes.getClass().getName()
this.actions.getClass().getName() == this.propFunctions.getClass().getName()
this.actionMap.getClass().getName() == this.objectClassMap.getClass().getName()
this.actionMap.getClass().getName() == this.attributeMap.getClass().getName()
this.actionMap.getClass().getName() == this.propFunctionMap.getClass().getName()
this has only one value
this.actions has only one value
this.actions[].getClass().getName() elements == domain.singleagent.sokoban2.Sokoban2Domain.MovementAction.class
this.actions.getClass().getName() == java.util.ArrayList.class
this.actionMap has only one value
this.actionMap.getClass().getName() == java.util.HashMap.class
this.objectClasses has only one value
this.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.objectClasses[].getClass().getName() one of { [], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
this.objectClassMap has only one value
this.attributes has only one value
this.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.attributes[].getClass().getName() one of { [], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
this.attributeMap has only one value
this.propFunctions has only one value
this.propFunctions[] == []
this.propFunctions[].getClass().getName() == []
this.propFunctionMap has only one value
this.objectIdentifierDependentDomain == false
this.debugCode == 111
size(this.objectClasses[]) one of { 0, 4 }
size(this.attributes[]) one of { 0, 8 }
this.actions.getClass().getName() != this.actionMap.getClass().getName()
===========================================================================
burlap.oomdp.singleagent.SADomain.SADomain():::EXIT
this.actions[] == []
this.actions[].getClass().getName() == []
this.objectClasses[] == []
this.objectClasses[].getClass().getName() == []
this.attributes[] == []
this.attributes[].getClass().getName() == []
===========================================================================
burlap.oomdp.singleagent.SADomain.addAction(burlap.oomdp.singleagent.Action):::ENTER
this.actions.getClass().getName() == act.domain.objectClasses.getClass().getName()
this.actions.getClass().getName() == act.domain.attributes.getClass().getName()
this.actions.getClass().getName() == act.domain.propFunctions.getClass().getName()
this.actions.getClass().getName() == act.actionObservers.getClass().getName()
this.actionMap.getClass().getName() == act.domain.objectClassMap.getClass().getName()
this.actionMap.getClass().getName() == act.domain.attributeMap.getClass().getName()
this.actionMap.getClass().getName() == act.domain.propFunctionMap.getClass().getName()
this.objectClasses == act.domain.objectClasses
this.objectClassMap == act.domain.objectClassMap
this.attributes == act.domain.attributes
this.attributeMap == act.domain.attributeMap
this.propFunctions == act.domain.propFunctions
this.propFunctionMap == act.domain.propFunctionMap
this.objectIdentifierDependentDomain == act.domain.objectIdentifierDependentDomain
this.debugCode == act.domain.debugCode
act.parameterClasses.getClass().getName() == act.parameterOrderGroup.getClass().getName()
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
act.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.class
act.domain has only one value
act.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
act.domain.objectClasses[] contains no nulls and has only one value, of length 4
act.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
act.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
act.domain.attributes[] contains no nulls and has only one value, of length 8
act.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
act.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
act.domain.propFunctions[] == []
act.domain.propFunctions[].getClass().getName() == []
act.parameterClasses.getClass().getName() == java.lang.String[].class
act.parameterClasses[] == []
act.parameterClasses[].getClass().getName() == []
act.parameterClasses[].toString == []
act.parameterOrderGroup[] == []
act.parameterOrderGroup[].getClass().getName() == []
act.parameterOrderGroup[].toString == []
act.actionObservers[] == []
act.actionObservers[].getClass().getName() == []
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(act.domain.objectClasses[]) == 4
size(act.domain.attributes[]) == 8
===========================================================================
burlap.oomdp.singleagent.SADomain.addAction(burlap.oomdp.singleagent.Action):::EXIT
this.actions == orig(this.actions)
this.actions.getClass().getName() == act.domain.objectClasses.getClass().getName()
this.actions.getClass().getName() == act.domain.attributes.getClass().getName()
this.actions.getClass().getName() == act.domain.propFunctions.getClass().getName()
this.actions.getClass().getName() == act.actionObservers.getClass().getName()
this.actions.getClass().getName() == orig(this.actions.getClass().getName())
this.actions.getClass().getName() == orig(this.objectClasses.getClass().getName())
this.actions.getClass().getName() == orig(this.attributes.getClass().getName())
this.actions.getClass().getName() == orig(this.propFunctions.getClass().getName())
this.actions.getClass().getName() == orig(act.domain.objectClasses.getClass().getName())
this.actions.getClass().getName() == orig(act.domain.attributes.getClass().getName())
this.actions.getClass().getName() == orig(act.domain.propFunctions.getClass().getName())
this.actions.getClass().getName() == orig(act.actionObservers.getClass().getName())
this.actionMap == orig(this.actionMap)
this.actionMap.getClass().getName() == act.domain.objectClassMap.getClass().getName()
this.actionMap.getClass().getName() == act.domain.attributeMap.getClass().getName()
this.actionMap.getClass().getName() == act.domain.propFunctionMap.getClass().getName()
this.actionMap.getClass().getName() == orig(this.actionMap.getClass().getName())
this.actionMap.getClass().getName() == orig(this.objectClassMap.getClass().getName())
this.actionMap.getClass().getName() == orig(this.attributeMap.getClass().getName())
this.actionMap.getClass().getName() == orig(this.propFunctionMap.getClass().getName())
this.actionMap.getClass().getName() == orig(act.domain.objectClassMap.getClass().getName())
this.actionMap.getClass().getName() == orig(act.domain.attributeMap.getClass().getName())
this.actionMap.getClass().getName() == orig(act.domain.propFunctionMap.getClass().getName())
this.objectClasses == act.domain.objectClasses
this.objectClasses == orig(this.objectClasses)
this.objectClasses == orig(act.domain.objectClasses)
this.objectClasses[] == orig(this.objectClasses[])
this.objectClassMap == act.domain.objectClassMap
this.objectClassMap == orig(this.objectClassMap)
this.objectClassMap == orig(act.domain.objectClassMap)
this.attributes == act.domain.attributes
this.attributes == orig(this.attributes)
this.attributes == orig(act.domain.attributes)
this.attributes[] == orig(this.attributes[])
this.attributeMap == act.domain.attributeMap
this.attributeMap == orig(this.attributeMap)
this.attributeMap == orig(act.domain.attributeMap)
this.propFunctions == act.domain.propFunctions
this.propFunctions == orig(this.propFunctions)
this.propFunctions == orig(act.domain.propFunctions)
this.propFunctions[] == orig(this.propFunctions[])
this.propFunctionMap == act.domain.propFunctionMap
this.propFunctionMap == orig(this.propFunctionMap)
this.propFunctionMap == orig(act.domain.propFunctionMap)
this.objectIdentifierDependentDomain == act.domain.objectIdentifierDependentDomain
this.objectIdentifierDependentDomain == orig(this.objectIdentifierDependentDomain)
this.objectIdentifierDependentDomain == orig(act.domain.objectIdentifierDependentDomain)
this.debugCode == act.domain.debugCode
this.debugCode == orig(this.debugCode)
this.debugCode == orig(act.domain.debugCode)
act.name == orig(act.name)
act.name.toString == orig(act.name.toString)
act.domain == orig(act.domain)
act.domain.getClass().getName() == orig(act.domain.getClass().getName())
act.domain.objectClasses[] == orig(act.domain.objectClasses[])
act.domain.attributes[] == orig(act.domain.attributes[])
act.domain.propFunctions[] == orig(act.domain.propFunctions[])
act.parameterClasses == orig(act.parameterClasses)
act.parameterClasses.getClass().getName() == act.parameterOrderGroup.getClass().getName()
act.parameterClasses.getClass().getName() == orig(act.parameterClasses.getClass().getName())
act.parameterClasses.getClass().getName() == orig(act.parameterOrderGroup.getClass().getName())
act.parameterClasses[] == orig(act.parameterClasses[])
act.parameterOrderGroup == orig(act.parameterOrderGroup)
act.parameterOrderGroup[] == orig(act.parameterOrderGroup[])
act.actionObservers == orig(act.actionObservers)
act.actionObservers[] == orig(act.actionObservers[])
size(this.actions[])-1 == orig(size(this.actions[]))
this.objectClasses[] contains no nulls and has only one value, of length 4
this.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.attributes[] contains no nulls and has only one value, of length 8
this.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
act.domain has only one value
act.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
act.domain.objectClasses[] contains no nulls and has only one value, of length 4
act.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
act.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
act.domain.attributes[] contains no nulls and has only one value, of length 8
act.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
act.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
act.domain.propFunctions[] == []
act.domain.propFunctions[].getClass().getName() == []
act.parameterClasses.getClass().getName() == java.lang.String[].class
act.parameterClasses[] == []
act.parameterClasses[].getClass().getName() == []
act.parameterClasses[].toString == []
act.parameterOrderGroup[] == []
act.parameterOrderGroup[].getClass().getName() == []
act.parameterOrderGroup[].toString == []
act.actionObservers[] == []
act.actionObservers[].getClass().getName() == []
size(this.objectClasses[]) == 4
size(this.attributes[]) == 8
size(act.domain.objectClasses[]) == 4
size(act.domain.attributes[]) == 8
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF:::OBJECT
this.gps != null
this.gps[] elements != null
this.gps[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.gps[].getClass().getName() one of { [], [burlap.oomdp.core.GroundedProp] }
this.gps.getClass().getName() == java.util.ArrayList.class
this.goalR == 1.0
this.nonGoalR == 0.0
size(this.gps[]) one of { 0, 1 }
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.ConjunctiveGroundedPropRF():::EXIT
this.gps[] == []
this.gps[].getClass().getName() == []
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.addGP(burlap.oomdp.core.GroundedProp):::ENTER
arg0.pf.name == arg0.pf.pfClass
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
this.gps[] == []
this.gps[].getClass().getName() == []
arg0.pf.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
arg0.pf.name.toString one of { "agentInRoom", "blockInRoom" }
arg0.pf.domain has only one value
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterClasses[].toString one of { [agent, room], [block, room] }
arg0.pf.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
arg0.pf.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.params[].getClass().getName() elements == java.lang.String.class
size(arg0.pf.parameterClasses[]) == 2
size(arg0.pf.parameterOrderGroup[]) == 2
size(arg0.params[]) == 2
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.addGP(burlap.oomdp.core.GroundedProp):::EXIT
this.gps == orig(this.gps)
this.gps.getClass().getName() == orig(this.gps.getClass().getName())
this.goalR == orig(this.goalR)
this.nonGoalR == orig(this.nonGoalR)
arg0.pf == orig(arg0.pf)
arg0.pf.getClass().getName() == orig(arg0.pf.getClass().getName())
arg0.pf.name == arg0.pf.pfClass
arg0.pf.name == orig(arg0.pf.name)
arg0.pf.name == orig(arg0.pf.pfClass)
arg0.pf.name.toString == orig(arg0.pf.name.toString)
arg0.pf.domain == orig(arg0.pf.domain)
arg0.pf.domain.getClass().getName() == orig(arg0.pf.domain.getClass().getName())
arg0.pf.parameterClasses == orig(arg0.pf.parameterClasses)
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterClasses[] == orig(arg0.pf.parameterClasses[])
arg0.pf.parameterOrderGroup == orig(arg0.pf.parameterOrderGroup)
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup[] == orig(arg0.pf.parameterOrderGroup[])
arg0.pf.pfClass.toString == orig(arg0.pf.pfClass.toString)
arg0.params == orig(arg0.params)
arg0.params.getClass().getName() == orig(arg0.pf.parameterClasses.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.pf.parameterOrderGroup.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.params.getClass().getName())
arg0.params[] == orig(arg0.params[])
size(this.gps[])-1 == orig(size(this.gps[]))
this.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0.pf.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
arg0.pf.name.toString one of { "agentInRoom", "blockInRoom" }
arg0.pf.domain has only one value
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterClasses[].toString one of { [agent, room], [block, room] }
arg0.pf.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
arg0.pf.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.params[].getClass().getName() elements == java.lang.String.class
size(this.gps[]) == 1
size(arg0.pf.parameterClasses[]) == 2
size(arg0.pf.parameterOrderGroup[]) == 2
size(arg0.params[]) == 2
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::ENTER
this.gps.getClass().getName() == arg0.objectInstances.getClass().getName()
this.gps.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
this.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
size(this.gps[]) == 1
size(arg0.objectInstances[]) == 7
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT275
return == false
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT275;condition="not(return == true)"
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT278
return == true
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT278;condition="return == true"
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT
this.gps == orig(this.gps)
this.gps[] == orig(this.gps[])
this.gps.getClass().getName() == arg0.objectInstances.getClass().getName()
this.gps.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
this.gps.getClass().getName() == orig(this.gps.getClass().getName())
this.gps.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
this.gps.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
this.goalR == orig(this.goalR)
this.nonGoalR == orig(this.nonGoalR)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
this.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
size(this.gps[]) == 1
size(arg0.objectInstances[]) == 7
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT;condition="return == true"
return == true
===========================================================================
commands.model3.TaskModule$ConjunctiveGroundedPropRF.satisfied(burlap.oomdp.core.State):::EXIT;condition="not(return == true)"
return == false
===========================================================================
commands.model3.TaskModule$ConstraintIterator:::OBJECT
this.stateVal.s == this.stateVal.sh.s
this.stateVal.s.objectInstances.getClass().getName() == this.bindingConstraints.getClass().getName()
this.stateVal.s.hiddenObjectInstances.getClass().getName() == this.bindingConstraints.getClass().getName()
this.stateVal.s.objectMap.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.s.objectIndexByTrueClass.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner == commands.model3.TaskModule.this.stateVariable
this.stateVal.owner.name == commands.model3.TaskModule.STATENAME
this.stateVal.owner.moduleOwner == this.liftedRFVal.owner.moduleOwner
this.stateVal.owner.moduleOwner == this.groundedRFVal.owner.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.stateVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
this.stateVal.owner.moduleOwner.getClass().getName() == this.liftedRFVal.owner.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == this.groundedRFVal.owner.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
this.stateVal.owner.dependencies == commands.model3.TaskModule.this.stateVariable.dependencies
this.stateVal.owner.dependencies.getClass().getName() == this.bindingConstraints.getClass().getName()
this.stateVal.owner.parameters == commands.model3.TaskModule.this.stateVariable.parameters
this.stateVal.owner.parameters.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner.isInput == commands.model3.TaskModule.this.stateVariable.isInput
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == this.liftedRFVal.owner.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == this.groundedRFVal.owner.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.attributeMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.moduleMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.queryCache.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
this.liftedRFVal.conditions.getClass().getName() == this.bindingConstraints.getClass().getName()
this.liftedRFVal.owner == commands.model3.TaskModule.this.liftedRFVariable
this.liftedRFVal.owner.name == commands.model3.TaskModule.LIFTEDRFNAME
this.liftedRFVal.owner.dependencies == commands.model3.TaskModule.this.liftedRFVariable.dependencies
this.liftedRFVal.owner.dependencies.getClass().getName() == this.bindingConstraints.getClass().getName()
this.liftedRFVal.owner.parameters == commands.model3.TaskModule.this.liftedRFVariable.parameters
this.liftedRFVal.owner.isInput == commands.model3.TaskModule.this.liftedRFVariable.isInput
this.groundedRFVal.rf.gps.getClass().getName() == this.bindingConstraints.getClass().getName()
this.groundedRFVal.owner == commands.model3.TaskModule.this.groundedRFVariable
this.groundedRFVal.owner.name == commands.model3.TaskModule.GROUNDEDRFNAME
this.groundedRFVal.owner.dependencies == commands.model3.TaskModule.this.groundedRFVariable.dependencies
this.groundedRFVal.owner.dependencies.getClass().getName() == this.bindingConstraints.getClass().getName()
this.groundedRFVal.owner.parameters == commands.model3.TaskModule.this.groundedRFVariable.parameters
this.groundedRFVal.owner.isInput == commands.model3.TaskModule.this.groundedRFVariable.isInput
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.domain.attributes.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.owner.modules.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.rVariables.getClass().getName()
this.bindingConstraints.getClass().getName() == commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
this.stateVal has only one value
this.stateVal != null
this.stateVal.s has only one value
this.stateVal.s != null
this.stateVal.s.objectInstances has only one value
this.stateVal.s.objectInstances != null
this.stateVal.s.objectInstances[] contains no nulls and has only one value, of length 7
this.stateVal.s.objectInstances[] elements != null
this.stateVal.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.stateVal.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.stateVal.s.hiddenObjectInstances has only one value
this.stateVal.s.hiddenObjectInstances != null
this.stateVal.s.hiddenObjectInstances[] == []
this.stateVal.s.hiddenObjectInstances[].getClass().getName() == []
this.stateVal.s.objectMap has only one value
this.stateVal.s.objectMap != null
this.stateVal.s.objectIndexByTrueClass has only one value
this.stateVal.s.objectIndexByTrueClass != null
this.stateVal.sh has only one value
this.stateVal.sh != null
this.stateVal.sh.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.class
this.stateVal.sh.hashCode == -1098037574
this.stateVal.sh.needToRecomputeHashCode == false
this.stateVal.owner has only one value
this.stateVal.owner != null
this.stateVal.owner.name.toString == "state"
this.stateVal.owner.moduleOwner has only one value
this.stateVal.owner.moduleOwner != null
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.stateVal.owner.dependencies has only one value
this.stateVal.owner.dependencies != null
this.stateVal.owner.dependencies[] == []
this.stateVal.owner.dependencies[].getClass().getName() == []
this.stateVal.owner.parameters has only one value
this.stateVal.owner.parameters != null
this.stateVal.owner.isInput == false
this.liftedRFVal != null
this.liftedRFVal.freeVariableToClassMapping != null
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == java.util.HashMap.class
this.liftedRFVal.conditions != null
this.liftedRFVal.conditions[] elements != null
this.liftedRFVal.conditions[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
this.liftedRFVal.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.liftedRFVal.owner has only one value
this.liftedRFVal.owner != null
this.liftedRFVal.owner.name.toString == "liftedRF"
this.liftedRFVal.owner.dependencies has only one value
this.liftedRFVal.owner.dependencies != null
this.liftedRFVal.owner.dependencies[] contains no nulls and has only one value, of length 1
this.liftedRFVal.owner.dependencies[] elements has only one value
this.liftedRFVal.owner.dependencies[] elements != null
this.liftedRFVal.owner.dependencies[].getClass().getName() == [generativemodel.RVariable]
this.liftedRFVal.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.liftedRFVal.owner.parameters has only one value
this.liftedRFVal.owner.parameters != null
this.liftedRFVal.owner.isInput == false
this.groundedRFVal != null
this.groundedRFVal.rf != null
this.groundedRFVal.rf.gps != null
this.groundedRFVal.rf.gps[] elements != null
this.groundedRFVal.rf.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
this.groundedRFVal.rf.gps[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.groundedRFVal.rf.goalR == 1.0
this.groundedRFVal.rf.nonGoalR == 0.0
this.groundedRFVal.owner has only one value
this.groundedRFVal.owner != null
this.groundedRFVal.owner.name.toString == "groundedRF"
this.groundedRFVal.owner.dependencies has only one value
this.groundedRFVal.owner.dependencies != null
this.groundedRFVal.owner.dependencies[] contains no nulls and has only one value, of length 2
this.groundedRFVal.owner.dependencies[] elements != null
this.groundedRFVal.owner.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
this.groundedRFVal.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.groundedRFVal.owner.parameters has only one value
this.groundedRFVal.owner.parameters != null
this.groundedRFVal.owner.isInput == false
this.bindingConstraints != null
this.bindingConstraints[] elements != null
this.bindingConstraints[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
this.bindingConstraints.getClass().getName() == java.util.ArrayList.class
this.next >= 0
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME != null
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME != null
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME != null
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME != null
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements != null
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] elements != null
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable != null
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies != null
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] elements != null
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.parameters != null
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues != null
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[] elements != null
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain != null
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses != null
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[] elements != null
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.objectClassMap != null
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes != null
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[] elements != null
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.attributeMap != null
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions != null
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[] elements != null
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.propFunctionMap != null
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name != null
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner != null
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules != null
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[] elements != null
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.moduleMap != null
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables != null
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.variableOwnerResolver != null
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.queryCache != null
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache != null
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables != null
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[] elements != null
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap != null
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList != null
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
this.modelOwner == null
this.cache == false
size(this.stateVal.s.objectInstances[]) == 7
size(this.liftedRFVal.conditions[]) == 1
size(this.liftedRFVal.owner.dependencies[]) == 1
size(this.groundedRFVal.rf.gps[]) == 1
size(this.groundedRFVal.owner.dependencies[]) == 2
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
this.stateVal.sh.getClass().getName() != this.stateVal.owner.moduleOwner.getClass().getName()
this.stateVal.sh.getClass().getName() != this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.sh.getClass().getName() != this.bindingConstraints.getClass().getName()
this.stateVal.sh.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != this.bindingConstraints.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != this.bindingConstraints.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.bindingConstraints.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::ENTER
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.modules.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.rVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable has only one value
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.moduleOwner has only one value
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
commands.model3.TaskModule.this.stateVariable.dependencies has only one value
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.stateVariable.parameters has only one value
commands.model3.TaskModule.this.stateVariable.isInput == false
commands.model3.TaskModule.this.liftedRFVariable has only one value
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.liftedRFVariable.parameters has only one value
commands.model3.TaskModule.this.liftedRFVariable.isInput == false
commands.model3.TaskModule.this.groundedRFVariable has only one value
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.parameters has only one value
commands.model3.TaskModule.this.groundedRFVariable.isInput == false
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == java.util.HashMap.class
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.RFConVariableValue]
arg1.getClass().getName() == java.util.ArrayList.class
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
size(arg1[]) == 3
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.ConstraintIterator(commands.model3.TaskModule, java.util.List):::EXIT
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
arg1[] == orig(arg1[])
this.next == 0
this.uni one of { 0.0625, 0.06666666666666667, 0.25 }
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.RFConVariableValue]
size(this.bindingConstraints[]) one of { 4, 15, 16 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.allVarsAppearSomewhere(java.util.Set, java.util.List):::ENTER
this.bindingConstraints.getClass().getName() == arg1.getClass().getName()
this.next == 0
this.uni == 0.0
arg0 != null
arg0.getClass().getName() == java.util.HashSet.class
arg1 != null
arg1[] elements != null
arg1[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
size(arg1[]) one of { 1, 2, 3 }
this.stateVal.sh.getClass().getName() != arg0.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.getClass().getName()
this.bindingConstraints.getClass().getName() != arg0.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.allVarsAppearSomewhere(java.util.Set, java.util.List):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(arg1.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg1[] == orig(arg1[])
(return == false)  ==>  (arg1[].getClass().getName() one of { [burlap.oomdp.core.GroundedProp], [burlap.oomdp.core.GroundedProp, burlap.oomdp.core.GroundedProp] })
(return == false)  ==>  (orig(size(arg1[])) one of { 1, 2 })
(return == false)  ==>  (size(this.bindingConstraints[]) one of { 10, 16 })
(return == false)  ==>  (this.bindingConstraints[].getClass().getName() one of { [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue], [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue] })
(return == true)  ==>  (orig(size(arg1[])) one of { 1, 2, 3 })
this.next == 0
this.uni == 0.0
arg1[] elements != null
arg1[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.stateVal.sh.getClass().getName() != orig(arg0.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() != orig(arg0.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != orig(arg0.getClass().getName())
this.bindingConstraints.getClass().getName() != orig(arg0.getClass().getName())
commands.model3.TaskModule.this.domain.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
commands.model3.TaskModule$ConstraintIterator.allVarsAppearSomewhere(java.util.Set, java.util.List):::EXIT;condition="return == true"
return == true
===========================================================================
commands.model3.TaskModule$ConstraintIterator.allVarsAppearSomewhere(java.util.Set, java.util.List):::EXIT;condition="not(return == true)"
this.bindingConstraints[].getClass().getName() one of { [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue], [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue] }
arg1[].getClass().getName() one of { [burlap.oomdp.core.GroundedProp], [burlap.oomdp.core.GroundedProp, burlap.oomdp.core.GroundedProp] }
return == false
size(this.bindingConstraints[]) one of { 10, 16 }
orig(size(arg1[])) one of { 1, 2 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.combinationIndices(int):::ENTER
this.bindingConstraints[].getClass().getName() one of { [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue], [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue] }
this.next == 0
this.uni == 0.0
arg0 one of { 1, 2 }
size(this.bindingConstraints[]) one of { 2, 8 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.combinationIndices(int):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.objectInstances.getClass().getName() == return.getClass().getName()
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.conditions.getClass().getName() == return.getClass().getName()
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.gps.getClass().getName() == return.getClass().getName()
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == return.getClass().getName()
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.modules.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariables.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == return.getClass().getName()
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
return.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.bindingConstraints[].getClass().getName() one of { [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue], [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue] }
this.next == 0
this.uni == 0.0
return[].getClass().getName() elements == java.util.ArrayList.class
return[].getClass().getName() one of { [java.util.ArrayList], [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList] }
return.getClass().getName() == java.util.ArrayList.class
size(this.bindingConstraints[]) one of { 2, 8 }
size(return[]) one of { 1, 3 }
return.getClass().getName() in return[].getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.combinations(java.util.List):::ENTER
this.bindingConstraints.getClass().getName() == arg0.getClass().getName()
this.next == 0
this.uni == 0.0
arg0 != null
arg0[] elements != null
arg0[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
===========================================================================
commands.model3.TaskModule$ConstraintIterator.combinations(java.util.List):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.objectInstances.getClass().getName() == return.getClass().getName()
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.hiddenObjectInstances.getClass().getName() == return.getClass().getName()
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.conditions.getClass().getName() == return.getClass().getName()
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.gps.getClass().getName() == return.getClass().getName()
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.dependencies.getClass().getName() == return.getClass().getName()
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == return.getClass().getName()
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.modules.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariables.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == return.getClass().getName()
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg0[] == orig(arg0[])
return.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
return.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
return.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
return.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
return.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
return.getClass().getName() == orig(arg0.getClass().getName())
this.next == 0
this.uni == 0.0
arg0[] elements != null
arg0[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
return != null
return[] elements != null
return[].getClass().getName() elements == java.util.ArrayList.class
return.getClass().getName() == java.util.ArrayList.class
this.stateVal.sh.getClass().getName() != return.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != return.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != return.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != return.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.getGroundedToFree():::ENTER
this.bindingConstraints[] == []
this.bindingConstraints[].getClass().getName() == []
this.next == 0
this.uni == 0.0
===========================================================================
commands.model3.TaskModule$ConstraintIterator.getGroundedToFree():::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectMap.getClass().getName() == return.getClass().getName()
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.s.objectIndexByTrueClass.getClass().getName() == return.getClass().getName()
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.parameters.getClass().getName() == return.getClass().getName()
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == return.getClass().getName()
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.parameters.getClass().getName() == return.getClass().getName()
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.parameters.getClass().getName() == return.getClass().getName()
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == return.getClass().getName()
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
return.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
return.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
return.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
return.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
return.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.bindingConstraints[] == []
this.bindingConstraints[].getClass().getName() == []
this.next == 0
this.uni == 0.0
return.getClass().getName() == java.util.HashMap.class
===========================================================================
commands.model3.TaskModule$ConstraintIterator.getLiftedVarValue(java.util.List, java.util.Map):::ENTER
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == arg1.getClass().getName()
this.bindingConstraints.getClass().getName() == arg0.getClass().getName()
this.next == 0
this.uni == 0.0
arg0 != null
arg0[] elements != null
arg0[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
arg1 != null
===========================================================================
commands.model3.TaskModule$ConstraintIterator.getLiftedVarValue(java.util.List, java.util.Map):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.s.objectIndexByTrueClass.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == return.owner.moduleOwner
this.stateVal.owner.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.moduleOwner == return.owner.moduleOwner
this.liftedRFVal.owner.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.moduleOwner == return.owner.moduleOwner
this.groundedRFVal.owner.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == return.conditions.getClass().getName()
this.bindingConstraints.getClass().getName() == return.owner.dependencies.getClass().getName()
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(arg0.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == return.owner.name
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.moduleOwner == return.owner.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.moduleOwner == return.owner.moduleOwner
commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.moduleOwner == return.owner.moduleOwner
commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable == return.owner
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner == return.owner.moduleOwner
commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName() == return.owner.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == return.owner.dependencies
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == return.owner.parameters
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == return.owner.isInput
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg0[] == orig(arg0[])
return.freeVariableToClassMapping.getClass().getName() == return.owner.parameters.getClass().getName()
return.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
return.freeVariableToClassMapping.getClass().getName() == orig(arg1.getClass().getName())
return.owner == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
return.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
return.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
return.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
return.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
return.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
return.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
return.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
return.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
return.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
return.owner.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
return.owner.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
return.owner.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
this.next == 0
this.uni == 0.0
arg0[] elements != null
arg0[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
return != null
return.freeVariableToClassMapping != null
return.freeVariableToClassMapping.getClass().getName() == java.util.HashMap.class
return.conditions != null
return.conditions[] elements != null
return.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
return.owner has only one value
return.owner != null
return.owner.name.toString == "bindingConstraint"
return.owner.moduleOwner has only one value
return.owner.moduleOwner != null
return.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
return.owner.dependencies has only one value
return.owner.dependencies != null
return.owner.dependencies[] contains no nulls and has only one value, of length 3
return.owner.dependencies[] elements != null
return.owner.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
return.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
return.owner.parameters has only one value
return.owner.parameters != null
return.owner.isInput == false
size(return.owner.dependencies[]) == 3
this.stateVal.sh.getClass().getName() != return.freeVariableToClassMapping.getClass().getName()
this.stateVal.sh.getClass().getName() != return.owner.moduleOwner.getClass().getName()
this.bindingConstraints.getClass().getName() != return.freeVariableToClassMapping.getClass().getName()
this.bindingConstraints.getClass().getName() != return.owner.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != return.freeVariableToClassMapping.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != return.owner.moduleOwner.getClass().getName()
return.owner.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
return.freeVariableToClassMapping.getClass().getName() != return.owner.moduleOwner.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.hasNext():::ENTER
this.uni one of { 0.0625, 0.06666666666666667, 0.25 }
size(this.bindingConstraints[]) one of { 4, 15, 16 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.hasNext():::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
(return == false)  ==>  (this.next one of { 4, 15, 16 })
this.uni one of { 0.0625, 0.06666666666666667, 0.25 }
size(this.bindingConstraints[]) one of { 4, 15, 16 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
commands.model3.TaskModule$ConstraintIterator.hasNext():::EXIT;condition="not(return == true)"
this.next one of { 4, 15, 16 }
return == false
===========================================================================
commands.model3.TaskModule$ConstraintIterator.newVars(java.util.Set, java.util.List):::ENTER
this.bindingConstraints.getClass().getName() == arg1.getClass().getName()
this.next == 0
this.uni == 0.0
arg0.getClass().getName() == java.util.HashSet.class
arg1[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
arg1[].getClass().getName() one of { [burlap.oomdp.core.GroundedProp], [burlap.oomdp.core.GroundedProp, burlap.oomdp.core.GroundedProp] }
size(arg1[]) one of { 1, 2 }
this.stateVal.sh.getClass().getName() != arg0.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.getClass().getName()
this.bindingConstraints.getClass().getName() != arg0.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.newVars(java.util.Set, java.util.List):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(arg1.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg1[] == orig(arg1[])
return.getClass().getName() == orig(arg0.getClass().getName())
this.next == 0
this.uni == 0.0
arg1[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
arg1[].getClass().getName() one of { [burlap.oomdp.core.GroundedProp], [burlap.oomdp.core.GroundedProp, burlap.oomdp.core.GroundedProp] }
return.getClass().getName() == java.util.HashSet.class
this.stateVal.sh.getClass().getName() != return.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != return.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != return.getClass().getName()
this.bindingConstraints.getClass().getName() != return.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != return.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.sRep(java.lang.String, int):::ENTER
this.next == 0
this.uni == 0.0
arg0 has only one value
arg0 != null
arg0.toString == "0"
arg1 one of { 0, 1, 2 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.sRep(java.lang.String, int):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg0.toString == orig(arg0.toString)
this.next == 0
this.uni == 0.0
arg0.toString == "0"
return != null
return.toString one of { "", "0", "00" }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varMembership(burlap.oomdp.core.GroundedProp, java.util.Set):::ENTER
commands.model3.TaskModule.this.domain == arg0.pf.domain
commands.model3.TaskModule.this.domain.getClass().getName() == arg0.pf.domain.getClass().getName()
arg0.pf.name == arg0.pf.pfClass
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
size(arg0.pf.parameterClasses[]) == size(arg0.params[])
size(arg0.pf.parameterOrderGroup[]) == size(arg0.params[])
this.next == 0
this.uni == 0.0
arg0 != null
arg0.pf != null
arg0.pf.name != null
arg0.pf.parameterClasses != null
arg0.pf.parameterClasses[] elements != null
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterOrderGroup != null
arg0.pf.parameterOrderGroup[] elements != null
arg0.params != null
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[] elements != null
arg0.params[].getClass().getName() elements == java.lang.String.class
arg0.params[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
arg1 != null
arg1.getClass().getName() == java.util.HashSet.class
size(this.bindingConstraints[]) one of { 0, 2, 8 }
size(this.bindingConstraints[])-1 != 0
size(arg0.params[]) one of { 1, 2 }
this.stateVal.sh.getClass().getName() != arg0.pf.getClass().getName()
this.stateVal.sh.getClass().getName() != arg0.params.getClass().getName()
this.stateVal.sh.getClass().getName() != arg1.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.pf.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.params.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg1.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.pf.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.params.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg1.getClass().getName()
this.bindingConstraints.getClass().getName() != arg0.pf.getClass().getName()
this.bindingConstraints.getClass().getName() != arg0.params.getClass().getName()
this.bindingConstraints.getClass().getName() != arg1.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.pf.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.params.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg1.getClass().getName()
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize > size(arg0.params[])
arg0.pf.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.getClass().getName() != arg1.getClass().getName()
arg0.params.getClass().getName() != arg1.getClass().getName()
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varMembership(burlap.oomdp.core.GroundedProp, java.util.Set):::EXIT766
arg0.pf.parameterClasses[].toString elements one of { "block", "room" }
arg0.pf.parameterClasses[].toString one of { [block], [room] }
arg0.params[].getClass().getName() == [java.lang.String]
return == 2
size(arg0.params[]) == 1
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varMembership(burlap.oomdp.core.GroundedProp, java.util.Set):::EXIT769
this.bindingConstraints[] == []
this.bindingConstraints[].getClass().getName() == []
arg0.pf.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
arg0.pf.name.toString one of { "agentInRoom", "blockInRoom" }
arg0.pf.parameterClasses[].toString one of { [agent, room], [block, room] }
arg0.pf.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
arg0.pf.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg0.params[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.params[].toString one of { [agent0, room2], [block0, room0] }
return == 1
size(arg0.params[]) == 2
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varMembership(burlap.oomdp.core.GroundedProp, java.util.Set):::EXIT772
return == 0
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varMembership(burlap.oomdp.core.GroundedProp, java.util.Set):::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.next == orig(this.next)
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == arg0.pf.domain
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain == orig(arg0.pf.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == arg0.pf.domain.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.getClass().getName() == orig(arg0.pf.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
arg0.pf == orig(arg0.pf)
arg0.pf.getClass().getName() == orig(arg0.pf.getClass().getName())
arg0.pf.name == arg0.pf.pfClass
arg0.pf.name == orig(arg0.pf.name)
arg0.pf.name == orig(arg0.pf.pfClass)
arg0.pf.name.toString == orig(arg0.pf.name.toString)
arg0.pf.parameterClasses == orig(arg0.pf.parameterClasses)
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterClasses[] == orig(arg0.pf.parameterClasses[])
arg0.pf.parameterOrderGroup == orig(arg0.pf.parameterOrderGroup)
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup[] == orig(arg0.pf.parameterOrderGroup[])
arg0.pf.pfClass.toString == orig(arg0.pf.pfClass.toString)
arg0.params == orig(arg0.params)
arg0.params.getClass().getName() == orig(arg0.pf.parameterClasses.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.pf.parameterOrderGroup.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.params.getClass().getName())
arg0.params[] == orig(arg0.params[])
size(arg0.pf.parameterClasses[]) == size(arg0.params[])
size(arg0.pf.parameterOrderGroup[]) == size(arg0.params[])
size(arg0.params[]) == orig(size(arg0.pf.parameterClasses[]))
size(arg0.params[]) == orig(size(arg0.pf.parameterOrderGroup[]))
this.next == 0
this.uni == 0.0
arg0.pf != null
arg0.pf.name != null
arg0.pf.parameterClasses != null
arg0.pf.parameterClasses[] elements != null
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterOrderGroup != null
arg0.pf.parameterOrderGroup[] elements != null
arg0.params != null
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[] elements != null
arg0.params[].getClass().getName() elements == java.lang.String.class
arg0.params[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return one of { 0, 1, 2 }
size(this.bindingConstraints[]) one of { 0, 2, 8 }
size(this.bindingConstraints[])-1 != 0
size(arg0.params[]) one of { 1, 2 }
this.stateVal.sh.getClass().getName() != arg0.pf.getClass().getName()
this.stateVal.sh.getClass().getName() != arg0.params.getClass().getName()
this.stateVal.sh.getClass().getName() != orig(arg1.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.pf.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != arg0.params.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != orig(arg1.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.pf.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != arg0.params.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != orig(arg1.getClass().getName())
this.bindingConstraints.getClass().getName() != arg0.pf.getClass().getName()
this.bindingConstraints.getClass().getName() != arg0.params.getClass().getName()
this.bindingConstraints.getClass().getName() != orig(arg1.getClass().getName())
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.pf.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != arg0.params.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != orig(arg1.getClass().getName())
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize > size(arg0.params[])
arg0.pf.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.getClass().getName() != orig(arg1.getClass().getName())
arg0.params.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varSpecificNext():::ENTER
this.uni one of { 0.0625, 0.06666666666666667, 0.25 }
size(this.bindingConstraints[]) one of { 4, 15, 16 }
===========================================================================
commands.model3.TaskModule$ConstraintIterator.varSpecificNext():::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.groundedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.groundedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.groundedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.groundedRFVal == orig(this.groundedRFVal)
this.groundedRFVal.rf == orig(this.groundedRFVal.rf)
this.groundedRFVal.rf.gps == orig(this.groundedRFVal.rf.gps)
this.groundedRFVal.rf.gps[] == orig(this.groundedRFVal.rf.gps[])
this.groundedRFVal.rf.goalR == orig(this.groundedRFVal.rf.goalR)
this.groundedRFVal.rf.nonGoalR == orig(this.groundedRFVal.rf.nonGoalR)
this.groundedRFVal.owner == orig(this.groundedRFVal.owner)
this.groundedRFVal.owner == orig(commands.model3.TaskModule.this.groundedRFVariable)
this.groundedRFVal.owner.name.toString == orig(this.groundedRFVal.owner.name.toString)
this.groundedRFVal.owner.dependencies == orig(this.groundedRFVal.owner.dependencies)
this.groundedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
this.groundedRFVal.owner.dependencies[] == orig(this.groundedRFVal.owner.dependencies[])
this.groundedRFVal.owner.parameters == orig(this.groundedRFVal.owner.parameters)
this.groundedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
this.groundedRFVal.owner.isInput == orig(this.groundedRFVal.owner.isInput)
this.groundedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
this.bindingConstraints == orig(this.bindingConstraints)
this.bindingConstraints[] == orig(this.bindingConstraints[])
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.rf.gps.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.groundedRFVal.owner.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(this.bindingConstraints.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.bindingConstraints.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.uni == return.probability
this.uni == orig(this.uni)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVal.owner.name)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.queryValues.getClass().getName() == return.condValues.getClass().getName()
this.next >= 1
this.uni one of { 0.0625, 0.06666666666666667, 0.25 }
return != null
return.queryValues != null
return.queryValues.getClass().getName() == java.util.HashSet.class
return.condValues != null
return.hashValue == 0
return.needsToRecomputeHash == true
size(this.bindingConstraints[]) one of { 4, 15, 16 }
this.stateVal.sh.getClass().getName() != return.queryValues.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != return.queryValues.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != return.queryValues.getClass().getName()
this.bindingConstraints.getClass().getName() != return.queryValues.getClass().getName()
this.next - orig(this.next) - 1 == 0
commands.model3.TaskModule.this.domain.getClass().getName() != return.queryValues.getClass().getName()
===========================================================================
commands.model3.TaskModule$GroundedRFIterator:::OBJECT
this.stateVal.s == this.stateVal.sh.s
this.stateVal.s.objectInstances.getClass().getName() == this.rfVals.getClass().getName()
this.stateVal.s.hiddenObjectInstances.getClass().getName() == this.rfVals.getClass().getName()
this.stateVal.s.objectMap.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.s.objectIndexByTrueClass.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner == commands.model3.TaskModule.this.stateVariable
this.stateVal.owner.name == commands.model3.TaskModule.STATENAME
this.stateVal.owner.moduleOwner == this.liftedRFVal.owner.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.stateVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
this.stateVal.owner.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
this.stateVal.owner.moduleOwner.getClass().getName() == this.liftedRFVal.owner.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
this.stateVal.owner.dependencies == commands.model3.TaskModule.this.stateVariable.dependencies
this.stateVal.owner.dependencies.getClass().getName() == this.rfVals.getClass().getName()
this.stateVal.owner.parameters == commands.model3.TaskModule.this.stateVariable.parameters
this.stateVal.owner.parameters.getClass().getName() == this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner.isInput == commands.model3.TaskModule.this.stateVariable.isInput
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == this.liftedRFVal.owner.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.attributeMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.moduleMap.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.queryCache.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
this.liftedRFVal.conditions.getClass().getName() == this.rfVals.getClass().getName()
this.liftedRFVal.owner == commands.model3.TaskModule.this.liftedRFVariable
this.liftedRFVal.owner.name == commands.model3.TaskModule.LIFTEDRFNAME
this.liftedRFVal.owner.dependencies == commands.model3.TaskModule.this.liftedRFVariable.dependencies
this.liftedRFVal.owner.dependencies.getClass().getName() == this.rfVals.getClass().getName()
this.liftedRFVal.owner.parameters == commands.model3.TaskModule.this.liftedRFVariable.parameters
this.liftedRFVal.owner.isInput == commands.model3.TaskModule.this.liftedRFVariable.isInput
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.domain.attributes.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.owner.modules.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.rVariables.getClass().getName()
this.rfVals.getClass().getName() == commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
this.stateVal has only one value
this.stateVal != null
this.stateVal.s has only one value
this.stateVal.s != null
this.stateVal.s.objectInstances has only one value
this.stateVal.s.objectInstances != null
this.stateVal.s.objectInstances[] contains no nulls and has only one value, of length 7
this.stateVal.s.objectInstances[] elements != null
this.stateVal.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.stateVal.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.stateVal.s.hiddenObjectInstances has only one value
this.stateVal.s.hiddenObjectInstances != null
this.stateVal.s.hiddenObjectInstances[] == []
this.stateVal.s.hiddenObjectInstances[].getClass().getName() == []
this.stateVal.s.objectMap has only one value
this.stateVal.s.objectMap != null
this.stateVal.s.objectIndexByTrueClass has only one value
this.stateVal.s.objectIndexByTrueClass != null
this.stateVal.sh has only one value
this.stateVal.sh != null
this.stateVal.sh.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.class
this.stateVal.sh.hashCode == -1098037574
this.stateVal.sh.needToRecomputeHashCode == false
this.stateVal.owner has only one value
this.stateVal.owner != null
this.stateVal.owner.name.toString == "state"
this.stateVal.owner.moduleOwner has only one value
this.stateVal.owner.moduleOwner != null
this.stateVal.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.stateVal.owner.dependencies has only one value
this.stateVal.owner.dependencies != null
this.stateVal.owner.dependencies[] == []
this.stateVal.owner.dependencies[].getClass().getName() == []
this.stateVal.owner.parameters has only one value
this.stateVal.owner.parameters != null
this.stateVal.owner.isInput == false
this.liftedRFVal != null
this.liftedRFVal.freeVariableToClassMapping != null
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == java.util.HashMap.class
this.liftedRFVal.conditions != null
this.liftedRFVal.conditions[] elements != null
this.liftedRFVal.conditions[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
this.liftedRFVal.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.liftedRFVal.owner has only one value
this.liftedRFVal.owner != null
this.liftedRFVal.owner.name.toString == "liftedRF"
this.liftedRFVal.owner.dependencies has only one value
this.liftedRFVal.owner.dependencies != null
this.liftedRFVal.owner.dependencies[] contains no nulls and has only one value, of length 1
this.liftedRFVal.owner.dependencies[] elements has only one value
this.liftedRFVal.owner.dependencies[] elements != null
this.liftedRFVal.owner.dependencies[].getClass().getName() == [generativemodel.RVariable]
this.liftedRFVal.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.liftedRFVal.owner.parameters has only one value
this.liftedRFVal.owner.parameters != null
this.liftedRFVal.owner.isInput == false
this.rfVals != null
this.rfVals[] elements != null
this.rfVals[].getClass().getName() == [commands.model3.TaskModule.RFConVariableValue, commands.model3.TaskModule.RFConVariableValue]
this.rfVals[].getClass().getName() elements == commands.model3.TaskModule.RFConVariableValue.class
this.rfVals.getClass().getName() == java.util.ArrayList.class
this.next one of { 0, 1, 2 }
this.uniProb == 0.5
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME != null
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME != null
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME != null
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME != null
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements != null
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable has only one value
commands.model3.TaskModule.this.groundedRFVariable != null
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.groundedRFVariable.dependencies != null
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] elements != null
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.parameters has only one value
commands.model3.TaskModule.this.groundedRFVariable.parameters != null
commands.model3.TaskModule.this.groundedRFVariable.isInput == false
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable != null
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies != null
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] elements != null
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.parameters != null
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues != null
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[] elements != null
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain != null
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses != null
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[] elements != null
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.objectClassMap != null
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes != null
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[] elements != null
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.attributeMap != null
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions != null
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[] elements != null
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.propFunctionMap != null
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name != null
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner != null
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules != null
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[] elements != null
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.moduleMap != null
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables != null
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.variableOwnerResolver != null
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.queryCache != null
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache != null
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables != null
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[] elements != null
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap != null
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList != null
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
this.modelOwner == null
this.cache == false
size(this.stateVal.s.objectInstances[]) == 7
size(this.liftedRFVal.conditions[]) == 1
size(this.liftedRFVal.owner.dependencies[]) == 1
size(this.rfVals[]) == 2
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
this.stateVal.sh.getClass().getName() != this.stateVal.owner.moduleOwner.getClass().getName()
this.stateVal.sh.getClass().getName() != this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.sh.getClass().getName() != this.rfVals.getClass().getName()
this.stateVal.sh.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != this.liftedRFVal.freeVariableToClassMapping.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != this.rfVals.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.stateVal.owner.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != this.rfVals.getClass().getName()
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.rfVals.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.modules.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.rVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable has only one value
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.moduleOwner has only one value
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
commands.model3.TaskModule.this.stateVariable.dependencies has only one value
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.stateVariable.parameters has only one value
commands.model3.TaskModule.this.stateVariable.isInput == false
commands.model3.TaskModule.this.liftedRFVariable has only one value
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.liftedRFVariable.parameters has only one value
commands.model3.TaskModule.this.liftedRFVariable.isInput == false
commands.model3.TaskModule.this.groundedRFVariable has only one value
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.parameters has only one value
commands.model3.TaskModule.this.groundedRFVariable.isInput == false
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == java.util.HashMap.class
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue]
arg1.getClass().getName() == java.util.ArrayList.class
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
size(arg1[]) == 2
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.GroundedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.rfVals.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
arg1[] == orig(arg1[])
this.next == 0
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue]
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.hasNext():::ENTER
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.hasNext():::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.rfVals == orig(this.rfVals)
this.rfVals[] == orig(this.rfVals[])
this.rfVals.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.rfVals.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.rfVals.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.rfVals.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(this.rfVals.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.next == orig(this.next)
this.uniProb == orig(this.uniProb)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
(this.next == 2)  <==>  (return == false)
(this.next one of { 0, 1 })  <==>  (return == true)
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.hasNext():::EXIT;condition="return == true"
this.next one of { 0, 1 }
return == true
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.hasNext():::EXIT;condition="not(return == true)"
this.next == 2
return == false
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.varSpecificNext():::ENTER
this.next one of { 0, 1 }
===========================================================================
commands.model3.TaskModule$GroundedRFIterator.varSpecificNext():::EXIT
this.stateVal == orig(this.stateVal)
this.stateVal.s == orig(this.stateVal.s)
this.stateVal.s == orig(this.stateVal.sh.s)
this.stateVal.s.objectInstances == orig(this.stateVal.s.objectInstances)
this.stateVal.s.objectInstances[] == orig(this.stateVal.s.objectInstances[])
this.stateVal.s.hiddenObjectInstances == orig(this.stateVal.s.hiddenObjectInstances)
this.stateVal.s.hiddenObjectInstances[] == orig(this.stateVal.s.hiddenObjectInstances[])
this.stateVal.s.objectMap == orig(this.stateVal.s.objectMap)
this.stateVal.s.objectIndexByTrueClass == orig(this.stateVal.s.objectIndexByTrueClass)
this.stateVal.sh == orig(this.stateVal.sh)
this.stateVal.sh.getClass().getName() == orig(this.stateVal.sh.getClass().getName())
this.stateVal.sh.hashCode == orig(this.stateVal.sh.hashCode)
this.stateVal.sh.needToRecomputeHashCode == orig(this.stateVal.sh.needToRecomputeHashCode)
this.stateVal.owner == orig(this.stateVal.owner)
this.stateVal.owner == orig(commands.model3.TaskModule.this.stateVariable)
this.stateVal.owner.name.toString == orig(this.stateVal.owner.name.toString)
this.stateVal.owner.moduleOwner == orig(this.stateVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(this.liftedRFVal.owner.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
this.stateVal.owner.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.stateVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(this.liftedRFVal.owner.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVal.owner.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVal.owner.dependencies == orig(this.stateVal.owner.dependencies)
this.stateVal.owner.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
this.stateVal.owner.dependencies[] == orig(this.stateVal.owner.dependencies[])
this.stateVal.owner.parameters == orig(this.stateVal.owner.parameters)
this.stateVal.owner.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
this.stateVal.owner.isInput == orig(this.stateVal.owner.isInput)
this.stateVal.owner.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
this.liftedRFVal == orig(this.liftedRFVal)
this.liftedRFVal.freeVariableToClassMapping == orig(this.liftedRFVal.freeVariableToClassMapping)
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.s.objectIndexByTrueClass.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.stateVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.freeVariableToClassMapping.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(this.liftedRFVal.owner.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
this.liftedRFVal.freeVariableToClassMapping.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
this.liftedRFVal.conditions == orig(this.liftedRFVal.conditions)
this.liftedRFVal.conditions[] == orig(this.liftedRFVal.conditions[])
this.liftedRFVal.owner == orig(this.liftedRFVal.owner)
this.liftedRFVal.owner == orig(commands.model3.TaskModule.this.liftedRFVariable)
this.liftedRFVal.owner.name.toString == orig(this.liftedRFVal.owner.name.toString)
this.liftedRFVal.owner.dependencies == orig(this.liftedRFVal.owner.dependencies)
this.liftedRFVal.owner.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
this.liftedRFVal.owner.dependencies[] == orig(this.liftedRFVal.owner.dependencies[])
this.liftedRFVal.owner.parameters == orig(this.liftedRFVal.owner.parameters)
this.liftedRFVal.owner.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
this.liftedRFVal.owner.isInput == orig(this.liftedRFVal.owner.isInput)
this.liftedRFVal.owner.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
this.rfVals == orig(this.rfVals)
this.rfVals[] == orig(this.rfVals[])
this.rfVals.getClass().getName() == orig(this.stateVal.s.objectInstances.getClass().getName())
this.rfVals.getClass().getName() == orig(this.stateVal.s.hiddenObjectInstances.getClass().getName())
this.rfVals.getClass().getName() == orig(this.stateVal.owner.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(this.liftedRFVal.conditions.getClass().getName())
this.rfVals.getClass().getName() == orig(this.liftedRFVal.owner.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(this.rfVals.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
this.rfVals.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
this.uniProb == return.probability
this.uniProb == orig(this.uniProb)
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(this.stateVal.owner.name)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVal.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.queryValues.getClass().getName() == return.condValues.getClass().getName()
this.next one of { 1, 2 }
return.queryValues.getClass().getName() == java.util.HashSet.class
return.hashValue == 0
return.needsToRecomputeHash == true
===========================================================================
commands.model3.TaskModule$LiftedRFIterator:::OBJECT
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.domain.objectClasses.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.domain.attributes.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.domain.propFunctions.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.owner.modules.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.owner.inputVariables.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.rVariables.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == commands.model3.TaskModule.this.externalDependencyList.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
this has only one value
this.sourceIterator has only one value
this.sourceIterator.getClass().getName() == java.util.ArrayList$Itr.class
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable has only one value
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.moduleOwner has only one value
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
commands.model3.TaskModule.this.stateVariable.dependencies has only one value
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.stateVariable.parameters has only one value
commands.model3.TaskModule.this.stateVariable.isInput == false
commands.model3.TaskModule.this.liftedRFVariable has only one value
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.liftedRFVariable.parameters has only one value
commands.model3.TaskModule.this.liftedRFVariable.isInput == false
commands.model3.TaskModule.this.groundedRFVariable has only one value
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.parameters has only one value
commands.model3.TaskModule.this.groundedRFVariable.isInput == false
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == java.util.ArrayList.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == java.util.HashMap.class
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
this.modelOwner == null
this.cache == false
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
this.sourceIterator.getClass().getName() != commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName()
this.sourceIterator.getClass().getName() != commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
this.sourceIterator.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
this.sourceIterator.getClass().getName() != commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() != commands.model3.TaskModule.this.liftedRFValues.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() != commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() != commands.model3.TaskModule.this.domain.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() != commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.getClass().getName() != commands.model3.TaskModule.this.rVariableMap.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::ENTER
commands.model3.TaskModule.STATENAME == commands.model3.TaskModule.this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == commands.model3.TaskModule.this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == commands.model3.TaskModule.this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == commands.model3.TaskModule.this.bindingConstraintVariable.name
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName()
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.attributeMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.modules.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.moduleMap.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.queryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName() == commands.model3.TaskModule.this.rVariableMap.getClass().getName()
commands.model3.TaskModule.this.rVariables.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == arg1.getClass().getName()
commands.model3.TaskModule.this has only one value
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
commands.model3.TaskModule.this.stateVariable has only one value
commands.model3.TaskModule.this.stateVariable.name.toString == "state"
commands.model3.TaskModule.this.stateVariable.moduleOwner has only one value
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
commands.model3.TaskModule.this.stateVariable.dependencies has only one value
commands.model3.TaskModule.this.stateVariable.dependencies[] == []
commands.model3.TaskModule.this.stateVariable.dependencies[].getClass().getName() == []
commands.model3.TaskModule.this.stateVariable.parameters has only one value
commands.model3.TaskModule.this.stateVariable.isInput == false
commands.model3.TaskModule.this.liftedRFVariable has only one value
commands.model3.TaskModule.this.liftedRFVariable.name.toString == "liftedRF"
commands.model3.TaskModule.this.liftedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] elements has only one value
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
commands.model3.TaskModule.this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.liftedRFVariable.parameters has only one value
commands.model3.TaskModule.this.liftedRFVariable.isInput == false
commands.model3.TaskModule.this.groundedRFVariable has only one value
commands.model3.TaskModule.this.groundedRFVariable.name.toString == "groundedRF"
commands.model3.TaskModule.this.groundedRFVariable.dependencies has only one value
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.groundedRFVariable.parameters has only one value
commands.model3.TaskModule.this.groundedRFVariable.isInput == false
commands.model3.TaskModule.this.bindingConstraintVariable has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == "bindingConstraint"
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.bindingConstraintVariable.parameters has only one value
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == false
commands.model3.TaskModule.this.liftedRFValues has only one value
commands.model3.TaskModule.this.liftedRFValues[] contains no nulls and has only one value, of length 2
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
commands.model3.TaskModule.this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
commands.model3.TaskModule.this.domain has only one value
commands.model3.TaskModule.this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
commands.model3.TaskModule.this.domain.objectClasses has only one value
commands.model3.TaskModule.this.domain.objectClasses[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
commands.model3.TaskModule.this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
commands.model3.TaskModule.this.domain.objectClassMap has only one value
commands.model3.TaskModule.this.domain.attributes has only one value
commands.model3.TaskModule.this.domain.attributes[] contains no nulls and has only one value, of length 8
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
commands.model3.TaskModule.this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
commands.model3.TaskModule.this.domain.attributeMap has only one value
commands.model3.TaskModule.this.domain.propFunctions has only one value
commands.model3.TaskModule.this.domain.propFunctions[] contains no nulls and has only one value, of length 18
commands.model3.TaskModule.this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
commands.model3.TaskModule.this.domain.propFunctionMap has only one value
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == false
commands.model3.TaskModule.this.domain.debugCode == 111
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == false
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == 12
commands.model3.TaskModule.this.name has only one value
commands.model3.TaskModule.this.name.toString == "task"
commands.model3.TaskModule.this.owner has only one value
commands.model3.TaskModule.this.owner.modules has only one value
commands.model3.TaskModule.this.owner.modules[] contains no nulls and has only one value, of length 1
commands.model3.TaskModule.this.owner.modules[] elements has only one value
commands.model3.TaskModule.this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
commands.model3.TaskModule.this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
commands.model3.TaskModule.this.owner.moduleMap has only one value
commands.model3.TaskModule.this.owner.inputVariables has only one value
commands.model3.TaskModule.this.owner.inputVariables[] == []
commands.model3.TaskModule.this.owner.inputVariables[].getClass().getName() == []
commands.model3.TaskModule.this.owner.variableOwnerResolver has only one value
commands.model3.TaskModule.this.owner.queryCache has only one value
commands.model3.TaskModule.this.owner.logQueryCache has only one value
commands.model3.TaskModule.this.rVariables has only one value
commands.model3.TaskModule.this.rVariables[] contains no nulls and has only one value, of length 4
commands.model3.TaskModule.this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
commands.model3.TaskModule.this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
commands.model3.TaskModule.this.rVariableMap has only one value
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == java.util.HashMap.class
commands.model3.TaskModule.this.externalDependencyList has only one value
commands.model3.TaskModule.this.externalDependencyList[] == []
commands.model3.TaskModule.this.externalDependencyList[].getClass().getName() == []
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue]
arg1[].getClass().getName() elements == commands.model3.TaskModule.StateRVValue.class
arg1.getClass().getName() == java.util.ArrayList.class
size(commands.model3.TaskModule.this.liftedRFVariable.dependencies[]) == 1
size(commands.model3.TaskModule.this.groundedRFVariable.dependencies[]) == 2
size(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[]) == 3
size(commands.model3.TaskModule.this.liftedRFValues[]) == 2
size(commands.model3.TaskModule.this.domain.objectClasses[]) == 4
size(commands.model3.TaskModule.this.domain.attributes[]) == 8
size(commands.model3.TaskModule.this.domain.propFunctions[]) == 18
size(commands.model3.TaskModule.this.owner.modules[]) == 1
size(commands.model3.TaskModule.this.rVariables[]) == 4
size(arg1[]) == 1
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() in commands.model3.TaskModule.this.owner.modules[].getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.LiftedRFIterator(commands.model3.TaskModule, java.util.List):::EXIT
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable == orig(commands.model3.TaskModule.this.stateVariable)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.stateVariable.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
commands.model3.TaskModule.this.stateVariable.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
commands.model3.TaskModule.this.liftedRFVariable == orig(commands.model3.TaskModule.this.liftedRFVariable)
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.liftedRFVariable.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
commands.model3.TaskModule.this.liftedRFVariable.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClasses.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributes.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctions.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.modules.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.inputVariables.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariables.getClass().getName() == orig(arg1.getClass().getName())
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
commands.model3.TaskModule.this.externalDependencyList.getClass().getName() == orig(arg1.getClass().getName())
arg1[] == orig(arg1[])
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue]
arg1[].getClass().getName() elements == commands.model3.TaskModule.StateRVValue.class
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.hasNext():::ENTER
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.hasNext():::EXIT
this.sourceIterator == orig(this.sourceIterator)
this.sourceIterator.getClass().getName() == orig(this.sourceIterator.getClass().getName())
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable == orig(commands.model3.TaskModule.this.stateVariable)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
commands.model3.TaskModule.this.stateVariable.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
commands.model3.TaskModule.this.liftedRFVariable == orig(commands.model3.TaskModule.this.liftedRFVariable)
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
commands.model3.TaskModule.this.liftedRFVariable.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.hasNext():::EXIT;condition="not(return == true)"
return == false
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.varSpecificNext():::ENTER
===========================================================================
commands.model3.TaskModule$LiftedRFIterator.varSpecificNext():::EXIT
this.sourceIterator == orig(this.sourceIterator)
this.sourceIterator.getClass().getName() == orig(this.sourceIterator.getClass().getName())
commands.model3.TaskModule.this == orig(commands.model3.TaskModule.this)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
commands.model3.TaskModule.this.stateVariable == orig(commands.model3.TaskModule.this.stateVariable)
commands.model3.TaskModule.this.stateVariable.name.toString == orig(commands.model3.TaskModule.this.stateVariable.name.toString)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner)
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.moduleOwner.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.moduleOwner.getClass().getName())
commands.model3.TaskModule.this.stateVariable.dependencies == orig(commands.model3.TaskModule.this.stateVariable.dependencies)
commands.model3.TaskModule.this.stateVariable.dependencies[] == orig(commands.model3.TaskModule.this.stateVariable.dependencies[])
commands.model3.TaskModule.this.stateVariable.parameters == orig(commands.model3.TaskModule.this.stateVariable.parameters)
commands.model3.TaskModule.this.stateVariable.isInput == orig(commands.model3.TaskModule.this.stateVariable.isInput)
commands.model3.TaskModule.this.liftedRFVariable == orig(commands.model3.TaskModule.this.liftedRFVariable)
commands.model3.TaskModule.this.liftedRFVariable.name.toString == orig(commands.model3.TaskModule.this.liftedRFVariable.name.toString)
commands.model3.TaskModule.this.liftedRFVariable.dependencies == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies)
commands.model3.TaskModule.this.liftedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies[])
commands.model3.TaskModule.this.liftedRFVariable.parameters == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters)
commands.model3.TaskModule.this.liftedRFVariable.isInput == orig(commands.model3.TaskModule.this.liftedRFVariable.isInput)
commands.model3.TaskModule.this.groundedRFVariable == orig(commands.model3.TaskModule.this.groundedRFVariable)
commands.model3.TaskModule.this.groundedRFVariable.name.toString == orig(commands.model3.TaskModule.this.groundedRFVariable.name.toString)
commands.model3.TaskModule.this.groundedRFVariable.dependencies == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies)
commands.model3.TaskModule.this.groundedRFVariable.dependencies[] == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies[])
commands.model3.TaskModule.this.groundedRFVariable.parameters == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters)
commands.model3.TaskModule.this.groundedRFVariable.isInput == orig(commands.model3.TaskModule.this.groundedRFVariable.isInput)
commands.model3.TaskModule.this.bindingConstraintVariable == orig(commands.model3.TaskModule.this.bindingConstraintVariable)
commands.model3.TaskModule.this.bindingConstraintVariable.name.toString == orig(commands.model3.TaskModule.this.bindingConstraintVariable.name.toString)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies)
commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[] == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies[])
commands.model3.TaskModule.this.bindingConstraintVariable.parameters == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters)
commands.model3.TaskModule.this.bindingConstraintVariable.isInput == orig(commands.model3.TaskModule.this.bindingConstraintVariable.isInput)
commands.model3.TaskModule.this.liftedRFValues == orig(commands.model3.TaskModule.this.liftedRFValues)
commands.model3.TaskModule.this.liftedRFValues[] == orig(commands.model3.TaskModule.this.liftedRFValues[])
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.dependencies.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFValues.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClasses.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributes.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctions.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.owner.modules.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.owner.inputVariables.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.rVariables.getClass().getName())
commands.model3.TaskModule.this.liftedRFValues.getClass().getName() == orig(commands.model3.TaskModule.this.externalDependencyList.getClass().getName())
commands.model3.TaskModule.this.domain == orig(commands.model3.TaskModule.this.domain)
commands.model3.TaskModule.this.domain.getClass().getName() == orig(commands.model3.TaskModule.this.domain.getClass().getName())
commands.model3.TaskModule.this.domain.objectClasses == orig(commands.model3.TaskModule.this.domain.objectClasses)
commands.model3.TaskModule.this.domain.objectClasses[] == orig(commands.model3.TaskModule.this.domain.objectClasses[])
commands.model3.TaskModule.this.domain.objectClassMap == orig(commands.model3.TaskModule.this.domain.objectClassMap)
commands.model3.TaskModule.this.domain.attributes == orig(commands.model3.TaskModule.this.domain.attributes)
commands.model3.TaskModule.this.domain.attributes[] == orig(commands.model3.TaskModule.this.domain.attributes[])
commands.model3.TaskModule.this.domain.attributeMap == orig(commands.model3.TaskModule.this.domain.attributeMap)
commands.model3.TaskModule.this.domain.propFunctions == orig(commands.model3.TaskModule.this.domain.propFunctions)
commands.model3.TaskModule.this.domain.propFunctions[] == orig(commands.model3.TaskModule.this.domain.propFunctions[])
commands.model3.TaskModule.this.domain.propFunctionMap == orig(commands.model3.TaskModule.this.domain.propFunctionMap)
commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain == orig(commands.model3.TaskModule.this.domain.objectIdentifierDependentDomain)
commands.model3.TaskModule.this.domain.debugCode == orig(commands.model3.TaskModule.this.domain.debugCode)
commands.model3.TaskModule.this.permitInitiallySatisfiedRFs == orig(commands.model3.TaskModule.this.permitInitiallySatisfiedRFs)
commands.model3.TaskModule.this.maxBindingConstraintsComponentSize == orig(commands.model3.TaskModule.this.maxBindingConstraintsComponentSize)
commands.model3.TaskModule.this.name == orig(commands.model3.TaskModule.this.name)
commands.model3.TaskModule.this.name.toString == orig(commands.model3.TaskModule.this.name.toString)
commands.model3.TaskModule.this.owner == orig(commands.model3.TaskModule.this.owner)
commands.model3.TaskModule.this.owner.modules == orig(commands.model3.TaskModule.this.owner.modules)
commands.model3.TaskModule.this.owner.modules[] == orig(commands.model3.TaskModule.this.owner.modules[])
commands.model3.TaskModule.this.owner.moduleMap == orig(commands.model3.TaskModule.this.owner.moduleMap)
commands.model3.TaskModule.this.owner.inputVariables == orig(commands.model3.TaskModule.this.owner.inputVariables)
commands.model3.TaskModule.this.owner.inputVariables[] == orig(commands.model3.TaskModule.this.owner.inputVariables[])
commands.model3.TaskModule.this.owner.variableOwnerResolver == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver)
commands.model3.TaskModule.this.owner.queryCache == orig(commands.model3.TaskModule.this.owner.queryCache)
commands.model3.TaskModule.this.owner.logQueryCache == orig(commands.model3.TaskModule.this.owner.logQueryCache)
commands.model3.TaskModule.this.rVariables == orig(commands.model3.TaskModule.this.rVariables)
commands.model3.TaskModule.this.rVariables[] == orig(commands.model3.TaskModule.this.rVariables[])
commands.model3.TaskModule.this.rVariableMap == orig(commands.model3.TaskModule.this.rVariableMap)
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.stateVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.liftedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.groundedRFVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.bindingConstraintVariable.parameters.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.objectClassMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.attributeMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.domain.propFunctionMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.moduleMap.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.variableOwnerResolver.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.queryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.owner.logQueryCache.getClass().getName())
commands.model3.TaskModule.this.rVariableMap.getClass().getName() == orig(commands.model3.TaskModule.this.rVariableMap.getClass().getName())
commands.model3.TaskModule.this.externalDependencyList == orig(commands.model3.TaskModule.this.externalDependencyList)
commands.model3.TaskModule.this.externalDependencyList[] == orig(commands.model3.TaskModule.this.externalDependencyList[])
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.queryValues.getClass().getName() == return.condValues.getClass().getName()
return.probability == 0.5
return.queryValues.getClass().getName() == java.util.HashSet.class
return.hashValue == 0
return.needsToRecomputeHash == true
===========================================================================
commands.model3.TaskModule$LiftedVarValue:::OBJECT
this.freeVariableToClassMapping.getClass().getName() == this.owner.moduleOwner.rVariableMap.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() == this.owner.parameters.getClass().getName()
this.conditions.getClass().getName() == this.owner.moduleOwner.rVariables.getClass().getName()
this.conditions.getClass().getName() == this.owner.moduleOwner.externalDependencyList.getClass().getName()
this.conditions.getClass().getName() == this.owner.dependencies.getClass().getName()
this.freeVariableToClassMapping != null
this.freeVariableToClassMapping.getClass().getName() == java.util.HashMap.class
this.conditions != null
this.conditions[] elements != null
this.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.conditions.getClass().getName() == java.util.ArrayList.class
this.owner != null
this.owner.name != null
this.owner.name.toString one of { "bindingConstraint", "liftedRF" }
this.owner.moduleOwner has only one value
this.owner.moduleOwner != null
this.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.owner.moduleOwner.name has only one value
this.owner.moduleOwner.name != null
this.owner.moduleOwner.name.toString == "task"
this.owner.moduleOwner.owner has only one value
this.owner.moduleOwner.owner != null
this.owner.moduleOwner.rVariables has only one value
this.owner.moduleOwner.rVariables != null
this.owner.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.owner.moduleOwner.rVariables[] elements != null
this.owner.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.moduleOwner.rVariableMap has only one value
this.owner.moduleOwner.rVariableMap != null
this.owner.moduleOwner.externalDependencyList has only one value
this.owner.moduleOwner.externalDependencyList != null
this.owner.moduleOwner.externalDependencyList[] == []
this.owner.moduleOwner.externalDependencyList[].getClass().getName() == []
this.owner.dependencies != null
this.owner.dependencies[] elements != null
this.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.dependencies[].getClass().getName() one of { [generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] }
this.owner.parameters != null
this.owner.isInput == false
size(this.owner.moduleOwner.rVariables[]) == 4
size(this.owner.dependencies[]) one of { 1, 3 }
this.freeVariableToClassMapping.getClass().getName() != this.conditions.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.conditions.getClass().getName() != this.owner.moduleOwner.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedVarValue.LiftedVarValue(generativemodel.RVariable):::ENTER
arg0.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
arg0.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
arg0 != null
arg0.name != null
arg0.name.toString one of { "bindingConstraint", "liftedRF" }
arg0.moduleOwner has only one value
arg0.moduleOwner != null
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name != null
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.owner != null
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables != null
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[] elements != null
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.rVariableMap != null
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList != null
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies != null
arg0.dependencies[] elements != null
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies[].getClass().getName() one of { [generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] }
arg0.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.parameters != null
arg0.parameters.getClass().getName() == java.util.HashMap.class
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) one of { 1, 3 }
arg0.moduleOwner.getClass().getName() != arg0.dependencies.getClass().getName()
arg0.moduleOwner.getClass().getName() != arg0.parameters.getClass().getName()
arg0.dependencies.getClass().getName() != arg0.parameters.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedVarValue.LiftedVarValue(generativemodel.RVariable):::EXIT
this.freeVariableToClassMapping.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() == arg0.parameters.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(arg0.parameters.getClass().getName())
this.conditions.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.conditions.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.conditions.getClass().getName() == arg0.dependencies.getClass().getName()
this.conditions.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
this.conditions.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
this.conditions.getClass().getName() == orig(arg0.dependencies.getClass().getName())
this.owner == orig(arg0)
this.owner.name == arg0.name
this.owner.moduleOwner == arg0.moduleOwner
this.owner.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.owner.moduleOwner.name == arg0.moduleOwner.name
this.owner.moduleOwner.owner == arg0.moduleOwner.owner
this.owner.moduleOwner.rVariables == arg0.moduleOwner.rVariables
this.owner.moduleOwner.rVariableMap == arg0.moduleOwner.rVariableMap
this.owner.moduleOwner.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.owner.dependencies == arg0.dependencies
this.owner.parameters == arg0.parameters
this.owner.isInput == arg0.isInput
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner == orig(arg0.moduleOwner)
arg0.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
arg0.moduleOwner.name == orig(arg0.moduleOwner.name)
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.owner == orig(arg0.moduleOwner.owner)
arg0.moduleOwner.rVariables == orig(arg0.moduleOwner.rVariables)
arg0.moduleOwner.rVariables[] == orig(arg0.moduleOwner.rVariables[])
arg0.moduleOwner.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
arg0.moduleOwner.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.parameters == orig(arg0.parameters)
arg0.isInput == orig(arg0.isInput)
this.conditions[] == []
this.conditions[].getClass().getName() == []
arg0.name != null
arg0.name.toString one of { "bindingConstraint", "liftedRF" }
arg0.moduleOwner has only one value
arg0.moduleOwner != null
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name != null
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.owner != null
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables != null
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[] elements != null
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.rVariableMap != null
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList != null
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies != null
arg0.dependencies[] elements != null
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies[].getClass().getName() one of { [generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] }
arg0.parameters != null
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) one of { 1, 3 }
this.freeVariableToClassMapping.getClass().getName() != arg0.moduleOwner.getClass().getName()
this.conditions.getClass().getName() != arg0.moduleOwner.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedVarValue.addProp(burlap.oomdp.core.GroundedProp):::ENTER
arg0.pf.name == arg0.pf.pfClass
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
arg0 != null
arg0.pf != null
arg0.pf.name != null
arg0.pf.domain has only one value
arg0.pf.domain != null
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses != null
arg0.pf.parameterClasses[] elements != null
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterOrderGroup != null
arg0.pf.parameterOrderGroup[] elements != null
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
arg0.params != null
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[] elements != null
arg0.params[].getClass().getName() elements == java.lang.String.class
arg0.params[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
size(arg0.pf.parameterClasses[]) one of { 1, 2 }
size(arg0.pf.parameterOrderGroup[]) one of { 1, 2 }
size(arg0.params[]) one of { 1, 2 }
this.freeVariableToClassMapping.getClass().getName() != arg0.pf.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() != arg0.pf.domain.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() != arg0.params.getClass().getName()
this.conditions.getClass().getName() != arg0.pf.getClass().getName()
this.conditions.getClass().getName() != arg0.pf.domain.getClass().getName()
this.conditions.getClass().getName() != arg0.params.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.pf.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.pf.domain.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.getClass().getName() != arg0.pf.domain.getClass().getName()
arg0.pf.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.domain.getClass().getName() != arg0.params.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedVarValue.addProp(burlap.oomdp.core.GroundedProp):::EXIT
this.freeVariableToClassMapping == orig(this.freeVariableToClassMapping)
this.freeVariableToClassMapping.getClass().getName() == orig(this.freeVariableToClassMapping.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.conditions == orig(this.conditions)
this.conditions.getClass().getName() == orig(this.conditions.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.isInput == orig(this.owner.isInput)
arg0.pf == orig(arg0.pf)
arg0.pf.getClass().getName() == orig(arg0.pf.getClass().getName())
arg0.pf.name == arg0.pf.pfClass
arg0.pf.name == orig(arg0.pf.name)
arg0.pf.name == orig(arg0.pf.pfClass)
arg0.pf.name.toString == orig(arg0.pf.name.toString)
arg0.pf.domain == orig(arg0.pf.domain)
arg0.pf.domain.getClass().getName() == orig(arg0.pf.domain.getClass().getName())
arg0.pf.parameterClasses == orig(arg0.pf.parameterClasses)
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterClasses[] == orig(arg0.pf.parameterClasses[])
arg0.pf.parameterOrderGroup == orig(arg0.pf.parameterOrderGroup)
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup[] == orig(arg0.pf.parameterOrderGroup[])
arg0.pf.pfClass.toString == orig(arg0.pf.pfClass.toString)
arg0.params == orig(arg0.params)
arg0.params.getClass().getName() == orig(arg0.pf.parameterClasses.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.pf.parameterOrderGroup.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.params.getClass().getName())
arg0.params[] == orig(arg0.params[])
size(this.conditions[])-1 == orig(size(this.conditions[]))
arg0.pf != null
arg0.pf.name != null
arg0.pf.domain has only one value
arg0.pf.domain != null
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses != null
arg0.pf.parameterClasses[] elements != null
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterOrderGroup != null
arg0.pf.parameterOrderGroup[] elements != null
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
arg0.params != null
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[] elements != null
arg0.params[].getClass().getName() elements == java.lang.String.class
arg0.params[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
size(this.conditions[]) >= 1
size(arg0.pf.parameterClasses[]) one of { 1, 2 }
size(arg0.pf.parameterOrderGroup[]) one of { 1, 2 }
size(arg0.params[]) one of { 1, 2 }
this.freeVariableToClassMapping.getClass().getName() != arg0.pf.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() != arg0.pf.domain.getClass().getName()
this.freeVariableToClassMapping.getClass().getName() != arg0.params.getClass().getName()
this.conditions.getClass().getName() != arg0.pf.getClass().getName()
this.conditions.getClass().getName() != arg0.pf.domain.getClass().getName()
this.conditions.getClass().getName() != arg0.params.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.pf.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.pf.domain.getClass().getName()
this.owner.moduleOwner.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.getClass().getName() != arg0.pf.domain.getClass().getName()
arg0.pf.getClass().getName() != arg0.params.getClass().getName()
arg0.pf.domain.getClass().getName() != arg0.params.getClass().getName()
===========================================================================
commands.model3.TaskModule$LiftedVarValue.numComps():::ENTER
this.owner has only one value
this.owner.name has only one value
this.owner.name.toString == "bindingConstraint"
this.owner.dependencies has only one value
this.owner.dependencies[] contains no nulls and has only one value, of length 3
this.owner.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.parameters has only one value
size(this.conditions[]) >= 1
size(this.owner.dependencies[]) == 3
===========================================================================
commands.model3.TaskModule$LiftedVarValue.numComps():::EXIT
this.freeVariableToClassMapping == orig(this.freeVariableToClassMapping)
this.freeVariableToClassMapping.getClass().getName() == orig(this.freeVariableToClassMapping.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.conditions == orig(this.conditions)
this.conditions[] == orig(this.conditions[])
this.conditions.getClass().getName() == orig(this.conditions.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.isInput == orig(this.owner.isInput)
this.owner has only one value
this.owner.name has only one value
this.owner.name.toString == "bindingConstraint"
this.owner.dependencies has only one value
this.owner.dependencies[] contains no nulls and has only one value, of length 3
this.owner.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.parameters has only one value
size(this.conditions[]) >= 1
size(this.owner.dependencies[]) == 3
===========================================================================
commands.model3.TaskModule$LiftedVarValue.stringRep():::ENTER
===========================================================================
commands.model3.TaskModule$LiftedVarValue.stringRep():::EXIT
this.freeVariableToClassMapping == orig(this.freeVariableToClassMapping)
this.freeVariableToClassMapping.getClass().getName() == orig(this.freeVariableToClassMapping.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.freeVariableToClassMapping.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.conditions == orig(this.conditions)
this.conditions[] == orig(this.conditions[])
this.conditions.getClass().getName() == orig(this.conditions.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.conditions.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.isInput == orig(this.owner.isInput)
return != null
===========================================================================
commands.model3.TaskModule$RFConVariableValue:::OBJECT
this.rf.gps.getClass().getName() == this.owner.moduleOwner.rVariables.getClass().getName()
this.rf.gps.getClass().getName() == this.owner.moduleOwner.externalDependencyList.getClass().getName()
this.rf.gps.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap.getClass().getName() == this.owner.parameters.getClass().getName()
this.rf != null
this.rf.gps != null
this.rf.gps[] elements != null
this.rf.gps[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
this.rf.gps[].getClass().getName() one of { [], [burlap.oomdp.core.GroundedProp] }
this.rf.gps.getClass().getName() == java.util.ArrayList.class
this.rf.goalR == 1.0
this.rf.nonGoalR == 0.0
this.owner has only one value
this.owner != null
this.owner.name has only one value
this.owner.name != null
this.owner.name.toString == "groundedRF"
this.owner.moduleOwner has only one value
this.owner.moduleOwner != null
this.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.owner.moduleOwner.name has only one value
this.owner.moduleOwner.name != null
this.owner.moduleOwner.name.toString == "task"
this.owner.moduleOwner.owner has only one value
this.owner.moduleOwner.owner != null
this.owner.moduleOwner.rVariables has only one value
this.owner.moduleOwner.rVariables != null
this.owner.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.owner.moduleOwner.rVariables[] elements != null
this.owner.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.moduleOwner.rVariableMap has only one value
this.owner.moduleOwner.rVariableMap != null
this.owner.moduleOwner.externalDependencyList has only one value
this.owner.moduleOwner.externalDependencyList != null
this.owner.moduleOwner.externalDependencyList[] == []
this.owner.moduleOwner.externalDependencyList[].getClass().getName() == []
this.owner.dependencies has only one value
this.owner.dependencies != null
this.owner.dependencies[] contains no nulls and has only one value, of length 2
this.owner.dependencies[] elements != null
this.owner.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
this.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.parameters has only one value
this.owner.parameters != null
this.owner.parameters.getClass().getName() == java.util.HashMap.class
this.owner.isInput == false
size(this.rf.gps[]) one of { 0, 1 }
size(this.owner.moduleOwner.rVariables[]) == 4
size(this.owner.dependencies[]) == 2
this.rf.gps.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.rf.gps.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.parameters.getClass().getName()
===========================================================================
commands.model3.TaskModule$RFConVariableValue.RFConVariableValue(generativemodel.RVariable):::ENTER
arg0.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
arg0.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "groundedRF"
arg0.moduleOwner has only one value
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies has only one value
arg0.dependencies[] contains no nulls and has only one value, of length 2
arg0.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.parameters has only one value
arg0.parameters.getClass().getName() == java.util.HashMap.class
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) == 2
===========================================================================
commands.model3.TaskModule$RFConVariableValue.RFConVariableValue(generativemodel.RVariable):::EXIT
this.rf.gps.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner == orig(arg0)
this.owner.name == arg0.name
this.owner.moduleOwner == arg0.moduleOwner
this.owner.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.owner.moduleOwner.name == arg0.moduleOwner.name
this.owner.moduleOwner.owner == arg0.moduleOwner.owner
this.owner.moduleOwner.rVariables == arg0.moduleOwner.rVariables
this.owner.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap == arg0.moduleOwner.rVariableMap
this.owner.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.owner.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.dependencies == arg0.dependencies
this.owner.dependencies.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.parameters == arg0.parameters
this.owner.parameters.getClass().getName() == arg0.parameters.getClass().getName()
this.owner.isInput == arg0.isInput
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner == orig(arg0.moduleOwner)
arg0.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
arg0.moduleOwner.name == orig(arg0.moduleOwner.name)
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.owner == orig(arg0.moduleOwner.owner)
arg0.moduleOwner.rVariables == orig(arg0.moduleOwner.rVariables)
arg0.moduleOwner.rVariables[] == orig(arg0.moduleOwner.rVariables[])
arg0.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.moduleOwner.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
arg0.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
arg0.moduleOwner.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.dependencies.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
arg0.dependencies.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
arg0.dependencies.getClass().getName() == orig(arg0.dependencies.getClass().getName())
arg0.parameters == orig(arg0.parameters)
arg0.parameters.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
arg0.parameters.getClass().getName() == orig(arg0.parameters.getClass().getName())
arg0.isInput == orig(arg0.isInput)
this.rf.gps[] == []
this.rf.gps[].getClass().getName() == []
arg0.name has only one value
arg0.name.toString == "groundedRF"
arg0.moduleOwner has only one value
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies has only one value
arg0.dependencies[] contains no nulls and has only one value, of length 2
arg0.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.parameters has only one value
arg0.parameters.getClass().getName() == java.util.HashMap.class
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) == 2
===========================================================================
commands.model3.TaskModule$RFConVariableValue.addGoalGP(burlap.oomdp.core.GroundedProp):::ENTER
arg0.pf.name == arg0.pf.pfClass
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
this.rf.gps[] == []
this.rf.gps[].getClass().getName() == []
arg0.pf.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
arg0.pf.name.toString one of { "agentInRoom", "blockInRoom" }
arg0.pf.domain has only one value
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterClasses[].toString one of { [agent, room], [block, room] }
arg0.pf.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
arg0.pf.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.params[].getClass().getName() elements == java.lang.String.class
size(arg0.pf.parameterClasses[]) == 2
size(arg0.pf.parameterOrderGroup[]) == 2
size(arg0.params[]) == 2
===========================================================================
commands.model3.TaskModule$RFConVariableValue.addGoalGP(burlap.oomdp.core.GroundedProp):::EXIT
this.rf == orig(this.rf)
this.rf.gps == orig(this.rf.gps)
this.rf.gps.getClass().getName() == orig(this.rf.gps.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.rf.goalR == orig(this.rf.goalR)
this.rf.nonGoalR == orig(this.rf.nonGoalR)
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.parameters.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.owner.parameters.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.owner.isInput == orig(this.owner.isInput)
arg0.pf == orig(arg0.pf)
arg0.pf.getClass().getName() == orig(arg0.pf.getClass().getName())
arg0.pf.name == arg0.pf.pfClass
arg0.pf.name == orig(arg0.pf.name)
arg0.pf.name == orig(arg0.pf.pfClass)
arg0.pf.name.toString == orig(arg0.pf.name.toString)
arg0.pf.domain == orig(arg0.pf.domain)
arg0.pf.domain.getClass().getName() == orig(arg0.pf.domain.getClass().getName())
arg0.pf.parameterClasses == orig(arg0.pf.parameterClasses)
arg0.pf.parameterClasses.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterClasses[] == orig(arg0.pf.parameterClasses[])
arg0.pf.parameterOrderGroup == orig(arg0.pf.parameterOrderGroup)
arg0.pf.parameterOrderGroup.getClass().getName() == arg0.params.getClass().getName()
arg0.pf.parameterOrderGroup[] == orig(arg0.pf.parameterOrderGroup[])
arg0.pf.pfClass.toString == orig(arg0.pf.pfClass.toString)
arg0.params == orig(arg0.params)
arg0.params.getClass().getName() == orig(arg0.pf.parameterClasses.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.pf.parameterOrderGroup.getClass().getName())
arg0.params.getClass().getName() == orig(arg0.params.getClass().getName())
arg0.params[] == orig(arg0.params[])
size(this.rf.gps[])-1 == orig(size(this.rf.gps[]))
this.rf.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0.pf.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.class
arg0.pf.name.toString one of { "agentInRoom", "blockInRoom" }
arg0.pf.domain has only one value
arg0.pf.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.pf.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterClasses[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterClasses[].toString elements one of { "agent", "block", "room" }
arg0.pf.parameterClasses[].toString one of { [agent, room], [block, room] }
arg0.pf.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.pf.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
arg0.pf.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
arg0.pf.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg0.params.getClass().getName() == java.lang.String[].class
arg0.params[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.params[].getClass().getName() elements == java.lang.String.class
size(this.rf.gps[]) == 1
size(arg0.pf.parameterClasses[]) == 2
size(arg0.pf.parameterOrderGroup[]) == 2
size(arg0.params[]) == 2
===========================================================================
commands.model3.TaskModule$RFConVariableValue.stringRep():::ENTER
this.rf.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
size(this.rf.gps[]) == 1
===========================================================================
commands.model3.TaskModule$RFConVariableValue.stringRep():::EXIT
this.rf == orig(this.rf)
this.rf.gps == orig(this.rf.gps)
this.rf.gps[] == orig(this.rf.gps[])
this.rf.gps.getClass().getName() == orig(this.rf.gps.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.rf.gps.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.rf.goalR == orig(this.rf.goalR)
this.rf.nonGoalR == orig(this.rf.nonGoalR)
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.parameters.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.owner.parameters.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.owner.isInput == orig(this.owner.isInput)
this.rf.gps[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
return != null
size(this.rf.gps[]) == 1
===========================================================================
commands.model3.TaskModule$StateRVValue:::OBJECT
this.s == this.sh.s
this.s.objectInstances == this.sh.s.objectInstances
this.s.objectInstances.getClass().getName() == this.s.hiddenObjectInstances.getClass().getName()
this.s.objectInstances.getClass().getName() == this.sh.s.objectInstances.getClass().getName()
this.s.objectInstances.getClass().getName() == this.sh.s.hiddenObjectInstances.getClass().getName()
this.s.objectInstances.getClass().getName() == this.owner.moduleOwner.rVariables.getClass().getName()
this.s.objectInstances.getClass().getName() == this.owner.moduleOwner.externalDependencyList.getClass().getName()
this.s.objectInstances.getClass().getName() == this.owner.dependencies.getClass().getName()
this.s.hiddenObjectInstances == this.sh.s.hiddenObjectInstances
this.s.objectMap == this.sh.s.objectMap
this.s.objectMap.getClass().getName() == this.s.objectIndexByTrueClass.getClass().getName()
this.s.objectMap.getClass().getName() == this.sh.s.objectMap.getClass().getName()
this.s.objectMap.getClass().getName() == this.sh.s.objectIndexByTrueClass.getClass().getName()
this.s.objectMap.getClass().getName() == this.owner.moduleOwner.rVariableMap.getClass().getName()
this.s.objectMap.getClass().getName() == this.owner.parameters.getClass().getName()
this.s.objectIndexByTrueClass == this.sh.s.objectIndexByTrueClass
this has only one value
this.s has only one value
this.s != null
this.s.objectInstances has only one value
this.s.objectInstances != null
this.s.objectInstances[] contains no nulls and has only one value, of length 7
this.s.objectInstances[] elements != null
this.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.s.objectInstances.getClass().getName() == java.util.ArrayList.class
this.s.hiddenObjectInstances has only one value
this.s.hiddenObjectInstances != null
this.s.hiddenObjectInstances[] == []
this.s.hiddenObjectInstances[].getClass().getName() == []
this.s.objectMap has only one value
this.s.objectMap != null
this.s.objectMap.getClass().getName() == java.util.HashMap.class
this.s.objectIndexByTrueClass has only one value
this.s.objectIndexByTrueClass != null
this.sh has only one value
this.sh != null
this.sh.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory$NameDependentStateHashTuple.class
this.sh.s.objectInstances[] contains no nulls and has only one value, of length 7
this.sh.s.objectInstances[] elements != null
this.sh.s.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
this.sh.s.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
this.sh.s.hiddenObjectInstances[] == []
this.sh.s.hiddenObjectInstances[].getClass().getName() == []
this.sh.hashCode one of { -1098037574, 0 }
this.owner has only one value
this.owner != null
this.owner.name has only one value
this.owner.name != null
this.owner.name.toString == "state"
this.owner.moduleOwner has only one value
this.owner.moduleOwner != null
this.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.owner.moduleOwner.name has only one value
this.owner.moduleOwner.name != null
this.owner.moduleOwner.name.toString == "task"
this.owner.moduleOwner.owner has only one value
this.owner.moduleOwner.owner != null
this.owner.moduleOwner.rVariables has only one value
this.owner.moduleOwner.rVariables != null
this.owner.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.owner.moduleOwner.rVariables[] elements != null
this.owner.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.moduleOwner.rVariableMap has only one value
this.owner.moduleOwner.rVariableMap != null
this.owner.moduleOwner.externalDependencyList has only one value
this.owner.moduleOwner.externalDependencyList != null
this.owner.moduleOwner.externalDependencyList[] == []
this.owner.moduleOwner.externalDependencyList[].getClass().getName() == []
this.owner.dependencies has only one value
this.owner.dependencies != null
this.owner.dependencies[] == []
this.owner.dependencies[].getClass().getName() == []
this.owner.parameters has only one value
this.owner.parameters != null
this.owner.isInput == false
size(this.s.objectInstances[]) == 7
size(this.sh.s.objectInstances[]) == 7
size(this.owner.moduleOwner.rVariables[]) == 4
this.s.objectInstances.getClass().getName() != this.s.objectMap.getClass().getName()
this.s.objectInstances.getClass().getName() != this.sh.getClass().getName()
this.s.objectInstances.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.s.objectMap.getClass().getName() != this.sh.getClass().getName()
this.s.objectMap.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.sh.getClass().getName() != this.owner.moduleOwner.getClass().getName()
===========================================================================
commands.model3.TaskModule$StateRVValue.StateRVValue(burlap.oomdp.core.State, burlap.behavior.statehashing.StateHashFactory, generativemodel.RVariable):::ENTER
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.moduleOwner.rVariables.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.moduleOwner.externalDependencyList.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.dependencies.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == arg2.moduleOwner.rVariableMap.getClass().getName()
arg0.objectMap.getClass().getName() == arg2.parameters.getClass().getName()
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg1 has only one value
arg1.getClass().getName() == burlap.behavior.statehashing.NameDependentStateHashFactory.class
arg2 has only one value
arg2.name has only one value
arg2.name.toString == "state"
arg2.moduleOwner has only one value
arg2.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg2.moduleOwner.name has only one value
arg2.moduleOwner.name.toString == "task"
arg2.moduleOwner.owner has only one value
arg2.moduleOwner.rVariables has only one value
arg2.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg2.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg2.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg2.moduleOwner.rVariableMap has only one value
arg2.moduleOwner.externalDependencyList has only one value
arg2.moduleOwner.externalDependencyList[] == []
arg2.moduleOwner.externalDependencyList[].getClass().getName() == []
arg2.dependencies has only one value
arg2.dependencies[] == []
arg2.dependencies[].getClass().getName() == []
arg2.parameters has only one value
arg2.isInput == false
size(arg0.objectInstances[]) == 7
size(arg2.moduleOwner.rVariables[]) == 4
===========================================================================
commands.model3.TaskModule$StateRVValue.StateRVValue(burlap.oomdp.core.State, burlap.behavior.statehashing.StateHashFactory, generativemodel.RVariable):::EXIT
this.s == orig(arg0)
this.s.objectInstances == arg0.objectInstances
this.s.objectInstances.getClass().getName() == arg0.objectInstances.getClass().getName()
this.s.hiddenObjectInstances == arg0.hiddenObjectInstances
this.s.hiddenObjectInstances.getClass().getName() == arg0.objectInstances.getClass().getName()
this.s.objectMap == arg0.objectMap
this.s.objectMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.s.objectIndexByTrueClass == arg0.objectIndexByTrueClass
this.s.objectIndexByTrueClass.getClass().getName() == arg0.objectMap.getClass().getName()
this.sh.s.objectInstances == arg0.objectInstances
this.sh.s.objectInstances.getClass().getName() == arg0.objectInstances.getClass().getName()
this.sh.s.hiddenObjectInstances == arg0.hiddenObjectInstances
this.sh.s.hiddenObjectInstances.getClass().getName() == arg0.objectInstances.getClass().getName()
this.sh.s.objectMap == arg0.objectMap
this.sh.s.objectMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.sh.s.objectIndexByTrueClass == arg0.objectIndexByTrueClass
this.sh.s.objectIndexByTrueClass.getClass().getName() == arg0.objectMap.getClass().getName()
this.owner == orig(arg2)
this.owner.name == arg2.name
this.owner.moduleOwner == arg2.moduleOwner
this.owner.moduleOwner.getClass().getName() == arg2.moduleOwner.getClass().getName()
this.owner.moduleOwner.name == arg2.moduleOwner.name
this.owner.moduleOwner.owner == arg2.moduleOwner.owner
this.owner.moduleOwner.rVariables == arg2.moduleOwner.rVariables
this.owner.moduleOwner.rVariables.getClass().getName() == arg0.objectInstances.getClass().getName()
this.owner.moduleOwner.rVariableMap == arg2.moduleOwner.rVariableMap
this.owner.moduleOwner.rVariableMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.owner.moduleOwner.externalDependencyList == arg2.moduleOwner.externalDependencyList
this.owner.moduleOwner.externalDependencyList.getClass().getName() == arg0.objectInstances.getClass().getName()
this.owner.dependencies == arg2.dependencies
this.owner.dependencies.getClass().getName() == arg0.objectInstances.getClass().getName()
this.owner.parameters == arg2.parameters
this.owner.parameters.getClass().getName() == arg0.objectMap.getClass().getName()
this.owner.isInput == arg2.isInput
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.moduleOwner.rVariables.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.moduleOwner.externalDependencyList.getClass().getName()
arg0.objectInstances.getClass().getName() == arg2.dependencies.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg2.moduleOwner.rVariables.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg2.moduleOwner.externalDependencyList.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg2.dependencies.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == arg2.moduleOwner.rVariableMap.getClass().getName()
arg0.objectMap.getClass().getName() == arg2.parameters.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg2.moduleOwner.rVariableMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg2.parameters.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg2.name == orig(arg2.name)
arg2.name.toString == orig(arg2.name.toString)
arg2.moduleOwner == orig(arg2.moduleOwner)
arg2.moduleOwner.getClass().getName() == orig(arg2.moduleOwner.getClass().getName())
arg2.moduleOwner.name == orig(arg2.moduleOwner.name)
arg2.moduleOwner.name.toString == orig(arg2.moduleOwner.name.toString)
arg2.moduleOwner.owner == orig(arg2.moduleOwner.owner)
arg2.moduleOwner.rVariables == orig(arg2.moduleOwner.rVariables)
arg2.moduleOwner.rVariables[] == orig(arg2.moduleOwner.rVariables[])
arg2.moduleOwner.rVariableMap == orig(arg2.moduleOwner.rVariableMap)
arg2.moduleOwner.externalDependencyList == orig(arg2.moduleOwner.externalDependencyList)
arg2.moduleOwner.externalDependencyList[] == orig(arg2.moduleOwner.externalDependencyList[])
arg2.dependencies == orig(arg2.dependencies)
arg2.dependencies[] == orig(arg2.dependencies[])
arg2.parameters == orig(arg2.parameters)
arg2.isInput == orig(arg2.isInput)
this.sh.hashCode == 0
this.sh.needToRecomputeHashCode == true
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg2.name has only one value
arg2.name.toString == "state"
arg2.moduleOwner has only one value
arg2.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg2.moduleOwner.name has only one value
arg2.moduleOwner.name.toString == "task"
arg2.moduleOwner.owner has only one value
arg2.moduleOwner.rVariables has only one value
arg2.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg2.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg2.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg2.moduleOwner.rVariableMap has only one value
arg2.moduleOwner.externalDependencyList has only one value
arg2.moduleOwner.externalDependencyList[] == []
arg2.moduleOwner.externalDependencyList[].getClass().getName() == []
arg2.dependencies has only one value
arg2.dependencies[] == []
arg2.dependencies[].getClass().getName() == []
arg2.parameters has only one value
arg2.isInput == false
size(arg0.objectInstances[]) == 7
size(arg2.moduleOwner.rVariables[]) == 4
===========================================================================
commands.model3.TaskModule$StateRVValue.hashCode():::ENTER
===========================================================================
commands.model3.TaskModule$StateRVValue.hashCode():::EXIT
this.s == orig(this.s)
this.s == orig(this.sh.s)
this.s.objectInstances == orig(this.s.objectInstances)
this.s.objectInstances == orig(this.sh.s.objectInstances)
this.s.objectInstances[] == orig(this.s.objectInstances[])
this.s.objectInstances.getClass().getName() == orig(this.s.objectInstances.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.s.hiddenObjectInstances.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.sh.s.objectInstances.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.sh.s.hiddenObjectInstances.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.s.objectInstances.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.s.hiddenObjectInstances == orig(this.s.hiddenObjectInstances)
this.s.hiddenObjectInstances == orig(this.sh.s.hiddenObjectInstances)
this.s.hiddenObjectInstances[] == orig(this.s.hiddenObjectInstances[])
this.s.objectMap == orig(this.s.objectMap)
this.s.objectMap == orig(this.sh.s.objectMap)
this.s.objectMap.getClass().getName() == orig(this.s.objectMap.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.s.objectIndexByTrueClass.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.sh.s.objectMap.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.sh.s.objectIndexByTrueClass.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.s.objectMap.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.s.objectIndexByTrueClass == orig(this.s.objectIndexByTrueClass)
this.s.objectIndexByTrueClass == orig(this.sh.s.objectIndexByTrueClass)
this.sh == orig(this.sh)
this.sh.getClass().getName() == orig(this.sh.getClass().getName())
this.sh.s.objectInstances[] == orig(this.sh.s.objectInstances[])
this.sh.s.hiddenObjectInstances[] == orig(this.sh.s.hiddenObjectInstances[])
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.parameters == orig(this.owner.parameters)
this.owner.isInput == orig(this.owner.isInput)
this.sh.hashCode == -1098037574
this.sh.needToRecomputeHashCode == false
return == -1098037574
this.sh.hashCode <= orig(this.sh.hashCode)
===========================================================================
commands.model3.TaskModule:::CLASS
commands.model3.TaskModule.STATENAME has only one value
commands.model3.TaskModule.STATENAME != null
commands.model3.TaskModule.STATENAME.toString == "state"
commands.model3.TaskModule.LIFTEDRFNAME has only one value
commands.model3.TaskModule.LIFTEDRFNAME != null
commands.model3.TaskModule.LIFTEDRFNAME.toString == "liftedRF"
commands.model3.TaskModule.GROUNDEDRFNAME has only one value
commands.model3.TaskModule.GROUNDEDRFNAME != null
commands.model3.TaskModule.GROUNDEDRFNAME.toString == "groundedRF"
commands.model3.TaskModule.BINDINGNAME has only one value
commands.model3.TaskModule.BINDINGNAME != null
commands.model3.TaskModule.BINDINGNAME.toString == "bindingConstraint"
===========================================================================
commands.model3.TaskModule:::OBJECT
commands.model3.TaskModule.STATENAME == this.stateVariable.name
commands.model3.TaskModule.LIFTEDRFNAME == this.liftedRFVariable.name
commands.model3.TaskModule.GROUNDEDRFNAME == this.groundedRFVariable.name
commands.model3.TaskModule.BINDINGNAME == this.bindingConstraintVariable.name
this.stateVariable.moduleOwner == this.liftedRFVariable.moduleOwner
this.stateVariable.moduleOwner == this.groundedRFVariable.moduleOwner
this.stateVariable.moduleOwner == this.bindingConstraintVariable.moduleOwner
this.stateVariable.moduleOwner.getClass().getName() == this.liftedRFVariable.moduleOwner.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() == this.groundedRFVariable.moduleOwner.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() == this.bindingConstraintVariable.moduleOwner.getClass().getName()
this.stateVariable.moduleOwner.name == this.name
this.stateVariable.moduleOwner.owner == this.owner
this.stateVariable.moduleOwner.rVariables == this.rVariables
this.stateVariable.moduleOwner.rVariables.getClass().getName() == this.liftedRFValues.getClass().getName()
this.stateVariable.moduleOwner.rVariableMap == this.rVariableMap
this.stateVariable.moduleOwner.rVariableMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.stateVariable.moduleOwner.externalDependencyList == this.externalDependencyList
this.stateVariable.moduleOwner.externalDependencyList.getClass().getName() == this.liftedRFValues.getClass().getName()
this.stateVariable.dependencies.getClass().getName() == this.liftedRFValues.getClass().getName()
this.stateVariable.parameters.getClass().getName() == this.rVariableMap.getClass().getName()
this.liftedRFVariable.moduleOwner.name == this.name
this.liftedRFVariable.moduleOwner.owner == this.owner
this.liftedRFVariable.moduleOwner.rVariables == this.rVariables
this.liftedRFVariable.moduleOwner.rVariables.getClass().getName() == this.liftedRFValues.getClass().getName()
this.liftedRFVariable.moduleOwner.rVariableMap == this.rVariableMap
this.liftedRFVariable.moduleOwner.rVariableMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.liftedRFVariable.moduleOwner.externalDependencyList == this.externalDependencyList
this.liftedRFVariable.moduleOwner.externalDependencyList.getClass().getName() == this.liftedRFValues.getClass().getName()
this.liftedRFVariable.dependencies.getClass().getName() == this.liftedRFValues.getClass().getName()
this.liftedRFVariable.parameters.getClass().getName() == this.rVariableMap.getClass().getName()
this.liftedRFVariable.isInput == this.groundedRFVariable.isInput
this.liftedRFVariable.isInput == this.bindingConstraintVariable.isInput
this.groundedRFVariable.moduleOwner.name == this.name
this.groundedRFVariable.moduleOwner.owner == this.owner
this.groundedRFVariable.moduleOwner.rVariables == this.rVariables
this.groundedRFVariable.moduleOwner.rVariables.getClass().getName() == this.liftedRFValues.getClass().getName()
this.groundedRFVariable.moduleOwner.rVariableMap == this.rVariableMap
this.groundedRFVariable.moduleOwner.rVariableMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.groundedRFVariable.moduleOwner.externalDependencyList == this.externalDependencyList
this.groundedRFVariable.moduleOwner.externalDependencyList.getClass().getName() == this.liftedRFValues.getClass().getName()
this.groundedRFVariable.dependencies.getClass().getName() == this.liftedRFValues.getClass().getName()
this.groundedRFVariable.parameters.getClass().getName() == this.rVariableMap.getClass().getName()
this.bindingConstraintVariable.moduleOwner.name == this.name
this.bindingConstraintVariable.moduleOwner.owner == this.owner
this.bindingConstraintVariable.moduleOwner.rVariables == this.rVariables
this.bindingConstraintVariable.moduleOwner.rVariables.getClass().getName() == this.liftedRFValues.getClass().getName()
this.bindingConstraintVariable.moduleOwner.rVariableMap == this.rVariableMap
this.bindingConstraintVariable.moduleOwner.rVariableMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.bindingConstraintVariable.moduleOwner.externalDependencyList == this.externalDependencyList
this.bindingConstraintVariable.moduleOwner.externalDependencyList.getClass().getName() == this.liftedRFValues.getClass().getName()
this.bindingConstraintVariable.dependencies.getClass().getName() == this.liftedRFValues.getClass().getName()
this.bindingConstraintVariable.parameters.getClass().getName() == this.rVariableMap.getClass().getName()
this.liftedRFValues.getClass().getName() == this.domain.objectClasses.getClass().getName()
this.liftedRFValues.getClass().getName() == this.domain.attributes.getClass().getName()
this.liftedRFValues.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.liftedRFValues.getClass().getName() == this.owner.modules.getClass().getName()
this.liftedRFValues.getClass().getName() == this.rVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == this.externalDependencyList.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.domain.attributeMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.domain.propFunctionMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.modules.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.variableOwnerResolver.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.queryCache.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.logQueryCache.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.rVariableMap.getClass().getName()
this has only one value
this.stateVariable has only one value
this.stateVariable != null
this.stateVariable.name.toString == "state"
this.stateVariable.moduleOwner has only one value
this.stateVariable.moduleOwner != null
this.stateVariable.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.stateVariable.moduleOwner.name.toString == "task"
this.stateVariable.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.stateVariable.moduleOwner.rVariables[] elements != null
this.stateVariable.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.stateVariable.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.stateVariable.moduleOwner.externalDependencyList[] == []
this.stateVariable.moduleOwner.externalDependencyList[].getClass().getName() == []
this.stateVariable.dependencies has only one value
this.stateVariable.dependencies != null
this.stateVariable.dependencies[] == []
this.stateVariable.dependencies[].getClass().getName() == []
this.stateVariable.parameters has only one value
this.stateVariable.parameters != null
this.stateVariable.isInput == false
this.liftedRFVariable has only one value
this.liftedRFVariable != null
this.liftedRFVariable.name.toString == "liftedRF"
this.liftedRFVariable.moduleOwner.name.toString == "task"
this.liftedRFVariable.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.liftedRFVariable.moduleOwner.rVariables[] elements != null
this.liftedRFVariable.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.liftedRFVariable.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.liftedRFVariable.moduleOwner.externalDependencyList[] == []
this.liftedRFVariable.moduleOwner.externalDependencyList[].getClass().getName() == []
this.liftedRFVariable.dependencies has only one value
this.liftedRFVariable.dependencies != null
this.liftedRFVariable.dependencies[] contains no nulls and has only one value, of length 1
this.liftedRFVariable.dependencies[] elements has only one value
this.liftedRFVariable.dependencies[] elements != null
this.liftedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable]
this.liftedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.liftedRFVariable.parameters has only one value
this.liftedRFVariable.parameters != null
this.liftedRFVariable.isInput == false
this.groundedRFVariable has only one value
this.groundedRFVariable != null
this.groundedRFVariable.name.toString == "groundedRF"
this.groundedRFVariable.moduleOwner.name.toString == "task"
this.groundedRFVariable.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.groundedRFVariable.moduleOwner.rVariables[] elements != null
this.groundedRFVariable.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.groundedRFVariable.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.groundedRFVariable.moduleOwner.externalDependencyList[] == []
this.groundedRFVariable.moduleOwner.externalDependencyList[].getClass().getName() == []
this.groundedRFVariable.dependencies has only one value
this.groundedRFVariable.dependencies != null
this.groundedRFVariable.dependencies[] contains no nulls and has only one value, of length 2
this.groundedRFVariable.dependencies[] elements != null
this.groundedRFVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
this.groundedRFVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.groundedRFVariable.parameters has only one value
this.groundedRFVariable.parameters != null
this.bindingConstraintVariable has only one value
this.bindingConstraintVariable != null
this.bindingConstraintVariable.name.toString == "bindingConstraint"
this.bindingConstraintVariable.moduleOwner.name.toString == "task"
this.bindingConstraintVariable.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.bindingConstraintVariable.moduleOwner.rVariables[] elements != null
this.bindingConstraintVariable.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.bindingConstraintVariable.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.bindingConstraintVariable.moduleOwner.externalDependencyList[] == []
this.bindingConstraintVariable.moduleOwner.externalDependencyList[].getClass().getName() == []
this.bindingConstraintVariable.dependencies has only one value
this.bindingConstraintVariable.dependencies != null
this.bindingConstraintVariable.dependencies[] contains no nulls and has only one value, of length 3
this.bindingConstraintVariable.dependencies[] elements != null
this.bindingConstraintVariable.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.bindingConstraintVariable.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.bindingConstraintVariable.parameters has only one value
this.bindingConstraintVariable.parameters != null
this.liftedRFValues has only one value
this.liftedRFValues != null
this.liftedRFValues[] elements != null
this.liftedRFValues[].getClass().getName() elements == commands.model3.TaskModule.LiftedVarValue.class
this.liftedRFValues.getClass().getName() == java.util.ArrayList.class
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[] elements != null
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.permitInitiallySatisfiedRFs == false
this.maxBindingConstraintsComponentSize == 12
this.name has only one value
this.name != null
this.name.toString == "task"
this.owner.modules has only one value
this.owner.modules != null
this.owner.modules[] contains no nulls and has only one value, of length 1
this.owner.modules[] elements has only one value
this.owner.modules[] elements != null
this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
this.owner.modules.getClass().getName() == java.util.ArrayList.class
this.owner.moduleMap has only one value
this.owner.moduleMap != null
this.owner.moduleMap.getClass().getName() == java.util.HashMap.class
this.owner.inputVariables has only one value
this.owner.inputVariables != null
this.owner.inputVariables[] == []
this.owner.inputVariables[].getClass().getName() == []
this.owner.variableOwnerResolver has only one value
this.owner.variableOwnerResolver != null
this.owner.queryCache has only one value
this.owner.queryCache != null
this.owner.logQueryCache has only one value
this.owner.logQueryCache != null
this.rVariables has only one value
this.rVariables != null
this.rVariables[] contains no nulls and has only one value, of length 4
this.rVariables[] elements != null
this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.rVariableMap has only one value
this.rVariableMap != null
this.rVariableMap.getClass().getName() == java.util.HashMap.class
this.externalDependencyList has only one value
this.externalDependencyList != null
this.externalDependencyList[] == []
this.externalDependencyList[].getClass().getName() == []
size(this.stateVariable.moduleOwner.rVariables[]) == 4
size(this.liftedRFVariable.moduleOwner.rVariables[]) == 4
size(this.liftedRFVariable.dependencies[]) == 1
size(this.groundedRFVariable.moduleOwner.rVariables[]) == 4
size(this.groundedRFVariable.dependencies[]) == 2
size(this.bindingConstraintVariable.moduleOwner.rVariables[]) == 4
size(this.bindingConstraintVariable.dependencies[]) == 3
size(this.liftedRFValues[]) one of { 0, 1, 2 }
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.domain.propFunctions[]) == 18
size(this.owner.modules[]) == 1
size(this.rVariables[]) == 4
this.stateVariable.moduleOwner.getClass().getName() != this.liftedRFValues.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() != this.domain.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() in this.owner.modules[].getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() != this.owner.modules.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() != this.owner.moduleMap.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() != this.rVariableMap.getClass().getName()
this.liftedRFValues.getClass().getName() != this.domain.getClass().getName()
this.liftedRFValues.getClass().getName() != this.owner.moduleMap.getClass().getName()
this.liftedRFValues.getClass().getName() != this.rVariableMap.getClass().getName()
this.domain.getClass().getName() != this.owner.modules.getClass().getName()
this.domain.getClass().getName() != this.owner.moduleMap.getClass().getName()
this.domain.getClass().getName() != this.rVariableMap.getClass().getName()
this.owner.modules.getClass().getName() != this.owner.moduleMap.getClass().getName()
this.owner.modules.getClass().getName() != this.rVariableMap.getClass().getName()
===========================================================================
commands.model3.TaskModule.TaskModule(java.lang.String, burlap.oomdp.core.Domain):::ENTER
arg1.objectClasses.getClass().getName() == arg1.attributes.getClass().getName()
arg1.objectClasses.getClass().getName() == arg1.propFunctions.getClass().getName()
arg1.objectClassMap.getClass().getName() == arg1.attributeMap.getClass().getName()
arg1.objectClassMap.getClass().getName() == arg1.propFunctionMap.getClass().getName()
arg0 has only one value
arg0.toString == "task"
arg1 has only one value
arg1.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg1.objectClasses has only one value
arg1.objectClasses[] contains no nulls and has only one value, of length 4
arg1.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg1.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg1.objectClasses.getClass().getName() == java.util.ArrayList.class
arg1.objectClassMap has only one value
arg1.objectClassMap.getClass().getName() == java.util.HashMap.class
arg1.attributes has only one value
arg1.attributes[] contains no nulls and has only one value, of length 8
arg1.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg1.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg1.attributeMap has only one value
arg1.propFunctions has only one value
arg1.propFunctions[] contains no nulls and has only one value, of length 18
arg1.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg1.propFunctionMap has only one value
arg1.objectIdentifierDependentDomain == false
arg1.debugCode == 111
size(arg1.objectClasses[]) == 4
size(arg1.attributes[]) == 8
size(arg1.propFunctions[]) == 18
===========================================================================
commands.model3.TaskModule.TaskModule(java.lang.String, burlap.oomdp.core.Domain):::EXIT
this.liftedRFValues.getClass().getName() == arg1.objectClasses.getClass().getName()
this.liftedRFValues.getClass().getName() == arg1.attributes.getClass().getName()
this.liftedRFValues.getClass().getName() == arg1.propFunctions.getClass().getName()
this.liftedRFValues.getClass().getName() == orig(arg1.objectClasses.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg1.attributes.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg1.propFunctions.getClass().getName())
this.domain == orig(arg1)
this.domain.getClass().getName() == orig(arg1.getClass().getName())
this.domain.objectClasses == arg1.objectClasses
this.domain.objectClassMap == arg1.objectClassMap
this.domain.attributes == arg1.attributes
this.domain.attributeMap == arg1.attributeMap
this.domain.propFunctions == arg1.propFunctions
this.domain.propFunctionMap == arg1.propFunctionMap
this.domain.objectIdentifierDependentDomain == arg1.objectIdentifierDependentDomain
this.domain.debugCode == arg1.debugCode
this.name == orig(arg0)
this.rVariableMap.getClass().getName() == arg1.objectClassMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg1.attributeMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg1.propFunctionMap.getClass().getName()
this.rVariableMap.getClass().getName() == orig(arg1.objectClassMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg1.attributeMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg1.propFunctionMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.objectClasses == orig(arg1.objectClasses)
arg1.objectClasses[] == orig(arg1.objectClasses[])
arg1.objectClassMap == orig(arg1.objectClassMap)
arg1.attributes == orig(arg1.attributes)
arg1.attributes[] == orig(arg1.attributes[])
arg1.attributeMap == orig(arg1.attributeMap)
arg1.propFunctions == orig(arg1.propFunctions)
arg1.propFunctions[] == orig(arg1.propFunctions[])
arg1.propFunctionMap == orig(arg1.propFunctionMap)
arg1.objectIdentifierDependentDomain == orig(arg1.objectIdentifierDependentDomain)
arg1.debugCode == orig(arg1.debugCode)
this.liftedRFValues[] == []
this.liftedRFValues[].getClass().getName() == []
this.owner == null
arg0.toString == "task"
arg1.objectClasses has only one value
arg1.objectClasses[] contains no nulls and has only one value, of length 4
arg1.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg1.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg1.objectClassMap has only one value
arg1.attributes has only one value
arg1.attributes[] contains no nulls and has only one value, of length 8
arg1.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg1.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg1.attributeMap has only one value
arg1.propFunctions has only one value
arg1.propFunctions[] contains no nulls and has only one value, of length 18
arg1.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg1.propFunctionMap has only one value
arg1.objectIdentifierDependentDomain == false
arg1.debugCode == 111
size(arg1.objectClasses[]) == 4
size(arg1.attributes[]) == 8
size(arg1.propFunctions[]) == 18
===========================================================================
commands.model3.TaskModule.addLiftedVarValue(commands.model3.TaskModule$LiftedVarValue):::ENTER
commands.model3.TaskModule.LIFTEDRFNAME == arg0.owner.name
this.stateVariable.moduleOwner == arg0.owner.moduleOwner
this.stateVariable.moduleOwner.getClass().getName() == arg0.owner.moduleOwner.getClass().getName()
this.liftedRFVariable == arg0.owner
this.liftedRFVariable.dependencies == arg0.owner.dependencies
this.liftedRFVariable.parameters == arg0.owner.parameters
this.liftedRFVariable.isInput == arg0.owner.isInput
this.liftedRFValues.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.conditions.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.owner.dependencies.getClass().getName()
this.owner.variableOwnerResolver.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.queryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.logQueryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.freeVariableToClassMapping.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.owner.parameters.getClass().getName()
this.liftedRFValues[] elements has only one value
this.liftedRFValues[].getClass().getName() one of { [], [commands.model3.TaskModule.LiftedVarValue] }
this.owner has only one value
arg0.conditions[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
arg0.owner.name.toString == "liftedRF"
arg0.owner.dependencies[] contains no nulls and has only one value, of length 1
arg0.owner.dependencies[] elements has only one value
arg0.owner.dependencies[].getClass().getName() == [generativemodel.RVariable]
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
size(this.liftedRFValues[]) one of { 0, 1 }
size(arg0.conditions[]) == 1
size(arg0.owner.dependencies[]) == 1
===========================================================================
commands.model3.TaskModule.addLiftedVarValue(commands.model3.TaskModule$LiftedVarValue):::EXIT
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == arg0.owner.name
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME == orig(arg0.owner.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
this.stateVariable == orig(this.stateVariable)
this.stateVariable.name.toString == orig(this.stateVariable.name.toString)
this.stateVariable.moduleOwner == arg0.owner.moduleOwner
this.stateVariable.moduleOwner == orig(this.stateVariable.moduleOwner)
this.stateVariable.moduleOwner == orig(this.liftedRFVariable.moduleOwner)
this.stateVariable.moduleOwner == orig(this.groundedRFVariable.moduleOwner)
this.stateVariable.moduleOwner == orig(this.bindingConstraintVariable.moduleOwner)
this.stateVariable.moduleOwner == orig(arg0.owner.moduleOwner)
this.stateVariable.moduleOwner.getClass().getName() == arg0.owner.moduleOwner.getClass().getName()
this.stateVariable.moduleOwner.getClass().getName() == orig(this.stateVariable.moduleOwner.getClass().getName())
this.stateVariable.moduleOwner.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.getClass().getName())
this.stateVariable.moduleOwner.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.getClass().getName())
this.stateVariable.moduleOwner.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.getClass().getName())
this.stateVariable.moduleOwner.getClass().getName() == orig(arg0.owner.moduleOwner.getClass().getName())
this.stateVariable.moduleOwner.name.toString == orig(this.stateVariable.moduleOwner.name.toString)
this.stateVariable.moduleOwner.rVariables[] == orig(this.stateVariable.moduleOwner.rVariables[])
this.stateVariable.moduleOwner.externalDependencyList[] == orig(this.stateVariable.moduleOwner.externalDependencyList[])
this.stateVariable.dependencies == orig(this.stateVariable.dependencies)
this.stateVariable.dependencies[] == orig(this.stateVariable.dependencies[])
this.stateVariable.parameters == orig(this.stateVariable.parameters)
this.stateVariable.isInput == orig(this.stateVariable.isInput)
this.liftedRFVariable == arg0.owner
this.liftedRFVariable == orig(this.liftedRFVariable)
this.liftedRFVariable == orig(arg0.owner)
this.liftedRFVariable.name.toString == orig(this.liftedRFVariable.name.toString)
this.liftedRFVariable.moduleOwner.name.toString == orig(this.liftedRFVariable.moduleOwner.name.toString)
this.liftedRFVariable.moduleOwner.rVariables[] == orig(this.liftedRFVariable.moduleOwner.rVariables[])
this.liftedRFVariable.moduleOwner.externalDependencyList[] == orig(this.liftedRFVariable.moduleOwner.externalDependencyList[])
this.liftedRFVariable.dependencies == arg0.owner.dependencies
this.liftedRFVariable.dependencies == orig(this.liftedRFVariable.dependencies)
this.liftedRFVariable.dependencies == orig(arg0.owner.dependencies)
this.liftedRFVariable.dependencies[] == orig(this.liftedRFVariable.dependencies[])
this.liftedRFVariable.parameters == arg0.owner.parameters
this.liftedRFVariable.parameters == orig(this.liftedRFVariable.parameters)
this.liftedRFVariable.parameters == orig(arg0.owner.parameters)
this.liftedRFVariable.isInput == arg0.owner.isInput
this.liftedRFVariable.isInput == orig(this.liftedRFVariable.isInput)
this.liftedRFVariable.isInput == orig(this.groundedRFVariable.isInput)
this.liftedRFVariable.isInput == orig(this.bindingConstraintVariable.isInput)
this.liftedRFVariable.isInput == orig(arg0.owner.isInput)
this.groundedRFVariable == orig(this.groundedRFVariable)
this.groundedRFVariable.name.toString == orig(this.groundedRFVariable.name.toString)
this.groundedRFVariable.moduleOwner.name.toString == orig(this.groundedRFVariable.moduleOwner.name.toString)
this.groundedRFVariable.moduleOwner.rVariables[] == orig(this.groundedRFVariable.moduleOwner.rVariables[])
this.groundedRFVariable.moduleOwner.externalDependencyList[] == orig(this.groundedRFVariable.moduleOwner.externalDependencyList[])
this.groundedRFVariable.dependencies == orig(this.groundedRFVariable.dependencies)
this.groundedRFVariable.dependencies[] == orig(this.groundedRFVariable.dependencies[])
this.groundedRFVariable.parameters == orig(this.groundedRFVariable.parameters)
this.bindingConstraintVariable == orig(this.bindingConstraintVariable)
this.bindingConstraintVariable.name.toString == orig(this.bindingConstraintVariable.name.toString)
this.bindingConstraintVariable.moduleOwner.name.toString == orig(this.bindingConstraintVariable.moduleOwner.name.toString)
this.bindingConstraintVariable.moduleOwner.rVariables[] == orig(this.bindingConstraintVariable.moduleOwner.rVariables[])
this.bindingConstraintVariable.moduleOwner.externalDependencyList[] == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList[])
this.bindingConstraintVariable.dependencies == orig(this.bindingConstraintVariable.dependencies)
this.bindingConstraintVariable.dependencies[] == orig(this.bindingConstraintVariable.dependencies[])
this.bindingConstraintVariable.parameters == orig(this.bindingConstraintVariable.parameters)
this.liftedRFValues == orig(this.liftedRFValues)
this.liftedRFValues.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.conditions.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.owner.dependencies.getClass().getName()
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFValues.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.owner.modules.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.owner.inputVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg0.conditions.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg0.owner.dependencies.getClass().getName())
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.permitInitiallySatisfiedRFs == orig(this.permitInitiallySatisfiedRFs)
this.maxBindingConstraintsComponentSize == orig(this.maxBindingConstraintsComponentSize)
this.name == orig(this.stateVariable.moduleOwner.name)
this.name == orig(this.liftedRFVariable.moduleOwner.name)
this.name == orig(this.groundedRFVariable.moduleOwner.name)
this.name == orig(this.bindingConstraintVariable.moduleOwner.name)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.owner == orig(this.stateVariable.moduleOwner.owner)
this.owner == orig(this.liftedRFVariable.moduleOwner.owner)
this.owner == orig(this.groundedRFVariable.moduleOwner.owner)
this.owner == orig(this.bindingConstraintVariable.moduleOwner.owner)
this.owner == orig(this.owner)
this.owner.modules == orig(this.owner.modules)
this.owner.modules[] == orig(this.owner.modules[])
this.owner.moduleMap == orig(this.owner.moduleMap)
this.owner.inputVariables == orig(this.owner.inputVariables)
this.owner.inputVariables[] == orig(this.owner.inputVariables[])
this.owner.variableOwnerResolver == orig(this.owner.variableOwnerResolver)
this.owner.variableOwnerResolver.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.queryCache == orig(this.owner.queryCache)
this.owner.queryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.logQueryCache == orig(this.owner.logQueryCache)
this.owner.logQueryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariables == orig(this.stateVariable.moduleOwner.rVariables)
this.rVariables == orig(this.liftedRFVariable.moduleOwner.rVariables)
this.rVariables == orig(this.groundedRFVariable.moduleOwner.rVariables)
this.rVariables == orig(this.bindingConstraintVariable.moduleOwner.rVariables)
this.rVariables == orig(this.rVariables)
this.rVariables[] == orig(this.rVariables[])
this.rVariableMap == orig(this.stateVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.liftedRFVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.groundedRFVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.bindingConstraintVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.rVariableMap)
this.rVariableMap.getClass().getName() == arg0.freeVariableToClassMapping.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.owner.parameters.getClass().getName()
this.rVariableMap.getClass().getName() == orig(this.stateVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.stateVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.liftedRFVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.groundedRFVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.bindingConstraintVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.moduleMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.variableOwnerResolver.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.queryCache.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.logQueryCache.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.freeVariableToClassMapping.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.owner.parameters.getClass().getName())
this.externalDependencyList == orig(this.stateVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.liftedRFVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.groundedRFVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.externalDependencyList)
this.externalDependencyList[] == orig(this.externalDependencyList[])
arg0.freeVariableToClassMapping == orig(arg0.freeVariableToClassMapping)
arg0.conditions == orig(arg0.conditions)
arg0.conditions[] == orig(arg0.conditions[])
arg0.owner.name.toString == orig(arg0.owner.name.toString)
arg0.owner.dependencies[] == orig(arg0.owner.dependencies[])
size(this.liftedRFValues[])-1 == orig(size(this.liftedRFValues[]))
this.liftedRFValues[].getClass().getName() one of { [commands.model3.TaskModule.LiftedVarValue], [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue] }
this.owner has only one value
arg0.conditions[].getClass().getName() == [burlap.oomdp.core.GroundedProp]
arg0.conditions[].getClass().getName() elements == burlap.oomdp.core.GroundedProp.class
arg0.owner.name.toString == "liftedRF"
arg0.owner.dependencies[] contains no nulls and has only one value, of length 1
arg0.owner.dependencies[] elements has only one value
arg0.owner.dependencies[].getClass().getName() == [generativemodel.RVariable]
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
size(this.liftedRFValues[]) one of { 1, 2 }
size(arg0.conditions[]) == 1
size(arg0.owner.dependencies[]) == 1
===========================================================================
commands.model3.TaskModule.getNonZeroProbIterator(generativemodel.RVariable, java.util.List):::ENTER
this.stateVariable.moduleOwner == arg0.moduleOwner
this.stateVariable.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.liftedRFVariable.isInput == arg0.isInput
this.liftedRFValues.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.dependencies.getClass().getName()
this.liftedRFValues.getClass().getName() == arg1.getClass().getName()
this.name == arg0.moduleOwner.name
this.owner == arg0.moduleOwner.owner
this.owner.variableOwnerResolver.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.queryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.logQueryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariables == arg0.moduleOwner.rVariables
this.rVariableMap == arg0.moduleOwner.rVariableMap
this.rVariableMap.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.liftedRFValues[] contains no nulls and has only one value, of length 2
this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
this.owner has only one value
arg0.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
size(this.liftedRFValues[]) == 2
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) one of { 1, 2, 3 }
size(arg1[]) one of { 1, 2, 3 }
===========================================================================
commands.model3.TaskModule.getNonZeroProbIterator(generativemodel.RVariable, java.util.List):::EXIT85
commands.model3.TaskModule.LIFTEDRFNAME == arg0.name
commands.model3.TaskModule.LIFTEDRFNAME == orig(arg0.name)
this.liftedRFVariable == orig(arg0)
this.liftedRFVariable.dependencies == arg0.dependencies
this.liftedRFVariable.parameters == arg0.parameters
arg0.dependencies == orig(this.liftedRFVariable.dependencies)
arg0.parameters == orig(this.liftedRFVariable.parameters)
arg0.name.toString == "liftedRF"
arg0.dependencies has only one value
arg0.dependencies[] contains no nulls and has only one value, of length 1
arg0.dependencies[] elements has only one value
arg0.dependencies[].getClass().getName() == [generativemodel.RVariable]
arg0.parameters has only one value
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue]
arg1[].getClass().getName() elements == commands.model3.TaskModule.StateRVValue.class
return has only one value
return.getClass().getName() == commands.model3.TaskModule$LiftedRFIterator.class
orig(arg1) has only one value
size(arg0.dependencies[]) == 1
orig(size(arg1[])) == 1
===========================================================================
commands.model3.TaskModule.getNonZeroProbIterator(generativemodel.RVariable, java.util.List):::EXIT88
commands.model3.TaskModule.GROUNDEDRFNAME == arg0.name
commands.model3.TaskModule.GROUNDEDRFNAME == orig(arg0.name)
this.groundedRFVariable == orig(arg0)
this.groundedRFVariable.dependencies == arg0.dependencies
this.groundedRFVariable.parameters == arg0.parameters
arg0.dependencies == orig(this.groundedRFVariable.dependencies)
arg0.parameters == orig(this.groundedRFVariable.parameters)
arg0.name.toString == "groundedRF"
arg0.dependencies has only one value
arg0.dependencies[] contains no nulls and has only one value, of length 2
arg0.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable]
arg0.parameters has only one value
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue]
return.getClass().getName() == commands.model3.TaskModule$GroundedRFIterator.class
size(arg0.dependencies[]) == 2
orig(size(arg1[])) == 2
===========================================================================
commands.model3.TaskModule.getNonZeroProbIterator(generativemodel.RVariable, java.util.List):::EXIT91
commands.model3.TaskModule.BINDINGNAME == arg0.name
commands.model3.TaskModule.BINDINGNAME == orig(arg0.name)
this.bindingConstraintVariable == orig(arg0)
this.bindingConstraintVariable.dependencies == arg0.dependencies
this.bindingConstraintVariable.parameters == arg0.parameters
arg0.dependencies == orig(this.bindingConstraintVariable.dependencies)
arg0.parameters == orig(this.bindingConstraintVariable.parameters)
arg0.name.toString == "bindingConstraint"
arg0.dependencies has only one value
arg0.dependencies[] contains no nulls and has only one value, of length 3
arg0.dependencies[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.parameters has only one value
arg1[].getClass().getName() == [commands.model3.TaskModule.StateRVValue, commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.RFConVariableValue]
return.getClass().getName() == commands.model3.TaskModule$ConstraintIterator.class
size(arg0.dependencies[]) == 3
orig(size(arg1[])) == 3
===========================================================================
commands.model3.TaskModule.getNonZeroProbIterator(generativemodel.RVariable, java.util.List):::EXIT
commands.model3.TaskModule.STATENAME == orig(commands.model3.TaskModule.STATENAME)
commands.model3.TaskModule.STATENAME == orig(this.stateVariable.name)
commands.model3.TaskModule.STATENAME.toString == orig(commands.model3.TaskModule.STATENAME.toString)
commands.model3.TaskModule.LIFTEDRFNAME == orig(commands.model3.TaskModule.LIFTEDRFNAME)
commands.model3.TaskModule.LIFTEDRFNAME == orig(this.liftedRFVariable.name)
commands.model3.TaskModule.LIFTEDRFNAME.toString == orig(commands.model3.TaskModule.LIFTEDRFNAME.toString)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(commands.model3.TaskModule.GROUNDEDRFNAME)
commands.model3.TaskModule.GROUNDEDRFNAME == orig(this.groundedRFVariable.name)
commands.model3.TaskModule.GROUNDEDRFNAME.toString == orig(commands.model3.TaskModule.GROUNDEDRFNAME.toString)
commands.model3.TaskModule.BINDINGNAME == orig(commands.model3.TaskModule.BINDINGNAME)
commands.model3.TaskModule.BINDINGNAME == orig(this.bindingConstraintVariable.name)
commands.model3.TaskModule.BINDINGNAME.toString == orig(commands.model3.TaskModule.BINDINGNAME.toString)
this.stateVariable == orig(this.stateVariable)
this.stateVariable.name.toString == orig(this.stateVariable.name.toString)
this.stateVariable.moduleOwner == arg0.moduleOwner
this.stateVariable.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.stateVariable.moduleOwner.name.toString == orig(this.stateVariable.moduleOwner.name.toString)
this.stateVariable.moduleOwner.rVariables[] == orig(this.stateVariable.moduleOwner.rVariables[])
this.stateVariable.moduleOwner.externalDependencyList[] == orig(this.stateVariable.moduleOwner.externalDependencyList[])
this.stateVariable.dependencies == orig(this.stateVariable.dependencies)
this.stateVariable.dependencies[] == orig(this.stateVariable.dependencies[])
this.stateVariable.parameters == orig(this.stateVariable.parameters)
this.stateVariable.isInput == orig(this.stateVariable.isInput)
this.liftedRFVariable == orig(this.liftedRFVariable)
this.liftedRFVariable.name.toString == orig(this.liftedRFVariable.name.toString)
this.liftedRFVariable.moduleOwner == arg0.moduleOwner
this.liftedRFVariable.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.liftedRFVariable.moduleOwner.name.toString == orig(this.liftedRFVariable.moduleOwner.name.toString)
this.liftedRFVariable.moduleOwner.rVariables[] == orig(this.liftedRFVariable.moduleOwner.rVariables[])
this.liftedRFVariable.moduleOwner.externalDependencyList[] == orig(this.liftedRFVariable.moduleOwner.externalDependencyList[])
this.liftedRFVariable.dependencies == orig(this.liftedRFVariable.dependencies)
this.liftedRFVariable.dependencies[] == orig(this.liftedRFVariable.dependencies[])
this.liftedRFVariable.parameters == orig(this.liftedRFVariable.parameters)
this.liftedRFVariable.isInput == arg0.isInput
this.groundedRFVariable == orig(this.groundedRFVariable)
this.groundedRFVariable.name.toString == orig(this.groundedRFVariable.name.toString)
this.groundedRFVariable.moduleOwner == arg0.moduleOwner
this.groundedRFVariable.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.groundedRFVariable.moduleOwner.name.toString == orig(this.groundedRFVariable.moduleOwner.name.toString)
this.groundedRFVariable.moduleOwner.rVariables[] == orig(this.groundedRFVariable.moduleOwner.rVariables[])
this.groundedRFVariable.moduleOwner.externalDependencyList[] == orig(this.groundedRFVariable.moduleOwner.externalDependencyList[])
this.groundedRFVariable.dependencies == orig(this.groundedRFVariable.dependencies)
this.groundedRFVariable.dependencies[] == orig(this.groundedRFVariable.dependencies[])
this.groundedRFVariable.parameters == orig(this.groundedRFVariable.parameters)
this.groundedRFVariable.isInput == arg0.isInput
this.bindingConstraintVariable == orig(this.bindingConstraintVariable)
this.bindingConstraintVariable.name.toString == orig(this.bindingConstraintVariable.name.toString)
this.bindingConstraintVariable.moduleOwner == arg0.moduleOwner
this.bindingConstraintVariable.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.bindingConstraintVariable.moduleOwner.name.toString == orig(this.bindingConstraintVariable.moduleOwner.name.toString)
this.bindingConstraintVariable.moduleOwner.rVariables[] == orig(this.bindingConstraintVariable.moduleOwner.rVariables[])
this.bindingConstraintVariable.moduleOwner.externalDependencyList[] == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList[])
this.bindingConstraintVariable.dependencies == orig(this.bindingConstraintVariable.dependencies)
this.bindingConstraintVariable.dependencies[] == orig(this.bindingConstraintVariable.dependencies[])
this.bindingConstraintVariable.parameters == orig(this.bindingConstraintVariable.parameters)
this.bindingConstraintVariable.isInput == arg0.isInput
this.liftedRFValues == orig(this.liftedRFValues)
this.liftedRFValues[] == orig(this.liftedRFValues[])
this.liftedRFValues.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.liftedRFValues.getClass().getName() == arg0.dependencies.getClass().getName()
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.stateVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.groundedRFVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.bindingConstraintVariable.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.liftedRFValues.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.attributes.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.owner.modules.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.owner.inputVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(this.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg0.dependencies.getClass().getName())
this.liftedRFValues.getClass().getName() == orig(arg1.getClass().getName())
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.permitInitiallySatisfiedRFs == orig(this.permitInitiallySatisfiedRFs)
this.maxBindingConstraintsComponentSize == orig(this.maxBindingConstraintsComponentSize)
this.name == arg0.moduleOwner.name
this.name == orig(this.stateVariable.moduleOwner.name)
this.name == orig(this.liftedRFVariable.moduleOwner.name)
this.name == orig(this.groundedRFVariable.moduleOwner.name)
this.name == orig(this.bindingConstraintVariable.moduleOwner.name)
this.name == orig(this.name)
this.name == orig(arg0.moduleOwner.name)
this.name.toString == orig(this.name.toString)
this.owner == arg0.moduleOwner.owner
this.owner == orig(this.stateVariable.moduleOwner.owner)
this.owner == orig(this.liftedRFVariable.moduleOwner.owner)
this.owner == orig(this.groundedRFVariable.moduleOwner.owner)
this.owner == orig(this.bindingConstraintVariable.moduleOwner.owner)
this.owner == orig(this.owner)
this.owner == orig(arg0.moduleOwner.owner)
this.owner.modules == orig(this.owner.modules)
this.owner.modules[] == orig(this.owner.modules[])
this.owner.moduleMap == orig(this.owner.moduleMap)
this.owner.inputVariables == orig(this.owner.inputVariables)
this.owner.inputVariables[] == orig(this.owner.inputVariables[])
this.owner.variableOwnerResolver == orig(this.owner.variableOwnerResolver)
this.owner.variableOwnerResolver.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.queryCache == orig(this.owner.queryCache)
this.owner.queryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.logQueryCache == orig(this.owner.logQueryCache)
this.owner.logQueryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariables == arg0.moduleOwner.rVariables
this.rVariables == orig(this.stateVariable.moduleOwner.rVariables)
this.rVariables == orig(this.liftedRFVariable.moduleOwner.rVariables)
this.rVariables == orig(this.groundedRFVariable.moduleOwner.rVariables)
this.rVariables == orig(this.bindingConstraintVariable.moduleOwner.rVariables)
this.rVariables == orig(this.rVariables)
this.rVariables == orig(arg0.moduleOwner.rVariables)
this.rVariables[] == orig(this.rVariables[])
this.rVariableMap == arg0.moduleOwner.rVariableMap
this.rVariableMap == orig(this.stateVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.liftedRFVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.groundedRFVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.bindingConstraintVariable.moduleOwner.rVariableMap)
this.rVariableMap == orig(this.rVariableMap)
this.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
this.rVariableMap.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.rVariableMap.getClass().getName() == orig(this.stateVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.stateVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.liftedRFVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.groundedRFVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.bindingConstraintVariable.parameters.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.moduleMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.variableOwnerResolver.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.queryCache.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.owner.logQueryCache.getClass().getName())
this.rVariableMap.getClass().getName() == orig(this.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.parameters.getClass().getName())
this.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.externalDependencyList == orig(this.stateVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.liftedRFVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.groundedRFVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.bindingConstraintVariable.moduleOwner.externalDependencyList)
this.externalDependencyList == orig(this.externalDependencyList)
this.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
this.externalDependencyList[] == orig(this.externalDependencyList[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner == orig(this.stateVariable.moduleOwner)
arg0.moduleOwner == orig(this.liftedRFVariable.moduleOwner)
arg0.moduleOwner == orig(this.groundedRFVariable.moduleOwner)
arg0.moduleOwner == orig(this.bindingConstraintVariable.moduleOwner)
arg0.moduleOwner == orig(arg0.moduleOwner)
arg0.moduleOwner.getClass().getName() == orig(this.stateVariable.moduleOwner.getClass().getName())
arg0.moduleOwner.getClass().getName() == orig(this.liftedRFVariable.moduleOwner.getClass().getName())
arg0.moduleOwner.getClass().getName() == orig(this.groundedRFVariable.moduleOwner.getClass().getName())
arg0.moduleOwner.getClass().getName() == orig(this.bindingConstraintVariable.moduleOwner.getClass().getName())
arg0.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.rVariables[] == orig(arg0.moduleOwner.rVariables[])
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.parameters == orig(arg0.parameters)
arg0.isInput == orig(this.liftedRFVariable.isInput)
arg0.isInput == orig(this.groundedRFVariable.isInput)
arg0.isInput == orig(this.bindingConstraintVariable.isInput)
arg0.isInput == orig(arg0.isInput)
arg1[] == orig(arg1[])
this.liftedRFValues[] contains no nulls and has only one value, of length 2
this.liftedRFValues[].getClass().getName() == [commands.model3.TaskModule.LiftedVarValue, commands.model3.TaskModule.LiftedVarValue]
this.owner has only one value
arg0.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
arg0.moduleOwner has only one value
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.isInput == false
return.modelOwner == null
return.cache == false
size(this.liftedRFValues[]) == 2
size(arg0.moduleOwner.rVariables[]) == 4
size(arg0.dependencies[]) one of { 1, 2, 3 }
this.liftedRFValues.getClass().getName() != arg0.moduleOwner.getClass().getName()
this.liftedRFValues.getClass().getName() != return.getClass().getName()
this.domain.getClass().getName() != arg0.moduleOwner.getClass().getName()
this.domain.getClass().getName() != return.getClass().getName()
arg0.moduleOwner.getClass().getName() in this.owner.modules[].getClass().getName()
this.rVariableMap.getClass().getName() != arg0.moduleOwner.getClass().getName()
this.rVariableMap.getClass().getName() != return.getClass().getName()
arg0.moduleOwner.getClass().getName() != return.getClass().getName()
===========================================================================
commands.tests.Model3Tests.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
commands.tests.Model3Tests.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$MovementAction:::OBJECT
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
this.domain.attributes.getClass().getName() == this.actionObservers.getClass().getName()
this.domain.propFunctions.getClass().getName() == this.actionObservers.getClass().getName()
this.xdelta one of { -1, 0, 1 }
this.ydelta one of { -1, 0, 1 }
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
this.domain has only one value
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.propFunctions has only one value
this.domain.propFunctions[] == []
this.domain.propFunctions[].getClass().getName() == []
this.domain.propFunctionMap has only one value
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses[] == []
this.parameterClasses[].getClass().getName() == []
this.parameterClasses[].toString == []
this.parameterOrderGroup[] == []
this.parameterOrderGroup[].getClass().getName() == []
this.parameterOrderGroup[].toString == []
this.actionObservers[] == []
this.actionObservers[].getClass().getName() == []
this.actionObservers.getClass().getName() == java.util.ArrayList.class
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
arg2 has only one value
arg2.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctions[] == []
arg2.propFunctions[].getClass().getName() == []
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
arg3 one of { -1, 0, 1 }
arg4 one of { -1, 0, 1 }
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$MovementAction.MovementAction(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, int, int):::EXIT
this.xdelta == orig(arg3)
this.ydelta == orig(arg4)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(arg1)
this.domain == orig(arg2)
this.domain.getClass().getName() == orig(arg2.getClass().getName())
this.domain.objectClasses == arg2.objectClasses
this.domain.objectClassMap == arg2.objectClassMap
this.domain.objectClassMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.attributes == arg2.attributes
this.domain.attributeMap == arg2.attributeMap
this.domain.attributeMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.propFunctions == arg2.propFunctions
this.domain.propFunctionMap == arg2.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == arg2.objectIdentifierDependentDomain
this.domain.debugCode == arg2.debugCode
this.actionObservers.getClass().getName() == arg2.objectClasses.getClass().getName()
this.actionObservers.getClass().getName() == arg2.attributes.getClass().getName()
this.actionObservers.getClass().getName() == arg2.propFunctions.getClass().getName()
this.actionObservers.getClass().getName() == orig(arg2.objectClasses.getClass().getName())
this.actionObservers.getClass().getName() == orig(arg2.attributes.getClass().getName())
this.actionObservers.getClass().getName() == orig(arg2.propFunctions.getClass().getName())
arg1.toString == orig(arg1.toString)
arg2.objectClasses == orig(arg2.objectClasses)
arg2.objectClasses[] == orig(arg2.objectClasses[])
arg2.objectClassMap == orig(arg2.objectClassMap)
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == orig(arg2.objectClassMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.attributeMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.propFunctionMap.getClass().getName())
arg2.attributes == orig(arg2.attributes)
arg2.attributes[] == orig(arg2.attributes[])
arg2.attributeMap == orig(arg2.attributeMap)
arg2.propFunctions == orig(arg2.propFunctions)
arg2.propFunctions[] == orig(arg2.propFunctions[])
arg2.propFunctionMap == orig(arg2.propFunctionMap)
arg2.objectIdentifierDependentDomain == orig(arg2.objectIdentifierDependentDomain)
arg2.debugCode == orig(arg2.debugCode)
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctions[] == []
arg2.propFunctions[].getClass().getName() == []
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion:::OBJECT
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.name == this.pfClass
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
this.name != null
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses != null
this.parameterClasses[] elements != null
this.parameterClasses[].getClass().getName() == [java.lang.String, java.lang.String]
this.parameterClasses[].getClass().getName() elements == java.lang.String.class
this.parameterOrderGroup != null
this.parameterOrderGroup[] elements != null
this.parameterOrderGroup[].getClass().getName() == [java.lang.String, java.lang.String]
this.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.parameterClasses[]) == 2
size(this.parameterOrderGroup[]) == 2
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.domain.objectClassMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg3.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
arg2 has only one value
arg2.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctions[].getClass().getName() elements == domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion.class
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
size(arg3[]) == 2
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.PFInRegion(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], boolean):::EXIT
this.countBoundary == orig(arg4)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg3.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(arg1)
this.domain == orig(arg2)
this.domain.getClass().getName() == orig(arg2.getClass().getName())
this.domain.objectClasses == arg2.objectClasses
this.domain.objectClasses.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.objectClassMap == arg2.objectClassMap
this.domain.objectClassMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.attributes == arg2.attributes
this.domain.attributes.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.attributeMap == arg2.attributeMap
this.domain.attributeMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.propFunctions == arg2.propFunctions
this.domain.propFunctions.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.propFunctionMap == arg2.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == arg2.objectIdentifierDependentDomain
this.domain.debugCode == arg2.debugCode
this.parameterClasses == orig(arg3)
arg1.toString == orig(arg1.toString)
arg2.objectClasses == orig(arg2.objectClasses)
arg2.objectClasses[] == orig(arg2.objectClasses[])
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClasses.getClass().getName() == orig(arg2.objectClasses.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.attributes.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.propFunctions.getClass().getName())
arg2.objectClassMap == orig(arg2.objectClassMap)
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == orig(arg2.objectClassMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.attributeMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.propFunctionMap.getClass().getName())
arg2.attributes == orig(arg2.attributes)
arg2.attributes[] == orig(arg2.attributes[])
arg2.attributeMap == orig(arg2.attributeMap)
arg2.propFunctions == orig(arg2.propFunctions)
arg2.propFunctionMap == orig(arg2.propFunctionMap)
arg2.objectIdentifierDependentDomain == orig(arg2.objectIdentifierDependentDomain)
arg2.debugCode == orig(arg2.debugCode)
arg3[] == orig(arg3[])
size(arg2.propFunctions[])-1 == orig(size(arg2.propFunctions[]))
this.domain.propFunctions[].getClass().getName() elements == domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion.class
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctions[].getClass().getName() elements == domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion.class
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.isTrue(burlap.oomdp.core.State, java.lang.String[]):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg1.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0 has only one value
arg0 != null
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1 != null
arg1[] elements != null
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
size(arg1[]) == 2
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT
this.countBoundary == orig(this.countBoundary)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterClasses.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg1.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(this.name)
this.name == orig(this.pfClass)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributes.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.attributeMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctions.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.propFunctionMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(this.parameterOrderGroup)
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.pfClass.toString == orig(this.pfClass.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.attributes.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg1[] == orig(arg1[])
(return == true)  ==>  (arg1[].toString one of { [agent0, room2], [block0, room0] })
(return == true)  ==>  (domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM in this.parameterClasses[])
(return == true)  ==>  (this.countBoundary == false)
(return == true)  ==>  (this.name.toString one of { "agentInRoom", "blockInRoom" })
(return == true)  ==>  (this.parameterClasses[].toString elements one of { "agent", "block", "room" })
(return == true)  ==>  (this.parameterClasses[].toString one of { [agent, room], [block, room] })
(return == true)  ==>  (this.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] })
(return == true)  ==>  (this.pfClass.toString one of { "agentInRoom", "blockInRoom" })
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1[] elements != null
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectInstances.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectMap.getClass().getName()
this.domain.getClass().getName() != arg0.objectInstances.getClass().getName()
this.domain.getClass().getName() != arg0.objectMap.getClass().getName()
arg0.objectInstances.getClass().getName() != arg0.objectMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="return == true"
this.countBoundary == false
this.name.toString one of { "agentInRoom", "blockInRoom" }
this.parameterClasses[].toString elements one of { "agent", "block", "room" }
this.parameterClasses[].toString one of { [agent, room], [block, room] }
this.parameterOrderGroup[].toString one of { [agentInRoom.P0, agentInRoom.P1], [blockInRoom.P0, blockInRoom.P1] }
this.pfClass.toString one of { "agentInRoom", "blockInRoom" }
arg1[].toString one of { [agent0, room2], [block0, room0] }
return == true
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM in this.parameterClasses[]
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFInRegion.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="not(return == true)"
return == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor:::OBJECT
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.name == this.pfClass
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
this.colorName != null
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
this.name != null
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses != null
this.parameterClasses[] elements != null
this.parameterClasses[].getClass().getName() == [java.lang.String]
this.parameterClasses[].getClass().getName() elements == java.lang.String.class
this.parameterClasses[].toString elements one of { "block", "room" }
this.parameterClasses[].toString one of { [block], [room] }
this.parameterOrderGroup != null
this.parameterOrderGroup[] elements != null
this.parameterOrderGroup[].getClass().getName() == [java.lang.String]
this.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.parameterClasses[]) == 1
size(this.parameterOrderGroup[]) == 1
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.domain.objectClassMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg3.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
arg2 has only one value
arg2.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
arg3[].toString elements one of { "block", "room" }
arg3[].toString one of { [block], [room] }
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
size(arg3[]) == 1
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg2.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg2.objectClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg2.objectClassMap.getClass().getName()
arg2.getClass().getName() != arg2.objectClasses.getClass().getName()
arg2.getClass().getName() != arg2.objectClassMap.getClass().getName()
arg2.objectClasses.getClass().getName() != arg2.objectClassMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.PFIsColor(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT
this.colorName == orig(arg4)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg3.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(arg1)
this.domain == orig(arg2)
this.domain.getClass().getName() == orig(arg2.getClass().getName())
this.domain.objectClasses == arg2.objectClasses
this.domain.objectClasses.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.objectClassMap == arg2.objectClassMap
this.domain.objectClassMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.attributes == arg2.attributes
this.domain.attributes.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.attributeMap == arg2.attributeMap
this.domain.attributeMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.propFunctions == arg2.propFunctions
this.domain.propFunctions.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.propFunctionMap == arg2.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == arg2.objectIdentifierDependentDomain
this.domain.debugCode == arg2.debugCode
this.parameterClasses == orig(arg3)
arg1.toString == orig(arg1.toString)
arg2.objectClasses == orig(arg2.objectClasses)
arg2.objectClasses[] == orig(arg2.objectClasses[])
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClasses.getClass().getName() == orig(arg2.objectClasses.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.attributes.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.propFunctions.getClass().getName())
arg2.objectClassMap == orig(arg2.objectClassMap)
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == orig(arg2.objectClassMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.attributeMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.propFunctionMap.getClass().getName())
arg2.attributes == orig(arg2.attributes)
arg2.attributes[] == orig(arg2.attributes[])
arg2.attributeMap == orig(arg2.attributeMap)
arg2.propFunctions == orig(arg2.propFunctions)
arg2.propFunctionMap == orig(arg2.propFunctionMap)
arg2.objectIdentifierDependentDomain == orig(arg2.objectIdentifierDependentDomain)
arg2.debugCode == orig(arg2.debugCode)
arg3[] == orig(arg3[])
arg4.toString == orig(arg4.toString)
size(arg2.propFunctions[])-1 == orig(size(arg2.propFunctions[]))
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
arg3[].toString elements one of { "block", "room" }
arg3[].toString one of { [block], [room] }
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg2.objectClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg2.objectClassMap.getClass().getName()
this.domain.getClass().getName() != arg2.objectClasses.getClass().getName()
this.domain.getClass().getName() != arg2.objectClassMap.getClass().getName()
arg2.objectClasses.getClass().getName() != arg2.objectClassMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.isTrue(burlap.oomdp.core.State, java.lang.String[]):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg1.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0 has only one value
arg0 != null
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1 != null
arg1[] elements != null
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
size(arg1[]) == 1
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT
this.colorName == orig(this.colorName)
this.colorName.toString == orig(this.colorName.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterClasses.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg1.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(this.name)
this.name == orig(this.pfClass)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributes.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.attributeMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctions.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.propFunctionMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(this.parameterOrderGroup)
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.pfClass.toString == orig(this.pfClass.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.attributes.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg1[] == orig(arg1[])
(return == true)  ==>  (this.colorName.toString one of { "blue", "green", "red" })
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1[] elements != null
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectInstances.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectMap.getClass().getName()
this.domain.getClass().getName() != arg0.objectInstances.getClass().getName()
this.domain.getClass().getName() != arg0.objectMap.getClass().getName()
arg0.objectInstances.getClass().getName() != arg0.objectMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="return == true"
this.colorName.toString one of { "blue", "green", "red" }
return == true
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsColor.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="not(return == true)"
return == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape:::OBJECT
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == this.parameterOrderGroup.getClass().getName()
this.name == this.pfClass
this.domain.objectClasses.getClass().getName() == this.domain.attributes.getClass().getName()
this.domain.objectClasses.getClass().getName() == this.domain.propFunctions.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.attributeMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == this.domain.propFunctionMap.getClass().getName()
this.shapeName != null
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
this.name != null
this.domain has only one value
this.domain != null
this.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
this.domain.objectClasses has only one value
this.domain.objectClasses != null
this.domain.objectClasses[] contains no nulls and has only one value, of length 4
this.domain.objectClasses[] elements != null
this.domain.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
this.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
this.domain.objectClasses.getClass().getName() == java.util.ArrayList.class
this.domain.objectClassMap has only one value
this.domain.objectClassMap != null
this.domain.objectClassMap.getClass().getName() == java.util.HashMap.class
this.domain.attributes has only one value
this.domain.attributes != null
this.domain.attributes[] contains no nulls and has only one value, of length 8
this.domain.attributes[] elements != null
this.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
this.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
this.domain.attributeMap has only one value
this.domain.attributeMap != null
this.domain.propFunctions has only one value
this.domain.propFunctions != null
this.domain.propFunctions[] elements != null
this.domain.propFunctionMap has only one value
this.domain.propFunctionMap != null
this.domain.objectIdentifierDependentDomain == false
this.domain.debugCode == 111
this.parameterClasses != null
this.parameterClasses[] contains no nulls and has only one value, of length 1
this.parameterClasses[] elements has only one value
this.parameterClasses[] elements != null
this.parameterClasses[].getClass().getName() == [java.lang.String]
this.parameterClasses[].getClass().getName() elements == java.lang.String.class
this.parameterClasses[].toString == [block]
this.parameterClasses[].toString elements == "block"
this.parameterOrderGroup != null
this.parameterOrderGroup[] elements != null
this.parameterOrderGroup[].getClass().getName() == [java.lang.String]
this.parameterOrderGroup[].getClass().getName() elements == java.lang.String.class
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(this.domain.objectClasses[]) == 4
size(this.domain.attributes[]) == 8
size(this.parameterClasses[]) == 1
size(this.parameterOrderGroup[]) == 1
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK in this.parameterClasses[]
this.parameterClasses[] elements == domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClasses.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClasses.getClass().getName()
this.domain.getClass().getName() != this.domain.objectClassMap.getClass().getName()
this.domain.objectClasses.getClass().getName() != this.domain.objectClassMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg3.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.this has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == 24
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == false
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == false
arg2 has only one value
arg2.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
arg3[] contains no nulls and has only one value, of length 1
arg3[] elements has only one value
arg3[].toString == [block]
arg3[].toString elements == "block"
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
size(arg3[]) == 1
arg3[] elements == domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK in arg3[]
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.PFIsShape(domain.singleagent.sokoban2.Sokoban2Domain, java.lang.String, burlap.oomdp.core.Domain, java.lang.String[], java.lang.String):::EXIT
this.shapeName == orig(arg4)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg3.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(arg1)
this.domain == orig(arg2)
this.domain.getClass().getName() == orig(arg2.getClass().getName())
this.domain.objectClasses == arg2.objectClasses
this.domain.objectClasses.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.objectClassMap == arg2.objectClassMap
this.domain.objectClassMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.attributes == arg2.attributes
this.domain.attributes.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.attributeMap == arg2.attributeMap
this.domain.attributeMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.propFunctions == arg2.propFunctions
this.domain.propFunctions.getClass().getName() == arg2.objectClasses.getClass().getName()
this.domain.propFunctionMap == arg2.propFunctionMap
this.domain.propFunctionMap.getClass().getName() == arg2.objectClassMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == arg2.objectIdentifierDependentDomain
this.domain.debugCode == arg2.debugCode
this.parameterClasses == orig(arg3)
arg1.toString == orig(arg1.toString)
arg2.objectClasses == orig(arg2.objectClasses)
arg2.objectClasses[] == orig(arg2.objectClasses[])
arg2.objectClasses.getClass().getName() == arg2.attributes.getClass().getName()
arg2.objectClasses.getClass().getName() == arg2.propFunctions.getClass().getName()
arg2.objectClasses.getClass().getName() == orig(arg2.objectClasses.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.attributes.getClass().getName())
arg2.objectClasses.getClass().getName() == orig(arg2.propFunctions.getClass().getName())
arg2.objectClassMap == orig(arg2.objectClassMap)
arg2.objectClassMap.getClass().getName() == arg2.attributeMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == arg2.propFunctionMap.getClass().getName()
arg2.objectClassMap.getClass().getName() == orig(arg2.objectClassMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.attributeMap.getClass().getName())
arg2.objectClassMap.getClass().getName() == orig(arg2.propFunctionMap.getClass().getName())
arg2.attributes == orig(arg2.attributes)
arg2.attributes[] == orig(arg2.attributes[])
arg2.attributeMap == orig(arg2.attributeMap)
arg2.propFunctions == orig(arg2.propFunctions)
arg2.propFunctionMap == orig(arg2.propFunctionMap)
arg2.objectIdentifierDependentDomain == orig(arg2.objectIdentifierDependentDomain)
arg2.debugCode == orig(arg2.debugCode)
arg3[] == orig(arg3[])
arg4.toString == orig(arg4.toString)
size(arg2.propFunctions[])-1 == orig(size(arg2.propFunctions[]))
arg2.objectClasses has only one value
arg2.objectClasses[] contains no nulls and has only one value, of length 4
arg2.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg2.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg2.objectClasses.getClass().getName() == java.util.ArrayList.class
arg2.objectClassMap has only one value
arg2.objectClassMap.getClass().getName() == java.util.HashMap.class
arg2.attributes has only one value
arg2.attributes[] contains no nulls and has only one value, of length 8
arg2.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg2.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg2.attributeMap has only one value
arg2.propFunctions has only one value
arg2.propFunctionMap has only one value
arg2.objectIdentifierDependentDomain == false
arg2.debugCode == 111
arg3[] contains no nulls and has only one value, of length 1
arg3[] elements has only one value
arg3[].toString == [block]
arg3[].toString elements == "block"
size(arg2.objectClasses[]) == 4
size(arg2.attributes[]) == 8
arg3[] elements == domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK in arg3[]
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.isTrue(burlap.oomdp.core.State, java.lang.String[]):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == arg1.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClasses.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectClassMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0 has only one value
arg0 != null
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1 != null
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[] elements != null
arg1[].toString == [block0]
arg1[].toString elements == "block0"
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
size(arg1[]) == 1
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT
this.shapeName == orig(this.shapeName)
this.shapeName.toString == orig(this.shapeName.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this == orig(domain.singleagent.sokoban2.Sokoban2Domain.this)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterClasses.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(this.parameterOrderGroup.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(arg1.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxX == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxX)
domain.singleagent.sokoban2.Sokoban2Domain.this.maxY == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.maxY)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeDirectionAttribute)
domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includePullAction)
domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs == orig(domain.singleagent.sokoban2.Sokoban2Domain.this.includeWallPFs)
this.name == orig(this.name)
this.name == orig(this.pfClass)
this.name.toString == orig(this.name.toString)
this.domain == orig(this.domain)
this.domain.getClass().getName() == orig(this.domain.getClass().getName())
this.domain.objectClasses == orig(this.domain.objectClasses)
this.domain.objectClasses[] == orig(this.domain.objectClasses[])
this.domain.objectClasses.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.objectClassMap == orig(this.domain.objectClassMap)
this.domain.objectClassMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.attributes == orig(this.domain.attributes)
this.domain.attributes[] == orig(this.domain.attributes[])
this.domain.attributes.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.attributeMap == orig(this.domain.attributeMap)
this.domain.attributeMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.propFunctions == orig(this.domain.propFunctions)
this.domain.propFunctions[] == orig(this.domain.propFunctions[])
this.domain.propFunctions.getClass().getName() == arg0.objectInstances.getClass().getName()
this.domain.propFunctionMap == orig(this.domain.propFunctionMap)
this.domain.propFunctionMap.getClass().getName() == arg0.objectMap.getClass().getName()
this.domain.objectIdentifierDependentDomain == orig(this.domain.objectIdentifierDependentDomain)
this.domain.debugCode == orig(this.domain.debugCode)
this.parameterClasses == orig(this.parameterClasses)
this.parameterClasses[] == orig(this.parameterClasses[])
this.parameterOrderGroup == orig(this.parameterOrderGroup)
this.parameterOrderGroup[] == orig(this.parameterOrderGroup[])
this.pfClass.toString == orig(this.pfClass.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(this.domain.objectClasses.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.attributes.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(this.domain.propFunctions.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(this.domain.objectClassMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.attributeMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(this.domain.propFunctionMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg1[] == orig(arg1[])
(this.shapeName.toString == "basket")  <==>  (return == true)
(this.shapeName.toString == "basket")  <==>  (this.name.toString == "shapeBasket")
(this.shapeName.toString == "basket")  <==>  (this.parameterOrderGroup[].toString elements == "shapeBasket.P0")
(this.shapeName.toString == "basket")  <==>  (this.pfClass.toString == "shapeBasket")
(this.shapeName.toString == "basket")  ==>  (orig(this) has only one value)
(this.shapeName.toString == "basket")  ==>  (this.name has only one value)
(this.shapeName.toString == "basket")  ==>  (this.parameterClasses has only one value)
(this.shapeName.toString == "basket")  ==>  (this.parameterOrderGroup has only one value)
(this.shapeName.toString == "basket")  ==>  (this.parameterOrderGroup[] contains no nulls and has only one value, of length 1)
(this.shapeName.toString == "basket")  ==>  (this.parameterOrderGroup[] elements has only one value)
(this.shapeName.toString == "basket")  ==>  (this.parameterOrderGroup[].toString == [shapeBasket.P0])
(this.shapeName.toString == "basket")  ==>  (this.shapeName has only one value)
(this.shapeName.toString one of { "backpack", "bag", "chair" })  <==>  (return == false)
(this.shapeName.toString one of { "backpack", "bag", "chair" })  <==>  (this.name.toString one of { "shapeBackpack", "shapeBag", "shapeChair" })
(this.shapeName.toString one of { "backpack", "bag", "chair" })  <==>  (this.parameterOrderGroup[].toString elements one of { "shapeBackpack.P0", "shapeBag.P0", "shapeChair.P0" })
(this.shapeName.toString one of { "backpack", "bag", "chair" })  <==>  (this.pfClass.toString one of { "shapeBackpack", "shapeBag", "shapeChair" })
this.domain.propFunctions[] contains no nulls and has only one value, of length 18
this.domain.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.objectInstances has only one value
arg0.objectInstances != null
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[] elements != null
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances != null
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap != null
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg0.objectIndexByTrueClass != null
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[] elements != null
arg1[].toString == [block0]
arg1[].toString elements == "block0"
size(this.domain.propFunctions[]) == 18
size(arg0.objectInstances[]) == 7
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectInstances.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.objectMap.getClass().getName()
this.domain.getClass().getName() != arg0.objectInstances.getClass().getName()
this.domain.getClass().getName() != arg0.objectMap.getClass().getName()
arg0.objectInstances.getClass().getName() != arg0.objectMap.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="return == true"
this.shapeName has only one value
this.shapeName.toString == "basket"
this.name has only one value
this.name.toString == "shapeBasket"
this.parameterClasses has only one value
this.parameterOrderGroup has only one value
this.parameterOrderGroup[] contains no nulls and has only one value, of length 1
this.parameterOrderGroup[] elements has only one value
this.parameterOrderGroup[].toString == [shapeBasket.P0]
this.parameterOrderGroup[].toString elements == "shapeBasket.P0"
this.pfClass.toString == "shapeBasket"
return == true
orig(this) has only one value
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain$PFIsShape.isTrue(burlap.oomdp.core.State, java.lang.String[]):::EXIT;condition="not(return == true)"
this.shapeName.toString one of { "backpack", "bag", "chair" }
this.name.toString one of { "shapeBackpack", "shapeBag", "shapeChair" }
this.parameterOrderGroup[].toString elements one of { "shapeBackpack.P0", "shapeBag.P0", "shapeChair.P0" }
this.pfClass.toString one of { "shapeBackpack", "shapeBag", "shapeChair" }
return == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain:::CLASS
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.ATTX has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTX != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == "x"
domain.singleagent.sokoban2.Sokoban2Domain.ATTY has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTY != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == "y"
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == "direction"
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == "top"
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == "left"
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == "bottom"
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == "right"
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == "color"
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE != null
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == "shape"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == "agent"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == "block"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == "room"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == "door"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == "north"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == "south"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == "east"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == "west"
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL has only one value
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL != null
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == "pull"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == "agentInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == "blockInRoom"
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == "agentInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == "blockInDoor"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == "wallNorth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == "wallSouth"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == "wallEast"
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST != null
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == "wallWest"
domain.singleagent.sokoban2.Sokoban2Domain.COLORS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.COLORS != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == java.lang.String[].class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] contains no nulls and has only one value, of length 5
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[].toString == [blue, green, magenta, red, yellow]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[].toString == [chair, bag, backpack, basket]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS has only one value
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] contains no nulls and has only one value, of length 4
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] elements != null
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].getClass().getName() elements == java.lang.String.class
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[].toString == [north, south, east, west]
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == "roomIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE has only one value
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE != null
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == "blockIs"
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == "shape"
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]) == 5
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == 4
size(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[]) == 4
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain:::OBJECT
this has only one value
this.maxX == 24
this.maxY == 24
this.includeDirectionAttribute == false
this.includePullAction == false
this.includeWallPFs == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFBlockColorName(java.lang.String):::ENTER
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFBlockColorName(java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.toString == orig(arg0.toString)
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFBlockShapeName(java.lang.String):::ENTER
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFBlockShapeName(java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.toString == orig(arg0.toString)
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFRoomColorName(java.lang.String):::ENTER
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.PFRoomColorName(java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.toString == orig(arg0.toString)
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.Sokoban2Domain():::EXIT
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.addRectAtts(burlap.oomdp.core.Domain, burlap.oomdp.core.ObjectClass):::ENTER
arg0 == arg1.domain
arg0.getClass().getName() == arg1.domain.getClass().getName()
arg0.objectClasses == arg1.domain.objectClasses
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.objectClasses.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.attributeList.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.observableAttributeIndices.getClass().getName()
arg0.objectClassMap == arg1.domain.objectClassMap
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.objectClassMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.attributeIndex.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.attributeMap.getClass().getName()
arg0.attributes == arg1.domain.attributes
arg0.attributeMap == arg1.domain.attributeMap
arg0.propFunctions == arg1.domain.propFunctions
arg0.propFunctionMap == arg1.domain.propFunctionMap
arg0.objectIdentifierDependentDomain == arg1.domain.objectIdentifierDependentDomain
arg0.debugCode == arg1.domain.debugCode
arg0 has only one value
arg0.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.objectClasses has only one value
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] == []
arg0.propFunctions[].getClass().getName() == []
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
arg1.name.toString one of { "door", "room" }
arg1.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg1.domain.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
arg1.domain.attributes[] contains no nulls and has only one value, of length 8
arg1.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg1.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg1.domain.propFunctions[] == []
arg1.domain.propFunctions[].getClass().getName() == []
arg1.attributeList[] == []
arg1.attributeList[].getClass().getName() == []
arg1.observableAttributeIndices[] == []
arg1.observableAttributeIndices[].getClass().getName() == []
arg1.hidden == false
size(arg0.objectClasses[]) one of { 3, 4 }
size(arg0.attributes[]) == 8
size(arg1.domain.objectClasses[]) one of { 3, 4 }
size(arg1.domain.attributes[]) == 8
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.addRectAtts(burlap.oomdp.core.Domain, burlap.oomdp.core.ObjectClass):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
this.maxX == orig(this.maxX)
this.maxY == orig(this.maxY)
this.includeDirectionAttribute == orig(this.includeDirectionAttribute)
this.includePullAction == orig(this.includePullAction)
this.includeWallPFs == orig(this.includeWallPFs)
arg0.objectClasses == arg1.domain.objectClasses
arg0.objectClasses == orig(arg0.objectClasses)
arg0.objectClasses == orig(arg1.domain.objectClasses)
arg0.objectClasses[] == orig(arg0.objectClasses[])
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.objectClasses.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.domain.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.attributeList.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.observableAttributeIndices.getClass().getName()
arg0.objectClasses.getClass().getName() == orig(arg0.objectClasses.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.attributes.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.propFunctions.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.domain.objectClasses.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.domain.attributes.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.domain.propFunctions.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.attributeList.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.observableAttributeIndices.getClass().getName())
arg0.objectClassMap == arg1.domain.objectClassMap
arg0.objectClassMap == orig(arg0.objectClassMap)
arg0.objectClassMap == orig(arg1.domain.objectClassMap)
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.objectClassMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.domain.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.attributeIndex.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == orig(arg0.objectClassMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.attributeMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.propFunctionMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.domain.objectClassMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.domain.attributeMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.domain.propFunctionMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.attributeIndex.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.attributeMap.getClass().getName())
arg0.attributes == arg1.domain.attributes
arg0.attributes == orig(arg0.attributes)
arg0.attributes == orig(arg1.domain.attributes)
arg0.attributes[] == orig(arg0.attributes[])
arg0.attributeMap == arg1.domain.attributeMap
arg0.attributeMap == orig(arg0.attributeMap)
arg0.attributeMap == orig(arg1.domain.attributeMap)
arg0.propFunctions == arg1.domain.propFunctions
arg0.propFunctions == orig(arg0.propFunctions)
arg0.propFunctions == orig(arg1.domain.propFunctions)
arg0.propFunctions[] == orig(arg0.propFunctions[])
arg0.propFunctionMap == arg1.domain.propFunctionMap
arg0.propFunctionMap == orig(arg0.propFunctionMap)
arg0.propFunctionMap == orig(arg1.domain.propFunctionMap)
arg0.objectIdentifierDependentDomain == arg1.domain.objectIdentifierDependentDomain
arg0.objectIdentifierDependentDomain == orig(arg0.objectIdentifierDependentDomain)
arg0.objectIdentifierDependentDomain == orig(arg1.domain.objectIdentifierDependentDomain)
arg0.debugCode == arg1.domain.debugCode
arg0.debugCode == orig(arg0.debugCode)
arg0.debugCode == orig(arg1.domain.debugCode)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.domain == orig(arg0)
arg1.domain == orig(arg1.domain)
arg1.domain.getClass().getName() == orig(arg0.getClass().getName())
arg1.domain.getClass().getName() == orig(arg1.domain.getClass().getName())
arg1.domain.objectClasses[] == orig(arg1.domain.objectClasses[])
arg1.domain.attributes[] == orig(arg1.domain.attributes[])
arg1.domain.propFunctions[] == orig(arg1.domain.propFunctions[])
arg1.attributeIndex == orig(arg1.attributeIndex)
arg1.attributeMap == orig(arg1.attributeMap)
arg1.attributeList == orig(arg1.attributeList)
arg1.observableAttributeIndices == orig(arg1.observableAttributeIndices)
arg1.hidden == orig(arg1.hidden)
arg0.objectClasses has only one value
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] == []
arg0.propFunctions[].getClass().getName() == []
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
arg1.name.toString one of { "door", "room" }
arg1.domain has only one value
arg1.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg1.domain.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg1.domain.objectClasses[].getClass().getName() one of { [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass], [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass] }
arg1.domain.attributes[] contains no nulls and has only one value, of length 8
arg1.domain.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg1.domain.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg1.domain.propFunctions[] == []
arg1.domain.propFunctions[].getClass().getName() == []
arg1.attributeList[] contains no nulls and has only one value, of length 4
arg1.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg1.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg1.observableAttributeIndices[] contains no nulls and has only one value, of length 4
arg1.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg1.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg1.hidden == false
size(arg0.objectClasses[]) one of { 3, 4 }
size(arg0.attributes[]) == 8
size(arg1.domain.objectClasses[]) one of { 3, 4 }
size(arg1.domain.attributes[]) == 8
size(arg1.attributeList[]) == 4
size(arg1.observableAttributeIndices[]) == 4
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.createNInstances(burlap.oomdp.core.Domain, burlap.oomdp.core.State, java.lang.String, int):::ENTER
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.objectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.hiddenObjectInstances.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.objectMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.objectIndexByTrueClass.getClass().getName()
arg0 has only one value
arg0.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
arg1 has only one value
arg1.objectInstances has only one value
arg1.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg1.hiddenObjectInstances has only one value
arg1.hiddenObjectInstances[] == []
arg1.hiddenObjectInstances[].getClass().getName() == []
arg1.objectMap has only one value
arg1.objectIndexByTrueClass has only one value
arg2.toString one of { "block", "door", "room" }
arg3 one of { 1, 2, 3 }
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
size(arg1.objectInstances[]) one of { 0, 3, 5 }
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.createNInstances(burlap.oomdp.core.Domain, burlap.oomdp.core.State, java.lang.String, int):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectClasses == orig(arg0.objectClasses)
arg0.objectClasses[] == orig(arg0.objectClasses[])
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.objectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == arg1.hiddenObjectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == orig(arg0.objectClasses.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.attributes.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.propFunctions.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.objectInstances.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg1.hiddenObjectInstances.getClass().getName())
arg0.objectClassMap == orig(arg0.objectClassMap)
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.objectMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg1.objectIndexByTrueClass.getClass().getName()
arg0.objectClassMap.getClass().getName() == orig(arg0.objectClassMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.attributeMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.propFunctionMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.objectMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg1.objectIndexByTrueClass.getClass().getName())
arg0.attributes == orig(arg0.attributes)
arg0.attributes[] == orig(arg0.attributes[])
arg0.attributeMap == orig(arg0.attributeMap)
arg0.propFunctions == orig(arg0.propFunctions)
arg0.propFunctions[] == orig(arg0.propFunctions[])
arg0.propFunctionMap == orig(arg0.propFunctionMap)
arg0.objectIdentifierDependentDomain == orig(arg0.objectIdentifierDependentDomain)
arg0.debugCode == orig(arg0.debugCode)
arg1.objectInstances == orig(arg1.objectInstances)
arg1.hiddenObjectInstances == orig(arg1.hiddenObjectInstances)
arg1.hiddenObjectInstances[] == orig(arg1.hiddenObjectInstances[])
arg1.objectMap == orig(arg1.objectMap)
arg1.objectIndexByTrueClass == orig(arg1.objectIndexByTrueClass)
arg2.toString == orig(arg2.toString)
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
arg1.objectInstances has only one value
arg1.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg1.hiddenObjectInstances has only one value
arg1.hiddenObjectInstances[] == []
arg1.hiddenObjectInstances[].getClass().getName() == []
arg1.objectMap has only one value
arg1.objectIndexByTrueClass has only one value
arg2.toString one of { "block", "door", "room" }
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
size(arg1.objectInstances[]) one of { 3, 5, 6 }
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.firstLetterCapped(java.lang.String):::ENTER
arg0 != null
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.firstLetterCapped(java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.toString == orig(arg0.toString)
return != null
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.generateDomain():::ENTER
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.generateDomain():::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
this.maxX == orig(this.maxX)
this.maxY == orig(this.maxY)
this.includeDirectionAttribute == orig(this.includeDirectionAttribute)
this.includePullAction == orig(this.includePullAction)
this.includeWallPFs == orig(this.includeWallPFs)
return.objectClasses.getClass().getName() == return.attributes.getClass().getName()
return.objectClasses.getClass().getName() == return.propFunctions.getClass().getName()
return.objectClassMap.getClass().getName() == return.attributeMap.getClass().getName()
return.objectClassMap.getClass().getName() == return.propFunctionMap.getClass().getName()
return has only one value
return.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
return.objectClasses has only one value
return.objectClasses[] contains no nulls and has only one value, of length 4
return.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
return.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
return.objectClasses.getClass().getName() == java.util.ArrayList.class
return.objectClassMap has only one value
return.objectClassMap.getClass().getName() == java.util.HashMap.class
return.attributes has only one value
return.attributes[] contains no nulls and has only one value, of length 8
return.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
return.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
return.attributeMap has only one value
return.propFunctions has only one value
return.propFunctions[] contains no nulls and has only one value, of length 18
return.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
return.propFunctionMap has only one value
return.objectIdentifierDependentDomain == false
return.debugCode == 111
size(return.objectClasses[]) == 4
size(return.attributes[]) == 8
size(return.propFunctions[]) == 18
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.getClassicState(burlap.oomdp.core.Domain):::ENTER
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0 has only one value
arg0.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.getClassicState(burlap.oomdp.core.Domain):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectClasses == orig(arg0.objectClasses)
arg0.objectClasses[] == orig(arg0.objectClasses[])
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == return.objectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == return.hiddenObjectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == orig(arg0.objectClasses.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.attributes.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.propFunctions.getClass().getName())
arg0.objectClassMap == orig(arg0.objectClassMap)
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == return.objectMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == return.objectIndexByTrueClass.getClass().getName()
arg0.objectClassMap.getClass().getName() == orig(arg0.objectClassMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.attributeMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.propFunctionMap.getClass().getName())
arg0.attributes == orig(arg0.attributes)
arg0.attributes[] == orig(arg0.attributes[])
arg0.attributeMap == orig(arg0.attributeMap)
arg0.propFunctions == orig(arg0.propFunctions)
arg0.propFunctions[] == orig(arg0.propFunctions[])
arg0.propFunctionMap == orig(arg0.propFunctionMap)
arg0.objectIdentifierDependentDomain == orig(arg0.objectIdentifierDependentDomain)
arg0.debugCode == orig(arg0.debugCode)
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
return has only one value
return.objectInstances has only one value
return.objectInstances[] contains no nulls and has only one value, of length 7
return.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
return.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.hiddenObjectInstances has only one value
return.hiddenObjectInstances[] == []
return.hiddenObjectInstances[].getClass().getName() == []
return.objectMap has only one value
return.objectIndexByTrueClass has only one value
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
size(return.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.getCleanState(burlap.oomdp.core.Domain, int, int, int):::ENTER
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0 has only one value
arg0.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
arg1 == 3
arg2 == 2
arg3 == 1
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.getCleanState(burlap.oomdp.core.Domain, int, int, int):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectClasses == orig(arg0.objectClasses)
arg0.objectClasses[] == orig(arg0.objectClasses[])
arg0.objectClasses.getClass().getName() == arg0.attributes.getClass().getName()
arg0.objectClasses.getClass().getName() == arg0.propFunctions.getClass().getName()
arg0.objectClasses.getClass().getName() == return.objectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == return.hiddenObjectInstances.getClass().getName()
arg0.objectClasses.getClass().getName() == orig(arg0.objectClasses.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.attributes.getClass().getName())
arg0.objectClasses.getClass().getName() == orig(arg0.propFunctions.getClass().getName())
arg0.objectClassMap == orig(arg0.objectClassMap)
arg0.objectClassMap.getClass().getName() == arg0.attributeMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == arg0.propFunctionMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == return.objectMap.getClass().getName()
arg0.objectClassMap.getClass().getName() == return.objectIndexByTrueClass.getClass().getName()
arg0.objectClassMap.getClass().getName() == orig(arg0.objectClassMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.attributeMap.getClass().getName())
arg0.objectClassMap.getClass().getName() == orig(arg0.propFunctionMap.getClass().getName())
arg0.attributes == orig(arg0.attributes)
arg0.attributes[] == orig(arg0.attributes[])
arg0.attributeMap == orig(arg0.attributeMap)
arg0.propFunctions == orig(arg0.propFunctions)
arg0.propFunctions[] == orig(arg0.propFunctions[])
arg0.propFunctionMap == orig(arg0.propFunctionMap)
arg0.objectIdentifierDependentDomain == orig(arg0.objectIdentifierDependentDomain)
arg0.debugCode == orig(arg0.debugCode)
arg0.objectClasses has only one value
arg0.objectClasses[] contains no nulls and has only one value, of length 4
arg0.objectClasses[].getClass().getName() == [burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass, burlap.oomdp.core.ObjectClass]
arg0.objectClasses[].getClass().getName() elements == burlap.oomdp.core.ObjectClass.class
arg0.objectClasses.getClass().getName() == java.util.ArrayList.class
arg0.objectClassMap has only one value
arg0.objectClassMap.getClass().getName() == java.util.HashMap.class
arg0.attributes has only one value
arg0.attributes[] contains no nulls and has only one value, of length 8
arg0.attributes[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.attributes[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.attributeMap has only one value
arg0.propFunctions has only one value
arg0.propFunctions[] contains no nulls and has only one value, of length 18
arg0.propFunctions[].getClass().getName() == [domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFInRegion, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsColor, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape, domain.singleagent.sokoban2.Sokoban2Domain.PFIsShape]
arg0.propFunctionMap has only one value
arg0.objectIdentifierDependentDomain == false
arg0.debugCode == 111
return has only one value
return.objectInstances has only one value
return.objectInstances[] contains no nulls and has only one value, of length 7
return.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
return.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
return.hiddenObjectInstances has only one value
return.hiddenObjectInstances[] == []
return.hiddenObjectInstances[].getClass().getName() == []
return.objectMap has only one value
return.objectIndexByTrueClass has only one value
size(arg0.objectClasses[]) == 4
size(arg0.attributes[]) == 8
size(arg0.propFunctions[]) == 18
size(return.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::ENTER
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0 != null
arg0.obClass != null
arg0.obClass.name != null
arg0.obClass.name.toString one of { "door", "room" }
arg0.obClass.domain has only one value
arg0.obClass.domain != null
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex != null
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeMap != null
arg0.obClass.attributeList != null
arg0.obClass.attributeList[] elements != null
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
arg0.obClass.observableAttributeIndices != null
arg0.obClass.observableAttributeIndices[] elements != null
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
arg0.obClass.hidden == false
arg0.name != null
arg0.values != null
arg0.values[] elements != null
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
arg0.values.getClass().getName() == java.util.ArrayList.class
arg1 one of { 2, 6 }
arg2 one of { 2, 6 }
size(arg0.obClass.attributeList[]) one of { 4, 5 }
size(arg0.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(arg0.values[]) one of { 4, 5 }
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.obClass.domain.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.obClass.attributeIndex.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.values.getClass().getName()
arg0.obClass.domain.getClass().getName() != arg0.obClass.attributeIndex.getClass().getName()
arg0.obClass.domain.getClass().getName() != arg0.values.getClass().getName()
arg0.obClass.attributeIndex.getClass().getName() != arg0.values.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT391
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == arg0.obClass.name
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(arg0.obClass.name)
arg0.obClass has only one value
arg0.obClass.name.toString == "room"
arg0.obClass.attributeIndex has only one value
arg0.obClass.attributeMap has only one value
arg0.obClass.attributeList has only one value
arg0.obClass.attributeList[] contains no nulls and has only one value, of length 5
arg0.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.obClass.observableAttributeIndices has only one value
arg0.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 5
arg0.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.name.toString one of { "room0", "room2" }
arg0.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue]
return == true
orig(arg3) == false
size(arg0.obClass.attributeList[]) == 5
size(arg0.obClass.observableAttributeIndices[]) == 5
size(arg0.values[]) == 5
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT391;condition="return == true"
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT395
return == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT395;condition="not(return == true)"
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.obClass == orig(arg0.obClass)
arg0.obClass.name == orig(arg0.obClass.name)
arg0.obClass.name.toString == orig(arg0.obClass.name.toString)
arg0.obClass.domain == orig(arg0.obClass.domain)
arg0.obClass.domain.getClass().getName() == orig(arg0.obClass.domain.getClass().getName())
arg0.obClass.attributeIndex == orig(arg0.obClass.attributeIndex)
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeIndex.getClass().getName())
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeMap.getClass().getName())
arg0.obClass.attributeMap == orig(arg0.obClass.attributeMap)
arg0.obClass.attributeList == orig(arg0.obClass.attributeList)
arg0.obClass.attributeList[] == orig(arg0.obClass.attributeList[])
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices == orig(arg0.obClass.observableAttributeIndices)
arg0.obClass.observableAttributeIndices[] == orig(arg0.obClass.observableAttributeIndices[])
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.hidden == orig(arg0.obClass.hidden)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.values == orig(arg0.values)
arg0.values[] == orig(arg0.values[])
arg0.values.getClass().getName() == orig(arg0.obClass.attributeList.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.obClass.observableAttributeIndices.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.values.getClass().getName())
(return == false)  ==>  (arg0.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] })
(return == false)  ==>  (arg0.obClass.name.toString one of { "door", "room" })
(return == false)  ==>  (arg0.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] })
(return == false)  ==>  (arg0.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] })
(return == false)  ==>  (size(arg0.obClass.attributeList[]) one of { 4, 5 })
(return == false)  ==>  (size(arg0.obClass.observableAttributeIndices[]) one of { 4, 5 })
(return == false)  ==>  (size(arg0.values[]) one of { 4, 5 })
(return == true)  ==>  (arg0.name.toString one of { "room0", "room2" })
(return == true)  ==>  (arg0.obClass has only one value)
(return == true)  ==>  (arg0.obClass.attributeIndex has only one value)
(return == true)  ==>  (arg0.obClass.attributeList has only one value)
(return == true)  ==>  (arg0.obClass.attributeList[] contains no nulls and has only one value, of length 5)
(return == true)  ==>  (arg0.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute])
(return == true)  ==>  (arg0.obClass.attributeMap has only one value)
(return == true)  ==>  (arg0.obClass.name has only one value)
(return == true)  ==>  (arg0.obClass.name.toString == "room")
(return == true)  ==>  (arg0.obClass.observableAttributeIndices has only one value)
(return == true)  ==>  (arg0.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 5)
(return == true)  ==>  (arg0.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer])
(return == true)  ==>  (arg0.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue])
(return == true)  ==>  (domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == arg0.obClass.name)
(return == true)  ==>  (orig(arg3) == false)
(return == true)  ==>  (size(arg0.obClass.attributeList[]) == 5)
(return == true)  ==>  (size(arg0.obClass.observableAttributeIndices[]) == 5)
(return == true)  ==>  (size(arg0.values[]) == 5)
arg0.obClass != null
arg0.obClass.name != null
arg0.obClass.name.toString one of { "door", "room" }
arg0.obClass.domain has only one value
arg0.obClass.domain != null
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex != null
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeMap != null
arg0.obClass.attributeList != null
arg0.obClass.attributeList[] elements != null
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
arg0.obClass.observableAttributeIndices != null
arg0.obClass.observableAttributeIndices[] elements != null
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
arg0.obClass.hidden == false
arg0.name != null
arg0.values != null
arg0.values[] elements != null
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
arg0.values.getClass().getName() == java.util.ArrayList.class
size(arg0.obClass.attributeList[]) one of { 4, 5 }
size(arg0.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(arg0.values[]) one of { 4, 5 }
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.obClass.domain.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.obClass.attributeIndex.getClass().getName()
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() != arg0.values.getClass().getName()
arg0.obClass.domain.getClass().getName() != arg0.obClass.attributeIndex.getClass().getName()
arg0.obClass.domain.getClass().getName() != arg0.values.getClass().getName()
arg0.obClass.attributeIndex.getClass().getName() != arg0.values.getClass().getName()
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT;condition="return == true"
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == arg0.obClass.name
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(arg0.obClass.name)
arg0.obClass has only one value
arg0.obClass.name.toString == "room"
arg0.obClass.attributeIndex has only one value
arg0.obClass.attributeMap has only one value
arg0.obClass.attributeList has only one value
arg0.obClass.attributeList[] contains no nulls and has only one value, of length 5
arg0.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.obClass.observableAttributeIndices has only one value
arg0.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 5
arg0.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.name.toString one of { "room0", "room2" }
arg0.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue]
return == true
orig(arg3) == false
size(arg0.obClass.attributeList[]) == 5
size(arg0.obClass.observableAttributeIndices[]) == 5
size(arg0.values[]) == 5
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.regionContainsPoint(burlap.oomdp.core.ObjectInstance, int, int, boolean):::EXIT;condition="not(return == true)"
return == false
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setAgent(burlap.oomdp.core.State, int, int):::ENTER
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg1 == 6
arg2 == 6
size(arg0.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setAgent(burlap.oomdp.core.State, int, int):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
size(arg0.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setBlock(burlap.oomdp.core.ObjectInstance, int, int, java.lang.String, java.lang.String):::ENTER
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == arg0.obClass.name
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0 has only one value
arg0.obClass has only one value
arg0.obClass.name.toString == "block"
arg0.obClass.domain has only one value
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex has only one value
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeMap has only one value
arg0.obClass.attributeList has only one value
arg0.obClass.attributeList[] contains no nulls and has only one value, of length 4
arg0.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.observableAttributeIndices has only one value
arg0.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 4
arg0.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.hidden == false
arg0.name has only one value
arg0.name.toString == "block0"
arg0.values has only one value
arg0.values[] contains no nulls and has only one value, of length 4
arg0.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue]
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values.getClass().getName() == java.util.ArrayList.class
arg1 == 2
arg2 == 2
arg3 has only one value
arg3.toString == "basket"
arg4 has only one value
arg4.toString == "red"
size(arg0.obClass.attributeList[]) == 4
size(arg0.obClass.observableAttributeIndices[]) == 4
size(arg0.values[]) == 4
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setBlock(burlap.oomdp.core.ObjectInstance, int, int, java.lang.String, java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == arg0.obClass.name
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(arg0.obClass.name)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.obClass == orig(arg0.obClass)
arg0.obClass.name.toString == orig(arg0.obClass.name.toString)
arg0.obClass.domain == orig(arg0.obClass.domain)
arg0.obClass.domain.getClass().getName() == orig(arg0.obClass.domain.getClass().getName())
arg0.obClass.attributeIndex == orig(arg0.obClass.attributeIndex)
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeIndex.getClass().getName())
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeMap.getClass().getName())
arg0.obClass.attributeMap == orig(arg0.obClass.attributeMap)
arg0.obClass.attributeList == orig(arg0.obClass.attributeList)
arg0.obClass.attributeList[] == orig(arg0.obClass.attributeList[])
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices == orig(arg0.obClass.observableAttributeIndices)
arg0.obClass.observableAttributeIndices[] == orig(arg0.obClass.observableAttributeIndices[])
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.hidden == orig(arg0.obClass.hidden)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.values == orig(arg0.values)
arg0.values.getClass().getName() == orig(arg0.obClass.attributeList.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.obClass.observableAttributeIndices.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.values.getClass().getName())
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
size(arg0.values[]) == orig(size(arg0.values[]))
arg0.obClass has only one value
arg0.obClass.name.toString == "block"
arg0.obClass.domain has only one value
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex has only one value
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeMap has only one value
arg0.obClass.attributeList has only one value
arg0.obClass.attributeList[] contains no nulls and has only one value, of length 4
arg0.obClass.attributeList[].getClass().getName() == [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute]
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.observableAttributeIndices has only one value
arg0.obClass.observableAttributeIndices[] contains no nulls and has only one value, of length 4
arg0.obClass.observableAttributeIndices[].getClass().getName() == [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer]
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.hidden == false
arg0.name has only one value
arg0.name.toString == "block0"
arg0.values has only one value
arg0.values[] contains no nulls and has only one value, of length 4
arg0.values[].getClass().getName() == [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue]
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values.getClass().getName() == java.util.ArrayList.class
arg3.toString == "basket"
arg4.toString == "red"
size(arg0.obClass.attributeList[]) == 4
size(arg0.obClass.observableAttributeIndices[]) == 4
size(arg0.values[]) == 4
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setBlock(burlap.oomdp.core.State, int, int, int, java.lang.String, java.lang.String):::ENTER
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg1 == 0
arg2 == 2
arg3 == 2
arg4 has only one value
arg4.toString == "basket"
arg5 has only one value
arg5.toString == "red"
size(arg0.objectInstances[]) == 7
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[arg1] has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[arg1] has only one value
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setBlock(burlap.oomdp.core.State, int, int, int, java.lang.String, java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg4.toString == orig(arg4.toString)
arg5.toString == orig(arg5.toString)
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]))-1
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg4.toString == "basket"
arg5.toString == "red"
size(arg0.objectInstances[]) == 7
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[orig(arg1)] has only one value
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[orig(arg1)] has only one value
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setDoor(burlap.oomdp.core.State, int, int, int, int, int):::ENTER
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg1 one of { 0, 1 }
arg2 == 4
arg3 one of { 2, 6 }
arg4 == 4
arg5 one of { 2, 6 }
size(arg0.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setDoor(burlap.oomdp.core.State, int, int, int, int, int):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]))-1
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
size(arg0.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setRegion(burlap.oomdp.core.ObjectInstance, int, int, int, int):::ENTER
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.name.toString one of { "door", "room" }
arg0.obClass.domain has only one value
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
arg0.obClass.hidden == false
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
arg0.values.getClass().getName() == java.util.ArrayList.class
arg1 one of { 4, 8 }
arg3 one of { 0, 4 }
size(arg0.obClass.attributeList[]) one of { 4, 5 }
size(arg0.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(arg0.values[]) one of { 4, 5 }
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setRegion(burlap.oomdp.core.ObjectInstance, int, int, int, int):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.obClass == orig(arg0.obClass)
arg0.obClass.name == orig(arg0.obClass.name)
arg0.obClass.name.toString == orig(arg0.obClass.name.toString)
arg0.obClass.domain == orig(arg0.obClass.domain)
arg0.obClass.domain.getClass().getName() == orig(arg0.obClass.domain.getClass().getName())
arg0.obClass.attributeIndex == orig(arg0.obClass.attributeIndex)
arg0.obClass.attributeIndex.getClass().getName() == arg0.obClass.attributeMap.getClass().getName()
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeIndex.getClass().getName())
arg0.obClass.attributeIndex.getClass().getName() == orig(arg0.obClass.attributeMap.getClass().getName())
arg0.obClass.attributeMap == orig(arg0.obClass.attributeMap)
arg0.obClass.attributeList == orig(arg0.obClass.attributeList)
arg0.obClass.attributeList[] == orig(arg0.obClass.attributeList[])
arg0.obClass.attributeList.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.observableAttributeIndices == orig(arg0.obClass.observableAttributeIndices)
arg0.obClass.observableAttributeIndices[] == orig(arg0.obClass.observableAttributeIndices[])
arg0.obClass.observableAttributeIndices.getClass().getName() == arg0.values.getClass().getName()
arg0.obClass.hidden == orig(arg0.obClass.hidden)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.values == orig(arg0.values)
arg0.values.getClass().getName() == orig(arg0.obClass.attributeList.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.obClass.observableAttributeIndices.getClass().getName())
arg0.values.getClass().getName() == orig(arg0.values.getClass().getName())
size(arg0.values[]) == orig(size(arg0.values[]))
arg0.obClass.name.toString one of { "door", "room" }
arg0.obClass.domain has only one value
arg0.obClass.domain.getClass().getName() == burlap.oomdp.singleagent.SADomain.class
arg0.obClass.attributeIndex.getClass().getName() == java.util.HashMap.class
arg0.obClass.attributeList[].getClass().getName() elements == burlap.oomdp.core.Attribute.class
arg0.obClass.attributeList[].getClass().getName() one of { [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute], [burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute, burlap.oomdp.core.Attribute] }
arg0.obClass.observableAttributeIndices[].getClass().getName() elements == java.lang.Integer.class
arg0.obClass.observableAttributeIndices[].getClass().getName() one of { [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer], [java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer] }
arg0.obClass.hidden == false
arg0.values[].getClass().getName() elements == burlap.oomdp.core.values.DiscreteValue.class
arg0.values[].getClass().getName() one of { [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue], [burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue, burlap.oomdp.core.values.DiscreteValue] }
arg0.values.getClass().getName() == java.util.ArrayList.class
size(arg0.obClass.attributeList[]) one of { 4, 5 }
size(arg0.obClass.observableAttributeIndices[]) one of { 4, 5 }
size(arg0.values[]) one of { 4, 5 }
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setRoom(burlap.oomdp.core.State, int, int, int, int, int, java.lang.String):::ENTER
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
arg0 has only one value
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg1 one of { 0, 1, 2 }
arg2 one of { 4, 8 }
arg3 one of { 0, 4 }
arg4 one of { 0, 4 }
arg5 one of { 4, 8 }
arg6.toString one of { "blue", "green", "red" }
size(arg0.objectInstances[]) == 7
===========================================================================
domain.singleagent.sokoban2.Sokoban2Domain.setRoom(burlap.oomdp.core.State, int, int, int, int, int, java.lang.String):::EXIT
domain.singleagent.sokoban2.Sokoban2Domain.ATTX == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX)
domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTX.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY)
domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTY.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTDIR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP)
domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTTOP.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTLEFT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM)
domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTBOTTOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT)
domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTRIGHT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR)
domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTCOLOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE)
domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ATTSHAPE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSAGENT.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSBLOCK.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.CLASSDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL)
domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.ACTIONPULL.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINROOM.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFAGENTINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR)
domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBLOCKINDOOR.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLNORTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLSOUTH.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLEAST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST)
domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFWALLWEST.toString)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS)
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS.getClass().getName() == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS.getClass().getName())
domain.singleagent.sokoban2.Sokoban2Domain.COLORS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES)
domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS)
domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[] == orig(domain.singleagent.sokoban2.Sokoban2Domain.DIRECTIONS[])
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFRCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE)
domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBCOLORBASE.toString)
domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString == orig(domain.singleagent.sokoban2.Sokoban2Domain.PFBSHAPEBASE.toString)
arg0.objectInstances == orig(arg0.objectInstances)
arg0.objectInstances[] == orig(arg0.objectInstances[])
arg0.objectInstances.getClass().getName() == arg0.hiddenObjectInstances.getClass().getName()
arg0.objectInstances.getClass().getName() == orig(arg0.objectInstances.getClass().getName())
arg0.objectInstances.getClass().getName() == orig(arg0.hiddenObjectInstances.getClass().getName())
arg0.hiddenObjectInstances == orig(arg0.hiddenObjectInstances)
arg0.hiddenObjectInstances[] == orig(arg0.hiddenObjectInstances[])
arg0.objectMap == orig(arg0.objectMap)
arg0.objectMap.getClass().getName() == arg0.objectIndexByTrueClass.getClass().getName()
arg0.objectMap.getClass().getName() == orig(arg0.objectMap.getClass().getName())
arg0.objectMap.getClass().getName() == orig(arg0.objectIndexByTrueClass.getClass().getName())
arg0.objectIndexByTrueClass == orig(arg0.objectIndexByTrueClass)
arg6.toString == orig(arg6.toString)
size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[])-1 == size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[])
size(domain.singleagent.sokoban2.Sokoban2Domain.SHAPES[]) == orig(size(domain.singleagent.sokoban2.Sokoban2Domain.COLORS[]))-1
arg0.objectInstances has only one value
arg0.objectInstances[] contains no nulls and has only one value, of length 7
arg0.objectInstances[].getClass().getName() == [burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance, burlap.oomdp.core.ObjectInstance]
arg0.objectInstances[].getClass().getName() elements == burlap.oomdp.core.ObjectInstance.class
arg0.objectInstances.getClass().getName() == java.util.ArrayList.class
arg0.hiddenObjectInstances has only one value
arg0.hiddenObjectInstances[] == []
arg0.hiddenObjectInstances[].getClass().getName() == []
arg0.objectMap has only one value
arg0.objectMap.getClass().getName() == java.util.HashMap.class
arg0.objectIndexByTrueClass has only one value
arg6.toString one of { "blue", "green", "red" }
size(arg0.objectInstances[]) == 7
===========================================================================
generativemodel.GMModule:::OBJECT
this.owner.modules.getClass().getName() == this.owner.inputVariables.getClass().getName()
this.owner.modules.getClass().getName() == this.rVariables.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.variableOwnerResolver.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.queryCache.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.owner.logQueryCache.getClass().getName()
this.owner.moduleMap.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariables.getClass().getName() == this.externalDependencyList.getClass().getName()
this has only one value
this.getClass().getName() == commands.model3.TaskModule.class
this.name has only one value
this.name != null
this.name.toString == "task"
this.owner.modules has only one value
this.owner.modules[] contains no nulls and has only one value, of length 1
this.owner.modules[] elements has only one value
this.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
this.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
this.owner.modules.getClass().getName() == java.util.ArrayList.class
this.owner.moduleMap has only one value
this.owner.moduleMap.getClass().getName() == java.util.HashMap.class
this.owner.inputVariables has only one value
this.owner.inputVariables[] == []
this.owner.inputVariables[].getClass().getName() == []
this.owner.variableOwnerResolver has only one value
this.owner.queryCache has only one value
this.owner.logQueryCache has only one value
this.rVariables[] elements != null
this.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.rVariables.getClass().getName() == java.util.ArrayList.class
this.rVariableMap.getClass().getName() == java.util.HashMap.class
this.externalDependencyList[] == []
this.externalDependencyList[].getClass().getName() == []
size(this.owner.modules[]) == 1
this.getClass().getName() in this.owner.modules[].getClass().getName()
this.getClass().getName() != this.rVariables.getClass().getName()
this.getClass().getName() != this.rVariableMap.getClass().getName()
this.rVariables.getClass().getName() != this.rVariableMap.getClass().getName()
===========================================================================
generativemodel.GMModule.GMModule(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "task"
===========================================================================
generativemodel.GMModule.GMModule(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.owner == null
this.rVariables has only one value
this.rVariables[] == []
this.rVariables[].getClass().getName() == []
this.rVariableMap has only one value
this.externalDependencyList has only one value
arg0.toString == "task"
===========================================================================
generativemodel.GMModule.addVariable(generativemodel.RVariable):::ENTER
this == arg0.moduleOwner
this.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.name == arg0.moduleOwner.name
this.rVariables == arg0.moduleOwner.rVariables
this.rVariables.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.rVariables.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
this.rVariableMap == arg0.moduleOwner.rVariableMap
this.rVariableMap.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.owner == null
this.rVariables has only one value
this.rVariableMap has only one value
this.externalDependencyList has only one value
arg0.moduleOwner has only one value
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner == null
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[] == []
arg0.dependencies[].getClass().getName() == []
arg0.isInput == false
===========================================================================
generativemodel.GMModule.addVariable(generativemodel.RVariable):::EXIT
this.name == arg0.moduleOwner.name
this.name == orig(this.name)
this.name == orig(arg0.moduleOwner.name)
this.name.toString == orig(this.name.toString)
this.owner == orig(this.owner)
this.rVariables == arg0.moduleOwner.rVariables
this.rVariables == orig(this.rVariables)
this.rVariables == orig(arg0.moduleOwner.rVariables)
this.rVariables.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.rVariables.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
this.rVariables.getClass().getName() == orig(this.rVariables.getClass().getName())
this.rVariables.getClass().getName() == orig(this.externalDependencyList.getClass().getName())
this.rVariables.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
this.rVariables.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
this.rVariables.getClass().getName() == orig(arg0.dependencies.getClass().getName())
this.rVariableMap == arg0.moduleOwner.rVariableMap
this.rVariableMap == orig(this.rVariableMap)
this.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
this.rVariableMap.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.rVariableMap.getClass().getName() == orig(this.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.parameters.getClass().getName())
this.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.externalDependencyList == orig(this.externalDependencyList)
this.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
this.externalDependencyList[] == orig(this.externalDependencyList[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner == orig(this)
arg0.moduleOwner == orig(arg0.moduleOwner)
arg0.moduleOwner.getClass().getName() == orig(this.getClass().getName())
arg0.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.owner == orig(arg0.moduleOwner.owner)
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.parameters == orig(arg0.parameters)
arg0.isInput == orig(arg0.isInput)
size(this.rVariables[])-1 == orig(size(this.rVariables[]))
size(arg0.moduleOwner.rVariables[])-1 == orig(size(arg0.moduleOwner.rVariables[]))
this.owner == null
this.rVariables has only one value
this.rVariableMap has only one value
this.externalDependencyList has only one value
arg0.moduleOwner has only one value
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner == null
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[] == []
arg0.dependencies[].getClass().getName() == []
arg0.isInput == false
===========================================================================
generativemodel.GMModule.initDataStructures():::ENTER
this.owner == null
this.rVariables == null
this.rVariableMap == null
this.externalDependencyList == null
===========================================================================
generativemodel.GMModule.initDataStructures():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.owner == orig(this.owner)
this.owner == null
this.rVariables has only one value
this.rVariables[] == []
this.rVariables[].getClass().getName() == []
this.rVariableMap has only one value
this.externalDependencyList has only one value
===========================================================================
generativemodel.GMModule.setOwner(generativemodel.GenerativeModel):::ENTER
this.rVariables.getClass().getName() == arg0.modules.getClass().getName()
this.rVariables.getClass().getName() == arg0.inputVariables.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.moduleMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.variableOwnerResolver.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.queryCache.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.logQueryCache.getClass().getName()
this.owner == null
this.rVariables has only one value
this.rVariables[] contains no nulls and has only one value, of length 4
this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.rVariableMap has only one value
this.externalDependencyList has only one value
arg0 has only one value
arg0.modules has only one value
arg0.modules[] contains no nulls and has only one value, of length 1
arg0.modules[] elements has only one value
arg0.modules[].getClass().getName() == [commands.model3.TaskModule]
arg0.modules[].getClass().getName() elements == commands.model3.TaskModule.class
arg0.moduleMap has only one value
arg0.inputVariables has only one value
arg0.inputVariables[] == []
arg0.inputVariables[].getClass().getName() == []
arg0.variableOwnerResolver has only one value
arg0.queryCache has only one value
arg0.logQueryCache has only one value
size(this.rVariables[]) == 4
size(arg0.modules[]) == 1
this.getClass().getName() in arg0.modules[].getClass().getName()
===========================================================================
generativemodel.GMModule.setOwner(generativemodel.GenerativeModel):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.owner == orig(arg0)
this.owner.modules == arg0.modules
this.owner.moduleMap == arg0.moduleMap
this.owner.inputVariables == arg0.inputVariables
this.owner.inputVariables.getClass().getName() == this.rVariables.getClass().getName()
this.owner.variableOwnerResolver == arg0.variableOwnerResolver
this.owner.variableOwnerResolver.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.queryCache == arg0.queryCache
this.owner.queryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.owner.logQueryCache == arg0.logQueryCache
this.owner.logQueryCache.getClass().getName() == this.rVariableMap.getClass().getName()
this.rVariables == orig(this.rVariables)
this.rVariables[] == orig(this.rVariables[])
this.rVariables.getClass().getName() == arg0.modules.getClass().getName()
this.rVariables.getClass().getName() == arg0.inputVariables.getClass().getName()
this.rVariables.getClass().getName() == orig(this.rVariables.getClass().getName())
this.rVariables.getClass().getName() == orig(this.externalDependencyList.getClass().getName())
this.rVariables.getClass().getName() == orig(arg0.modules.getClass().getName())
this.rVariables.getClass().getName() == orig(arg0.inputVariables.getClass().getName())
this.rVariableMap == orig(this.rVariableMap)
this.rVariableMap.getClass().getName() == arg0.moduleMap.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.variableOwnerResolver.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.queryCache.getClass().getName()
this.rVariableMap.getClass().getName() == arg0.logQueryCache.getClass().getName()
this.rVariableMap.getClass().getName() == orig(this.rVariableMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.moduleMap.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.variableOwnerResolver.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.queryCache.getClass().getName())
this.rVariableMap.getClass().getName() == orig(arg0.logQueryCache.getClass().getName())
this.externalDependencyList == orig(this.externalDependencyList)
this.externalDependencyList[] == orig(this.externalDependencyList[])
arg0.modules == orig(arg0.modules)
arg0.modules[] == orig(arg0.modules[])
arg0.moduleMap == orig(arg0.moduleMap)
arg0.inputVariables == orig(arg0.inputVariables)
arg0.inputVariables[] == orig(arg0.inputVariables[])
arg0.variableOwnerResolver == orig(arg0.variableOwnerResolver)
arg0.queryCache == orig(arg0.queryCache)
arg0.logQueryCache == orig(arg0.logQueryCache)
this.owner has only one value
this.rVariables has only one value
this.rVariables[] contains no nulls and has only one value, of length 4
this.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.rVariableMap has only one value
this.externalDependencyList has only one value
arg0.modules has only one value
arg0.modules[] contains no nulls and has only one value, of length 1
arg0.modules[] elements has only one value
arg0.modules[].getClass().getName() == [commands.model3.TaskModule]
arg0.modules[].getClass().getName() elements == commands.model3.TaskModule.class
arg0.moduleMap has only one value
arg0.inputVariables has only one value
arg0.inputVariables[] == []
arg0.inputVariables[].getClass().getName() == []
arg0.variableOwnerResolver has only one value
arg0.queryCache has only one value
arg0.logQueryCache has only one value
size(this.rVariables[]) == 4
size(arg0.modules[]) == 1
orig(this.getClass().getName()) in this.owner.modules[].getClass().getName()
orig(this.getClass().getName()) in arg0.modules[].getClass().getName()
===========================================================================
generativemodel.GMQuery:::OBJECT
this.queryValues.getClass().getName() == this.condValues.getClass().getName()
this.queryValues != null
this.queryValues.getClass().getName() == java.util.HashSet.class
this.condValues != null
this.hashValue == 0
this.needsToRecomputeHash == true
===========================================================================
generativemodel.GMQuery.GMQuery():::EXIT
===========================================================================
generativemodel.GMQuery.addCondition(generativemodel.RVariableValue):::ENTER
arg0 != null
arg0.owner != null
arg0.owner.name != null
arg0.owner.name.toString one of { "groundedRF", "liftedRF", "state" }
arg0.owner.moduleOwner has only one value
arg0.owner.moduleOwner != null
arg0.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.owner.dependencies != null
arg0.owner.dependencies[] elements != null
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.owner.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.owner.parameters != null
arg0.owner.parameters.getClass().getName() == java.util.HashMap.class
arg0.owner.isInput == false
size(arg0.owner.dependencies[]) one of { 0, 1, 2 }
this.queryValues.getClass().getName() != arg0.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.dependencies.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
arg0.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.dependencies.getClass().getName() != arg0.owner.parameters.getClass().getName()
===========================================================================
generativemodel.GMQuery.addCondition(generativemodel.RVariableValue):::EXIT
this.queryValues == orig(this.queryValues)
this.queryValues.getClass().getName() == orig(this.queryValues.getClass().getName())
this.queryValues.getClass().getName() == orig(this.condValues.getClass().getName())
this.condValues == orig(this.condValues)
this.hashValue == orig(this.hashValue)
this.needsToRecomputeHash == orig(this.needsToRecomputeHash)
arg0.owner == orig(arg0.owner)
arg0.owner.name == orig(arg0.owner.name)
arg0.owner.name.toString == orig(arg0.owner.name.toString)
arg0.owner.moduleOwner == orig(arg0.owner.moduleOwner)
arg0.owner.moduleOwner.getClass().getName() == orig(arg0.owner.moduleOwner.getClass().getName())
arg0.owner.dependencies == orig(arg0.owner.dependencies)
arg0.owner.dependencies[] == orig(arg0.owner.dependencies[])
arg0.owner.dependencies.getClass().getName() == orig(arg0.owner.dependencies.getClass().getName())
arg0.owner.parameters == orig(arg0.owner.parameters)
arg0.owner.parameters.getClass().getName() == orig(arg0.owner.parameters.getClass().getName())
arg0.owner.isInput == orig(arg0.owner.isInput)
arg0.owner != null
arg0.owner.name != null
arg0.owner.name.toString one of { "groundedRF", "liftedRF", "state" }
arg0.owner.moduleOwner has only one value
arg0.owner.moduleOwner != null
arg0.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.owner.dependencies != null
arg0.owner.dependencies[] elements != null
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.owner.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.owner.parameters != null
arg0.owner.parameters.getClass().getName() == java.util.HashMap.class
arg0.owner.isInput == false
size(arg0.owner.dependencies[]) one of { 0, 1, 2 }
this.queryValues.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.dependencies.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.parameters.getClass().getName()
this.queryValues.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.dependencies.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.dependencies.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.parameters.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
generativemodel.GMQuery.addQuery(generativemodel.RVariableValue):::ENTER
arg0 != null
arg0.owner != null
arg0.owner.name != null
arg0.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
arg0.owner.moduleOwner has only one value
arg0.owner.moduleOwner != null
arg0.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.owner.dependencies != null
arg0.owner.dependencies[] elements != null
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.owner.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.owner.parameters != null
arg0.owner.parameters.getClass().getName() == java.util.HashMap.class
arg0.owner.isInput == false
size(arg0.owner.dependencies[]) one of { 1, 2, 3 }
this.queryValues.getClass().getName() != arg0.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.dependencies.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
arg0.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.dependencies.getClass().getName() != arg0.owner.parameters.getClass().getName()
===========================================================================
generativemodel.GMQuery.addQuery(generativemodel.RVariableValue):::EXIT
this.queryValues == orig(this.queryValues)
this.queryValues.getClass().getName() == orig(this.queryValues.getClass().getName())
this.queryValues.getClass().getName() == orig(this.condValues.getClass().getName())
this.condValues == orig(this.condValues)
this.hashValue == orig(this.hashValue)
this.needsToRecomputeHash == orig(this.needsToRecomputeHash)
arg0.owner == orig(arg0.owner)
arg0.owner.name == orig(arg0.owner.name)
arg0.owner.name.toString == orig(arg0.owner.name.toString)
arg0.owner.moduleOwner == orig(arg0.owner.moduleOwner)
arg0.owner.moduleOwner.getClass().getName() == orig(arg0.owner.moduleOwner.getClass().getName())
arg0.owner.dependencies == orig(arg0.owner.dependencies)
arg0.owner.dependencies[] == orig(arg0.owner.dependencies[])
arg0.owner.dependencies.getClass().getName() == orig(arg0.owner.dependencies.getClass().getName())
arg0.owner.parameters == orig(arg0.owner.parameters)
arg0.owner.parameters.getClass().getName() == orig(arg0.owner.parameters.getClass().getName())
arg0.owner.isInput == orig(arg0.owner.isInput)
arg0.owner != null
arg0.owner.name != null
arg0.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
arg0.owner.moduleOwner has only one value
arg0.owner.moduleOwner != null
arg0.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.owner.dependencies != null
arg0.owner.dependencies[] elements != null
arg0.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.owner.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.owner.parameters != null
arg0.owner.parameters.getClass().getName() == java.util.HashMap.class
arg0.owner.isInput == false
size(arg0.owner.dependencies[]) one of { 1, 2, 3 }
this.queryValues.getClass().getName() != arg0.owner.moduleOwner.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.dependencies.getClass().getName()
this.queryValues.getClass().getName() != arg0.owner.parameters.getClass().getName()
this.queryValues.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.dependencies.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.moduleOwner.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.dependencies.getClass().getName() != arg0.owner.parameters.getClass().getName()
arg0.owner.dependencies.getClass().getName() != orig(arg0.getClass().getName())
arg0.owner.parameters.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
generativemodel.GMQuery.getSingleQueryVar():::ENTER
===========================================================================
generativemodel.GMQuery.getSingleQueryVar():::EXIT
this.queryValues == orig(this.queryValues)
this.queryValues.getClass().getName() == orig(this.queryValues.getClass().getName())
this.queryValues.getClass().getName() == orig(this.condValues.getClass().getName())
this.condValues == orig(this.condValues)
this.hashValue == orig(this.hashValue)
this.needsToRecomputeHash == orig(this.needsToRecomputeHash)
return != null
return.owner != null
return.owner.name != null
return.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
return.owner.moduleOwner has only one value
return.owner.moduleOwner != null
return.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
return.owner.dependencies != null
return.owner.dependencies[] elements != null
return.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
return.owner.dependencies.getClass().getName() == java.util.ArrayList.class
return.owner.parameters != null
return.owner.parameters.getClass().getName() == java.util.HashMap.class
return.owner.isInput == false
size(return.owner.dependencies[]) one of { 1, 2, 3 }
this.queryValues.getClass().getName() != return.getClass().getName()
this.queryValues.getClass().getName() != return.owner.moduleOwner.getClass().getName()
this.queryValues.getClass().getName() != return.owner.dependencies.getClass().getName()
this.queryValues.getClass().getName() != return.owner.parameters.getClass().getName()
return.getClass().getName() != return.owner.moduleOwner.getClass().getName()
return.getClass().getName() != return.owner.dependencies.getClass().getName()
return.getClass().getName() != return.owner.parameters.getClass().getName()
return.owner.moduleOwner.getClass().getName() != return.owner.dependencies.getClass().getName()
return.owner.moduleOwner.getClass().getName() != return.owner.parameters.getClass().getName()
return.owner.dependencies.getClass().getName() != return.owner.parameters.getClass().getName()
===========================================================================
generativemodel.GMQueryResult:::OBJECT
this.queryValues.getClass().getName() == this.condValues.getClass().getName()
this.queryValues != null
this.queryValues.getClass().getName() == java.util.HashSet.class
this.condValues != null
this.hashValue == 0
this.needsToRecomputeHash == true
===========================================================================
generativemodel.GMQueryResult.GMQueryResult():::EXIT
this.probability == 0.0
===========================================================================
generativemodel.GMQueryResult.GMQueryResult(double):::ENTER
===========================================================================
generativemodel.GMQueryResult.GMQueryResult(double):::EXIT
this.probability == orig(arg0)
===========================================================================
generativemodel.GenerativeModel:::OBJECT
this.modules.getClass().getName() == this.inputVariables.getClass().getName()
this.moduleMap.getClass().getName() == this.variableOwnerResolver.getClass().getName()
this.moduleMap.getClass().getName() == this.queryCache.getClass().getName()
this.moduleMap.getClass().getName() == this.logQueryCache.getClass().getName()
this has only one value
this.modules has only one value
this.modules != null
this.modules[] elements has only one value
this.modules[] elements != null
this.modules[].getClass().getName() elements == commands.model3.TaskModule.class
this.modules[].getClass().getName() one of { [], [commands.model3.TaskModule] }
this.modules.getClass().getName() == java.util.ArrayList.class
this.moduleMap has only one value
this.moduleMap != null
this.moduleMap.getClass().getName() == java.util.HashMap.class
this.inputVariables has only one value
this.inputVariables != null
this.inputVariables[] == []
this.inputVariables[].getClass().getName() == []
this.variableOwnerResolver has only one value
this.variableOwnerResolver != null
this.queryCache has only one value
this.queryCache != null
this.logQueryCache has only one value
this.logQueryCache != null
size(this.modules[]) one of { 0, 1 }
this.modules.getClass().getName() != this.moduleMap.getClass().getName()
===========================================================================
generativemodel.GenerativeModel.GenerativeModel():::EXIT
this.modules[] == []
this.modules[].getClass().getName() == []
===========================================================================
generativemodel.GenerativeModel.addGMModule(generativemodel.GMModule):::ENTER
this.modules.getClass().getName() == arg0.rVariables.getClass().getName()
this.modules.getClass().getName() == arg0.externalDependencyList.getClass().getName()
this.moduleMap.getClass().getName() == arg0.rVariableMap.getClass().getName()
this.modules[] == []
this.modules[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == commands.model3.TaskModule.class
arg0.name has only one value
arg0.name.toString == "task"
arg0.owner == null
arg0.rVariables has only one value
arg0.rVariables[] contains no nulls and has only one value, of length 4
arg0.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.rVariableMap has only one value
arg0.externalDependencyList has only one value
arg0.externalDependencyList[] == []
arg0.externalDependencyList[].getClass().getName() == []
size(arg0.rVariables[]) == 4
===========================================================================
generativemodel.GenerativeModel.addGMModule(generativemodel.GMModule):::EXIT64
===========================================================================
generativemodel.GenerativeModel.addGMModule(generativemodel.GMModule):::EXIT
this.modules == arg0.owner.modules
this.modules == orig(this.modules)
this.modules.getClass().getName() == arg0.owner.modules.getClass().getName()
this.modules.getClass().getName() == arg0.owner.inputVariables.getClass().getName()
this.modules.getClass().getName() == arg0.rVariables.getClass().getName()
this.modules.getClass().getName() == arg0.externalDependencyList.getClass().getName()
this.modules.getClass().getName() == orig(this.modules.getClass().getName())
this.modules.getClass().getName() == orig(this.inputVariables.getClass().getName())
this.modules.getClass().getName() == orig(arg0.rVariables.getClass().getName())
this.modules.getClass().getName() == orig(arg0.externalDependencyList.getClass().getName())
this.moduleMap == arg0.owner.moduleMap
this.moduleMap == orig(this.moduleMap)
this.moduleMap.getClass().getName() == arg0.owner.moduleMap.getClass().getName()
this.moduleMap.getClass().getName() == arg0.owner.variableOwnerResolver.getClass().getName()
this.moduleMap.getClass().getName() == arg0.owner.queryCache.getClass().getName()
this.moduleMap.getClass().getName() == arg0.owner.logQueryCache.getClass().getName()
this.moduleMap.getClass().getName() == arg0.rVariableMap.getClass().getName()
this.moduleMap.getClass().getName() == orig(this.moduleMap.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.variableOwnerResolver.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.queryCache.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.logQueryCache.getClass().getName())
this.moduleMap.getClass().getName() == orig(arg0.rVariableMap.getClass().getName())
this.inputVariables == arg0.owner.inputVariables
this.inputVariables == orig(this.inputVariables)
this.inputVariables[] == orig(this.inputVariables[])
this.variableOwnerResolver == arg0.owner.variableOwnerResolver
this.variableOwnerResolver == orig(this.variableOwnerResolver)
this.queryCache == arg0.owner.queryCache
this.queryCache == orig(this.queryCache)
this.logQueryCache == arg0.owner.logQueryCache
this.logQueryCache == orig(this.logQueryCache)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.owner == orig(this)
arg0.rVariables == orig(arg0.rVariables)
arg0.rVariables[] == orig(arg0.rVariables[])
arg0.rVariableMap == orig(arg0.rVariableMap)
arg0.externalDependencyList == orig(arg0.externalDependencyList)
arg0.externalDependencyList[] == orig(arg0.externalDependencyList[])
size(this.modules[])-1 == orig(size(this.modules[]))
this.modules[] contains no nulls and has only one value, of length 1
this.modules[].getClass().getName() == [commands.model3.TaskModule]
arg0.name has only one value
arg0.name.toString == "task"
arg0.owner has only one value
arg0.owner.modules[] contains no nulls and has only one value, of length 1
arg0.owner.modules[] elements has only one value
arg0.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
arg0.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
arg0.owner.inputVariables[] == []
arg0.owner.inputVariables[].getClass().getName() == []
arg0.rVariables has only one value
arg0.rVariables[] contains no nulls and has only one value, of length 4
arg0.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.rVariableMap has only one value
arg0.externalDependencyList has only one value
arg0.externalDependencyList[] == []
arg0.externalDependencyList[].getClass().getName() == []
size(this.modules[]) == 1
size(arg0.owner.modules[]) == 1
size(arg0.rVariables[]) == 4
orig(arg0.getClass().getName()) in this.modules[].getClass().getName()
orig(arg0.getClass().getName()) in arg0.owner.modules[].getClass().getName()
===========================================================================
generativemodel.GenerativeModel.getRVarWithName(java.lang.String):::ENTER
this.modules[] contains no nulls and has only one value, of length 1
this.modules[].getClass().getName() == [commands.model3.TaskModule]
size(this.modules[]) == 1
===========================================================================
generativemodel.GenerativeModel.getRVarWithName(java.lang.String):::EXIT91
===========================================================================
generativemodel.GenerativeModel.getRVarWithName(java.lang.String):::EXIT
this.modules == orig(this.modules)
this.modules[] == orig(this.modules[])
this.modules.getClass().getName() == return.moduleOwner.rVariables.getClass().getName()
this.modules.getClass().getName() == return.moduleOwner.externalDependencyList.getClass().getName()
this.modules.getClass().getName() == return.dependencies.getClass().getName()
this.modules.getClass().getName() == orig(this.modules.getClass().getName())
this.modules.getClass().getName() == orig(this.inputVariables.getClass().getName())
this.moduleMap == orig(this.moduleMap)
this.moduleMap.getClass().getName() == return.moduleOwner.rVariableMap.getClass().getName()
this.moduleMap.getClass().getName() == return.parameters.getClass().getName()
this.moduleMap.getClass().getName() == orig(this.moduleMap.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.variableOwnerResolver.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.queryCache.getClass().getName())
this.moduleMap.getClass().getName() == orig(this.logQueryCache.getClass().getName())
this.inputVariables == orig(this.inputVariables)
this.inputVariables[] == orig(this.inputVariables[])
this.variableOwnerResolver == orig(this.variableOwnerResolver)
this.queryCache == orig(this.queryCache)
this.logQueryCache == orig(this.logQueryCache)
arg0.toString == orig(arg0.toString)
return.name == orig(arg0)
return.moduleOwner.owner == orig(this)
this.modules[] contains no nulls and has only one value, of length 1
this.modules[].getClass().getName() == [commands.model3.TaskModule]
return.moduleOwner has only one value
return.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
return.moduleOwner.name has only one value
return.moduleOwner.name.toString == "task"
return.moduleOwner.owner has only one value
return.moduleOwner.rVariables has only one value
return.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
return.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
return.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
return.moduleOwner.rVariableMap has only one value
return.moduleOwner.externalDependencyList has only one value
return.moduleOwner.externalDependencyList[] == []
return.moduleOwner.externalDependencyList[].getClass().getName() == []
return.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
return.isInput == false
size(this.modules[]) == 1
size(return.moduleOwner.rVariables[]) == 4
return.moduleOwner.getClass().getName() in this.modules[].getClass().getName()
this.modules.getClass().getName() != return.moduleOwner.getClass().getName()
this.moduleMap.getClass().getName() != return.moduleOwner.getClass().getName()
===========================================================================
generativemodel.ModelTrackedVarIterator:::OBJECT
this.modelOwner == null
this.cache == false
===========================================================================
generativemodel.ModelTrackedVarIterator.ModelTrackedVarIterator():::EXIT
===========================================================================
generativemodel.ModelTrackedVarIterator.next():::ENTER
===========================================================================
generativemodel.ModelTrackedVarIterator.next():::EXIT
this.modelOwner == orig(this.modelOwner)
this.cache == orig(this.cache)
return.queryValues.getClass().getName() == return.condValues.getClass().getName()
return != null
return.queryValues != null
return.queryValues.getClass().getName() == java.util.HashSet.class
return.condValues != null
return.hashValue == 0
return.needsToRecomputeHash == true
return.queryValues.getClass().getName() != orig(this.getClass().getName())
===========================================================================
generativemodel.RVariable:::OBJECT
this.moduleOwner.owner.modules.getClass().getName() == this.moduleOwner.owner.inputVariables.getClass().getName()
this.moduleOwner.owner.modules.getClass().getName() == this.dependencies.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() == this.moduleOwner.owner.variableOwnerResolver.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() == this.moduleOwner.owner.queryCache.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() == this.moduleOwner.owner.logQueryCache.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.rVariables.getClass().getName() == this.dependencies.getClass().getName()
this.moduleOwner.rVariableMap.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.externalDependencyList.getClass().getName() == this.dependencies.getClass().getName()
this.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.moduleOwner.name has only one value
this.moduleOwner.name != null
this.moduleOwner.name.toString == "task"
this.moduleOwner.owner.modules has only one value
this.moduleOwner.owner.modules != null
this.moduleOwner.owner.modules[] contains no nulls and has only one value, of length 1
this.moduleOwner.owner.modules[] elements has only one value
this.moduleOwner.owner.modules[] elements != null
this.moduleOwner.owner.modules[].getClass().getName() == [commands.model3.TaskModule]
this.moduleOwner.owner.modules[].getClass().getName() elements == commands.model3.TaskModule.class
this.moduleOwner.owner.modules.getClass().getName() == java.util.ArrayList.class
this.moduleOwner.owner.moduleMap has only one value
this.moduleOwner.owner.moduleMap != null
this.moduleOwner.owner.moduleMap.getClass().getName() == java.util.HashMap.class
this.moduleOwner.owner.inputVariables has only one value
this.moduleOwner.owner.inputVariables != null
this.moduleOwner.owner.inputVariables[] == []
this.moduleOwner.owner.inputVariables[].getClass().getName() == []
this.moduleOwner.owner.variableOwnerResolver has only one value
this.moduleOwner.owner.variableOwnerResolver != null
this.moduleOwner.owner.queryCache has only one value
this.moduleOwner.owner.queryCache != null
this.moduleOwner.owner.logQueryCache has only one value
this.moduleOwner.owner.logQueryCache != null
this.moduleOwner.rVariables has only one value
this.moduleOwner.rVariables != null
this.moduleOwner.rVariables[] elements != null
this.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.moduleOwner.rVariableMap has only one value
this.moduleOwner.rVariableMap != null
this.moduleOwner.externalDependencyList has only one value
this.moduleOwner.externalDependencyList != null
this.moduleOwner.externalDependencyList[] == []
this.moduleOwner.externalDependencyList[].getClass().getName() == []
this.dependencies[] elements != null
this.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.dependencies.getClass().getName() == java.util.ArrayList.class
this.parameters.getClass().getName() == java.util.HashMap.class
this.isInput == false
size(this.moduleOwner.owner.modules[]) == 1
this.moduleOwner.getClass().getName() in this.moduleOwner.owner.modules[].getClass().getName()
this.moduleOwner.getClass().getName() != this.moduleOwner.owner.modules.getClass().getName()
this.moduleOwner.getClass().getName() != this.moduleOwner.owner.moduleMap.getClass().getName()
this.moduleOwner.getClass().getName() != this.dependencies.getClass().getName()
this.moduleOwner.getClass().getName() != this.parameters.getClass().getName()
this.moduleOwner.owner.modules.getClass().getName() != this.moduleOwner.owner.moduleMap.getClass().getName()
this.moduleOwner.owner.modules.getClass().getName() != this.parameters.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() != this.dependencies.getClass().getName()
this.dependencies.getClass().getName() != this.parameters.getClass().getName()
===========================================================================
generativemodel.RVariable.RVarInit(java.lang.String, generativemodel.GMModule, java.util.List, java.util.Map, boolean):::ENTER
this.isInput == arg4
arg1.rVariables.getClass().getName() == arg2.getClass().getName()
arg1.rVariableMap.getClass().getName() == arg3.getClass().getName()
arg1.externalDependencyList.getClass().getName() == arg2.getClass().getName()
this.name == null
this.moduleOwner == null
this.dependencies == null
this.parameters == null
arg1 has only one value
arg1.getClass().getName() == commands.model3.TaskModule.class
arg1.name has only one value
arg1.name.toString == "task"
arg1.owner == null
arg1.rVariables has only one value
arg1.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg1.rVariableMap has only one value
arg1.externalDependencyList has only one value
arg1.externalDependencyList[] == []
arg1.externalDependencyList[].getClass().getName() == []
arg2[] == []
arg2[].getClass().getName() == []
arg2.getClass().getName() == java.util.ArrayList.class
arg3.getClass().getName() == java.util.HashMap.class
===========================================================================
generativemodel.RVariable.RVarInit(java.lang.String, generativemodel.GMModule, java.util.List, java.util.Map, boolean):::EXIT
this.name == orig(arg0)
this.moduleOwner == orig(arg1)
this.moduleOwner.getClass().getName() == orig(arg1.getClass().getName())
this.moduleOwner.name == arg1.name
this.moduleOwner.rVariables == arg1.rVariables
this.moduleOwner.rVariableMap == arg1.rVariableMap
this.moduleOwner.externalDependencyList == arg1.externalDependencyList
this.dependencies == orig(arg2)
this.dependencies.getClass().getName() == arg1.rVariables.getClass().getName()
this.dependencies.getClass().getName() == arg1.externalDependencyList.getClass().getName()
this.dependencies.getClass().getName() == orig(arg1.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(arg1.externalDependencyList.getClass().getName())
this.dependencies.getClass().getName() == orig(arg2.getClass().getName())
this.parameters == orig(arg3)
this.parameters.getClass().getName() == arg1.rVariableMap.getClass().getName()
this.parameters.getClass().getName() == orig(arg1.rVariableMap.getClass().getName())
this.parameters.getClass().getName() == orig(arg3.getClass().getName())
this.isInput == orig(this.isInput)
this.isInput == orig(arg4)
arg0.toString == orig(arg0.toString)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.owner == orig(arg1.owner)
arg1.rVariables == orig(arg1.rVariables)
arg1.rVariableMap == orig(arg1.rVariableMap)
arg1.externalDependencyList == orig(arg1.externalDependencyList)
arg1.externalDependencyList[] == orig(arg1.externalDependencyList[])
arg2[] == orig(arg2[])
size(arg1.rVariables[])-1 == orig(size(arg1.rVariables[]))
this.moduleOwner has only one value
this.moduleOwner.owner == null
this.dependencies[] == []
this.dependencies[].getClass().getName() == []
arg1.name has only one value
arg1.name.toString == "task"
arg1.owner == null
arg1.rVariables has only one value
arg1.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg1.rVariableMap has only one value
arg1.externalDependencyList has only one value
arg1.externalDependencyList[] == []
arg1.externalDependencyList[].getClass().getName() == []
arg2[] == []
arg2[].getClass().getName() == []
===========================================================================
generativemodel.RVariable.RVariable(java.lang.String, generativemodel.GMModule):::ENTER
arg1.rVariables.getClass().getName() == arg1.externalDependencyList.getClass().getName()
arg1 has only one value
arg1.getClass().getName() == commands.model3.TaskModule.class
arg1.name has only one value
arg1.name.toString == "task"
arg1.owner == null
arg1.rVariables has only one value
arg1.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg1.rVariables.getClass().getName() == java.util.ArrayList.class
arg1.rVariableMap has only one value
arg1.rVariableMap.getClass().getName() == java.util.HashMap.class
arg1.externalDependencyList has only one value
arg1.externalDependencyList[] == []
arg1.externalDependencyList[].getClass().getName() == []
===========================================================================
generativemodel.RVariable.RVariable(java.lang.String, generativemodel.GMModule):::EXIT
this.name == orig(arg0)
this.moduleOwner == orig(arg1)
this.moduleOwner.getClass().getName() == orig(arg1.getClass().getName())
this.moduleOwner.name == arg1.name
this.moduleOwner.rVariables == arg1.rVariables
this.moduleOwner.rVariableMap == arg1.rVariableMap
this.moduleOwner.externalDependencyList == arg1.externalDependencyList
this.dependencies.getClass().getName() == arg1.rVariables.getClass().getName()
this.dependencies.getClass().getName() == arg1.externalDependencyList.getClass().getName()
this.dependencies.getClass().getName() == orig(arg1.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(arg1.externalDependencyList.getClass().getName())
this.parameters.getClass().getName() == arg1.rVariableMap.getClass().getName()
this.parameters.getClass().getName() == orig(arg1.rVariableMap.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.owner == orig(arg1.owner)
arg1.rVariables == orig(arg1.rVariables)
arg1.rVariableMap == orig(arg1.rVariableMap)
arg1.externalDependencyList == orig(arg1.externalDependencyList)
arg1.externalDependencyList[] == orig(arg1.externalDependencyList[])
size(arg1.rVariables[])-1 == orig(size(arg1.rVariables[]))
this.moduleOwner has only one value
this.moduleOwner.owner == null
this.dependencies[] == []
this.dependencies[].getClass().getName() == []
arg1.name has only one value
arg1.name.toString == "task"
arg1.owner == null
arg1.rVariables has only one value
arg1.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg1.rVariableMap has only one value
arg1.externalDependencyList has only one value
arg1.externalDependencyList[] == []
arg1.externalDependencyList[].getClass().getName() == []
===========================================================================
generativemodel.RVariable.addDependency(generativemodel.RVariable):::ENTER
this.moduleOwner == arg0.moduleOwner
this.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.moduleOwner.name == arg0.moduleOwner.name
this.moduleOwner.rVariables == arg0.moduleOwner.rVariables
this.moduleOwner.rVariableMap == arg0.moduleOwner.rVariableMap
this.moduleOwner.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.dependencies.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.dependencies.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.dependencies.getClass().getName() == arg0.dependencies.getClass().getName()
this.parameters.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.parameters.getClass().getName() == arg0.parameters.getClass().getName()
this.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
this.moduleOwner has only one value
this.moduleOwner.owner == null
arg0.name.toString one of { "groundedRF", "liftedRF", "state" }
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner == null
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.isInput == false
size(this.moduleOwner.rVariables[]) one of { 2, 3, 4 }
size(this.dependencies[]) one of { 0, 1, 2 }
size(arg0.moduleOwner.rVariables[]) one of { 2, 3, 4 }
size(arg0.dependencies[]) one of { 0, 1, 2 }
===========================================================================
generativemodel.RVariable.addDependency(generativemodel.RVariable):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.moduleOwner == arg0.moduleOwner
this.moduleOwner == orig(this.moduleOwner)
this.moduleOwner == orig(arg0.moduleOwner)
this.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.moduleOwner.getClass().getName() == orig(this.moduleOwner.getClass().getName())
this.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
this.moduleOwner.name == arg0.moduleOwner.name
this.moduleOwner.name == orig(this.moduleOwner.name)
this.moduleOwner.name == orig(arg0.moduleOwner.name)
this.moduleOwner.name.toString == orig(this.moduleOwner.name.toString)
this.moduleOwner.owner == orig(this.moduleOwner.owner)
this.moduleOwner.rVariables == arg0.moduleOwner.rVariables
this.moduleOwner.rVariables == orig(this.moduleOwner.rVariables)
this.moduleOwner.rVariables == orig(arg0.moduleOwner.rVariables)
this.moduleOwner.rVariables[] == orig(this.moduleOwner.rVariables[])
this.moduleOwner.rVariableMap == arg0.moduleOwner.rVariableMap
this.moduleOwner.rVariableMap == orig(this.moduleOwner.rVariableMap)
this.moduleOwner.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
this.moduleOwner.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.moduleOwner.externalDependencyList == orig(this.moduleOwner.externalDependencyList)
this.moduleOwner.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
this.moduleOwner.externalDependencyList[] == orig(this.moduleOwner.externalDependencyList[])
this.dependencies == orig(this.dependencies)
this.dependencies.getClass().getName() == arg0.moduleOwner.rVariables.getClass().getName()
this.dependencies.getClass().getName() == arg0.moduleOwner.externalDependencyList.getClass().getName()
this.dependencies.getClass().getName() == arg0.dependencies.getClass().getName()
this.dependencies.getClass().getName() == orig(this.moduleOwner.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(this.moduleOwner.externalDependencyList.getClass().getName())
this.dependencies.getClass().getName() == orig(this.dependencies.getClass().getName())
this.dependencies.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
this.dependencies.getClass().getName() == orig(arg0.dependencies.getClass().getName())
this.parameters == orig(this.parameters)
this.parameters.getClass().getName() == arg0.moduleOwner.rVariableMap.getClass().getName()
this.parameters.getClass().getName() == arg0.parameters.getClass().getName()
this.parameters.getClass().getName() == orig(this.moduleOwner.rVariableMap.getClass().getName())
this.parameters.getClass().getName() == orig(this.parameters.getClass().getName())
this.parameters.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
this.parameters.getClass().getName() == orig(arg0.parameters.getClass().getName())
this.isInput == orig(this.isInput)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.owner == orig(arg0.moduleOwner.owner)
arg0.moduleOwner.rVariables[] == orig(arg0.moduleOwner.rVariables[])
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.parameters == orig(arg0.parameters)
arg0.isInput == orig(arg0.isInput)
size(this.dependencies[])-1 == orig(size(this.dependencies[]))
this.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
this.moduleOwner has only one value
this.moduleOwner.owner == null
arg0.name.toString one of { "groundedRF", "liftedRF", "state" }
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner == null
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.isInput == false
size(this.moduleOwner.rVariables[]) one of { 2, 3, 4 }
size(this.dependencies[]) one of { 1, 2, 3 }
size(arg0.moduleOwner.rVariables[]) one of { 2, 3, 4 }
size(arg0.dependencies[]) one of { 0, 1, 2 }
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::ENTER
this.name != null
this.moduleOwner has only one value
this.moduleOwner != null
this.moduleOwner.rVariables[].getClass().getName() one of { [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] }
this.dependencies != null
this.parameters != null
arg0 != null
arg0.getClass().getName() == generativemodel.RVariable.class
size(this.moduleOwner.rVariables[]) one of { 3, 4 }
this.moduleOwner.getClass().getName() != arg0.getClass().getName()
this.moduleOwner.owner.modules.getClass().getName() != arg0.getClass().getName()
this.moduleOwner.owner.moduleMap.getClass().getName() != arg0.getClass().getName()
arg0.getClass().getName() in this.moduleOwner.rVariables[].getClass().getName()
this.dependencies.getClass().getName() != arg0.getClass().getName()
this.parameters.getClass().getName() != arg0.getClass().getName()
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT107
this.moduleOwner.owner.inputVariables.getClass().getName() == this.dependencies.getClass().getName()
this.moduleOwner.owner.variableOwnerResolver.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.owner.queryCache.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.owner.logQueryCache.getClass().getName() == this.parameters.getClass().getName()
this.dependencies.getClass().getName() == orig(this.moduleOwner.owner.modules.getClass().getName())
this.dependencies.getClass().getName() == orig(this.moduleOwner.owner.inputVariables.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.moduleMap.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.variableOwnerResolver.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.queryCache.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.logQueryCache.getClass().getName())
orig(this) == orig(arg0)
this.moduleOwner.owner has only one value
this.moduleOwner.owner != null
this.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
return == true
size(this.moduleOwner.rVariables[]) == 4
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT107;condition="return == true"
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT116
this.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
return == false
size(this.dependencies[]) one of { 1, 2, 3 }
orig(arg0.getClass().getName()) in this.dependencies[].getClass().getName()
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT116;condition="not(return == true)"
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.moduleOwner == orig(this.moduleOwner)
this.moduleOwner.getClass().getName() == orig(this.moduleOwner.getClass().getName())
this.moduleOwner.name == orig(this.moduleOwner.name)
this.moduleOwner.name.toString == orig(this.moduleOwner.name.toString)
this.moduleOwner.owner == orig(this.moduleOwner.owner)
this.moduleOwner.owner.modules == orig(this.moduleOwner.owner.modules)
this.moduleOwner.owner.modules[] == orig(this.moduleOwner.owner.modules[])
this.moduleOwner.owner.modules.getClass().getName() == orig(this.moduleOwner.owner.modules.getClass().getName())
this.moduleOwner.owner.modules.getClass().getName() == orig(this.moduleOwner.owner.inputVariables.getClass().getName())
this.moduleOwner.owner.moduleMap == orig(this.moduleOwner.owner.moduleMap)
this.moduleOwner.owner.moduleMap.getClass().getName() == orig(this.moduleOwner.owner.moduleMap.getClass().getName())
this.moduleOwner.owner.moduleMap.getClass().getName() == orig(this.moduleOwner.owner.variableOwnerResolver.getClass().getName())
this.moduleOwner.owner.moduleMap.getClass().getName() == orig(this.moduleOwner.owner.queryCache.getClass().getName())
this.moduleOwner.owner.moduleMap.getClass().getName() == orig(this.moduleOwner.owner.logQueryCache.getClass().getName())
this.moduleOwner.owner.inputVariables == orig(this.moduleOwner.owner.inputVariables)
this.moduleOwner.owner.inputVariables[] == orig(this.moduleOwner.owner.inputVariables[])
this.moduleOwner.owner.variableOwnerResolver == orig(this.moduleOwner.owner.variableOwnerResolver)
this.moduleOwner.owner.queryCache == orig(this.moduleOwner.owner.queryCache)
this.moduleOwner.owner.logQueryCache == orig(this.moduleOwner.owner.logQueryCache)
this.moduleOwner.rVariables == orig(this.moduleOwner.rVariables)
this.moduleOwner.rVariables[] == orig(this.moduleOwner.rVariables[])
this.moduleOwner.rVariableMap == orig(this.moduleOwner.rVariableMap)
this.moduleOwner.externalDependencyList == orig(this.moduleOwner.externalDependencyList)
this.moduleOwner.externalDependencyList[] == orig(this.moduleOwner.externalDependencyList[])
this.dependencies == orig(this.dependencies)
this.dependencies[] == orig(this.dependencies[])
this.dependencies.getClass().getName() == orig(this.moduleOwner.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(this.moduleOwner.externalDependencyList.getClass().getName())
this.dependencies.getClass().getName() == orig(this.dependencies.getClass().getName())
this.parameters == orig(this.parameters)
this.parameters.getClass().getName() == orig(this.moduleOwner.rVariableMap.getClass().getName())
this.parameters.getClass().getName() == orig(this.parameters.getClass().getName())
this.isInput == orig(this.isInput)
(return == false)  ==>  (orig(arg0.getClass().getName()) in this.dependencies[].getClass().getName())
(return == false)  ==>  (size(this.dependencies[]) one of { 1, 2, 3 })
(return == false)  ==>  (size(this.moduleOwner.rVariables[]) one of { 3, 4 })
(return == false)  ==>  (this.moduleOwner.rVariables[].getClass().getName() one of { [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] })
(return == false)  ==>  (this.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" })
(return == true)  ==>  (orig(this) == orig(arg0))
(return == true)  ==>  (size(this.moduleOwner.rVariables[]) == 4)
(return == true)  ==>  (this.moduleOwner.owner != null)
(return == true)  ==>  (this.moduleOwner.owner has only one value)
(return == true)  ==>  (this.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4)
(return == true)  ==>  (this.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable])
this.name != null
this.moduleOwner has only one value
this.moduleOwner != null
this.moduleOwner.rVariables[].getClass().getName() one of { [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable], [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable] }
this.dependencies != null
this.parameters != null
size(this.moduleOwner.rVariables[]) one of { 3, 4 }
this.moduleOwner.getClass().getName() != orig(arg0.getClass().getName())
this.moduleOwner.owner.modules.getClass().getName() != orig(arg0.getClass().getName())
this.moduleOwner.owner.moduleMap.getClass().getName() != orig(arg0.getClass().getName())
orig(arg0.getClass().getName()) in this.moduleOwner.rVariables[].getClass().getName()
this.dependencies.getClass().getName() != orig(arg0.getClass().getName())
this.parameters.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT;condition="return == true"
this.moduleOwner.owner.inputVariables.getClass().getName() == this.dependencies.getClass().getName()
this.moduleOwner.owner.variableOwnerResolver.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.owner.queryCache.getClass().getName() == this.parameters.getClass().getName()
this.moduleOwner.owner.logQueryCache.getClass().getName() == this.parameters.getClass().getName()
this.dependencies.getClass().getName() == orig(this.moduleOwner.owner.modules.getClass().getName())
this.dependencies.getClass().getName() == orig(this.moduleOwner.owner.inputVariables.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.moduleMap.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.variableOwnerResolver.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.queryCache.getClass().getName())
this.parameters.getClass().getName() == orig(this.moduleOwner.owner.logQueryCache.getClass().getName())
orig(this) == orig(arg0)
this.moduleOwner.owner has only one value
this.moduleOwner.owner != null
this.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
return == true
size(this.moduleOwner.rVariables[]) == 4
===========================================================================
generativemodel.RVariable.equals(java.lang.Object):::EXIT;condition="not(return == true)"
this.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
return == false
size(this.dependencies[]) one of { 1, 2, 3 }
orig(arg0.getClass().getName()) in this.dependencies[].getClass().getName()
===========================================================================
generativemodel.RVariable.hashCode():::ENTER
this.moduleOwner has only one value
this.moduleOwner.owner == null
this.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
size(this.moduleOwner.rVariables[]) == 4
===========================================================================
generativemodel.RVariable.hashCode():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.moduleOwner == orig(this.moduleOwner)
this.moduleOwner.getClass().getName() == orig(this.moduleOwner.getClass().getName())
this.moduleOwner.name == orig(this.moduleOwner.name)
this.moduleOwner.name.toString == orig(this.moduleOwner.name.toString)
this.moduleOwner.owner == orig(this.moduleOwner.owner)
this.moduleOwner.rVariables == orig(this.moduleOwner.rVariables)
this.moduleOwner.rVariables[] == orig(this.moduleOwner.rVariables[])
this.moduleOwner.rVariableMap == orig(this.moduleOwner.rVariableMap)
this.moduleOwner.externalDependencyList == orig(this.moduleOwner.externalDependencyList)
this.moduleOwner.externalDependencyList[] == orig(this.moduleOwner.externalDependencyList[])
this.dependencies == orig(this.dependencies)
this.dependencies[] == orig(this.dependencies[])
this.dependencies.getClass().getName() == orig(this.moduleOwner.rVariables.getClass().getName())
this.dependencies.getClass().getName() == orig(this.moduleOwner.externalDependencyList.getClass().getName())
this.dependencies.getClass().getName() == orig(this.dependencies.getClass().getName())
this.parameters == orig(this.parameters)
this.parameters.getClass().getName() == orig(this.moduleOwner.rVariableMap.getClass().getName())
this.parameters.getClass().getName() == orig(this.parameters.getClass().getName())
this.isInput == orig(this.isInput)
this.moduleOwner has only one value
this.moduleOwner.owner == null
this.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
size(this.moduleOwner.rVariables[]) == 4
===========================================================================
generativemodel.RVariableValue:::OBJECT
this.owner.name != null
this.owner.moduleOwner has only one value
this.owner.moduleOwner != null
this.owner.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
this.owner.moduleOwner.name has only one value
this.owner.moduleOwner.name != null
this.owner.moduleOwner.name.toString == "task"
this.owner.moduleOwner.owner has only one value
this.owner.moduleOwner.owner != null
this.owner.moduleOwner.rVariables has only one value
this.owner.moduleOwner.rVariables != null
this.owner.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
this.owner.moduleOwner.rVariables[] elements != null
this.owner.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
this.owner.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.moduleOwner.rVariables.getClass().getName() == java.util.ArrayList.class
this.owner.moduleOwner.rVariableMap has only one value
this.owner.moduleOwner.rVariableMap != null
this.owner.moduleOwner.rVariableMap.getClass().getName() == java.util.HashMap.class
this.owner.moduleOwner.externalDependencyList has only one value
this.owner.moduleOwner.externalDependencyList != null
this.owner.moduleOwner.externalDependencyList[] == []
this.owner.moduleOwner.externalDependencyList[].getClass().getName() == []
this.owner.moduleOwner.externalDependencyList.getClass().getName() == java.util.ArrayList.class
this.owner.dependencies != null
this.owner.dependencies[] elements != null
this.owner.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
this.owner.dependencies.getClass().getName() == java.util.ArrayList.class
this.owner.parameters != null
this.owner.parameters.getClass().getName() == java.util.HashMap.class
this.owner.isInput == false
size(this.owner.moduleOwner.rVariables[]) == 4
===========================================================================
generativemodel.RVariableValue.RVariableValue():::EXIT
this.owner == null
===========================================================================
generativemodel.RVariableValue.getOwner():::ENTER
this.owner.moduleOwner.rVariables.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap.getClass().getName() == this.owner.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner != null
this.owner.name.toString one of { "groundedRF", "liftedRF", "state" }
size(this.owner.dependencies[]) one of { 0, 1, 2 }
this.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.getClass().getName() != this.owner.dependencies.getClass().getName()
this.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.dependencies.getClass().getName() != this.owner.parameters.getClass().getName()
===========================================================================
generativemodel.RVariableValue.getOwner():::EXIT
this.owner == return
this.owner.name == return.name
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == return.moduleOwner
this.owner.moduleOwner.getClass().getName() == return.moduleOwner.getClass().getName()
this.owner.moduleOwner.name == return.moduleOwner.name
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == return.moduleOwner.owner
this.owner.moduleOwner.rVariables == return.moduleOwner.rVariables
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariables.getClass().getName() == return.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap == return.moduleOwner.rVariableMap
this.owner.moduleOwner.rVariableMap.getClass().getName() == return.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList == return.moduleOwner.externalDependencyList
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.moduleOwner.externalDependencyList.getClass().getName() == return.dependencies.getClass().getName()
this.owner.dependencies == return.dependencies
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.dependencies.getClass().getName() == return.dependencies.getClass().getName()
this.owner.parameters == return.parameters
this.owner.parameters.getClass().getName() == return.parameters.getClass().getName()
this.owner.isInput == return.isInput
return == orig(this.owner)
return.name == orig(this.owner.name)
return.moduleOwner == orig(this.owner.moduleOwner)
return.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
return.moduleOwner.name == orig(this.owner.moduleOwner.name)
return.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
return.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
return.moduleOwner.rVariables.getClass().getName() == return.dependencies.getClass().getName()
return.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
return.moduleOwner.rVariableMap.getClass().getName() == return.parameters.getClass().getName()
return.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
return.moduleOwner.externalDependencyList.getClass().getName() == return.dependencies.getClass().getName()
return.dependencies == orig(this.owner.dependencies)
return.dependencies.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
return.dependencies.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
return.dependencies.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
return.parameters == orig(this.owner.parameters)
return.parameters.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
return.parameters.getClass().getName() == orig(this.owner.parameters.getClass().getName())
return.isInput == orig(this.owner.isInput)
this.owner.name.toString one of { "groundedRF", "liftedRF", "state" }
return != null
return.name != null
return.name.toString one of { "groundedRF", "liftedRF", "state" }
return.moduleOwner has only one value
return.moduleOwner != null
return.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
return.moduleOwner.name has only one value
return.moduleOwner.name != null
return.moduleOwner.name.toString == "task"
return.moduleOwner.owner has only one value
return.moduleOwner.owner != null
return.moduleOwner.rVariables has only one value
return.moduleOwner.rVariables != null
return.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
return.moduleOwner.rVariables[] elements != null
return.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
return.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
return.moduleOwner.rVariableMap has only one value
return.moduleOwner.rVariableMap != null
return.moduleOwner.externalDependencyList has only one value
return.moduleOwner.externalDependencyList != null
return.moduleOwner.externalDependencyList[] == []
return.moduleOwner.externalDependencyList[].getClass().getName() == []
return.dependencies != null
return.dependencies[] elements != null
return.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
return.dependencies.getClass().getName() == java.util.ArrayList.class
return.parameters != null
return.parameters.getClass().getName() == java.util.HashMap.class
return.isInput == false
size(this.owner.dependencies[]) one of { 0, 1, 2 }
size(return.moduleOwner.rVariables[]) == 4
size(return.dependencies[]) one of { 0, 1, 2 }
return.moduleOwner.getClass().getName() != return.dependencies.getClass().getName()
return.moduleOwner.getClass().getName() != return.parameters.getClass().getName()
return.moduleOwner.getClass().getName() != orig(this.getClass().getName())
return.dependencies.getClass().getName() != return.parameters.getClass().getName()
return.dependencies.getClass().getName() != orig(this.getClass().getName())
return.parameters.getClass().getName() != orig(this.getClass().getName())
===========================================================================
generativemodel.RVariableValue.hashCode():::ENTER
this.owner.moduleOwner.rVariables.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap.getClass().getName() == this.owner.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner != null
this.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
size(this.owner.dependencies[]) one of { 1, 2, 3 }
this.getClass().getName() != this.owner.moduleOwner.getClass().getName()
this.getClass().getName() != this.owner.dependencies.getClass().getName()
this.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.dependencies.getClass().getName() != this.owner.parameters.getClass().getName()
===========================================================================
generativemodel.RVariableValue.hashCode():::EXIT
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariables.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.rVariableMap.getClass().getName() == this.owner.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.moduleOwner.externalDependencyList.getClass().getName() == this.owner.dependencies.getClass().getName()
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.dependencies.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.owner.dependencies.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.owner.dependencies.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.owner.parameters == orig(this.owner.parameters)
this.owner.parameters.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.owner.parameters.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.owner.isInput == orig(this.owner.isInput)
this.owner != null
this.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
size(this.owner.dependencies[]) one of { 1, 2, 3 }
this.owner.moduleOwner.getClass().getName() != this.owner.dependencies.getClass().getName()
this.owner.moduleOwner.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.moduleOwner.getClass().getName() != orig(this.getClass().getName())
this.owner.dependencies.getClass().getName() != this.owner.parameters.getClass().getName()
this.owner.dependencies.getClass().getName() != orig(this.getClass().getName())
this.owner.parameters.getClass().getName() != orig(this.getClass().getName())
===========================================================================
generativemodel.RVariableValue.setOwner(generativemodel.RVariable):::ENTER
arg0.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
arg0.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner == null
arg0 != null
arg0.name != null
arg0.moduleOwner has only one value
arg0.moduleOwner != null
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name != null
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.owner != null
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables != null
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[] elements != null
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.rVariableMap != null
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList != null
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies != null
arg0.dependencies[] elements != null
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.parameters != null
arg0.parameters.getClass().getName() == java.util.HashMap.class
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
this.getClass().getName() != arg0.moduleOwner.getClass().getName()
this.getClass().getName() != arg0.dependencies.getClass().getName()
this.getClass().getName() != arg0.parameters.getClass().getName()
arg0.moduleOwner.getClass().getName() != arg0.dependencies.getClass().getName()
arg0.moduleOwner.getClass().getName() != arg0.parameters.getClass().getName()
arg0.dependencies.getClass().getName() != arg0.parameters.getClass().getName()
===========================================================================
generativemodel.RVariableValue.setOwner(generativemodel.RVariable):::EXIT
this.owner == orig(arg0)
this.owner.name == arg0.name
this.owner.moduleOwner == arg0.moduleOwner
this.owner.moduleOwner.getClass().getName() == arg0.moduleOwner.getClass().getName()
this.owner.moduleOwner.name == arg0.moduleOwner.name
this.owner.moduleOwner.owner == arg0.moduleOwner.owner
this.owner.moduleOwner.rVariables == arg0.moduleOwner.rVariables
this.owner.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.moduleOwner.rVariableMap == arg0.moduleOwner.rVariableMap
this.owner.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
this.owner.moduleOwner.externalDependencyList == arg0.moduleOwner.externalDependencyList
this.owner.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.dependencies == arg0.dependencies
this.owner.dependencies.getClass().getName() == arg0.dependencies.getClass().getName()
this.owner.parameters == arg0.parameters
this.owner.parameters.getClass().getName() == arg0.parameters.getClass().getName()
this.owner.isInput == arg0.isInput
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.moduleOwner == orig(arg0.moduleOwner)
arg0.moduleOwner.getClass().getName() == orig(arg0.moduleOwner.getClass().getName())
arg0.moduleOwner.name == orig(arg0.moduleOwner.name)
arg0.moduleOwner.name.toString == orig(arg0.moduleOwner.name.toString)
arg0.moduleOwner.owner == orig(arg0.moduleOwner.owner)
arg0.moduleOwner.rVariables == orig(arg0.moduleOwner.rVariables)
arg0.moduleOwner.rVariables[] == orig(arg0.moduleOwner.rVariables[])
arg0.moduleOwner.rVariables.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.moduleOwner.rVariableMap == orig(arg0.moduleOwner.rVariableMap)
arg0.moduleOwner.rVariableMap.getClass().getName() == arg0.parameters.getClass().getName()
arg0.moduleOwner.externalDependencyList == orig(arg0.moduleOwner.externalDependencyList)
arg0.moduleOwner.externalDependencyList[] == orig(arg0.moduleOwner.externalDependencyList[])
arg0.moduleOwner.externalDependencyList.getClass().getName() == arg0.dependencies.getClass().getName()
arg0.dependencies == orig(arg0.dependencies)
arg0.dependencies[] == orig(arg0.dependencies[])
arg0.dependencies.getClass().getName() == orig(arg0.moduleOwner.rVariables.getClass().getName())
arg0.dependencies.getClass().getName() == orig(arg0.moduleOwner.externalDependencyList.getClass().getName())
arg0.dependencies.getClass().getName() == orig(arg0.dependencies.getClass().getName())
arg0.parameters == orig(arg0.parameters)
arg0.parameters.getClass().getName() == orig(arg0.moduleOwner.rVariableMap.getClass().getName())
arg0.parameters.getClass().getName() == orig(arg0.parameters.getClass().getName())
arg0.isInput == orig(arg0.isInput)
this.owner != null
arg0.name != null
arg0.moduleOwner has only one value
arg0.moduleOwner != null
arg0.moduleOwner.getClass().getName() == commands.model3.TaskModule.class
arg0.moduleOwner.name has only one value
arg0.moduleOwner.name != null
arg0.moduleOwner.name.toString == "task"
arg0.moduleOwner.owner has only one value
arg0.moduleOwner.owner != null
arg0.moduleOwner.rVariables has only one value
arg0.moduleOwner.rVariables != null
arg0.moduleOwner.rVariables[] contains no nulls and has only one value, of length 4
arg0.moduleOwner.rVariables[] elements != null
arg0.moduleOwner.rVariables[].getClass().getName() == [generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable, generativemodel.RVariable]
arg0.moduleOwner.rVariables[].getClass().getName() elements == generativemodel.RVariable.class
arg0.moduleOwner.rVariableMap has only one value
arg0.moduleOwner.rVariableMap != null
arg0.moduleOwner.externalDependencyList has only one value
arg0.moduleOwner.externalDependencyList != null
arg0.moduleOwner.externalDependencyList[] == []
arg0.moduleOwner.externalDependencyList[].getClass().getName() == []
arg0.dependencies != null
arg0.dependencies[] elements != null
arg0.dependencies[].getClass().getName() elements == generativemodel.RVariable.class
arg0.dependencies.getClass().getName() == java.util.ArrayList.class
arg0.parameters != null
arg0.parameters.getClass().getName() == java.util.HashMap.class
arg0.isInput == false
size(arg0.moduleOwner.rVariables[]) == 4
arg0.moduleOwner.getClass().getName() != arg0.dependencies.getClass().getName()
arg0.moduleOwner.getClass().getName() != arg0.parameters.getClass().getName()
arg0.moduleOwner.getClass().getName() != orig(this.getClass().getName())
arg0.dependencies.getClass().getName() != arg0.parameters.getClass().getName()
arg0.dependencies.getClass().getName() != orig(this.getClass().getName())
arg0.parameters.getClass().getName() != orig(this.getClass().getName())
===========================================================================
generativemodel.RVariableValue.toString():::ENTER
this.owner != null
this.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
size(this.owner.dependencies[]) one of { 1, 2, 3 }
===========================================================================
generativemodel.RVariableValue.toString():::EXIT
this.owner == orig(this.owner)
this.owner.name == orig(this.owner.name)
this.owner.name.toString == orig(this.owner.name.toString)
this.owner.moduleOwner == orig(this.owner.moduleOwner)
this.owner.moduleOwner.getClass().getName() == orig(this.owner.moduleOwner.getClass().getName())
this.owner.moduleOwner.name == orig(this.owner.moduleOwner.name)
this.owner.moduleOwner.name.toString == orig(this.owner.moduleOwner.name.toString)
this.owner.moduleOwner.owner == orig(this.owner.moduleOwner.owner)
this.owner.moduleOwner.rVariables == orig(this.owner.moduleOwner.rVariables)
this.owner.moduleOwner.rVariables[] == orig(this.owner.moduleOwner.rVariables[])
this.owner.moduleOwner.rVariables.getClass().getName() == orig(this.owner.moduleOwner.rVariables.getClass().getName())
this.owner.moduleOwner.rVariableMap == orig(this.owner.moduleOwner.rVariableMap)
this.owner.moduleOwner.rVariableMap.getClass().getName() == orig(this.owner.moduleOwner.rVariableMap.getClass().getName())
this.owner.moduleOwner.externalDependencyList == orig(this.owner.moduleOwner.externalDependencyList)
this.owner.moduleOwner.externalDependencyList[] == orig(this.owner.moduleOwner.externalDependencyList[])
this.owner.moduleOwner.externalDependencyList.getClass().getName() == orig(this.owner.moduleOwner.externalDependencyList.getClass().getName())
this.owner.dependencies == orig(this.owner.dependencies)
this.owner.dependencies[] == orig(this.owner.dependencies[])
this.owner.dependencies.getClass().getName() == orig(this.owner.dependencies.getClass().getName())
this.owner.parameters == orig(this.owner.parameters)
this.owner.parameters.getClass().getName() == orig(this.owner.parameters.getClass().getName())
this.owner.isInput == orig(this.owner.isInput)
this.owner != null
this.owner.name.toString one of { "bindingConstraint", "groundedRF", "liftedRF" }
return != null
size(this.owner.dependencies[]) one of { 1, 2, 3 }
Exiting Daikon.
