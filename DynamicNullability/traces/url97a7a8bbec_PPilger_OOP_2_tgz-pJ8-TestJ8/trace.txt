Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

missing variables in newEnterExitRel:
  parent = Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::ENTER
  child = Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@648ebda1
parent varinfos missing from parent_to_child_map:
   Selection.this.list[Selection.serialVersionUID]
   Selection.this.list[Selection.serialVersionUID-1]
   Selection.this.removed[Selection.serialVersionUID]
   Selection.this.removed[Selection.serialVersionUID-1]
   Selection.this.selectors[Selection.serialVersionUID]
   Selection.this.selectors[Selection.serialVersionUID-1]
rel.parent_to_child_map:
    Selection.this => orig(Selection.this)
    Selection.serialVersionUID => Selection.serialVersionUID
    Selection.this.list => orig(Selection.this.list)
    Selection.this.list[..] => orig(Selection.this.list[..])
    Selection.this.list[..].getClass().getName() => orig(Selection.this.list[..].getClass().getName())
    Selection.this.list.getClass().getName() => orig(Selection.this.list.getClass().getName())
    Selection.this.removed => orig(Selection.this.removed)
    Selection.this.removed[..] => orig(Selection.this.removed[..])
    Selection.this.removed[..].getClass().getName() => orig(Selection.this.removed[..].getClass().getName())
    Selection.this.removed.getClass().getName() => orig(Selection.this.removed.getClass().getName())
    Selection.this.selectors => orig(Selection.this.selectors)
    Selection.this.selectors[..] => orig(Selection.this.selectors[..])
    Selection.this.selectors[..].getClass().getName() => orig(Selection.this.selectors[..].getClass().getName())
    Selection.this.selectors.getClass().getName() => orig(Selection.this.selectors.getClass().getName())
    arg1 => orig(arg1)
    arg1[..] => orig(arg1[..])
    arg1[..].getClass().getName() => orig(arg1[..].getClass().getName())
    arg1.getClass().getName() => orig(arg1.getClass().getName())
    size(Selection.this.list[..]) => orig(size(Selection.this.list[..]))
    size(Selection.this.list[..])-1 => orig(size(Selection.this.list[..]))-1
    size(Selection.this.removed[..]) => orig(size(Selection.this.removed[..]))
    size(Selection.this.removed[..])-1 => orig(size(Selection.this.removed[..]))-1
    size(Selection.this.selectors[..]) => orig(size(Selection.this.selectors[..]))
    size(Selection.this.selectors[..])-1 => orig(size(Selection.this.selectors[..]))-1
    size(arg1[..]) => orig(size(arg1[..]))
    size(arg1[..])-1 => orig(size(arg1[..]))-1
child.var_infos:
    this
    this.removed
    this.removed.getClass().getName()
    this.sourceIter
    this.sourceIter.getClass().getName()
    this.current
    this.current.getClass().getName()
    this.next
    this.next.getClass().getName()
    Selection.this
    Selection.serialVersionUID
    Selection.this.list
    Selection.this.list[..]
    Selection.this.list[..].getClass().getName()
    Selection.this.list.getClass().getName()
    Selection.this.removed
    Selection.this.removed[..]
    Selection.this.removed[..].getClass().getName()
    Selection.this.removed.getClass().getName()
    Selection.this.selectors
    Selection.this.selectors[..]
    Selection.this.selectors[..].getClass().getName()
    Selection.this.selectors.getClass().getName()
    arg1
    arg1[..]
    arg1[..].getClass().getName()
    arg1.getClass().getName()
    orig(Selection.this)
    orig(Selection.this.list)
    orig(Selection.this.list[..])
    orig(Selection.this.list[..].getClass().getName())
    orig(Selection.this.list.getClass().getName())
    orig(Selection.this.removed)
    orig(Selection.this.removed[..])
    orig(Selection.this.removed[..].getClass().getName())
    orig(Selection.this.removed.getClass().getName())
    orig(Selection.this.selectors)
    orig(Selection.this.selectors[..])
    orig(Selection.this.selectors[..].getClass().getName())
    orig(Selection.this.selectors.getClass().getName())
    orig(arg1)
    orig(arg1[..])
    orig(arg1[..].getClass().getName())
    orig(arg1.getClass().getName())
    size(Selection.this.list[..])
    size(Selection.this.list[..])-1
    size(Selection.this.removed[..])
    size(Selection.this.removed[..])-1
    size(Selection.this.selectors[..])
    size(Selection.this.selectors[..])-1
    size(arg1[..])
    size(arg1[..])-1
    orig(size(Selection.this.list[..]))
    orig(size(Selection.this.list[..]))-1
    orig(size(Selection.this.removed[..]))
    orig(size(Selection.this.removed[..]))-1
    orig(size(Selection.this.selectors[..]))
    orig(size(Selection.this.selectors[..]))-1
    orig(size(arg1[..]))
    orig(size(arg1[..]))-1
End of diagnostics for newEnterExitRel(Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::ENTER, Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::EXIT)
missing variables in newEnterExitRel:
  parent = Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::ENTER
  child = Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@2ee16a4e
parent varinfos missing from parent_to_child_map:
   Selection.this.list[Selection.serialVersionUID]
   Selection.this.list[Selection.serialVersionUID-1]
   Selection.this.removed[Selection.serialVersionUID]
   Selection.this.removed[Selection.serialVersionUID-1]
   Selection.this.selectors[Selection.serialVersionUID]
   Selection.this.selectors[Selection.serialVersionUID-1]
rel.parent_to_child_map:
    Selection.this => orig(Selection.this)
    Selection.serialVersionUID => Selection.serialVersionUID
    Selection.this.list => orig(Selection.this.list)
    Selection.this.list[..] => orig(Selection.this.list[..])
    Selection.this.list[..].getClass().getName() => orig(Selection.this.list[..].getClass().getName())
    Selection.this.list.getClass().getName() => orig(Selection.this.list.getClass().getName())
    Selection.this.removed => orig(Selection.this.removed)
    Selection.this.removed[..] => orig(Selection.this.removed[..])
    Selection.this.removed[..].getClass().getName() => orig(Selection.this.removed[..].getClass().getName())
    Selection.this.removed.getClass().getName() => orig(Selection.this.removed.getClass().getName())
    Selection.this.selectors => orig(Selection.this.selectors)
    Selection.this.selectors[..] => orig(Selection.this.selectors[..])
    Selection.this.selectors[..].getClass().getName() => orig(Selection.this.selectors[..].getClass().getName())
    Selection.this.selectors.getClass().getName() => orig(Selection.this.selectors.getClass().getName())
    arg1 => orig(arg1)
    arg1[..] => orig(arg1[..])
    arg1[..].getClass().getName() => orig(arg1[..].getClass().getName())
    arg1.getClass().getName() => orig(arg1.getClass().getName())
    arg2 => orig(arg2)
    arg2.getClass().getName() => orig(arg2.getClass().getName())
    size(Selection.this.list[..]) => orig(size(Selection.this.list[..]))
    size(Selection.this.list[..])-1 => orig(size(Selection.this.list[..]))-1
    size(Selection.this.removed[..]) => orig(size(Selection.this.removed[..]))
    size(Selection.this.removed[..])-1 => orig(size(Selection.this.removed[..]))-1
    size(Selection.this.selectors[..]) => orig(size(Selection.this.selectors[..]))
    size(Selection.this.selectors[..])-1 => orig(size(Selection.this.selectors[..]))-1
    size(arg1[..]) => orig(size(arg1[..]))
    size(arg1[..])-1 => orig(size(arg1[..]))-1
child.var_infos:
    this
    this.removed
    this.removed.getClass().getName()
    this.sourceIter
    this.sourceIter.getClass().getName()
    this.current
    this.current.getClass().getName()
    this.next
    this.next.getClass().getName()
    Selection.this
    Selection.serialVersionUID
    Selection.this.list
    Selection.this.list[..]
    Selection.this.list[..].getClass().getName()
    Selection.this.list.getClass().getName()
    Selection.this.removed
    Selection.this.removed[..]
    Selection.this.removed[..].getClass().getName()
    Selection.this.removed.getClass().getName()
    Selection.this.selectors
    Selection.this.selectors[..]
    Selection.this.selectors[..].getClass().getName()
    Selection.this.selectors.getClass().getName()
    arg1
    arg1[..]
    arg1[..].getClass().getName()
    arg1.getClass().getName()
    arg2
    arg2.getClass().getName()
    orig(Selection.this)
    orig(Selection.this.list)
    orig(Selection.this.list[..])
    orig(Selection.this.list[..].getClass().getName())
    orig(Selection.this.list.getClass().getName())
    orig(Selection.this.removed)
    orig(Selection.this.removed[..])
    orig(Selection.this.removed[..].getClass().getName())
    orig(Selection.this.removed.getClass().getName())
    orig(Selection.this.selectors)
    orig(Selection.this.selectors[..])
    orig(Selection.this.selectors[..].getClass().getName())
    orig(Selection.this.selectors.getClass().getName())
    orig(arg1)
    orig(arg1[..])
    orig(arg1[..].getClass().getName())
    orig(arg1.getClass().getName())
    orig(arg2)
    orig(arg2.getClass().getName())
    size(Selection.this.list[..])
    size(Selection.this.list[..])-1
    size(Selection.this.removed[..])
    size(Selection.this.removed[..])-1
    size(Selection.this.selectors[..])
    size(Selection.this.selectors[..])-1
    size(arg1[..])
    size(arg1[..])-1
    orig(size(Selection.this.list[..]))
    orig(size(Selection.this.list[..]))-1
    orig(size(Selection.this.removed[..]))
    orig(size(Selection.this.removed[..]))-1
    orig(size(Selection.this.selectors[..]))
    orig(size(Selection.this.selectors[..]))-1
    orig(size(arg1[..]))
    orig(size(arg1[..]))-1
End of diagnostics for newEnterExitRel(Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::ENTER, Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::EXIT)
===========================================================================
Band:::CLASS
===========================================================================
Band:::OBJECT
this.name != null
this.name.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
this.ausrichtung != null
this.ausrichtung.toString one of { "Berlin-Rap", "Rock" }
this.minProben one of { 2, 4 }
this.repertoire != null
this.repertoire.list != null
this.repertoire.list[] elements != null
this.repertoire.list[].getClass().getName() elements == Song.class
this.repertoire.list[].getClass().getName() one of { [], [Song, Song, Song] }
this.repertoire.list.getClass().getName() == java.util.ArrayList.class
this.repertoire.removed != null
this.repertoire.removed[] == []
this.repertoire.removed[].getClass().getName() == []
this.repertoire.removed.getClass().getName() == java.util.ArrayList.class
this.repertoire.selectors != null
this.repertoire.selectors[] == []
this.repertoire.selectors[].getClass().getName() == []
this.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
this.termine != null
this.termine.list != null
this.termine.list[] elements != null
this.termine.list[].getClass().getName() elements == Termin.class
this.termine.list.getClass().getName() == java.util.ArrayList.class
this.termine.removed != null
this.termine.removed[] elements has only one value
this.termine.removed[] elements != null
this.termine.removed[].getClass().getName() elements == Termin.class
this.termine.removed[].getClass().getName() one of { [], [Termin] }
this.termine.removed.getClass().getName() == java.util.ArrayList.class
this.termine.selectors != null
this.termine.selectors[] == []
this.termine.selectors[].getClass().getName() == []
this.termine.selectors.getClass().getName() == java.util.ArrayList.class
this.mitglieder != null
this.mitglieder.list != null
this.mitglieder.list[] elements != null
this.mitglieder.list[].getClass().getName() elements == Mitglied.class
this.mitglieder.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
this.mitglieder.list.getClass().getName() == java.util.ArrayList.class
this.mitglieder.removed != null
this.mitglieder.removed[] == []
this.mitglieder.removed[].getClass().getName() == []
this.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
this.mitglieder.selectors != null
this.mitglieder.selectors[] == []
this.mitglieder.selectors[].getClass().getName() == []
this.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
this.orte != null
this.orte.list != null
this.orte.list[] elements != null
this.orte.list[].getClass().getName() elements == Ort.class
this.orte.list.getClass().getName() == java.util.ArrayList.class
this.orte.removed != null
this.orte.removed[] == []
this.orte.removed[].getClass().getName() == []
this.orte.removed.getClass().getName() == java.util.ArrayList.class
this.orte.selectors != null
this.orte.selectors[] == []
this.orte.selectors[].getClass().getName() == []
this.orte.selectors.getClass().getName() == java.util.ArrayList.class
this.guv != null
this.guv.band != null
this.guv.band.name != null
this.guv.band.name.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
this.guv.band.ausrichtung != null
this.guv.band.ausrichtung.toString one of { "Berlin-Rap", "Rock" }
this.guv.band.minProben one of { 2, 4 }
this.guv.band.repertoire != null
this.guv.band.termine != null
this.guv.band.mitglieder != null
this.guv.band.orte != null
this.guv.band.guv != null
this.guv.list != null
this.guv.list[] elements != null
this.guv.list[].getClass().getName() elements == Posten.class
this.guv.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
this.guv.list.getClass().getName() == java.util.ArrayList.class
this.guv.removed != null
this.guv.removed[] == []
this.guv.removed[].getClass().getName() == []
this.guv.removed.getClass().getName() == java.util.ArrayList.class
this.guv.selectors != null
this.guv.selectors[] == []
this.guv.selectors[].getClass().getName() == []
this.guv.selectors.getClass().getName() == java.util.ArrayList.class
size(this.repertoire.list[]) one of { 0, 3 }
size(this.repertoire.list[])-1 != 0
size(this.termine.removed[]) one of { 0, 1 }
size(this.mitglieder.list[]) one of { 0, 7 }
size(this.mitglieder.list[])-1 != 0
size(this.guv.list[]) one of { 0, 3 }
size(this.guv.list[])-1 != 0
===========================================================================
Band.Band(java.lang.String, java.lang.String, int):::ENTER
arg0.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
arg1.toString one of { "Berlin-Rap", "Rock" }
arg2 one of { 2, 4 }
===========================================================================
Band.Band(java.lang.String, java.lang.String, int):::EXIT
this.name == this.guv.band.name
this.name == orig(arg0)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(arg1)
this.minProben == this.guv.band.minProben
this.minProben == orig(arg2)
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.list[] == []
this.termine.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[] == []
this.mitglieder.list[].getClass().getName() == []
this.orte.list[] == []
this.orte.list[].getClass().getName() == []
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
arg1.toString one of { "Berlin-Rap", "Rock" }
===========================================================================
Band.getGuV():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString == "Green Day"
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
===========================================================================
Band.getGuV():::EXIT
this.name == this.guv.band.name
this.name == return.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == return.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == return.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == return.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == return.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == return.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == return.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == return
this.guv.band == return.band
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.guv == return
this.guv.list == return.list
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == return.removed
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == return.selectors
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return == return.band.guv
return == orig(this.guv)
return == orig(this.guv.band.guv)
return.band == orig(this)
return.band == orig(this.guv.band)
return.list == orig(this.guv.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.guv.removed)
return.selectors == orig(this.guv.selectors)
this.name.toString == "Green Day"
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
return.band.name.toString == "Green Day"
return.band.ausrichtung.toString == "Rock"
return.list[].getClass().getName() elements == Posten.class
return.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[] == []
return.selectors[].getClass().getName() == []
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(return.list[]) one of { 0, 3 }
===========================================================================
Band.getGuV(java.util.List):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this has only one value
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list has only one value
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.removed has only one value
this.guv.selectors has only one value
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 1
arg0[] elements has only one value
arg0[].getClass().getName() == [Posten.ZeitraumSelektor]
arg0[].getClass().getName() elements == Posten.ZeitraumSelektor.class
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(arg0[]) == 1
===========================================================================
Band.getGuV(java.util.List):::EXIT
this.name == this.guv.band.name
this.name == return.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == return.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == return.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == return.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == return.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == return.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == return.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == return.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == return.band
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == return.list
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == return.removed
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
arg0[] == orig(arg0[])
return.band == orig(this)
return.band == orig(this.guv.band)
return.list == orig(this.guv.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.list.getClass().getName() == orig(arg0.getClass().getName())
return.removed == orig(this.guv.removed)
return.selectors == orig(arg0)
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.selectors has only one value
arg0[] contains no nulls and has only one value, of length 1
arg0[] elements has only one value
arg0[].getClass().getName() == [Posten.ZeitraumSelektor]
arg0[].getClass().getName() elements == Posten.ZeitraumSelektor.class
return has only one value
return.band has only one value
return.band.name.toString == "Green Day"
return.band.ausrichtung.toString == "Rock"
return.list has only one value
return.list[] contains no nulls and has only one value, of length 3
return.list[].getClass().getName() == [Posten, Posten, Posten]
return.list[].getClass().getName() elements == Posten.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors has only one value
return.selectors[] contains no nulls and has only one value, of length 1
return.selectors[] elements has only one value
return.selectors[].getClass().getName() == [Posten.ZeitraumSelektor]
return.selectors[].getClass().getName() elements == Posten.ZeitraumSelektor.class
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(return.list[]) == 3
size(return.selectors[]) == 1
===========================================================================
Band.getMitglieder():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.guv.band.name.toString one of { "Green Day", "Sido" }
size(this.orte.list[]) one of { 0, 2, 3 }
===========================================================================
Band.getMitglieder():::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == return
this.mitglieder.list == return.list
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == return.removed
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == return.selectors
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.mitglieder == return
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return == orig(this.mitglieder)
return == orig(this.guv.band.mitglieder)
return.list == orig(this.mitglieder.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.mitglieder.removed)
return.selectors == orig(this.mitglieder.selectors)
this.name.toString one of { "Green Day", "Sido" }
this.guv.band.name.toString one of { "Green Day", "Sido" }
return != null
return.list != null
return.list[] elements != null
return.list[].getClass().getName() elements == Mitglied.class
return.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed != null
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors != null
return.selectors[] == []
return.selectors[].getClass().getName() == []
size(this.orte.list[]) one of { 0, 2, 3 }
size(return.list[]) one of { 0, 7 }
===========================================================================
Band.getMitglieder(Selector):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
===========================================================================
Band.getMitglieder(Selector):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == return.list
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == return.removed
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return.list == orig(this.mitglieder.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.mitglieder.removed)
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
return.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
return.list[].getClass().getName() elements == Mitglied.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(return.list[]) == 7
size(return.selectors[]) == 1
===========================================================================
Band.getMitglieder(java.util.List):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 0, 2, 3 }
size(arg0[]) == 1
===========================================================================
Band.getMitglieder(java.util.List):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == return.list
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == return.removed
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
arg0[] == orig(arg0[])
return.list == orig(this.mitglieder.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.list.getClass().getName() == orig(arg0.getClass().getName())
return.removed == orig(this.mitglieder.removed)
return.selectors == orig(arg0)
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
return.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
return.list[].getClass().getName() elements == Mitglied.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 0, 2, 3 }
size(return.list[]) == 7
size(return.selectors[]) == 1
===========================================================================
Band.getName():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sunrise Avenue" }
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sunrise Avenue" }
this.guv.band.ausrichtung.toString == "Rock"
size(this.termine.list[]) one of { 0, 4 }
size(this.orte.list[]) one of { 0, 3 }
===========================================================================
Band.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.termine.list.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.orte.list.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.guv.list.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
this.repertoire.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name == return
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
return == orig(this.name)
return == orig(this.guv.band.name)
this.name.toString one of { "Green Day", "Sunrise Avenue" }
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sunrise Avenue" }
this.guv.band.ausrichtung.toString == "Rock"
return.toString one of { "Green Day", "Sunrise Avenue" }
size(this.termine.list[]) one of { 0, 4 }
size(this.orte.list[]) one of { 0, 3 }
===========================================================================
Band.getOrte():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.guv.band.name.toString one of { "Green Day", "Sido" }
size(this.termine.list[]) one of { 0, 1, 4 }
size(this.mitglieder.list[]) == 7
===========================================================================
Band.getOrte():::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == return
this.orte.list == return.list
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == return.removed
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == return.selectors
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.orte == return
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return == orig(this.orte)
return == orig(this.guv.band.orte)
return.list == orig(this.orte.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.orte.removed)
return.selectors == orig(this.orte.selectors)
this.name.toString one of { "Green Day", "Sido" }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.guv.band.name.toString one of { "Green Day", "Sido" }
return.list[].getClass().getName() elements == Ort.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[] == []
return.selectors[].getClass().getName() == []
size(this.termine.list[]) one of { 0, 1, 4 }
size(this.mitglieder.list[]) == 7
===========================================================================
Band.getOrte(Selector):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0.getClass().getName() == Ort$BezeichnungSelektor.class
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
===========================================================================
Band.getOrte(Selector):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == return.list
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == return.removed
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return.list == orig(this.orte.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.orte.removed)
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
return.list[].getClass().getName() elements == Ort.class
return.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[].getClass().getName() == [Ort.BezeichnungSelektor]
return.selectors[].getClass().getName() elements == Ort.BezeichnungSelektor.class
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(return.list[]) one of { 2, 3 }
size(return.selectors[]) == 1
===========================================================================
Band.getOrte(java.util.List):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(arg0[]) == 1
===========================================================================
Band.getOrte(java.util.List):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == return.list
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == return.removed
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
arg0[] == orig(arg0[])
return.list == orig(this.orte.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.list.getClass().getName() == orig(arg0.getClass().getName())
return.removed == orig(this.orte.removed)
return.selectors == orig(arg0)
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
return.list[].getClass().getName() elements == Ort.class
return.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
size(this.termine.list[]) one of { 0, 1, 3 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(return.list[]) one of { 2, 3 }
size(return.selectors[]) == 1
===========================================================================
Band.getRepertoire():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString == "Green Day"
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
===========================================================================
Band.getRepertoire():::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == return
this.repertoire.list == return.list
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == return.removed
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == return.selectors
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.repertoire == return
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return == orig(this.repertoire)
return == orig(this.guv.band.repertoire)
return.list == orig(this.repertoire.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.repertoire.removed)
return.selectors == orig(this.repertoire.selectors)
this.name.toString == "Green Day"
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
return.list[].getClass().getName() elements == Song.class
return.list[].getClass().getName() one of { [], [Song, Song, Song] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[] == []
return.selectors[].getClass().getName() == []
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(return.list[]) one of { 0, 3 }
===========================================================================
Band.getRepertoire(Selector):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this has only one value
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] contains no nulls and has only one value, of length 3
this.repertoire.list[].getClass().getName() == [Song, Song, Song]
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list has only one value
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.removed has only one value
this.guv.selectors has only one value
arg0 has only one value
arg0.getClass().getName() == Song$TerminSelector.class
size(this.repertoire.list[]) == 3
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
===========================================================================
Band.getRepertoire(Selector):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == return.list
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == return.removed
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return.list == orig(this.repertoire.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.repertoire.removed)
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list[] contains no nulls and has only one value, of length 3
this.repertoire.list[].getClass().getName() == [Song, Song, Song]
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list has only one value
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.removed has only one value
this.guv.selectors has only one value
return has only one value
return.list has only one value
return.list[] contains no nulls and has only one value, of length 3
return.list[].getClass().getName() == [Song, Song, Song]
return.list[].getClass().getName() elements == Song.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors has only one value
return.selectors[] contains no nulls and has only one value, of length 1
return.selectors[] elements has only one value
return.selectors[].getClass().getName() == [Song.TerminSelector]
return.selectors[].getClass().getName() elements == Song.TerminSelector.class
size(this.repertoire.list[]) == 3
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(return.list[]) == 3
size(return.selectors[]) == 1
===========================================================================
Band.getRepertoire(java.util.List):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this has only one value
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] contains no nulls and has only one value, of length 3
this.repertoire.list[].getClass().getName() == [Song, Song, Song]
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list has only one value
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.removed has only one value
this.guv.selectors has only one value
arg0[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
size(this.repertoire.list[]) == 3
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(arg0[]) == 1
===========================================================================
Band.getRepertoire(java.util.List):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == return.list
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == return.removed
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
arg0[] == orig(arg0[])
return.list == orig(this.repertoire.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.list.getClass().getName() == orig(arg0.getClass().getName())
return.removed == orig(this.repertoire.removed)
return.selectors == orig(arg0)
this.name has only one value
this.name.toString == "Green Day"
this.ausrichtung has only one value
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.repertoire has only one value
this.repertoire.list[] contains no nulls and has only one value, of length 3
this.repertoire.list[].getClass().getName() == [Song, Song, Song]
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] contains no nulls and has only one value, of length 4
this.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.termine.removed has only one value
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 3
this.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Green Day"
this.guv.band.ausrichtung.toString == "Rock"
this.guv.list has only one value
this.guv.list[] contains no nulls and has only one value, of length 3
this.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.guv.removed has only one value
this.guv.selectors has only one value
arg0[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
return.list has only one value
return.list[] contains no nulls and has only one value, of length 3
return.list[].getClass().getName() == [Song, Song, Song]
return.list[].getClass().getName() elements == Song.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
size(this.repertoire.list[]) == 3
size(this.termine.list[]) == 4
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 3
size(this.guv.list[]) == 3
size(return.list[]) == 3
size(return.selectors[]) == 1
===========================================================================
Band.getTermine():::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
size(this.termine.list[]) one of { 1, 4, 6 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
===========================================================================
Band.getTermine():::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == return
this.termine.list == return.list
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == return.removed
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == return.selectors
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.termine == return
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return == orig(this.termine)
return == orig(this.guv.band.termine)
return.list == orig(this.termine.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.termine.removed)
return.selectors == orig(this.termine.selectors)
this.name.toString one of { "Green Day", "Sido" }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
return.list[].getClass().getName() elements == Termin.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.selectors[] == []
return.selectors[].getClass().getName() == []
size(this.termine.list[]) one of { 1, 4, 6 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(return.list[]) one of { 1, 4, 6 }
===========================================================================
Band.getTermine(Selector):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this has only one value
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] == []
this.termine.list[].getClass().getName() == []
this.termine.removed has only one value
this.termine.removed[] contains no nulls and has only one value, of length 1
this.termine.removed[].getClass().getName() == [Termin]
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
this.guv.removed has only one value
this.guv.selectors has only one value
arg0 has only one value
arg0.getClass().getName() == Termin$TypSelektor.class
size(this.termine.removed[]) == 1
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 2
===========================================================================
Band.getTermine(Selector):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == return.list
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == return.removed
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
return.list == orig(this.termine.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.removed == orig(this.termine.removed)
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list[] == []
this.termine.list[].getClass().getName() == []
this.termine.removed[] contains no nulls and has only one value, of length 1
this.termine.removed[].getClass().getName() == [Termin]
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
this.guv.removed has only one value
this.guv.selectors has only one value
return has only one value
return.list has only one value
return.list[] == []
return.list[].getClass().getName() == []
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] contains no nulls and has only one value, of length 1
return.removed[] elements has only one value
return.removed[].getClass().getName() == [Termin]
return.removed[].getClass().getName() elements == Termin.class
return.selectors has only one value
return.selectors[] contains no nulls and has only one value, of length 1
return.selectors[] elements has only one value
return.selectors[].getClass().getName() == [Termin.TypSelektor]
return.selectors[].getClass().getName() elements == Termin.TypSelektor.class
size(this.termine.removed[]) == 1
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 2
size(return.removed[]) == 1
size(return.selectors[]) == 1
===========================================================================
Band.getTermine(java.util.List):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this has only one value
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin, Termin, Termin] }
this.termine.removed has only one value
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
this.guv.removed has only one value
this.guv.selectors has only one value
size(this.termine.list[]) one of { 0, 6 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 2
size(arg0[]) one of { 1, 2 }
===========================================================================
Band.getTermine(java.util.List):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == return.list.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == return.list.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == return.list.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == return.list
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == return.list.getClass().getName()
this.termine.removed == return.removed
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == return.list.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == return.list.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == return.list.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == return.list.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == return.list.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == return.list.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == return.list.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == return.list.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == return.list.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == return.list.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == return.list.getClass().getName()
arg0[] == orig(arg0[])
return.list == orig(this.termine.list)
return.list.getClass().getName() == return.removed.getClass().getName()
return.list.getClass().getName() == return.selectors.getClass().getName()
return.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
return.list.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.termine.list.getClass().getName())
return.list.getClass().getName() == orig(this.termine.removed.getClass().getName())
return.list.getClass().getName() == orig(this.termine.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
return.list.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.orte.list.getClass().getName())
return.list.getClass().getName() == orig(this.orte.removed.getClass().getName())
return.list.getClass().getName() == orig(this.orte.selectors.getClass().getName())
return.list.getClass().getName() == orig(this.guv.list.getClass().getName())
return.list.getClass().getName() == orig(this.guv.removed.getClass().getName())
return.list.getClass().getName() == orig(this.guv.selectors.getClass().getName())
return.list.getClass().getName() == orig(arg0.getClass().getName())
return.removed == orig(this.termine.removed)
return.selectors == orig(arg0)
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin, Termin, Termin] }
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
this.guv.removed has only one value
this.guv.selectors has only one value
return.list has only one value
return.list[].getClass().getName() elements == Termin.class
return.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin, Termin, Termin] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] elements has only one value
return.removed[].getClass().getName() elements == Termin.class
return.removed[].getClass().getName() one of { [], [Termin] }
size(this.termine.list[]) one of { 0, 6 }
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) == 2
size(return.list[]) one of { 0, 6 }
size(return.removed[]) one of { 0, 1 }
size(return.selectors[]) one of { 1, 2 }
===========================================================================
Band.sendeTerminvorschlag(Termin):::ENTER
this == this.guv.band
this.name == this.guv.band.name
this.ausrichtung == this.guv.band.ausrichtung
this.minProben == this.guv.band.minProben
this.repertoire == this.guv.band.repertoire
this.repertoire.list.getClass().getName() == this.repertoire.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.repertoire.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.termine.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.mitglieder.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.orte.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.list.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.removed.getClass().getName()
this.repertoire.list.getClass().getName() == this.guv.selectors.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.ort.infrastruktur.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.zeitraum.zeitpunkte.getClass().getName()
this.repertoire.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termine == this.guv.band.termine
this.mitglieder == this.guv.band.mitglieder
this.orte == this.guv.band.orte
this.guv == this.guv.band.guv
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0 != null
arg0.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig == null
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(Termin$Typ.$VALUES[]) == 2
size(arg0.zeitraum.zeitpunkte[]) == 2
this.repertoire.list.getClass().getName() != Termin$Typ.$VALUES.getClass().getName()
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT154
arg0.typus == Termin$Typ.Auftritt
Termin$Typ.Auftritt == orig(arg0.typus)
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] == []
this.termine.list[].getClass().getName() == []
this.termine.removed has only one value
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.removed has only one value
this.guv.selectors has only one value
arg0.ort has only one value
arg0.ort.bezeichnung has only one value
arg0.ort.bezeichnung.toString == "Kueniglberg"
arg0.ort.infrastruktur has only one value
arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 5
arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.posten has only one value
arg0.posten.einnahmen == 0.0
arg0.posten.ausgaben == 2500.99
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung.toString == "Auftritt"
arg0.posten.datum has only one value
arg0.teilnehmer has only one value
arg0.teilnehmer[] contains no nulls and has only one value, of length 7
arg0.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
return == false
orig(this) has only one value
orig(arg0) has only one value
size(this.orte.list[]) == 2
size(arg0.ort.infrastruktur[]) == 5
size(arg0.teilnehmer[]) == 7
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT154;condition="not(return == true)"
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT164
return == true
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT164;condition="return == true"
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT
this.name == this.guv.band.name
this.name == orig(this.name)
this.name == orig(this.guv.band.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == this.guv.band.ausrichtung
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung == orig(this.guv.band.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == this.guv.band.minProben
this.minProben == orig(this.minProben)
this.minProben == orig(this.guv.band.minProben)
this.repertoire == this.guv.band.repertoire
this.repertoire == orig(this.repertoire)
this.repertoire == orig(this.guv.band.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termine == this.guv.band.termine
this.termine == orig(this.termine)
this.termine == orig(this.guv.band.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.mitglieder == this.guv.band.mitglieder
this.mitglieder == orig(this.mitglieder)
this.mitglieder == orig(this.guv.band.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.orte == this.guv.band.orte
this.orte == orig(this.orte)
this.orte == orig(this.guv.band.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.guv == this.guv.band.guv
this.guv == orig(this.guv)
this.guv == orig(this.guv.band.guv)
this.guv.band == orig(this)
this.guv.band == orig(this.guv.band)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.typus == orig(arg0.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == orig(this.repertoire.list.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.termine.list.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.termine.removed.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.termine.selectors.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.orte.list.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.orte.removed.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.orte.selectors.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.guv.list.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.guv.removed.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(this.guv.selectors.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
(return == false)  ==>  (arg0.ort has only one value)
(return == false)  ==>  (arg0.ort.bezeichnung has only one value)
(return == false)  ==>  (arg0.ort.bezeichnung.toString == "Kueniglberg")
(return == false)  ==>  (arg0.ort.infrastruktur has only one value)
(return == false)  ==>  (arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 5)
(return == false)  ==>  (arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (arg0.posten has only one value)
(return == false)  ==>  (arg0.posten.ausgaben == 2500.99)
(return == false)  ==>  (arg0.posten.bezeichnung has only one value)
(return == false)  ==>  (arg0.posten.bezeichnung.toString == "Auftritt")
(return == false)  ==>  (arg0.posten.datum has only one value)
(return == false)  ==>  (arg0.posten.einnahmen == 0.0)
(return == false)  ==>  (arg0.teilnehmer has only one value)
(return == false)  ==>  (arg0.teilnehmer[] contains no nulls and has only one value, of length 7)
(return == false)  ==>  (arg0.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied])
(return == false)  ==>  (arg0.typus == Termin$Typ.Auftritt)
(return == false)  ==>  (arg0.typus has only one value)
(return == false)  ==>  (arg0.zeitraum has only one value)
(return == false)  ==>  (arg0.zeitraum.zeitpunkte has only one value)
(return == false)  ==>  (arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2)
(return == false)  ==>  (orig(arg0) has only one value)
(return == false)  ==>  (orig(this) has only one value)
(return == false)  ==>  (size(arg0.ort.infrastruktur[]) == 5)
(return == false)  ==>  (size(arg0.teilnehmer[]) == 7)
(return == false)  ==>  (size(this.orte.list[]) == 2)
(return == false)  ==>  (this.ausrichtung has only one value)
(return == false)  ==>  (this.ausrichtung.toString == "Berlin-Rap")
(return == false)  ==>  (this.guv has only one value)
(return == false)  ==>  (this.guv.band has only one value)
(return == false)  ==>  (this.guv.band.ausrichtung.toString == "Berlin-Rap")
(return == false)  ==>  (this.guv.band.name.toString == "Sido")
(return == false)  ==>  (this.guv.list has only one value)
(return == false)  ==>  (this.guv.removed has only one value)
(return == false)  ==>  (this.guv.selectors has only one value)
(return == false)  ==>  (this.minProben == 4)
(return == false)  ==>  (this.mitglieder has only one value)
(return == false)  ==>  (this.mitglieder.list has only one value)
(return == false)  ==>  (this.mitglieder.list[] contains no nulls and has only one value, of length 7)
(return == false)  ==>  (this.mitglieder.removed has only one value)
(return == false)  ==>  (this.mitglieder.selectors has only one value)
(return == false)  ==>  (this.name has only one value)
(return == false)  ==>  (this.name.toString == "Sido")
(return == false)  ==>  (this.orte has only one value)
(return == false)  ==>  (this.orte.list has only one value)
(return == false)  ==>  (this.orte.list[] contains no nulls and has only one value, of length 2)
(return == false)  ==>  (this.orte.list[].getClass().getName() == [Ort, Ort])
(return == false)  ==>  (this.orte.removed has only one value)
(return == false)  ==>  (this.orte.selectors has only one value)
(return == false)  ==>  (this.repertoire has only one value)
(return == false)  ==>  (this.repertoire.list has only one value)
(return == false)  ==>  (this.repertoire.removed has only one value)
(return == false)  ==>  (this.repertoire.selectors has only one value)
(return == false)  ==>  (this.termine has only one value)
(return == false)  ==>  (this.termine.list has only one value)
(return == false)  ==>  (this.termine.list[] == [])
(return == false)  ==>  (this.termine.list[].getClass().getName() == [])
(return == false)  ==>  (this.termine.removed has only one value)
(return == false)  ==>  (this.termine.selectors has only one value)
(return == true)  ==>  (arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" })
(return == true)  ==>  (size(this.orte.list[]) one of { 2, 3 })
(return == true)  ==>  (this.ausrichtung.toString one of { "Berlin-Rap", "Rock" })
(return == true)  ==>  (this.guv.band.ausrichtung.toString one of { "Berlin-Rap", "Rock" })
(return == true)  ==>  (this.guv.band.name.toString one of { "Green Day", "Sido" })
(return == true)  ==>  (this.minProben one of { 2, 4 })
(return == true)  ==>  (this.name.toString one of { "Green Day", "Sido" })
(return == true)  ==>  (this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] })
(return == true)  ==>  (this.termine.list[].getClass().getName() elements == Termin.class)
this.name.toString one of { "Green Day", "Sido" }
this.repertoire.list[] == []
this.repertoire.list[].getClass().getName() == []
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.orte.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sido" }
this.guv.list[] == []
this.guv.list[].getClass().getName() == []
arg0.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
size(this.mitglieder.list[]) == 7
size(this.orte.list[]) one of { 2, 3 }
size(Termin$Typ.$VALUES[]) == 2
size(arg0.zeitraum.zeitpunkte[]) == 2
Termin$Typ.$VALUES.getClass().getName() != arg0.teilnehmer.getClass().getName()
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT;condition="return == true"
return == true
===========================================================================
Band.sendeTerminvorschlag(Termin):::EXIT;condition="not(return == true)"
arg0.typus == Termin$Typ.Auftritt
Termin$Typ.Auftritt == orig(arg0.typus)
this.name has only one value
this.name.toString == "Sido"
this.ausrichtung has only one value
this.ausrichtung.toString == "Berlin-Rap"
this.minProben == 4
this.repertoire has only one value
this.repertoire.list has only one value
this.repertoire.removed has only one value
this.repertoire.selectors has only one value
this.termine has only one value
this.termine.list has only one value
this.termine.list[] == []
this.termine.list[].getClass().getName() == []
this.termine.removed has only one value
this.termine.selectors has only one value
this.mitglieder has only one value
this.mitglieder.list has only one value
this.mitglieder.list[] contains no nulls and has only one value, of length 7
this.mitglieder.removed has only one value
this.mitglieder.selectors has only one value
this.orte has only one value
this.orte.list has only one value
this.orte.list[] contains no nulls and has only one value, of length 2
this.orte.list[].getClass().getName() == [Ort, Ort]
this.orte.removed has only one value
this.orte.selectors has only one value
this.guv has only one value
this.guv.band has only one value
this.guv.band.name.toString == "Sido"
this.guv.band.ausrichtung.toString == "Berlin-Rap"
this.guv.list has only one value
this.guv.removed has only one value
this.guv.selectors has only one value
arg0.ort has only one value
arg0.ort.bezeichnung has only one value
arg0.ort.bezeichnung.toString == "Kueniglberg"
arg0.ort.infrastruktur has only one value
arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 5
arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.posten has only one value
arg0.posten.einnahmen == 0.0
arg0.posten.ausgaben == 2500.99
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung.toString == "Auftritt"
arg0.posten.datum has only one value
arg0.teilnehmer has only one value
arg0.teilnehmer[] contains no nulls and has only one value, of length 7
arg0.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
return == false
orig(this) has only one value
orig(arg0) has only one value
size(this.orte.list[]) == 2
size(arg0.ort.infrastruktur[]) == 5
size(arg0.teilnehmer[]) == 7
===========================================================================
Band.toString():::ENTER
this.name.toString one of { "Green Day", "Sunrise Avenue" }
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sunrise Avenue" }
this.guv.band.ausrichtung.toString == "Rock"
this.guv.band.minProben == 2
size(this.termine.list[]) one of { 0, 4 }
size(this.orte.list[]) one of { 0, 3 }
===========================================================================
Band.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.ausrichtung == orig(this.ausrichtung)
this.ausrichtung.toString == orig(this.ausrichtung.toString)
this.minProben == orig(this.minProben)
this.repertoire == orig(this.repertoire)
this.repertoire.list == orig(this.repertoire.list)
this.repertoire.list[] == orig(this.repertoire.list[])
this.repertoire.list.getClass().getName() == orig(this.repertoire.list.getClass().getName())
this.repertoire.removed == orig(this.repertoire.removed)
this.repertoire.removed[] == orig(this.repertoire.removed[])
this.repertoire.removed.getClass().getName() == orig(this.repertoire.removed.getClass().getName())
this.repertoire.selectors == orig(this.repertoire.selectors)
this.repertoire.selectors[] == orig(this.repertoire.selectors[])
this.repertoire.selectors.getClass().getName() == orig(this.repertoire.selectors.getClass().getName())
this.termine == orig(this.termine)
this.termine.list == orig(this.termine.list)
this.termine.list[] == orig(this.termine.list[])
this.termine.list.getClass().getName() == orig(this.termine.list.getClass().getName())
this.termine.removed == orig(this.termine.removed)
this.termine.removed[] == orig(this.termine.removed[])
this.termine.removed.getClass().getName() == orig(this.termine.removed.getClass().getName())
this.termine.selectors == orig(this.termine.selectors)
this.termine.selectors[] == orig(this.termine.selectors[])
this.termine.selectors.getClass().getName() == orig(this.termine.selectors.getClass().getName())
this.mitglieder == orig(this.mitglieder)
this.mitglieder.list == orig(this.mitglieder.list)
this.mitglieder.list[] == orig(this.mitglieder.list[])
this.mitglieder.list.getClass().getName() == orig(this.mitglieder.list.getClass().getName())
this.mitglieder.removed == orig(this.mitglieder.removed)
this.mitglieder.removed[] == orig(this.mitglieder.removed[])
this.mitglieder.removed.getClass().getName() == orig(this.mitglieder.removed.getClass().getName())
this.mitglieder.selectors == orig(this.mitglieder.selectors)
this.mitglieder.selectors[] == orig(this.mitglieder.selectors[])
this.mitglieder.selectors.getClass().getName() == orig(this.mitglieder.selectors.getClass().getName())
this.orte == orig(this.orte)
this.orte.list == orig(this.orte.list)
this.orte.list[] == orig(this.orte.list[])
this.orte.list.getClass().getName() == orig(this.orte.list.getClass().getName())
this.orte.removed == orig(this.orte.removed)
this.orte.removed[] == orig(this.orte.removed[])
this.orte.removed.getClass().getName() == orig(this.orte.removed.getClass().getName())
this.orte.selectors == orig(this.orte.selectors)
this.orte.selectors[] == orig(this.orte.selectors[])
this.orte.selectors.getClass().getName() == orig(this.orte.selectors.getClass().getName())
this.guv == orig(this.guv)
this.guv.band == orig(this.guv.band)
this.guv.band.name == orig(this.guv.band.name)
this.guv.band.name.toString == orig(this.guv.band.name.toString)
this.guv.band.ausrichtung == orig(this.guv.band.ausrichtung)
this.guv.band.ausrichtung.toString == orig(this.guv.band.ausrichtung.toString)
this.guv.band.minProben == orig(this.guv.band.minProben)
this.guv.band.repertoire == orig(this.guv.band.repertoire)
this.guv.band.termine == orig(this.guv.band.termine)
this.guv.band.mitglieder == orig(this.guv.band.mitglieder)
this.guv.band.orte == orig(this.guv.band.orte)
this.guv.band.guv == orig(this.guv.band.guv)
this.guv.list == orig(this.guv.list)
this.guv.list[] == orig(this.guv.list[])
this.guv.list.getClass().getName() == orig(this.guv.list.getClass().getName())
this.guv.removed == orig(this.guv.removed)
this.guv.removed[] == orig(this.guv.removed[])
this.guv.removed.getClass().getName() == orig(this.guv.removed.getClass().getName())
this.guv.selectors == orig(this.guv.selectors)
this.guv.selectors[] == orig(this.guv.selectors[])
this.guv.selectors.getClass().getName() == orig(this.guv.selectors.getClass().getName())
this.name.toString one of { "Green Day", "Sunrise Avenue" }
this.ausrichtung.toString == "Rock"
this.minProben == 2
this.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
this.termine.removed[] == []
this.termine.removed[].getClass().getName() == []
this.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
this.guv.band.name.toString one of { "Green Day", "Sunrise Avenue" }
this.guv.band.ausrichtung.toString == "Rock"
this.guv.band.minProben == 2
return.toString one of { "Green Day, Rock", "Sunrise Avenue, Rock" }
size(this.termine.list[]) one of { 0, 4 }
size(this.orte.list[]) one of { 0, 3 }
===========================================================================
GuV:::CLASS
===========================================================================
GuV:::OBJECT
this.band != null
this.band.name != null
this.band.name.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
this.band.ausrichtung != null
this.band.ausrichtung.toString one of { "Berlin-Rap", "Rock" }
this.band.minProben one of { 2, 4 }
this.band.repertoire != null
this.band.repertoire.list != null
this.band.repertoire.list[] == []
this.band.repertoire.list[].getClass().getName() == []
this.band.repertoire.list.getClass().getName() == java.util.ArrayList.class
this.band.repertoire.removed != null
this.band.repertoire.removed[] == []
this.band.repertoire.removed[].getClass().getName() == []
this.band.repertoire.removed.getClass().getName() == java.util.ArrayList.class
this.band.repertoire.selectors != null
this.band.repertoire.selectors[] == []
this.band.repertoire.selectors[].getClass().getName() == []
this.band.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
this.band.termine != null
this.band.termine.list != null
this.band.termine.list[] elements != null
this.band.termine.list[].getClass().getName() elements == Termin.class
this.band.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
this.band.termine.list.getClass().getName() == java.util.ArrayList.class
this.band.termine.removed != null
this.band.termine.removed[] == []
this.band.termine.removed[].getClass().getName() == []
this.band.termine.removed.getClass().getName() == java.util.ArrayList.class
this.band.termine.selectors != null
this.band.termine.selectors[] == []
this.band.termine.selectors[].getClass().getName() == []
this.band.termine.selectors.getClass().getName() == java.util.ArrayList.class
this.band.mitglieder != null
this.band.mitglieder.list != null
this.band.mitglieder.list[] elements != null
this.band.mitglieder.list[].getClass().getName() elements == Mitglied.class
this.band.mitglieder.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
this.band.mitglieder.list.getClass().getName() == java.util.ArrayList.class
this.band.mitglieder.removed != null
this.band.mitglieder.removed[] == []
this.band.mitglieder.removed[].getClass().getName() == []
this.band.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
this.band.mitglieder.selectors != null
this.band.mitglieder.selectors[] == []
this.band.mitglieder.selectors[].getClass().getName() == []
this.band.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
this.band.orte != null
this.band.orte.list != null
this.band.orte.list[] elements != null
this.band.orte.list[].getClass().getName() elements == Ort.class
this.band.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
this.band.orte.list.getClass().getName() == java.util.ArrayList.class
this.band.orte.removed != null
this.band.orte.removed[] == []
this.band.orte.removed[].getClass().getName() == []
this.band.orte.removed.getClass().getName() == java.util.ArrayList.class
this.band.orte.selectors != null
this.band.orte.selectors[] == []
this.band.orte.selectors[].getClass().getName() == []
this.band.orte.selectors.getClass().getName() == java.util.ArrayList.class
this.band.guv.band has only one value
this.band.guv.band != null
this.band.guv.list has only one value
this.band.guv.list != null
this.band.guv.list[] contains no nulls and has only one value, of length 3
this.band.guv.list[] elements != null
this.band.guv.list[].getClass().getName() == [Posten, Posten, Posten]
this.band.guv.list[].getClass().getName() elements == Posten.class
this.band.guv.list.getClass().getName() == java.util.ArrayList.class
this.band.guv.removed has only one value
this.band.guv.removed != null
this.band.guv.removed[] == []
this.band.guv.removed[].getClass().getName() == []
this.band.guv.removed.getClass().getName() == java.util.ArrayList.class
this.band.guv.selectors has only one value
this.band.guv.selectors != null
this.band.guv.selectors[] == []
this.band.guv.selectors[].getClass().getName() == []
this.band.guv.selectors.getClass().getName() == java.util.ArrayList.class
this.list != null
this.list[] elements != null
this.list[].getClass().getName() elements == Posten.class
this.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
this.list.getClass().getName() == java.util.ArrayList.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors != null
this.selectors[] elements has only one value
this.selectors[] elements != null
this.selectors[].getClass().getName() elements == Posten.ZeitraumSelektor.class
this.selectors[].getClass().getName() one of { [], [Posten.ZeitraumSelektor] }
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.band.termine.list[]) one of { 0, 4 }
size(this.band.mitglieder.list[]) one of { 0, 7 }
size(this.band.orte.list[]) one of { 0, 3 }
size(this.band.orte.list[])-1 != 0
size(this.band.guv.list[]) == 3
size(this.list[]) one of { 0, 3 }
size(this.list[])-1 != 0
size(this.selectors[]) one of { 0, 1 }
===========================================================================
GuV.GuV(Band):::ENTER
arg0.name.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
arg0.ausrichtung.toString one of { "Berlin-Rap", "Rock" }
arg0.minProben one of { 2, 4 }
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.removed.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.list.getClass().getName() == java.util.ArrayList.class
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.removed.getClass().getName() == java.util.ArrayList.class
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.termine.selectors.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.list[] == []
arg0.mitglieder.list[].getClass().getName() == []
arg0.mitglieder.list.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.list.getClass().getName() == java.util.ArrayList.class
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.removed.getClass().getName() == java.util.ArrayList.class
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.orte.selectors.getClass().getName() == java.util.ArrayList.class
arg0.guv == null
===========================================================================
GuV.GuV(Band):::EXIT
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.removed.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.repertoire.selectors.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.removed.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.termine.selectors.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.removed.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.mitglieder.selectors.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.removed.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.orte.selectors.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.guv == orig(arg0.guv)
this.band.termine.list[] == []
this.band.termine.list[].getClass().getName() == []
this.band.mitglieder.list[] == []
this.band.mitglieder.list[].getClass().getName() == []
this.band.orte.list[] == []
this.band.orte.list[].getClass().getName() == []
this.band.guv == null
this.list[] == []
this.list[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0.name.toString one of { "Green Day", "Sido", "Sunrise Avenue" }
arg0.ausrichtung.toString one of { "Berlin-Rap", "Rock" }
arg0.minProben one of { 2, 4 }
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.removed.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.list.getClass().getName() == java.util.ArrayList.class
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.removed.getClass().getName() == java.util.ArrayList.class
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.termine.selectors.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.list[] == []
arg0.mitglieder.list[].getClass().getName() == []
arg0.mitglieder.list.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.list.getClass().getName() == java.util.ArrayList.class
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.removed.getClass().getName() == java.util.ArrayList.class
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.orte.selectors.getClass().getName() == java.util.ArrayList.class
arg0.guv == null
===========================================================================
GuV.GuV(Band, GuV, java.util.List):::ENTER
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.removed.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.list.getClass().getName() == java.util.ArrayList.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.removed.getClass().getName() == java.util.ArrayList.class
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.termine.selectors.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.list.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.list.getClass().getName() == java.util.ArrayList.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.removed.getClass().getName() == java.util.ArrayList.class
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.orte.selectors.getClass().getName() == java.util.ArrayList.class
arg0.guv has only one value
arg0.guv.band has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.list.getClass().getName() == java.util.ArrayList.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.removed.getClass().getName() == java.util.ArrayList.class
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
arg0.guv.selectors.getClass().getName() == java.util.ArrayList.class
arg1 has only one value
arg1.band has only one value
arg1.band.name has only one value
arg1.band.name.toString == "Green Day"
arg1.band.ausrichtung has only one value
arg1.band.ausrichtung.toString == "Rock"
arg1.band.minProben == 2
arg1.band.repertoire has only one value
arg1.band.termine has only one value
arg1.band.mitglieder has only one value
arg1.band.orte has only one value
arg1.band.guv has only one value
arg1.list has only one value
arg1.list[] contains no nulls and has only one value, of length 3
arg1.list[].getClass().getName() == [Posten, Posten, Posten]
arg1.list[].getClass().getName() elements == Posten.class
arg1.list.getClass().getName() == java.util.ArrayList.class
arg1.removed has only one value
arg1.removed[] == []
arg1.removed[].getClass().getName() == []
arg1.removed.getClass().getName() == java.util.ArrayList.class
arg1.selectors has only one value
arg1.selectors[] == []
arg1.selectors[].getClass().getName() == []
arg1.selectors.getClass().getName() == java.util.ArrayList.class
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 1
arg2[] elements has only one value
arg2[].getClass().getName() == [Posten.ZeitraumSelektor]
arg2[].getClass().getName() elements == Posten.ZeitraumSelektor.class
arg2.getClass().getName() == java.util.ArrayList.class
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
size(arg1.list[]) == 3
size(arg2[]) == 1
===========================================================================
GuV.GuV(Band, GuV, java.util.List):::EXIT
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.removed.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.repertoire.selectors.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.removed.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.termine.selectors.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.removed.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.mitglieder.selectors.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.removed.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.orte.selectors.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0.guv.band)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.removed.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.guv.selectors.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg1.band == orig(arg1.band)
arg1.band.name == orig(arg1.band.name)
arg1.band.name.toString == orig(arg1.band.name.toString)
arg1.band.ausrichtung == orig(arg1.band.ausrichtung)
arg1.band.ausrichtung.toString == orig(arg1.band.ausrichtung.toString)
arg1.band.minProben == orig(arg1.band.minProben)
arg1.band.repertoire == orig(arg1.band.repertoire)
arg1.band.termine == orig(arg1.band.termine)
arg1.band.mitglieder == orig(arg1.band.mitglieder)
arg1.band.orte == orig(arg1.band.orte)
arg1.band.guv == orig(arg1.band.guv)
arg1.list == orig(arg1.list)
arg1.list[] == orig(arg1.list[])
arg1.list.getClass().getName() == orig(arg1.list.getClass().getName())
arg1.removed == orig(arg1.removed)
arg1.removed[] == orig(arg1.removed[])
arg1.removed.getClass().getName() == orig(arg1.removed.getClass().getName())
arg1.selectors == orig(arg1.selectors)
arg1.selectors[] == orig(arg1.selectors[])
arg1.selectors.getClass().getName() == orig(arg1.selectors.getClass().getName())
arg2[] == orig(arg2[])
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
this.selectors has only one value
this.selectors[] contains no nulls and has only one value, of length 1
this.selectors[].getClass().getName() == [Posten.ZeitraumSelektor]
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.removed.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.repertoire.selectors.getClass().getName() == java.util.ArrayList.class
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.list.getClass().getName() == java.util.ArrayList.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.removed.getClass().getName() == java.util.ArrayList.class
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.termine.selectors.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.list.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.removed.getClass().getName() == java.util.ArrayList.class
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.mitglieder.selectors.getClass().getName() == java.util.ArrayList.class
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.list.getClass().getName() == java.util.ArrayList.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.removed.getClass().getName() == java.util.ArrayList.class
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.orte.selectors.getClass().getName() == java.util.ArrayList.class
arg0.guv has only one value
arg0.guv.band has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.list.getClass().getName() == java.util.ArrayList.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.removed.getClass().getName() == java.util.ArrayList.class
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
arg0.guv.selectors.getClass().getName() == java.util.ArrayList.class
arg1.band has only one value
arg1.band.name has only one value
arg1.band.name.toString == "Green Day"
arg1.band.ausrichtung has only one value
arg1.band.ausrichtung.toString == "Rock"
arg1.band.minProben == 2
arg1.band.repertoire has only one value
arg1.band.termine has only one value
arg1.band.mitglieder has only one value
arg1.band.orte has only one value
arg1.band.guv has only one value
arg1.list has only one value
arg1.list[] contains no nulls and has only one value, of length 3
arg1.list[].getClass().getName() == [Posten, Posten, Posten]
arg1.list[].getClass().getName() elements == Posten.class
arg1.list.getClass().getName() == java.util.ArrayList.class
arg1.removed has only one value
arg1.removed[] == []
arg1.removed[].getClass().getName() == []
arg1.removed.getClass().getName() == java.util.ArrayList.class
arg1.selectors has only one value
arg1.selectors[] == []
arg1.selectors[].getClass().getName() == []
arg1.selectors.getClass().getName() == java.util.ArrayList.class
arg2[] contains no nulls and has only one value, of length 1
arg2[] elements has only one value
arg2[].getClass().getName() == [Posten.ZeitraumSelektor]
arg2[].getClass().getName() elements == Posten.ZeitraumSelektor.class
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
size(this.selectors[]) == 1
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
size(arg1.list[]) == 3
===========================================================================
GuV.getAusgaben():::ENTER
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.getAusgaben():::EXIT
this.band == orig(this.band)
this.band.name == orig(this.band.name)
this.band.name.toString == orig(this.band.name.toString)
this.band.ausrichtung == orig(this.band.ausrichtung)
this.band.ausrichtung.toString == orig(this.band.ausrichtung.toString)
this.band.minProben == orig(this.band.minProben)
this.band.repertoire == orig(this.band.repertoire)
this.band.repertoire.list == orig(this.band.repertoire.list)
this.band.repertoire.list[] == orig(this.band.repertoire.list[])
this.band.repertoire.list.getClass().getName() == orig(this.band.repertoire.list.getClass().getName())
this.band.repertoire.removed == orig(this.band.repertoire.removed)
this.band.repertoire.removed[] == orig(this.band.repertoire.removed[])
this.band.repertoire.removed.getClass().getName() == orig(this.band.repertoire.removed.getClass().getName())
this.band.repertoire.selectors == orig(this.band.repertoire.selectors)
this.band.repertoire.selectors[] == orig(this.band.repertoire.selectors[])
this.band.repertoire.selectors.getClass().getName() == orig(this.band.repertoire.selectors.getClass().getName())
this.band.termine == orig(this.band.termine)
this.band.termine.list == orig(this.band.termine.list)
this.band.termine.list[] == orig(this.band.termine.list[])
this.band.termine.list.getClass().getName() == orig(this.band.termine.list.getClass().getName())
this.band.termine.removed == orig(this.band.termine.removed)
this.band.termine.removed[] == orig(this.band.termine.removed[])
this.band.termine.removed.getClass().getName() == orig(this.band.termine.removed.getClass().getName())
this.band.termine.selectors == orig(this.band.termine.selectors)
this.band.termine.selectors[] == orig(this.band.termine.selectors[])
this.band.termine.selectors.getClass().getName() == orig(this.band.termine.selectors.getClass().getName())
this.band.mitglieder == orig(this.band.mitglieder)
this.band.mitglieder.list == orig(this.band.mitglieder.list)
this.band.mitglieder.list[] == orig(this.band.mitglieder.list[])
this.band.mitglieder.list.getClass().getName() == orig(this.band.mitglieder.list.getClass().getName())
this.band.mitglieder.removed == orig(this.band.mitglieder.removed)
this.band.mitglieder.removed[] == orig(this.band.mitglieder.removed[])
this.band.mitglieder.removed.getClass().getName() == orig(this.band.mitglieder.removed.getClass().getName())
this.band.mitglieder.selectors == orig(this.band.mitglieder.selectors)
this.band.mitglieder.selectors[] == orig(this.band.mitglieder.selectors[])
this.band.mitglieder.selectors.getClass().getName() == orig(this.band.mitglieder.selectors.getClass().getName())
this.band.orte == orig(this.band.orte)
this.band.orte.list == orig(this.band.orte.list)
this.band.orte.list[] == orig(this.band.orte.list[])
this.band.orte.list.getClass().getName() == orig(this.band.orte.list.getClass().getName())
this.band.orte.removed == orig(this.band.orte.removed)
this.band.orte.removed[] == orig(this.band.orte.removed[])
this.band.orte.removed.getClass().getName() == orig(this.band.orte.removed.getClass().getName())
this.band.orte.selectors == orig(this.band.orte.selectors)
this.band.orte.selectors[] == orig(this.band.orte.selectors[])
this.band.orte.selectors.getClass().getName() == orig(this.band.orte.selectors.getClass().getName())
this.band.guv == orig(this.band.guv)
this.band.guv.band == orig(this.band.guv.band)
this.band.guv.list == orig(this.band.guv.list)
this.band.guv.list[] == orig(this.band.guv.list[])
this.band.guv.list.getClass().getName() == orig(this.band.guv.list.getClass().getName())
this.band.guv.removed == orig(this.band.guv.removed)
this.band.guv.removed[] == orig(this.band.guv.removed[])
this.band.guv.removed.getClass().getName() == orig(this.band.guv.removed.getClass().getName())
this.band.guv.selectors == orig(this.band.guv.selectors)
this.band.guv.selectors[] == orig(this.band.guv.selectors[])
this.band.guv.selectors.getClass().getName() == orig(this.band.guv.selectors.getClass().getName())
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
return one of { 3500.0, 4500.0 }
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.getEinnahmen():::ENTER
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.getEinnahmen():::EXIT
this.band == orig(this.band)
this.band.name == orig(this.band.name)
this.band.name.toString == orig(this.band.name.toString)
this.band.ausrichtung == orig(this.band.ausrichtung)
this.band.ausrichtung.toString == orig(this.band.ausrichtung.toString)
this.band.minProben == orig(this.band.minProben)
this.band.repertoire == orig(this.band.repertoire)
this.band.repertoire.list == orig(this.band.repertoire.list)
this.band.repertoire.list[] == orig(this.band.repertoire.list[])
this.band.repertoire.list.getClass().getName() == orig(this.band.repertoire.list.getClass().getName())
this.band.repertoire.removed == orig(this.band.repertoire.removed)
this.band.repertoire.removed[] == orig(this.band.repertoire.removed[])
this.band.repertoire.removed.getClass().getName() == orig(this.band.repertoire.removed.getClass().getName())
this.band.repertoire.selectors == orig(this.band.repertoire.selectors)
this.band.repertoire.selectors[] == orig(this.band.repertoire.selectors[])
this.band.repertoire.selectors.getClass().getName() == orig(this.band.repertoire.selectors.getClass().getName())
this.band.termine == orig(this.band.termine)
this.band.termine.list == orig(this.band.termine.list)
this.band.termine.list[] == orig(this.band.termine.list[])
this.band.termine.list.getClass().getName() == orig(this.band.termine.list.getClass().getName())
this.band.termine.removed == orig(this.band.termine.removed)
this.band.termine.removed[] == orig(this.band.termine.removed[])
this.band.termine.removed.getClass().getName() == orig(this.band.termine.removed.getClass().getName())
this.band.termine.selectors == orig(this.band.termine.selectors)
this.band.termine.selectors[] == orig(this.band.termine.selectors[])
this.band.termine.selectors.getClass().getName() == orig(this.band.termine.selectors.getClass().getName())
this.band.mitglieder == orig(this.band.mitglieder)
this.band.mitglieder.list == orig(this.band.mitglieder.list)
this.band.mitglieder.list[] == orig(this.band.mitglieder.list[])
this.band.mitglieder.list.getClass().getName() == orig(this.band.mitglieder.list.getClass().getName())
this.band.mitglieder.removed == orig(this.band.mitglieder.removed)
this.band.mitglieder.removed[] == orig(this.band.mitglieder.removed[])
this.band.mitglieder.removed.getClass().getName() == orig(this.band.mitglieder.removed.getClass().getName())
this.band.mitglieder.selectors == orig(this.band.mitglieder.selectors)
this.band.mitglieder.selectors[] == orig(this.band.mitglieder.selectors[])
this.band.mitglieder.selectors.getClass().getName() == orig(this.band.mitglieder.selectors.getClass().getName())
this.band.orte == orig(this.band.orte)
this.band.orte.list == orig(this.band.orte.list)
this.band.orte.list[] == orig(this.band.orte.list[])
this.band.orte.list.getClass().getName() == orig(this.band.orte.list.getClass().getName())
this.band.orte.removed == orig(this.band.orte.removed)
this.band.orte.removed[] == orig(this.band.orte.removed[])
this.band.orte.removed.getClass().getName() == orig(this.band.orte.removed.getClass().getName())
this.band.orte.selectors == orig(this.band.orte.selectors)
this.band.orte.selectors[] == orig(this.band.orte.selectors[])
this.band.orte.selectors.getClass().getName() == orig(this.band.orte.selectors.getClass().getName())
this.band.guv == orig(this.band.guv)
this.band.guv.band == orig(this.band.guv.band)
this.band.guv.list == orig(this.band.guv.list)
this.band.guv.list[] == orig(this.band.guv.list[])
this.band.guv.list.getClass().getName() == orig(this.band.guv.list.getClass().getName())
this.band.guv.removed == orig(this.band.guv.removed)
this.band.guv.removed[] == orig(this.band.guv.removed[])
this.band.guv.removed.getClass().getName() == orig(this.band.guv.removed.getClass().getName())
this.band.guv.selectors == orig(this.band.guv.selectors)
this.band.guv.selectors[] == orig(this.band.guv.selectors[])
this.band.guv.selectors.getClass().getName() == orig(this.band.guv.selectors.getClass().getName())
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
return one of { 13000.0, 23000.0 }
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.getGewinn():::ENTER
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.getGewinn():::EXIT
this.band == orig(this.band)
this.band.name == orig(this.band.name)
this.band.name.toString == orig(this.band.name.toString)
this.band.ausrichtung == orig(this.band.ausrichtung)
this.band.ausrichtung.toString == orig(this.band.ausrichtung.toString)
this.band.minProben == orig(this.band.minProben)
this.band.repertoire == orig(this.band.repertoire)
this.band.repertoire.list == orig(this.band.repertoire.list)
this.band.repertoire.list[] == orig(this.band.repertoire.list[])
this.band.repertoire.list.getClass().getName() == orig(this.band.repertoire.list.getClass().getName())
this.band.repertoire.removed == orig(this.band.repertoire.removed)
this.band.repertoire.removed[] == orig(this.band.repertoire.removed[])
this.band.repertoire.removed.getClass().getName() == orig(this.band.repertoire.removed.getClass().getName())
this.band.repertoire.selectors == orig(this.band.repertoire.selectors)
this.band.repertoire.selectors[] == orig(this.band.repertoire.selectors[])
this.band.repertoire.selectors.getClass().getName() == orig(this.band.repertoire.selectors.getClass().getName())
this.band.termine == orig(this.band.termine)
this.band.termine.list == orig(this.band.termine.list)
this.band.termine.list[] == orig(this.band.termine.list[])
this.band.termine.list.getClass().getName() == orig(this.band.termine.list.getClass().getName())
this.band.termine.removed == orig(this.band.termine.removed)
this.band.termine.removed[] == orig(this.band.termine.removed[])
this.band.termine.removed.getClass().getName() == orig(this.band.termine.removed.getClass().getName())
this.band.termine.selectors == orig(this.band.termine.selectors)
this.band.termine.selectors[] == orig(this.band.termine.selectors[])
this.band.termine.selectors.getClass().getName() == orig(this.band.termine.selectors.getClass().getName())
this.band.mitglieder == orig(this.band.mitglieder)
this.band.mitglieder.list == orig(this.band.mitglieder.list)
this.band.mitglieder.list[] == orig(this.band.mitglieder.list[])
this.band.mitglieder.list.getClass().getName() == orig(this.band.mitglieder.list.getClass().getName())
this.band.mitglieder.removed == orig(this.band.mitglieder.removed)
this.band.mitglieder.removed[] == orig(this.band.mitglieder.removed[])
this.band.mitglieder.removed.getClass().getName() == orig(this.band.mitglieder.removed.getClass().getName())
this.band.mitglieder.selectors == orig(this.band.mitglieder.selectors)
this.band.mitglieder.selectors[] == orig(this.band.mitglieder.selectors[])
this.band.mitglieder.selectors.getClass().getName() == orig(this.band.mitglieder.selectors.getClass().getName())
this.band.orte == orig(this.band.orte)
this.band.orte.list == orig(this.band.orte.list)
this.band.orte.list[] == orig(this.band.orte.list[])
this.band.orte.list.getClass().getName() == orig(this.band.orte.list.getClass().getName())
this.band.orte.removed == orig(this.band.orte.removed)
this.band.orte.removed[] == orig(this.band.orte.removed[])
this.band.orte.removed.getClass().getName() == orig(this.band.orte.removed.getClass().getName())
this.band.orte.selectors == orig(this.band.orte.selectors)
this.band.orte.selectors[] == orig(this.band.orte.selectors[])
this.band.orte.selectors.getClass().getName() == orig(this.band.orte.selectors.getClass().getName())
this.band.guv == orig(this.band.guv)
this.band.guv.band == orig(this.band.guv.band)
this.band.guv.list == orig(this.band.guv.list)
this.band.guv.list[] == orig(this.band.guv.list[])
this.band.guv.list.getClass().getName() == orig(this.band.guv.list.getClass().getName())
this.band.guv.removed == orig(this.band.guv.removed)
this.band.guv.removed[] == orig(this.band.guv.removed[])
this.band.guv.removed.getClass().getName() == orig(this.band.guv.removed.getClass().getName())
this.band.guv.selectors == orig(this.band.guv.selectors)
this.band.guv.selectors[] == orig(this.band.guv.selectors[])
this.band.guv.selectors.getClass().getName() == orig(this.band.guv.selectors.getClass().getName())
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
return one of { 9500.0, 18500.0 }
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
===========================================================================
GuV.select(java.util.List):::ENTER
this has only one value
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 1
arg0[] elements has only one value
arg0[].getClass().getName() == [Posten.ZeitraumSelektor]
arg0[].getClass().getName() elements == Posten.ZeitraumSelektor.class
arg0.getClass().getName() == java.util.ArrayList.class
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
size(arg0[]) == 1
===========================================================================
GuV.select(java.util.List):::EXIT
this.band == orig(this.band)
this.band.name == orig(this.band.name)
this.band.name.toString == orig(this.band.name.toString)
this.band.ausrichtung == orig(this.band.ausrichtung)
this.band.ausrichtung.toString == orig(this.band.ausrichtung.toString)
this.band.minProben == orig(this.band.minProben)
this.band.repertoire == orig(this.band.repertoire)
this.band.repertoire.list == orig(this.band.repertoire.list)
this.band.repertoire.list[] == orig(this.band.repertoire.list[])
this.band.repertoire.list.getClass().getName() == orig(this.band.repertoire.list.getClass().getName())
this.band.repertoire.removed == orig(this.band.repertoire.removed)
this.band.repertoire.removed[] == orig(this.band.repertoire.removed[])
this.band.repertoire.removed.getClass().getName() == orig(this.band.repertoire.removed.getClass().getName())
this.band.repertoire.selectors == orig(this.band.repertoire.selectors)
this.band.repertoire.selectors[] == orig(this.band.repertoire.selectors[])
this.band.repertoire.selectors.getClass().getName() == orig(this.band.repertoire.selectors.getClass().getName())
this.band.termine == orig(this.band.termine)
this.band.termine.list == orig(this.band.termine.list)
this.band.termine.list[] == orig(this.band.termine.list[])
this.band.termine.list.getClass().getName() == orig(this.band.termine.list.getClass().getName())
this.band.termine.removed == orig(this.band.termine.removed)
this.band.termine.removed[] == orig(this.band.termine.removed[])
this.band.termine.removed.getClass().getName() == orig(this.band.termine.removed.getClass().getName())
this.band.termine.selectors == orig(this.band.termine.selectors)
this.band.termine.selectors[] == orig(this.band.termine.selectors[])
this.band.termine.selectors.getClass().getName() == orig(this.band.termine.selectors.getClass().getName())
this.band.mitglieder == orig(this.band.mitglieder)
this.band.mitglieder.list == orig(this.band.mitglieder.list)
this.band.mitglieder.list[] == orig(this.band.mitglieder.list[])
this.band.mitglieder.list.getClass().getName() == orig(this.band.mitglieder.list.getClass().getName())
this.band.mitglieder.removed == orig(this.band.mitglieder.removed)
this.band.mitglieder.removed[] == orig(this.band.mitglieder.removed[])
this.band.mitglieder.removed.getClass().getName() == orig(this.band.mitglieder.removed.getClass().getName())
this.band.mitglieder.selectors == orig(this.band.mitglieder.selectors)
this.band.mitglieder.selectors[] == orig(this.band.mitglieder.selectors[])
this.band.mitglieder.selectors.getClass().getName() == orig(this.band.mitglieder.selectors.getClass().getName())
this.band.orte == orig(this.band.orte)
this.band.orte.list == orig(this.band.orte.list)
this.band.orte.list[] == orig(this.band.orte.list[])
this.band.orte.list.getClass().getName() == orig(this.band.orte.list.getClass().getName())
this.band.orte.removed == orig(this.band.orte.removed)
this.band.orte.removed[] == orig(this.band.orte.removed[])
this.band.orte.removed.getClass().getName() == orig(this.band.orte.removed.getClass().getName())
this.band.orte.selectors == orig(this.band.orte.selectors)
this.band.orte.selectors[] == orig(this.band.orte.selectors[])
this.band.orte.selectors.getClass().getName() == orig(this.band.orte.selectors.getClass().getName())
this.band.guv == orig(this.band.guv)
this.band.guv.band == orig(this.band.guv.band)
this.band.guv.list == orig(this.band.guv.list)
this.band.guv.list[] == orig(this.band.guv.list[])
this.band.guv.list.getClass().getName() == orig(this.band.guv.list.getClass().getName())
this.band.guv.removed == orig(this.band.guv.removed)
this.band.guv.removed[] == orig(this.band.guv.removed[])
this.band.guv.removed.getClass().getName() == orig(this.band.guv.removed.getClass().getName())
this.band.guv.selectors == orig(this.band.guv.selectors)
this.band.guv.selectors[] == orig(this.band.guv.selectors[])
this.band.guv.selectors.getClass().getName() == orig(this.band.guv.selectors.getClass().getName())
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.band has only one value
this.band.name has only one value
this.band.name.toString == "Green Day"
this.band.ausrichtung has only one value
this.band.ausrichtung.toString == "Rock"
this.band.minProben == 2
this.band.repertoire has only one value
this.band.repertoire.list has only one value
this.band.repertoire.removed has only one value
this.band.repertoire.selectors has only one value
this.band.termine has only one value
this.band.termine.list has only one value
this.band.termine.list[] contains no nulls and has only one value, of length 4
this.band.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
this.band.termine.removed has only one value
this.band.termine.selectors has only one value
this.band.mitglieder has only one value
this.band.mitglieder.list has only one value
this.band.mitglieder.list[] contains no nulls and has only one value, of length 7
this.band.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.band.mitglieder.removed has only one value
this.band.mitglieder.selectors has only one value
this.band.orte has only one value
this.band.orte.list has only one value
this.band.orte.list[] contains no nulls and has only one value, of length 3
this.band.orte.list[].getClass().getName() == [Ort, Ort, Ort]
this.band.orte.removed has only one value
this.band.orte.selectors has only one value
this.band.guv has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Posten, Posten, Posten]
this.removed has only one value
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[] contains no nulls and has only one value, of length 1
arg0[] elements has only one value
arg0[].getClass().getName() == [Posten.ZeitraumSelektor]
arg0[].getClass().getName() elements == Posten.ZeitraumSelektor.class
return has only one value
return.band has only one value
return.band.name has only one value
return.band.name.toString == "Green Day"
return.band.ausrichtung has only one value
return.band.ausrichtung.toString == "Rock"
return.band.minProben == 2
return.band.repertoire has only one value
return.band.termine has only one value
return.band.mitglieder has only one value
return.band.orte has only one value
return.band.guv has only one value
return.list has only one value
return.list[] contains no nulls and has only one value, of length 3
return.list[].getClass().getName() == [Posten, Posten, Posten]
return.list[].getClass().getName() elements == Posten.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] == []
return.removed[].getClass().getName() == []
return.removed.getClass().getName() == java.util.ArrayList.class
return.selectors has only one value
return.selectors[] contains no nulls and has only one value, of length 1
return.selectors[] elements has only one value
return.selectors[].getClass().getName() == [Posten.ZeitraumSelektor]
return.selectors[].getClass().getName() elements == Posten.ZeitraumSelektor.class
return.selectors.getClass().getName() == java.util.ArrayList.class
size(this.band.termine.list[]) == 4
size(this.band.mitglieder.list[]) == 7
size(this.band.orte.list[]) == 3
size(this.list[]) == 3
size(return.list[]) == 3
size(return.selectors[]) == 1
===========================================================================
Mitglied$InstrumentSelektor:::OBJECT
this has only one value
this.instrument has only one value
this.instrument != null
this.instrument.toString == "Bass"
===========================================================================
Mitglied$InstrumentSelektor.InstrumentSelektor(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Bass"
===========================================================================
Mitglied$InstrumentSelektor.InstrumentSelektor(java.lang.String):::EXIT
this.instrument == orig(arg0)
arg0.toString == orig(arg0.toString)
arg0.toString == "Bass"
===========================================================================
Mitglied$InstrumentSelektor.select(Mitglied):::ENTER
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.instrument.toString one of { "Bass", "Gitarre", "Schlagzeug" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$InstrumentSelektor.select(Mitglied):::EXIT
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.nachrichten.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
(arg0.instrument.toString == "Bass")  <==>  (return == true)
(arg0.instrument.toString == "Bass")  ==>  (arg0.instrument has only one value)
(arg0.instrument.toString == "Bass")  ==>  (arg0.name.toString one of { "Bob Bass", "Mike Dirnt" })
(arg0.instrument.toString == "Bass")  ==>  (arg0.telNr.toString one of { "111/78755", "321/12323" })
(arg0.instrument.toString == "Bass")  ==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date])
(arg0.instrument.toString == "Bass")  ==>  (size(arg0.zeitraum.zeitpunkte[]) == 1)
(arg0.instrument.toString == "Bass")  ==>  (this.instrument == arg0.instrument)
(arg0.instrument.toString one of { "Gitarre", "Schlagzeug" })  <==>  (return == false)
(arg0.instrument.toString one of { "Gitarre", "Schlagzeug" })  ==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] })
(arg0.instrument.toString one of { "Gitarre", "Schlagzeug" })  ==>  (size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 })
arg0.instrument.toString one of { "Bass", "Gitarre", "Schlagzeug" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$InstrumentSelektor.select(Mitglied):::EXIT;condition="return == true"
this.instrument == arg0.instrument
this.instrument == orig(arg0.instrument)
arg0.name.toString one of { "Bob Bass", "Mike Dirnt" }
arg0.telNr.toString one of { "111/78755", "321/12323" }
arg0.instrument.toString == "Bass"
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
return == true
size(arg0.zeitraum.zeitpunkte[]) == 1
===========================================================================
Mitglied$InstrumentSelektor.select(Mitglied):::EXIT;condition="not(return == true)"
arg0.instrument.toString one of { "Gitarre", "Schlagzeug" }
return == false
===========================================================================
Mitglied$NameSelektor:::OBJECT
this.namen != null
this.namen.getClass().getName() == java.lang.String[].class
this.namen[] elements != null
this.namen[].getClass().getName() elements == java.lang.String.class
this.namen[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
size(this.namen[]) one of { 1, 4 }
===========================================================================
Mitglied$NameSelektor.NameSelektor(java.lang.String[]):::ENTER
arg0.getClass().getName() == java.lang.String[].class
size(arg0[]) one of { 1, 4 }
===========================================================================
Mitglied$NameSelektor.NameSelektor(java.lang.String[]):::EXIT
this.namen == orig(arg0)
this.namen.getClass().getName() == orig(arg0.getClass().getName())
arg0[] == orig(arg0[])
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::ENTER
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0 != null
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
this.namen.getClass().getName() != arg0.zeitraum.zeitpunkte.getClass().getName()
this.namen.getClass().getName() != arg0.nachrichten.getClass().getName()
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT156
return == true
arg0.name in this.namen[]
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT156;condition="return == true"
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT160
return == false
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT160;condition="not(return == true)"
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT
this.namen == orig(this.namen)
this.namen.getClass().getName() == orig(this.namen.getClass().getName())
this.namen[] == orig(this.namen[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.nachrichten.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
(return == true)  ==>  (arg0.name in this.namen[])
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
this.namen.getClass().getName() != arg0.zeitraum.zeitpunkte.getClass().getName()
this.namen.getClass().getName() != arg0.nachrichten.getClass().getName()
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT;condition="return == true"
return == true
arg0.name in this.namen[]
===========================================================================
Mitglied$NameSelektor.select(Mitglied):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Mitglied$TypSelector:::OBJECT
===========================================================================
Mitglied$TypSelector.TypSelector(boolean):::ENTER
===========================================================================
Mitglied$TypSelector.TypSelector(boolean):::EXIT
this.isE == orig(arg0)
===========================================================================
Mitglied$TypSelector.select(Mitglied):::ENTER
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0 != null
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$TypSelector.select(Mitglied):::EXIT
this.isE == orig(this.isE)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.nachrichten.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
(return == true)  ==>  (this.isE == arg0.ersatzmitglied)
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
arg0.zeitraum.zeitpunkte.getClass().getName() != arg0.nachrichten.getClass().getName()
===========================================================================
Mitglied$TypSelector.select(Mitglied):::EXIT;condition="return == true"
this.isE == arg0.ersatzmitglied
this.isE == orig(arg0.ersatzmitglied)
return == true
===========================================================================
Mitglied$TypSelector.select(Mitglied):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Mitglied:::CLASS
===========================================================================
Mitglied:::OBJECT
this.name != null
this.telNr != null
this.instrument != null
this.zeitraum != null
this.zeitraum.zeitpunkte != null
this.zeitraum.zeitpunkte[] elements != null
this.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
this.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.nachrichten != null
this.nachrichten.getClass().getName() == java.util.LinkedList.class
this.terminvorschlaege != null
this.terminvorschlaege.getClass().getName() == java.util.LinkedList.class
size(this.zeitraum.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Mitglied.Mitglied(java.lang.String, java.lang.String, java.lang.String, Zeitraum, boolean):::ENTER
arg0 != null
arg1 != null
arg2 != null
arg3 != null
arg3.zeitpunkte != null
arg3.zeitpunkte[] elements != null
arg3.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg3.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg3.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg3.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Mitglied.Mitglied(java.lang.String, java.lang.String, java.lang.String, Zeitraum, boolean):::EXIT
this.name == orig(arg0)
this.telNr == orig(arg1)
this.instrument == orig(arg2)
this.zeitraum == orig(arg3)
this.zeitraum.zeitpunkte == arg3.zeitpunkte
this.zeitraum.zeitpunkte.getClass().getName() == arg3.zeitpunkte.getClass().getName()
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.ersatzmitglied == orig(arg4)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
arg3.zeitpunkte == orig(arg3.zeitpunkte)
arg3.zeitpunkte[] == orig(arg3.zeitpunkte[])
arg3.zeitpunkte.getClass().getName() == orig(arg3.zeitpunkte.getClass().getName())
arg3.zeitpunkte != null
arg3.zeitpunkte[] elements != null
arg3.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg3.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg3.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg3.zeitpunkte[]) one of { 1, 2 }
this.nachrichten.getClass().getName() != arg3.zeitpunkte.getClass().getName()
===========================================================================
Mitglied.getNachrichten():::ENTER
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitraum.zeitpunkte[]) == 1
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.getNachrichten():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == return
this.nachrichten.getClass().getName() == return.getClass().getName()
this.terminvorschlaege == orig(this.terminvorschlaege)
this.terminvorschlaege.getClass().getName() == return.getClass().getName()
this.ersatzmitglied == orig(this.ersatzmitglied)
return == orig(this.nachrichten)
return.getClass().getName() == orig(this.nachrichten.getClass().getName())
return.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
return != null
return.getClass().getName() == java.util.LinkedList.class
size(this.zeitraum.zeitpunkte[]) == 1
this.zeitraum.zeitpunkte.getClass().getName() != return.getClass().getName()
===========================================================================
Mitglied.getTerminvorschlaege():::ENTER
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.getTerminvorschlaege():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == return.getClass().getName()
this.terminvorschlaege == return
this.terminvorschlaege.getClass().getName() == return.getClass().getName()
this.ersatzmitglied == orig(this.ersatzmitglied)
return == orig(this.terminvorschlaege)
return.getClass().getName() == orig(this.nachrichten.getClass().getName())
return.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
return != null
return.getClass().getName() == java.util.LinkedList.class
this.zeitraum.zeitpunkte.getClass().getName() != return.getClass().getName()
===========================================================================
Mitglied.revidiere(Terminvorschlag):::ENTER
this.zeitraum.zeitpunkte.getClass().getName() == arg0.termin.teilnehmer.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.list.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.removed.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.selectors.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.offen.getClass().getName()
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0 has only one value
arg0.termin has only one value
arg0.termin.typus has only one value
arg0.termin.ort has only one value
arg0.termin.zeitraum has only one value
arg0.termin.posten has only one value
arg0.termin.teilnehmer has only one value
arg0.termin.teilnehmer[] contains no nulls and has only one value, of length 7
arg0.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.orig == null
arg0.target has only one value
arg0.target.list has only one value
arg0.target.list[] contains no nulls and has only one value, of length 1
arg0.target.list[] elements has only one value
arg0.target.list[].getClass().getName() == [Termin]
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.removed has only one value
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.selectors has only one value
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.offen has only one value
arg0.offen[] contains no nulls and has only one value, of length 7
arg0.offen[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.offen[].getClass().getName() elements == Mitglied.class
size(this.zeitraum.zeitpunkte[]) == 1
size(arg0.termin.teilnehmer[]) == 7
size(arg0.target.list[]) == 1
size(arg0.offen[]) == 7
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.revidiere(Terminvorschlag):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == arg0.offen.getClass().getName()
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.nachrichten.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.ersatzmitglied == orig(this.ersatzmitglied)
arg0.termin == orig(arg0.termin)
arg0.termin.typus == orig(arg0.termin.typus)
arg0.termin.ort == orig(arg0.termin.ort)
arg0.termin.zeitraum == orig(arg0.termin.zeitraum)
arg0.termin.posten == orig(arg0.termin.posten)
arg0.termin.teilnehmer == orig(arg0.termin.teilnehmer)
arg0.termin.teilnehmer[] == orig(arg0.termin.teilnehmer[])
arg0.termin.teilnehmer.getClass().getName() == arg0.offen.getClass().getName()
arg0.termin.orig == orig(arg0.termin.orig)
arg0.target == orig(arg0.target)
arg0.target.list == orig(arg0.target.list)
arg0.target.list[] == orig(arg0.target.list[])
arg0.target.list.getClass().getName() == arg0.offen.getClass().getName()
arg0.target.removed == orig(arg0.target.removed)
arg0.target.removed[] == orig(arg0.target.removed[])
arg0.target.removed.getClass().getName() == arg0.offen.getClass().getName()
arg0.target.selectors == orig(arg0.target.selectors)
arg0.target.selectors[] == orig(arg0.target.selectors[])
arg0.target.selectors.getClass().getName() == arg0.offen.getClass().getName()
arg0.offen == orig(arg0.offen)
arg0.offen[] == orig(arg0.offen[])
arg0.offen.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.termin.teilnehmer.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.list.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.removed.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.selectors.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.offen.getClass().getName())
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.termin has only one value
arg0.termin.typus has only one value
arg0.termin.ort has only one value
arg0.termin.zeitraum has only one value
arg0.termin.posten has only one value
arg0.termin.teilnehmer has only one value
arg0.termin.teilnehmer[] contains no nulls and has only one value, of length 7
arg0.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.orig == null
arg0.target has only one value
arg0.target.list has only one value
arg0.target.list[] contains no nulls and has only one value, of length 1
arg0.target.list[] elements has only one value
arg0.target.list[].getClass().getName() == [Termin]
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.removed has only one value
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.selectors has only one value
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.offen has only one value
arg0.offen[] contains no nulls and has only one value, of length 7
arg0.offen[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.offen[].getClass().getName() elements == Mitglied.class
arg0.offen.getClass().getName() == java.util.ArrayList.class
size(this.zeitraum.zeitpunkte[]) == 1
size(arg0.termin.teilnehmer[]) == 7
size(arg0.target.list[]) == 1
size(arg0.offen[]) == 7
this.nachrichten.getClass().getName() != arg0.offen.getClass().getName()
===========================================================================
Mitglied.sende(Terminvorschlag):::ENTER
this.zeitraum.zeitpunkte.getClass().getName() == arg0.termin.teilnehmer.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.list.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.removed.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.target.selectors.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.offen.getClass().getName()
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
arg0 != null
arg0.termin != null
arg0.termin.typus != null
arg0.termin.ort != null
arg0.termin.zeitraum != null
arg0.termin.posten != null
arg0.termin.teilnehmer != null
arg0.termin.teilnehmer[] elements != null
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.orig == null
arg0.target != null
arg0.target.list != null
arg0.target.list[] elements != null
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.removed != null
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.selectors != null
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.offen != null
arg0.offen[] elements != null
arg0.offen[].getClass().getName() elements == Mitglied.class
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.sende(Terminvorschlag):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == arg0.offen.getClass().getName()
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.nachrichten.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.ersatzmitglied == orig(this.ersatzmitglied)
arg0.termin == orig(arg0.termin)
arg0.termin.typus == orig(arg0.termin.typus)
arg0.termin.ort == orig(arg0.termin.ort)
arg0.termin.zeitraum == orig(arg0.termin.zeitraum)
arg0.termin.posten == orig(arg0.termin.posten)
arg0.termin.teilnehmer == orig(arg0.termin.teilnehmer)
arg0.termin.teilnehmer[] == orig(arg0.termin.teilnehmer[])
arg0.termin.teilnehmer.getClass().getName() == arg0.offen.getClass().getName()
arg0.termin.orig == orig(arg0.termin.orig)
arg0.target == orig(arg0.target)
arg0.target.list == orig(arg0.target.list)
arg0.target.list[] == orig(arg0.target.list[])
arg0.target.list.getClass().getName() == arg0.offen.getClass().getName()
arg0.target.removed == orig(arg0.target.removed)
arg0.target.removed[] == orig(arg0.target.removed[])
arg0.target.removed.getClass().getName() == arg0.offen.getClass().getName()
arg0.target.selectors == orig(arg0.target.selectors)
arg0.target.selectors[] == orig(arg0.target.selectors[])
arg0.target.selectors.getClass().getName() == arg0.offen.getClass().getName()
arg0.offen == orig(arg0.offen)
arg0.offen[] == orig(arg0.offen[])
arg0.offen.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.termin.teilnehmer.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.list.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.removed.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.target.selectors.getClass().getName())
arg0.offen.getClass().getName() == orig(arg0.offen.getClass().getName())
arg0.termin != null
arg0.termin.typus != null
arg0.termin.ort != null
arg0.termin.zeitraum != null
arg0.termin.posten != null
arg0.termin.teilnehmer != null
arg0.termin.teilnehmer[] elements != null
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.orig == null
arg0.target != null
arg0.target.list != null
arg0.target.list[] elements != null
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.removed != null
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.selectors != null
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.offen != null
arg0.offen[] elements != null
arg0.offen[].getClass().getName() elements == Mitglied.class
arg0.offen.getClass().getName() == java.util.ArrayList.class
this.nachrichten.getClass().getName() != arg0.offen.getClass().getName()
===========================================================================
Mitglied.sende(java.lang.String):::ENTER
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0 != null
size(this.zeitraum.zeitpunkte[]) == 1
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.sende(java.lang.String):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.nachrichten.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.ersatzmitglied == orig(this.ersatzmitglied)
arg0.toString == orig(arg0.toString)
this.instrument.toString one of { "Gesang", "Getanze" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitraum.zeitpunkte[]) == 1
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.setErsatzmitglied(boolean):::ENTER
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.name.toString one of { "Gitarren Joe", "Mike Dirnt" }
this.telNr.toString one of { "233/12437", "321/12323" }
this.instrument.toString one of { "Bass", "Gitarre" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitraum.zeitpunkte[]) == 1
===========================================================================
Mitglied.setErsatzmitglied(boolean):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.nachrichten.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.ersatzmitglied == orig(arg0)
this.name.toString one of { "Gitarren Joe", "Mike Dirnt" }
this.telNr.toString one of { "233/12437", "321/12323" }
this.instrument.toString one of { "Bass", "Gitarre" }
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitraum.zeitpunkte[]) == 1
===========================================================================
Mitglied.toDetailString():::ENTER
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.instrument.toString one of { "Bass", "Gitarre", "Schlagzeug" }
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.toDetailString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == this.terminvorschlaege.getClass().getName()
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.nachrichten.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.ersatzmitglied == orig(this.ersatzmitglied)
this.instrument.toString one of { "Bass", "Gitarre", "Schlagzeug" }
this.zeitraum.zeitpunkte.getClass().getName() != this.nachrichten.getClass().getName()
===========================================================================
Mitglied.toString():::ENTER
===========================================================================
Mitglied.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.telNr == orig(this.telNr)
this.telNr.toString == orig(this.telNr.toString)
this.instrument == orig(this.instrument)
this.instrument.toString == orig(this.instrument.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.nachrichten == orig(this.nachrichten)
this.nachrichten.getClass().getName() == orig(this.nachrichten.getClass().getName())
this.terminvorschlaege == orig(this.terminvorschlaege)
this.terminvorschlaege.getClass().getName() == orig(this.terminvorschlaege.getClass().getName())
this.ersatzmitglied == orig(this.ersatzmitglied)
return != null
===========================================================================
Mitglieder:::CLASS
===========================================================================
Mitglieder:::OBJECT
this.list != null
this.list[] elements != null
this.list[].getClass().getName() elements == Mitglied.class
this.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
this.list.getClass().getName() == java.util.ArrayList.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors != null
this.selectors[] elements != null
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 0, 7 }
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Mitglieder.Mitglieder():::EXIT
this.list[] == []
this.list[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
===========================================================================
Mitglieder.Mitglieder(Mitglieder, java.util.List):::ENTER
arg0.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.list[].getClass().getName() elements == Mitglied.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0.list[]) == 7
size(arg1[]) == 1
===========================================================================
Mitglieder.Mitglieder(Mitglieder, java.util.List):::EXIT
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.removed == orig(arg0.removed)
arg0.removed[] == orig(arg0.removed[])
arg0.removed.getClass().getName() == orig(arg0.removed.getClass().getName())
arg0.selectors == orig(arg0.selectors)
arg0.selectors[] == orig(arg0.selectors[])
arg0.selectors.getClass().getName() == orig(arg0.selectors.getClass().getName())
arg1[] == orig(arg1[])
this.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.list[].getClass().getName() elements == Mitglied.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 7
size(this.selectors[]) == 1
size(arg0.list[]) == 7
===========================================================================
Mitglieder.select(java.util.List):::ENTER
this.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 7
size(arg0[]) == 1
===========================================================================
Mitglieder.select(java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.selectors[] == []
this.selectors[].getClass().getName() == []
return.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
return.list[].getClass().getName() elements == Mitglied.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.removed.getClass().getName() == java.util.ArrayList.class
return.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 7
size(return.list[]) == 7
size(return.selectors[]) == 1
===========================================================================
Ort$BezeichnungSelektor:::OBJECT
this.name != null
this.enthaelt == false
===========================================================================
Ort$BezeichnungSelektor.BezeichnungSelektor(java.lang.String):::ENTER
===========================================================================
Ort$BezeichnungSelektor.BezeichnungSelektor(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::ENTER
arg0 != null
arg0.bezeichnung != null
arg0.infrastruktur != null
arg0.infrastruktur[] elements != null
arg0.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.infrastruktur.getClass().getName() == java.util.ArrayList.class
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT68
(return == false)  ==>  (size(arg0.infrastruktur[]) one of { 1, 2, 4 })
(return == true)  ==>  (this.name == arg0.bezeichnung)
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT68;condition="return == true"
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT68;condition="not(return == true)"
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.enthaelt == orig(this.enthaelt)
arg0.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == orig(arg0.bezeichnung.toString)
arg0.infrastruktur == orig(arg0.infrastruktur)
arg0.infrastruktur[] == orig(arg0.infrastruktur[])
arg0.infrastruktur.getClass().getName() == orig(arg0.infrastruktur.getClass().getName())
(return == false)  ==>  (size(arg0.infrastruktur[]) one of { 1, 2, 4 })
(return == true)  ==>  (this.name == arg0.bezeichnung)
arg0.bezeichnung != null
arg0.infrastruktur != null
arg0.infrastruktur[] elements != null
arg0.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.infrastruktur.getClass().getName() == java.util.ArrayList.class
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT;condition="return == true"
this.name == arg0.bezeichnung
this.name == orig(arg0.bezeichnung)
return == true
===========================================================================
Ort$BezeichnungSelektor.select(Ort):::EXIT;condition="not(return == true)"
return == false
size(arg0.infrastruktur[]) one of { 1, 2, 4 }
===========================================================================
Ort$InfrastrukturSelektor:::OBJECT
this.name != null
this.name.toString one of { "Musikgeschaeft", "Stadion" }
===========================================================================
Ort$InfrastrukturSelektor.InfrastrukturSelektor(java.lang.String):::ENTER
arg0.toString one of { "Musikgeschaeft", "Stadion" }
===========================================================================
Ort$InfrastrukturSelektor.InfrastrukturSelektor(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Musikgeschaeft", "Stadion" }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::ENTER
arg0.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
arg0.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.infrastruktur.getClass().getName() == java.util.ArrayList.class
size(arg0.infrastruktur[]) one of { 1, 2, 4 }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT87
arg0.bezeichnung.toString one of { "St. Poelten", "Wien" }
arg0.infrastruktur[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
return == true
size(arg0.infrastruktur[]) one of { 2, 4 }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT87;condition="return == true"
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT90
arg0.bezeichnung.toString one of { "Korneuburg", "St. Poelten" }
arg0.infrastruktur[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == false
size(arg0.infrastruktur[]) one of { 1, 2 }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT90;condition="not(return == true)"
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
arg0.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == orig(arg0.bezeichnung.toString)
arg0.infrastruktur == orig(arg0.infrastruktur)
arg0.infrastruktur[] == orig(arg0.infrastruktur[])
arg0.infrastruktur.getClass().getName() == orig(arg0.infrastruktur.getClass().getName())
(return == false)  ==>  (arg0.bezeichnung.toString one of { "Korneuburg", "St. Poelten" })
(return == false)  ==>  (arg0.infrastruktur[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
(return == false)  ==>  (size(arg0.infrastruktur[]) one of { 1, 2 })
(return == true)  ==>  (arg0.bezeichnung.toString one of { "St. Poelten", "Wien" })
(return == true)  ==>  (arg0.infrastruktur[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(return == true)  ==>  (size(arg0.infrastruktur[]) one of { 2, 4 })
arg0.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
arg0.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.infrastruktur.getClass().getName() == java.util.ArrayList.class
size(arg0.infrastruktur[]) one of { 1, 2, 4 }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT;condition="return == true"
arg0.bezeichnung.toString one of { "St. Poelten", "Wien" }
arg0.infrastruktur[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
return == true
size(arg0.infrastruktur[]) one of { 2, 4 }
===========================================================================
Ort$InfrastrukturSelektor.select(Ort):::EXIT;condition="not(return == true)"
arg0.bezeichnung.toString one of { "Korneuburg", "St. Poelten" }
arg0.infrastruktur[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == false
size(arg0.infrastruktur[]) one of { 1, 2 }
===========================================================================
Ort:::CLASS
===========================================================================
Ort:::OBJECT
this.bezeichnung != null
this.infrastruktur != null
this.infrastruktur[] elements != null
this.infrastruktur[].getClass().getName() elements == java.lang.String.class
this.infrastruktur.getClass().getName() == java.util.ArrayList.class
===========================================================================
Ort.Ort(java.lang.String, java.util.List):::ENTER
arg1[].getClass().getName() elements == java.lang.String.class
arg1.getClass().getName() == java.util.ArrayList.class
===========================================================================
Ort.Ort(java.lang.String, java.util.List):::EXIT
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg1[].getClass().getName() elements == java.lang.String.class
===========================================================================
Ort.toDetailString():::ENTER
this.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
size(this.infrastruktur[]) one of { 1, 2, 4 }
===========================================================================
Ort.toDetailString():::EXIT
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.infrastruktur == orig(this.infrastruktur)
this.infrastruktur[] == orig(this.infrastruktur[])
this.infrastruktur.getClass().getName() == orig(this.infrastruktur.getClass().getName())
this.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
return.toString one of { "Korneuburg [Proberaum]", "St. Poelten [Proberaum, Stadion]", "Wien [Musikgeschaeft, Gitarren Fachhandel, Proberaum, Stadion]" }
size(this.infrastruktur[]) one of { 1, 2, 4 }
===========================================================================
Ort.toString():::ENTER
===========================================================================
Ort.toString():::EXIT
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.infrastruktur == orig(this.infrastruktur)
this.infrastruktur[] == orig(this.infrastruktur[])
this.infrastruktur.getClass().getName() == orig(this.infrastruktur.getClass().getName())
return != null
===========================================================================
Orte:::CLASS
===========================================================================
Orte:::OBJECT
this.list != null
this.list[] elements != null
this.list[].getClass().getName() elements == Ort.class
this.list.getClass().getName() == java.util.ArrayList.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors != null
this.selectors[] elements != null
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 0, 2, 3 }
size(this.list[])-1 != 0
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Orte.Orte():::EXIT
this.list[] == []
this.list[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
===========================================================================
Orte.Orte(Orte, java.util.List):::ENTER
arg0.list[].getClass().getName() elements == Ort.class
arg0.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0.list[]) one of { 2, 3 }
size(arg1[]) == 1
===========================================================================
Orte.Orte(Orte, java.util.List):::EXIT
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.removed == orig(arg0.removed)
arg0.removed[] == orig(arg0.removed[])
arg0.removed.getClass().getName() == orig(arg0.removed.getClass().getName())
arg0.selectors == orig(arg0.selectors)
arg0.selectors[] == orig(arg0.selectors[])
arg0.selectors.getClass().getName() == orig(arg0.selectors.getClass().getName())
arg1[] == orig(arg1[])
this.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.selectors[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
arg0.list[].getClass().getName() elements == Ort.class
arg0.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
size(this.list[]) one of { 2, 3 }
size(this.selectors[]) == 1
size(arg0.list[]) one of { 2, 3 }
===========================================================================
Orte.select(java.util.List):::ENTER
this.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
arg0.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 2, 3 }
size(arg0[]) == 1
===========================================================================
Orte.select(java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
return.list[].getClass().getName() elements == Ort.class
return.list[].getClass().getName() one of { [Ort, Ort], [Ort, Ort, Ort] }
return.list.getClass().getName() == java.util.ArrayList.class
return.removed[] == []
return.removed[].getClass().getName() == []
return.removed.getClass().getName() == java.util.ArrayList.class
return.selectors[].getClass().getName() one of { [Ort.BezeichnungSelektor], [Ort.InfrastrukturSelektor] }
return.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 2, 3 }
size(return.list[]) one of { 2, 3 }
size(return.selectors[]) == 1
===========================================================================
Posten$ZeitraumSelektor:::OBJECT
this has only one value
this.zeitraum has only one value
this.zeitraum != null
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte != null
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 1
this.zeitraum.zeitpunkte[] elements has only one value
this.zeitraum.zeitpunkte[] elements != null
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
this.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(this.zeitraum.zeitpunkte[]) == 1
===========================================================================
Posten$ZeitraumSelektor.ZeitraumSelektor(Zeitraum):::ENTER
arg0 has only one value
arg0.zeitpunkte has only one value
arg0.zeitpunkte[] contains no nulls and has only one value, of length 1
arg0.zeitpunkte[] elements has only one value
arg0.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitpunkte[]) == 1
===========================================================================
Posten$ZeitraumSelektor.ZeitraumSelektor(Zeitraum):::EXIT
this.zeitraum == orig(arg0)
this.zeitraum.zeitpunkte == arg0.zeitpunkte
this.zeitraum.zeitpunkte.getClass().getName() == arg0.zeitpunkte.getClass().getName()
arg0.zeitpunkte == orig(arg0.zeitpunkte)
arg0.zeitpunkte[] == orig(arg0.zeitpunkte[])
arg0.zeitpunkte.getClass().getName() == orig(arg0.zeitpunkte.getClass().getName())
arg0.zeitpunkte has only one value
arg0.zeitpunkte[] contains no nulls and has only one value, of length 1
arg0.zeitpunkte[] elements has only one value
arg0.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitpunkte[]) == 1
===========================================================================
Posten$ZeitraumSelektor.select(Posten):::ENTER
arg0 != null
arg0.einnahmen >= 0.0
arg0.ausgaben >= 0.0
arg0.bezeichnung != null
arg0.datum != null
arg0.einnahmen != arg0.ausgaben
===========================================================================
Posten$ZeitraumSelektor.select(Posten):::EXIT
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
arg0.einnahmen == orig(arg0.einnahmen)
arg0.ausgaben == orig(arg0.ausgaben)
arg0.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == orig(arg0.bezeichnung.toString)
arg0.datum == orig(arg0.datum)
(return == false)  ==>  (arg0.ausgaben == 500.0)
(return == false)  ==>  (arg0.bezeichnung.toString one of { "Auftritt", "Schlagzeugreperatur" })
(return == false)  ==>  (arg0.einnahmen one of { 0.0, 10000.0 })
(return == true)  ==>  (arg0.ausgaben >= 0.0)
(return == true)  ==>  (arg0.einnahmen one of { 0.0, 5000.0, 8000.0 })
arg0.einnahmen >= 0.0
arg0.ausgaben >= 0.0
arg0.bezeichnung != null
arg0.datum != null
arg0.einnahmen != arg0.ausgaben
===========================================================================
Posten$ZeitraumSelektor.select(Posten):::EXIT;condition="return == true"
arg0.einnahmen one of { 0.0, 5000.0, 8000.0 }
return == true
===========================================================================
Posten$ZeitraumSelektor.select(Posten):::EXIT;condition="not(return == true)"
arg0.einnahmen one of { 0.0, 10000.0 }
arg0.ausgaben == 500.0
arg0.bezeichnung.toString one of { "Auftritt", "Schlagzeugreperatur" }
return == false
===========================================================================
Posten:::CLASS
===========================================================================
Posten:::OBJECT
this.einnahmen >= 0.0
this.ausgaben >= 0.0
this.bezeichnung != null
this.datum != null
===========================================================================
Posten.Posten(double, double, java.lang.String, java.util.Date):::ENTER
arg0 >= 0.0
arg2 != null
arg3 != null
===========================================================================
Posten.Posten(double, double, java.lang.String, java.util.Date):::EXIT
arg2.toString == orig(arg2.toString)
===========================================================================
Posten.getAusgaben():::ENTER
===========================================================================
Posten.getAusgaben():::EXIT
this.einnahmen == orig(this.einnahmen)
this.ausgaben == orig(this.ausgaben)
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.datum == orig(this.datum)
return >= 0.0
===========================================================================
Posten.getEinnahmen():::ENTER
===========================================================================
Posten.getEinnahmen():::EXIT
this.einnahmen == orig(this.einnahmen)
this.ausgaben == orig(this.ausgaben)
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.datum == orig(this.datum)
return >= 0.0
===========================================================================
Posten.toDetailString():::ENTER
this.einnahmen one of { 0.0, 5000.0 }
this.ausgaben one of { 0.0, 500.0, 3000.0 }
this.bezeichnung.toString one of { "Kuenstlerfoerderung", "Schlagzeugreperatur", "Studiozubehoer" }
===========================================================================
Posten.toDetailString():::EXIT
this.einnahmen == orig(this.einnahmen)
this.ausgaben == orig(this.ausgaben)
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.datum == orig(this.datum)
this.einnahmen one of { 0.0, 5000.0 }
this.ausgaben one of { 0.0, 500.0, 3000.0 }
this.bezeichnung.toString one of { "Kuenstlerfoerderung", "Schlagzeugreperatur", "Studiozubehoer" }
return.toString one of { "Oct 18, 2012: Schlagzeugreperatur (+0.00/-500.00)", "Oct 20, 2012: Kuenstlerfoerderung (+5,000.00/-0.00)", "Oct 21, 2012: Studiozubehoer (+0.00/-3,000.00)" }
===========================================================================
Posten.toString():::ENTER
this.einnahmen one of { 0.0, 5000.0 }
this.ausgaben one of { 0.0, 500.0, 3000.0 }
this.bezeichnung.toString one of { "Kuenstlerfoerderung", "Schlagzeugreperatur", "Studiozubehoer" }
===========================================================================
Posten.toString():::EXIT
this.einnahmen == orig(this.einnahmen)
this.ausgaben == orig(this.ausgaben)
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.datum == orig(this.datum)
this.einnahmen one of { 0.0, 5000.0 }
this.ausgaben one of { 0.0, 500.0, 3000.0 }
this.bezeichnung.toString one of { "Kuenstlerfoerderung", "Schlagzeugreperatur", "Studiozubehoer" }
return.toString one of { "Kuenstlerfoerderung: +5,000.00", "Schlagzeugreperatur: -500.00", "Studiozubehoer: -3,000.00" }
===========================================================================
Programm:::OBJECT
this.file != null
this.bands[] elements != null
this.bands[].getClass().getName() elements == Band.class
this.bands.getClass().getName() == java.util.ArrayList.class
size(this.bands[]) one of { 0, 1, 2 }
===========================================================================
Programm.Programm():::EXIT
this.file has only one value
this.bands has only one value
this.bands[] contains no nulls and has only one value, of length 1
this.bands[] elements has only one value
this.bands[].getClass().getName() == [Band]
size(this.bands[]) == 1
===========================================================================
Programm.Programm(boolean):::ENTER
===========================================================================
Programm.Programm(boolean):::EXIT
this.bands[] elements has only one value
this.bands[].getClass().getName() one of { [], [Band] }
size(this.bands[]) one of { 0, 1 }
===========================================================================
Programm.addBand(Band):::ENTER
this.bands.getClass().getName() == arg0.repertoire.list.getClass().getName()
this.bands.getClass().getName() == arg0.repertoire.removed.getClass().getName()
this.bands.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.termine.list.getClass().getName()
this.bands.getClass().getName() == arg0.termine.removed.getClass().getName()
this.bands.getClass().getName() == arg0.termine.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.list.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.orte.list.getClass().getName()
this.bands.getClass().getName() == arg0.orte.removed.getClass().getName()
this.bands.getClass().getName() == arg0.orte.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.guv.list.getClass().getName()
this.bands.getClass().getName() == arg0.guv.removed.getClass().getName()
this.bands.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 == arg0.guv.band
this.bands[] elements has only one value
this.bands[].getClass().getName() one of { [], [Band] }
arg0.name.toString one of { "Green Day", "Sunrise Avenue" }
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list[].getClass().getName() one of { [], [Song, Song, Song] }
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(this.bands[]) one of { 0, 1 }
size(arg0.repertoire.list[]) one of { 0, 3 }
size(arg0.termine.list[]) one of { 0, 4 }
size(arg0.mitglieder.list[]) one of { 0, 7 }
size(arg0.orte.list[]) one of { 0, 3 }
size(arg0.guv.list[]) one of { 0, 3 }
===========================================================================
Programm.addBand(Band):::EXIT
this.file == orig(this.file)
this.bands == orig(this.bands)
this.bands.getClass().getName() == arg0.repertoire.list.getClass().getName()
this.bands.getClass().getName() == arg0.repertoire.removed.getClass().getName()
this.bands.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.termine.list.getClass().getName()
this.bands.getClass().getName() == arg0.termine.removed.getClass().getName()
this.bands.getClass().getName() == arg0.termine.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.list.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
this.bands.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.orte.list.getClass().getName()
this.bands.getClass().getName() == arg0.orte.removed.getClass().getName()
this.bands.getClass().getName() == arg0.orte.selectors.getClass().getName()
this.bands.getClass().getName() == arg0.guv.list.getClass().getName()
this.bands.getClass().getName() == arg0.guv.removed.getClass().getName()
this.bands.getClass().getName() == arg0.guv.selectors.getClass().getName()
this.bands.getClass().getName() == orig(this.bands.getClass().getName())
this.bands.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
this.bands.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
this.bands.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
this.bands.getClass().getName() == orig(arg0.termine.list.getClass().getName())
this.bands.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
this.bands.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
this.bands.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
this.bands.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
this.bands.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
this.bands.getClass().getName() == orig(arg0.orte.list.getClass().getName())
this.bands.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
this.bands.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
this.bands.getClass().getName() == orig(arg0.guv.list.getClass().getName())
this.bands.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
this.bands.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
size(this.bands[])-1 == orig(size(this.bands[]))
this.bands[].getClass().getName() one of { [Band], [Band, Band] }
arg0.name.toString one of { "Green Day", "Sunrise Avenue" }
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list[].getClass().getName() one of { [], [Song, Song, Song] }
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(this.bands[]) one of { 1, 2 }
size(arg0.repertoire.list[]) one of { 0, 3 }
size(arg0.termine.list[]) one of { 0, 4 }
size(arg0.mitglieder.list[]) one of { 0, 7 }
size(arg0.orte.list[]) one of { 0, 3 }
size(arg0.guv.list[]) one of { 0, 3 }
===========================================================================
Programm.getBand(java.lang.String):::ENTER
this.bands[].getClass().getName() one of { [Band], [Band, Band] }
arg0.toString one of { "Green Day", "Sunrise Avenue" }
size(this.bands[]) one of { 1, 2 }
===========================================================================
Programm.getBand(java.lang.String):::EXIT49
===========================================================================
Programm.getBand(java.lang.String):::EXIT
this.file == orig(this.file)
this.bands == orig(this.bands)
this.bands[] == orig(this.bands[])
this.bands.getClass().getName() == return.repertoire.list.getClass().getName()
this.bands.getClass().getName() == return.repertoire.removed.getClass().getName()
this.bands.getClass().getName() == return.repertoire.selectors.getClass().getName()
this.bands.getClass().getName() == return.termine.list.getClass().getName()
this.bands.getClass().getName() == return.termine.removed.getClass().getName()
this.bands.getClass().getName() == return.termine.selectors.getClass().getName()
this.bands.getClass().getName() == return.mitglieder.list.getClass().getName()
this.bands.getClass().getName() == return.mitglieder.removed.getClass().getName()
this.bands.getClass().getName() == return.mitglieder.selectors.getClass().getName()
this.bands.getClass().getName() == return.orte.list.getClass().getName()
this.bands.getClass().getName() == return.orte.removed.getClass().getName()
this.bands.getClass().getName() == return.orte.selectors.getClass().getName()
this.bands.getClass().getName() == return.guv.list.getClass().getName()
this.bands.getClass().getName() == return.guv.removed.getClass().getName()
this.bands.getClass().getName() == return.guv.selectors.getClass().getName()
this.bands.getClass().getName() == orig(this.bands.getClass().getName())
arg0.toString == orig(arg0.toString)
return == return.guv.band
this.bands[].getClass().getName() one of { [Band], [Band, Band] }
arg0.toString one of { "Green Day", "Sunrise Avenue" }
return.name.toString one of { "Green Day", "Sunrise Avenue" }
return.ausrichtung.toString == "Rock"
return.minProben == 2
return.repertoire.list[].getClass().getName() elements == Song.class
return.repertoire.list[].getClass().getName() one of { [], [Song, Song, Song] }
return.repertoire.removed[] == []
return.repertoire.removed[].getClass().getName() == []
return.repertoire.selectors[] == []
return.repertoire.selectors[].getClass().getName() == []
return.termine.list[].getClass().getName() elements == Termin.class
return.termine.list[].getClass().getName() one of { [], [Termin, Termin, Termin, Termin] }
return.termine.removed[] == []
return.termine.removed[].getClass().getName() == []
return.termine.selectors[] == []
return.termine.selectors[].getClass().getName() == []
return.mitglieder.list[].getClass().getName() elements == Mitglied.class
return.mitglieder.list[].getClass().getName() one of { [], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
return.mitglieder.removed[] == []
return.mitglieder.removed[].getClass().getName() == []
return.mitglieder.selectors[] == []
return.mitglieder.selectors[].getClass().getName() == []
return.orte.list[].getClass().getName() elements == Ort.class
return.orte.list[].getClass().getName() one of { [], [Ort, Ort, Ort] }
return.orte.removed[] == []
return.orte.removed[].getClass().getName() == []
return.orte.selectors[] == []
return.orte.selectors[].getClass().getName() == []
return.guv.list[].getClass().getName() elements == Posten.class
return.guv.list[].getClass().getName() one of { [], [Posten, Posten, Posten] }
return.guv.removed[] == []
return.guv.removed[].getClass().getName() == []
return.guv.selectors[] == []
return.guv.selectors[].getClass().getName() == []
size(this.bands[]) one of { 1, 2 }
size(return.repertoire.list[]) one of { 0, 3 }
size(return.termine.list[]) one of { 0, 4 }
size(return.mitglieder.list[]) one of { 0, 7 }
size(return.orte.list[]) one of { 0, 3 }
size(return.guv.list[]) one of { 0, 3 }
===========================================================================
Programm.quit():::ENTER
this has only one value
this.file has only one value
this.bands has only one value
this.bands[] contains no nulls and has only one value, of length 1
this.bands[] elements has only one value
this.bands[].getClass().getName() == [Band]
size(this.bands[]) == 1
===========================================================================
Programm.quit():::EXIT
this.file == orig(this.file)
this.bands == orig(this.bands)
this.bands[] == orig(this.bands[])
this.bands.getClass().getName() == orig(this.bands.getClass().getName())
this.file has only one value
this.bands has only one value
this.bands[] contains no nulls and has only one value, of length 1
this.bands[] elements has only one value
this.bands[].getClass().getName() == [Band]
size(this.bands[]) == 1
===========================================================================
Programm.read():::ENTER
this has only one value
this.file has only one value
this.bands == null
===========================================================================
Programm.read():::EXIT
this.file == orig(this.file)
this.file has only one value
this.bands has only one value
this.bands[] contains no nulls and has only one value, of length 1
this.bands[] elements has only one value
this.bands[].getClass().getName() == [Band]
size(this.bands[]) == 1
===========================================================================
Selection$SelectionIterator:::OBJECT
this.removed.getClass().getName() == Selection.this.list.getClass().getName()
this.current.getClass().getName() == this.next.getClass().getName()
Selection.this.list.getClass().getName() == Selection.this.removed.getClass().getName()
Selection.this.list.getClass().getName() == Selection.this.selectors.getClass().getName()
this.removed.getClass().getName() == java.util.ArrayList.class
this.sourceIter != null
this.sourceIter.getClass().getName() == java.util.ArrayList$ListItr.class
Selection.this.list != null
Selection.this.list[] elements != null
Selection.this.list.getClass().getName() == java.util.ArrayList.class
Selection.this.removed != null
Selection.this.removed[] elements has only one value
Selection.this.removed[] elements != null
Selection.this.removed[].getClass().getName() elements == Termin.class
Selection.this.removed[].getClass().getName() one of { [], [Termin] }
Selection.this.selectors != null
Selection.this.selectors[] elements != null
size(Selection.this.removed[]) one of { 0, 1 }
this.removed.getClass().getName() != this.sourceIter.getClass().getName()
this.removed.getClass().getName() != this.current.getClass().getName()
this.removed.getClass().getName() != this.next.getClass().getName()
this.sourceIter.getClass().getName() != this.current.getClass().getName()
this.sourceIter.getClass().getName() != this.next.getClass().getName()
this.sourceIter.getClass().getName() != Selection.this.list.getClass().getName()
this.current.getClass().getName() != Selection.this.list.getClass().getName()
this.next.getClass().getName() != Selection.this.list.getClass().getName()
===========================================================================
Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::ENTER
Selection.this.removed == arg1
Selection.this has only one value
Selection.this.list has only one value
Selection.this.list[] == []
Selection.this.list[].getClass().getName() == []
Selection.this.removed[] contains no nulls and has only one value, of length 1
Selection.this.removed[] elements has only one value
Selection.this.removed[].getClass().getName() == [Termin]
Selection.this.removed[].getClass().getName() elements == Termin.class
Selection.this.selectors has only one value
Selection.this.selectors[] contains no nulls and has only one value, of length 1
Selection.this.selectors[] elements has only one value
Selection.this.selectors[].getClass().getName() == [Termin.TypSelektor]
Selection.this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[].getClass().getName() == [Termin]
arg1[].getClass().getName() elements == Termin.class
arg1.getClass().getName() == java.util.ArrayList.class
size(Selection.this.removed[]) == 1
size(Selection.this.selectors[]) == 1
size(arg1[]) == 1
===========================================================================
Selection$SelectionIterator.SelectionIterator(Selection, java.util.List):::EXIT
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list[] == orig(Selection.this.list[])
Selection.this.removed == orig(arg1)
Selection.this.removed[] == orig(Selection.this.removed[])
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
arg1[] == orig(arg1[])
this.removed == null
this.sourceIter has only one value
this.current == null
this.next has only one value
this.next.getClass().getName() == Termin.class
Selection.this has only one value
Selection.this.list has only one value
Selection.this.list[] == []
Selection.this.list[].getClass().getName() == []
Selection.this.removed[] contains no nulls and has only one value, of length 1
Selection.this.removed[].getClass().getName() == [Termin]
Selection.this.selectors has only one value
Selection.this.selectors[] contains no nulls and has only one value, of length 1
Selection.this.selectors[] elements has only one value
Selection.this.selectors[].getClass().getName() == [Termin.TypSelektor]
Selection.this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
arg1[] contains no nulls and has only one value, of length 1
arg1[] elements has only one value
arg1[].getClass().getName() == [Termin]
arg1[].getClass().getName() elements == Termin.class
size(Selection.this.removed[]) == 1
size(Selection.this.selectors[]) == 1
this.next.getClass().getName() in Selection.this.removed[].getClass().getName()
this.next.getClass().getName() in arg1[].getClass().getName()
===========================================================================
Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::ENTER
Selection.this.list.getClass().getName() == arg1.getClass().getName()
Selection.this.removed.getClass().getName() == arg1.getClass().getName()
Selection.this.selectors.getClass().getName() == arg1.getClass().getName()
arg1.getClass().getName() == arg2.getClass().getName()
Selection.this != null
Selection.this.list != null
Selection.this.list[] elements != null
Selection.this.removed != null
Selection.this.removed[] elements has only one value
Selection.this.removed[] elements != null
Selection.this.removed[].getClass().getName() elements == Termin.class
Selection.this.removed[].getClass().getName() one of { [], [Termin] }
Selection.this.selectors != null
Selection.this.selectors[] elements != null
arg1 != null
arg1[] elements != null
arg1.getClass().getName() == java.util.ArrayList.class
arg2.getClass().getName() == java.util.ArrayList.class
size(Selection.this.removed[]) one of { 0, 1 }
===========================================================================
Selection$SelectionIterator.SelectionIterator(Selection, java.util.List, java.util.Collection):::EXIT
this.removed == orig(arg2)
this.removed.getClass().getName() == orig(arg1.getClass().getName())
this.removed.getClass().getName() == orig(arg2.getClass().getName())
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list[] == orig(Selection.this.list[])
Selection.this.list.getClass().getName() == orig(arg1.getClass().getName())
Selection.this.removed == orig(Selection.this.removed)
Selection.this.removed[] == orig(Selection.this.removed[])
Selection.this.removed.getClass().getName() == orig(arg1.getClass().getName())
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
Selection.this.selectors.getClass().getName() == orig(arg1.getClass().getName())
arg1[] == orig(arg1[])
this.current == null
arg1[] elements != null
this.sourceIter.getClass().getName() != orig(arg1.getClass().getName())
this.next.getClass().getName() in arg1[].getClass().getName()
this.next.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
Selection$SelectionIterator.hasNext():::ENTER
===========================================================================
Selection$SelectionIterator.hasNext():::EXIT
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.sourceIter == orig(this.sourceIter)
this.sourceIter.getClass().getName() == orig(this.sourceIter.getClass().getName())
this.current == orig(this.current)
this.current.getClass().getName() == orig(this.current.getClass().getName())
this.next == orig(this.next)
this.next.getClass().getName() == orig(this.next.getClass().getName())
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list[] == orig(Selection.this.list[])
Selection.this.list.getClass().getName() == orig(Selection.this.list.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.removed.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.selectors.getClass().getName())
Selection.this.removed == orig(Selection.this.removed)
Selection.this.removed[] == orig(Selection.this.removed[])
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
(this.next != null)  <==>  (return == true)
(this.next != null)  ==>  (this.current.getClass().getName() == this.next.getClass().getName())
(this.next != null)  ==>  (this.current.getClass().getName() in Selection.this.list[].getClass().getName())
(this.next != null)  ==>  (this.next.getClass().getName() != Selection.this.list.getClass().getName())
(this.next != null)  ==>  (this.removed.getClass().getName() != this.next.getClass().getName())
(this.next != null)  ==>  (this.sourceIter.getClass().getName() != this.next.getClass().getName())
(this.next == null)  <==>  (return == false)
===========================================================================
Selection$SelectionIterator.hasNext():::EXIT;condition="return == true"
this.next != null
return == true
this.current.getClass().getName() in Selection.this.list[].getClass().getName()
===========================================================================
Selection$SelectionIterator.hasNext():::EXIT;condition="not(return == true)"
this.next == null
return == false
===========================================================================
Selection$SelectionIterator.next():::ENTER
this.next != null
this.current.getClass().getName() in Selection.this.list[].getClass().getName()
===========================================================================
Selection$SelectionIterator.next():::EXIT
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.sourceIter == orig(this.sourceIter)
this.sourceIter.getClass().getName() == orig(this.sourceIter.getClass().getName())
this.current == return
this.current.getClass().getName() == return.getClass().getName()
this.next.getClass().getName() == return.getClass().getName()
this.next.getClass().getName() == orig(this.current.getClass().getName())
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list[] == orig(Selection.this.list[])
Selection.this.list.getClass().getName() == orig(Selection.this.list.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.removed.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.selectors.getClass().getName())
Selection.this.removed == orig(Selection.this.removed)
Selection.this.removed[] == orig(Selection.this.removed[])
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
return == orig(this.next)
return.getClass().getName() == orig(this.current.getClass().getName())
return.getClass().getName() == orig(this.next.getClass().getName())
return != null
this.removed.getClass().getName() != return.getClass().getName()
this.removed.getClass().getName() != orig(this.current.getClass().getName())
this.sourceIter.getClass().getName() != return.getClass().getName()
this.sourceIter.getClass().getName() != orig(this.current.getClass().getName())
this.next.getClass().getName() in Selection.this.list[].getClass().getName()
orig(this.current.getClass().getName()) in Selection.this.list[].getClass().getName()
Selection.this.list.getClass().getName() != return.getClass().getName()
Selection.this.list.getClass().getName() != orig(this.current.getClass().getName())
===========================================================================
Selection$SelectionIterator.nextSelected():::ENTER
===========================================================================
Selection$SelectionIterator.nextSelected():::EXIT234
this.current == this.next
this.current == orig(this.next)
this.current.getClass().getName() == orig(this.next.getClass().getName())
return != null
this.current.getClass().getName() in Selection.this.list[].getClass().getName()
===========================================================================
Selection$SelectionIterator.nextSelected():::EXIT238
return == null
===========================================================================
Selection$SelectionIterator.nextSelected():::EXIT
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.sourceIter == orig(this.sourceIter)
this.sourceIter.getClass().getName() == orig(this.sourceIter.getClass().getName())
this.current == orig(this.current)
this.current.getClass().getName() == return.getClass().getName()
this.current.getClass().getName() == orig(this.current.getClass().getName())
this.next == orig(this.next)
this.next.getClass().getName() == return.getClass().getName()
this.next.getClass().getName() == orig(this.next.getClass().getName())
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list[] == orig(Selection.this.list[])
Selection.this.list.getClass().getName() == orig(Selection.this.list.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.removed.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.selectors.getClass().getName())
Selection.this.removed == orig(Selection.this.removed)
Selection.this.removed[] == orig(Selection.this.removed[])
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
(return != null)  ==>  (Selection.this.list.getClass().getName() != return.getClass().getName())
(return != null)  ==>  (this.current == this.next)
(return != null)  ==>  (this.current.getClass().getName() == return.getClass().getName())
(return != null)  ==>  (this.current.getClass().getName() in Selection.this.list[].getClass().getName())
(return != null)  ==>  (this.next.getClass().getName() == return.getClass().getName())
(return != null)  ==>  (this.next.getClass().getName() in Selection.this.list[].getClass().getName())
(return != null)  ==>  (this.removed.getClass().getName() != return.getClass().getName())
(return != null)  ==>  (this.sourceIter.getClass().getName() != return.getClass().getName())
this.removed.getClass().getName() != return.getClass().getName()
this.sourceIter.getClass().getName() != return.getClass().getName()
Selection.this.list.getClass().getName() != return.getClass().getName()
===========================================================================
Selection$SelectionIterator.remove():::ENTER
this.current has only one value
this.current.getClass().getName() == Termin.class
this.next == null
Selection.this.list has only one value
Selection.this.list[] elements has only one value
Selection.this.list[].getClass().getName() elements == Termin.class
Selection.this.list[].getClass().getName() one of { [], [Termin] }
Selection.this.removed has only one value
Selection.this.selectors[] elements has only one value
Selection.this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
Selection.this.selectors[].getClass().getName() one of { [], [Termin.TypSelektor] }
size(Selection.this.list[]) one of { 0, 1 }
size(Selection.this.selectors[]) one of { 0, 1 }
===========================================================================
Selection$SelectionIterator.remove():::EXIT
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.sourceIter == orig(this.sourceIter)
this.sourceIter.getClass().getName() == orig(this.sourceIter.getClass().getName())
this.current == orig(this.current)
this.current.getClass().getName() == orig(this.current.getClass().getName())
this.next == orig(this.next)
Selection.this == orig(Selection.this)
Selection.this.list == orig(Selection.this.list)
Selection.this.list.getClass().getName() == orig(Selection.this.list.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.removed.getClass().getName())
Selection.this.list.getClass().getName() == orig(Selection.this.selectors.getClass().getName())
Selection.this.removed == orig(Selection.this.removed)
Selection.this.selectors == orig(Selection.this.selectors)
Selection.this.selectors[] == orig(Selection.this.selectors[])
this.current has only one value
this.current.getClass().getName() == Termin.class
this.next == null
Selection.this.list has only one value
Selection.this.list[] == []
Selection.this.list[].getClass().getName() == []
Selection.this.removed has only one value
Selection.this.selectors[] elements has only one value
Selection.this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
Selection.this.selectors[].getClass().getName() one of { [], [Termin.TypSelektor] }
size(Selection.this.selectors[]) one of { 0, 1 }
===========================================================================
Selection:::CLASS
===========================================================================
Selection:::OBJECT
this.list[] elements != null
this.list.getClass().getName() == java.util.ArrayList.class
this.removed[] elements has only one value
this.removed[] elements != null
this.removed[].getClass().getName() elements == Termin.class
this.removed[].getClass().getName() one of { [], [Termin] }
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors[] elements != null
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.removed[]) one of { 0, 1 }
===========================================================================
Selection.Selection():::EXIT
this.list != null
this.list[] == []
this.list[].getClass().getName() == []
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
this.selectors[] == []
this.selectors[].getClass().getName() == []
===========================================================================
Selection.Selection(Selection, java.util.List):::ENTER
arg0 != null
arg0.list != null
arg0.list[] elements != null
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed != null
arg0.removed[] elements has only one value
arg0.removed[] elements != null
arg0.removed[].getClass().getName() elements == Termin.class
arg0.removed[].getClass().getName() one of { [], [Termin] }
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors != null
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1 != null
arg1[] elements != null
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0.removed[]) one of { 0, 1 }
size(arg1[]) one of { 1, 2, 3 }
===========================================================================
Selection.Selection(Selection, java.util.List):::EXIT
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.removed == orig(arg0.removed)
arg0.removed[] == orig(arg0.removed[])
arg0.removed.getClass().getName() == orig(arg0.removed.getClass().getName())
arg0.selectors == orig(arg0.selectors)
arg0.selectors[] == orig(arg0.selectors[])
arg0.selectors.getClass().getName() == orig(arg0.selectors.getClass().getName())
arg1[] == orig(arg1[])
this.list != null
this.removed != null
this.selectors != null
arg0.list != null
arg0.list[] elements != null
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed != null
arg0.removed[] elements has only one value
arg0.removed[] elements != null
arg0.removed[].getClass().getName() elements == Termin.class
arg0.removed[].getClass().getName() one of { [], [Termin] }
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors != null
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[] elements != null
size(this.selectors[]) one of { 1, 2, 3 }
size(arg0.removed[]) one of { 0, 1 }
===========================================================================
Selection.add(java.lang.Object):::ENTER
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0 != null
===========================================================================
Selection.add(java.lang.Object):::EXIT
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
size(this.list[])-1 == orig(size(this.list[]))
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
this.selectors[] == []
this.selectors[].getClass().getName() == []
return == true
size(this.list[]) >= 1
===========================================================================
Selection.add(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
Selection.asList():::ENTER
this.list != null
this.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.list[].getClass().getName() elements == Mitglied.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
size(this.list[]) == 7
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Selection.asList():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list != null
this.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.list[].getClass().getName() elements == Mitglied.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
return != null
return[] elements != null
return[].getClass().getName() elements == Mitglied.class
return.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 7
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Selection.count():::ENTER
this.list[].getClass().getName() elements == Termin.class
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[].getClass().getName() == [Termin.TypSelektor, Termin.ZeitraumSelektor, Termin.TeilnehmerSelektor]
size(this.list[]) one of { 0, 3, 5 }
size(this.selectors[]) == 3
===========================================================================
Selection.count():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list[].getClass().getName() elements == Termin.class
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[].getClass().getName() == [Termin.TypSelektor, Termin.ZeitraumSelektor, Termin.TeilnehmerSelektor]
return one of { 0, 2, 4 }
size(this.list[]) one of { 0, 3, 5 }
size(this.selectors[]) == 3
===========================================================================
Selection.getFirst():::ENTER
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Selection.getFirst():::EXIT50
===========================================================================
Selection.getFirst():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
return != null
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Selection.iterator():::ENTER
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
===========================================================================
Selection.iterator():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
return != null
return.getClass().getName() == Selection$SelectionIterator.class
===========================================================================
Selection.readObject(java.io.ObjectInputStream):::ENTER
this.list == null
this.removed == null
this.selectors == null
arg0 has only one value
===========================================================================
Selection.readObject(java.io.ObjectInputStream):::EXIT
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
size(this.list[]) one of { 3, 4, 7 }
===========================================================================
Selection.removedIterator():::ENTER
this has only one value
this.list has only one value
this.list[] == []
this.list[].getClass().getName() == []
this.removed has only one value
this.removed[] contains no nulls and has only one value, of length 1
this.removed[].getClass().getName() == [Termin]
this.selectors has only one value
this.selectors[] contains no nulls and has only one value, of length 1
this.selectors[] elements has only one value
this.selectors[].getClass().getName() == [Termin.TypSelektor]
this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
size(this.removed[]) == 1
size(this.selectors[]) == 1
===========================================================================
Selection.removedIterator():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list has only one value
this.list[] == []
this.list[].getClass().getName() == []
this.removed has only one value
this.removed[] contains no nulls and has only one value, of length 1
this.removed[].getClass().getName() == [Termin]
this.selectors has only one value
this.selectors[] contains no nulls and has only one value, of length 1
this.selectors[] elements has only one value
this.selectors[].getClass().getName() == [Termin.TypSelektor]
this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
return has only one value
return.getClass().getName() == Selection$SelectionIterator.class
size(this.removed[]) == 1
size(this.selectors[]) == 1
===========================================================================
Selection.restore():::ENTER
this has only one value
this.list has only one value
this.list[] == []
this.list[].getClass().getName() == []
this.removed has only one value
this.removed[] contains no nulls and has only one value, of length 1
this.removed[].getClass().getName() == [Termin]
this.selectors has only one value
this.selectors[] contains no nulls and has only one value, of length 1
this.selectors[] elements has only one value
this.selectors[].getClass().getName() == [Termin.TypSelektor]
this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
size(this.removed[]) == 1
size(this.selectors[]) == 1
===========================================================================
Selection.restore():::EXIT
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
size(this.list[])-1 == orig(size(this.list[]))
size(this.removed[]) == orig(size(this.removed[]))-1
this.list has only one value
this.list[] contains no nulls and has only one value, of length 1
this.list[] elements has only one value
this.list[].getClass().getName() == [Termin]
this.list[].getClass().getName() elements == Termin.class
this.removed has only one value
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors has only one value
this.selectors[] contains no nulls and has only one value, of length 1
this.selectors[] elements has only one value
this.selectors[].getClass().getName() == [Termin.TypSelektor]
this.selectors[].getClass().getName() elements == Termin.TypSelektor.class
size(this.list[]) == 1
size(this.selectors[]) == 1
===========================================================================
Selection.selected(java.lang.Object):::ENTER
this.list != null
this.removed != null
this.selectors != null
arg0 != null
===========================================================================
Selection.selected(java.lang.Object):::EXIT131
this.removed[] == []
this.removed[].getClass().getName() == []
return == false
size(this.selectors[]) one of { 1, 2, 3 }
===========================================================================
Selection.selected(java.lang.Object):::EXIT131;condition="not(return == true)"
===========================================================================
Selection.selected(java.lang.Object):::EXIT134
return == true
===========================================================================
Selection.selected(java.lang.Object):::EXIT134;condition="return == true"
===========================================================================
Selection.selected(java.lang.Object):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
(return == false)  ==>  (size(this.selectors[]) one of { 1, 2, 3 })
(return == false)  ==>  (this.removed[] == [])
(return == false)  ==>  (this.removed[].getClass().getName() == [])
(return == true)  ==>  (size(this.removed[]) one of { 0, 1 })
(return == true)  ==>  (this.removed[] elements has only one value)
(return == true)  ==>  (this.removed[].getClass().getName() elements == Termin.class)
(return == true)  ==>  (this.removed[].getClass().getName() one of { [], [Termin] })
this.list != null
this.removed != null
this.selectors != null
===========================================================================
Selection.selected(java.lang.Object):::EXIT;condition="return == true"
return == true
===========================================================================
Selection.selected(java.lang.Object):::EXIT;condition="not(return == true)"
this.removed[] == []
this.removed[].getClass().getName() == []
return == false
size(this.selectors[]) one of { 1, 2, 3 }
===========================================================================
Selection.toString():::ENTER
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
size(this.selectors[]) one of { 0, 1, 2 }
===========================================================================
Selection.toString():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list != null
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors != null
return != null
size(this.selectors[]) one of { 0, 1, 2 }
===========================================================================
Song$TerminSelector:::OBJECT
this.termin.typus == Termin$Typ.Auftritt
this.termin.ort.infrastruktur.getClass().getName() == this.termin.teilnehmer.getClass().getName()
this.termin.zeitraum.zeitpunkte.getClass().getName() == this.termin.teilnehmer.getClass().getName()
this has only one value
this.termin has only one value
Termin$Typ.Probe has only one value
Termin$Typ.Auftritt has only one value
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
this.termin.ort has only one value
this.termin.ort.bezeichnung has only one value
this.termin.ort.bezeichnung.toString == "St. Poelten"
this.termin.ort.infrastruktur has only one value
this.termin.ort.infrastruktur[] contains no nulls and has only one value, of length 2
this.termin.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String]
this.termin.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
this.termin.zeitraum has only one value
this.termin.zeitraum.zeitpunkte has only one value
this.termin.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.termin.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
this.termin.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.termin.posten has only one value
this.termin.posten.einnahmen == 10000.0
this.termin.posten.ausgaben == 1000.0
this.termin.posten.bezeichnung has only one value
this.termin.posten.bezeichnung.toString == "Auftritt"
this.termin.posten.datum has only one value
this.termin.teilnehmer has only one value
this.termin.teilnehmer[] == []
this.termin.teilnehmer[].getClass().getName() == []
this.termin.teilnehmer.getClass().getName() == java.util.ArrayList.class
this.termin.orig == null
size(Termin$Typ.$VALUES[]) == 2
size(this.termin.ort.infrastruktur[]) == 2
size(this.termin.zeitraum.zeitpunkte[]) == 2
Termin$Typ.$VALUES.getClass().getName() != this.termin.teilnehmer.getClass().getName()
===========================================================================
Song$TerminSelector.TerminSelector(Termin):::ENTER
arg0.typus == Termin$Typ.Auftritt
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0 has only one value
Termin$Typ.Probe has only one value
Termin$Typ.Auftritt has only one value
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort has only one value
arg0.ort.bezeichnung has only one value
arg0.ort.bezeichnung.toString == "St. Poelten"
arg0.ort.infrastruktur has only one value
arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 2
arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten has only one value
arg0.posten.einnahmen == 10000.0
arg0.posten.ausgaben == 1000.0
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung.toString == "Auftritt"
arg0.posten.datum has only one value
arg0.teilnehmer has only one value
arg0.teilnehmer[] == []
arg0.teilnehmer[].getClass().getName() == []
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
size(Termin$Typ.$VALUES[]) == 2
size(arg0.ort.infrastruktur[]) == 2
size(arg0.zeitraum.zeitpunkte[]) == 2
===========================================================================
Song$TerminSelector.TerminSelector(Termin):::EXIT
this.termin == orig(arg0)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == arg0.typus
Termin$Typ.Auftritt == orig(arg0.typus)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == arg0.ort
this.termin.ort.bezeichnung == arg0.ort.bezeichnung
this.termin.ort.infrastruktur == arg0.ort.infrastruktur
this.termin.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termin.zeitraum == arg0.zeitraum
this.termin.zeitraum.zeitpunkte == arg0.zeitraum.zeitpunkte
this.termin.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.termin.posten == arg0.posten
this.termin.posten.einnahmen == arg0.posten.einnahmen
this.termin.posten.ausgaben == arg0.posten.ausgaben
this.termin.posten.bezeichnung == arg0.posten.bezeichnung
this.termin.posten.datum == arg0.posten.datum
this.termin.teilnehmer == arg0.teilnehmer
this.termin.teilnehmer.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
arg0.ort has only one value
arg0.ort.bezeichnung has only one value
arg0.ort.bezeichnung.toString == "St. Poelten"
arg0.ort.infrastruktur has only one value
arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 2
arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String]
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten has only one value
arg0.posten.einnahmen == 10000.0
arg0.posten.ausgaben == 1000.0
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung.toString == "Auftritt"
arg0.posten.datum has only one value
arg0.teilnehmer has only one value
arg0.teilnehmer[] == []
arg0.teilnehmer[].getClass().getName() == []
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
size(arg0.ort.infrastruktur[]) == 2
size(arg0.zeitraum.zeitpunkte[]) == 2
===========================================================================
Song$TerminSelector.select(Song):::ENTER
this.termin.teilnehmer.getClass().getName() == arg0.zeitraum.zeitpunkte.getClass().getName()
this.termin.teilnehmer.getClass().getName() == arg0.varianten.getClass().getName()
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
Song$TerminSelector.select(Song):::EXIT
this.termin == orig(this.termin)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(this.termin.typus)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == arg0.varianten.getClass().getName()
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == arg0.varianten.getClass().getName()
this.termin.orig == orig(this.termin.orig)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
arg0.varianten == orig(arg0.varianten)
arg0.varianten[] == orig(arg0.varianten[])
arg0.varianten.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
arg0.varianten.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
arg0.varianten.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
arg0.varianten.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.varianten.getClass().getName() == orig(arg0.varianten.getClass().getName())
(arg0.name.toString == "Basketcase")  <==>  (arg0.varianten[].getClass().getName() == [Variante])
(arg0.name.toString == "Basketcase")  <==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date])
(arg0.name.toString == "Basketcase")  <==>  (return == false)
(arg0.name.toString == "Basketcase")  <==>  (size(arg0.varianten[]) == 1)
(arg0.name.toString == "Basketcase")  <==>  (size(arg0.zeitraum.zeitpunkte[]) == 2)
(arg0.name.toString == "Basketcase")  ==>  (arg0.name has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten[] contains no nulls and has only one value, of length 1)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten[] elements has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum.zeitpunkte has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2)
(arg0.name.toString == "Basketcase")  ==>  (orig(arg0) has only one value)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (arg0.varianten[].getClass().getName() == [Variante, Variante])
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date])
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (return == true)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (size(arg0.varianten[]) == 2)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (size(arg0.zeitraum.zeitpunkte[]) == 1)
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg0.varianten.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
Song$TerminSelector.select(Song):::EXIT;condition="return == true"
arg0.name.toString one of { "American Idiot", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.varianten[].getClass().getName() == [Variante, Variante]
return == true
size(arg0.zeitraum.zeitpunkte[]) == 1
size(arg0.varianten[]) == 2
===========================================================================
Song$TerminSelector.select(Song):::EXIT;condition="not(return == true)"
arg0.name has only one value
arg0.name.toString == "Basketcase"
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.varianten has only one value
arg0.varianten[] contains no nulls and has only one value, of length 1
arg0.varianten[] elements has only one value
arg0.varianten[].getClass().getName() == [Variante]
return == false
orig(arg0) has only one value
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.varianten[]) == 1
===========================================================================
Song$ZeitpunktSelektor:::OBJECT
this has only one value
this.zeitpunkt has only one value
this.zeitpunkt != null
===========================================================================
Song$ZeitpunktSelektor.ZeitpunktSelektor(java.util.Date):::ENTER
arg0 has only one value
===========================================================================
Song$ZeitpunktSelektor.ZeitpunktSelektor(java.util.Date):::EXIT
this.zeitpunkt == orig(arg0)
===========================================================================
Song$ZeitpunktSelektor.select(Song):::ENTER
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg0.varianten.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
Song$ZeitpunktSelektor.select(Song):::EXIT
this.zeitpunkt == orig(this.zeitpunkt)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
arg0.varianten == orig(arg0.varianten)
arg0.varianten[] == orig(arg0.varianten[])
arg0.varianten.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.varianten.getClass().getName() == orig(arg0.varianten.getClass().getName())
(arg0.name.toString == "Basketcase")  <==>  (arg0.varianten[].getClass().getName() == [Variante])
(arg0.name.toString == "Basketcase")  <==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date])
(arg0.name.toString == "Basketcase")  <==>  (return == false)
(arg0.name.toString == "Basketcase")  <==>  (size(arg0.varianten[]) == 1)
(arg0.name.toString == "Basketcase")  <==>  (size(arg0.zeitraum.zeitpunkte[]) == 2)
(arg0.name.toString == "Basketcase")  ==>  (arg0.name has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten[] contains no nulls and has only one value, of length 1)
(arg0.name.toString == "Basketcase")  ==>  (arg0.varianten[] elements has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum.zeitpunkte has only one value)
(arg0.name.toString == "Basketcase")  ==>  (arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2)
(arg0.name.toString == "Basketcase")  ==>  (orig(arg0) has only one value)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (arg0.varianten[].getClass().getName() == [Variante, Variante])
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date])
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (return == true)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (size(arg0.varianten[]) == 2)
(arg0.name.toString one of { "American Idiot", "Holiday" })  <==>  (size(arg0.zeitraum.zeitpunkte[]) == 1)
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg0.varianten.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
Song$ZeitpunktSelektor.select(Song):::EXIT;condition="return == true"
arg0.name.toString one of { "American Idiot", "Holiday" }
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.varianten[].getClass().getName() == [Variante, Variante]
return == true
size(arg0.zeitraum.zeitpunkte[]) == 1
size(arg0.varianten[]) == 2
===========================================================================
Song$ZeitpunktSelektor.select(Song):::EXIT;condition="not(return == true)"
arg0.name has only one value
arg0.name.toString == "Basketcase"
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.varianten has only one value
arg0.varianten[] contains no nulls and has only one value, of length 1
arg0.varianten[] elements has only one value
arg0.varianten[].getClass().getName() == [Variante]
return == false
orig(arg0) has only one value
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.varianten[]) == 1
===========================================================================
Song:::CLASS
===========================================================================
Song:::OBJECT
this.name != null
this.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
this.zeitraum != null
this.zeitraum.zeitpunkte != null
this.zeitraum.zeitpunkte[] elements != null
this.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
this.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.varianten != null
this.varianten[] elements != null
this.varianten[].getClass().getName() elements == Variante.class
this.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
this.varianten.getClass().getName() == java.util.ArrayList.class
size(this.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(this.varianten[]) one of { 1, 2 }
===========================================================================
Song.Song(java.lang.String, Zeitraum, java.util.List):::ENTER
arg1.zeitpunkte.getClass().getName() == arg2.getClass().getName()
arg0.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg1.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg1.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg2[].getClass().getName() elements == Variante.class
arg2[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg2.getClass().getName() == java.util.ArrayList.class
size(arg1.zeitpunkte[]) one of { 1, 2 }
size(arg2[]) one of { 1, 2 }
===========================================================================
Song.Song(java.lang.String, Zeitraum, java.util.List):::EXIT
this.name == orig(arg0)
this.zeitraum == orig(arg1)
this.zeitraum.zeitpunkte == arg1.zeitpunkte
this.zeitraum.zeitpunkte.getClass().getName() == this.varianten.getClass().getName()
this.varianten == orig(arg2)
this.varianten.getClass().getName() == arg1.zeitpunkte.getClass().getName()
this.varianten.getClass().getName() == orig(arg1.zeitpunkte.getClass().getName())
this.varianten.getClass().getName() == orig(arg2.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.zeitpunkte == orig(arg1.zeitpunkte)
arg1.zeitpunkte[] == orig(arg1.zeitpunkte[])
arg2[] == orig(arg2[])
arg0.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg1.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg1.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg2[].getClass().getName() elements == Variante.class
arg2[].getClass().getName() one of { [Variante], [Variante, Variante] }
size(arg1.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Song.getVarianten():::ENTER
this.zeitraum.zeitpunkte.getClass().getName() == this.varianten.getClass().getName()
===========================================================================
Song.getVarianten():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == return.getClass().getName()
this.varianten == return
this.varianten[] == orig(this.varianten[])
this.varianten.getClass().getName() == return.getClass().getName()
return == orig(this.varianten)
return.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
return.getClass().getName() == orig(this.varianten.getClass().getName())
return[].getClass().getName() elements == Variante.class
return[].getClass().getName() one of { [Variante], [Variante, Variante] }
return.getClass().getName() == java.util.ArrayList.class
size(return[]) one of { 1, 2 }
===========================================================================
Song.toDetailString():::ENTER
this.zeitraum.zeitpunkte.getClass().getName() == this.varianten.getClass().getName()
===========================================================================
Song.toDetailString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == this.varianten.getClass().getName()
this.varianten == orig(this.varianten)
this.varianten[] == orig(this.varianten[])
this.varianten.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.varianten.getClass().getName() == orig(this.varianten.getClass().getName())
return.toString one of { "American Idiot [Apr 4, 2004 - ] [Normal: 3:15, Acoustic: 3:20]", "Basketcase [Feb 3, 1994 - May 3, 2004] [Normal: 3:15]", "Holiday [Mar 6, 2005 - ] [Normal: 3:20, Acoustic: 3:30]" }
===========================================================================
Song.toString():::ENTER
===========================================================================
Song.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.varianten == orig(this.varianten)
this.varianten[] == orig(this.varianten[])
this.varianten.getClass().getName() == orig(this.varianten.getClass().getName())
return != null
return.toString one of { "American Idiot", "Basketcase", "Holiday" }
===========================================================================
SongVariante:::OBJECT
this.song != null
this.song.name != null
this.song.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
this.song.zeitraum != null
this.song.zeitraum.zeitpunkte != null
this.song.zeitraum.zeitpunkte[] elements != null
this.song.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.song.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
this.song.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.song.varianten != null
this.song.varianten[] elements != null
this.song.varianten[].getClass().getName() elements == Variante.class
this.song.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
this.song.varianten.getClass().getName() == java.util.ArrayList.class
this.variante != null
this.variante.bezeichnung != null
this.variante.bezeichnung.toString one of { "Acoustic", "Normal" }
this.variante.laenge one of { 195, 200, 210 }
size(this.song.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(this.song.varianten[]) one of { 1, 2 }
===========================================================================
SongVariante.SongVariante(Song, Variante):::ENTER
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
arg0 != null
arg0.name != null
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten != null
arg0.varianten[] elements != null
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg0.varianten.getClass().getName() == java.util.ArrayList.class
arg1 != null
arg1.bezeichnung != null
arg1.bezeichnung.toString one of { "Acoustic", "Normal" }
arg1.laenge one of { 195, 200, 210 }
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
SongVariante.SongVariante(Song, Variante):::EXIT
this.song == orig(arg0)
this.song.name == arg0.name
this.song.zeitraum == arg0.zeitraum
this.song.zeitraum.zeitpunkte == arg0.zeitraum.zeitpunkte
this.song.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
this.song.varianten == arg0.varianten
this.song.varianten.getClass().getName() == arg0.varianten.getClass().getName()
this.variante == orig(arg1)
this.variante.bezeichnung == arg1.bezeichnung
this.variante.laenge == arg1.laenge
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.varianten.getClass().getName()
arg0.varianten == orig(arg0.varianten)
arg0.varianten[] == orig(arg0.varianten[])
arg0.varianten.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.varianten.getClass().getName() == orig(arg0.varianten.getClass().getName())
arg1.bezeichnung == orig(arg1.bezeichnung)
arg1.bezeichnung.toString == orig(arg1.bezeichnung.toString)
arg1.laenge == orig(arg1.laenge)
arg0.name != null
arg0.name.toString one of { "American Idiot", "Basketcase", "Holiday" }
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.varianten != null
arg0.varianten[] elements != null
arg0.varianten[].getClass().getName() elements == Variante.class
arg0.varianten[].getClass().getName() one of { [Variante], [Variante, Variante] }
arg0.varianten.getClass().getName() == java.util.ArrayList.class
arg1.bezeichnung != null
arg1.bezeichnung.toString one of { "Acoustic", "Normal" }
arg1.laenge one of { 195, 200, 210 }
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(arg0.varianten[]) one of { 1, 2 }
===========================================================================
SongVariante.toString():::ENTER
===========================================================================
SongVariante.toString():::EXIT
this.song == orig(this.song)
this.song.name == orig(this.song.name)
this.song.name.toString == orig(this.song.name.toString)
this.song.zeitraum == orig(this.song.zeitraum)
this.song.zeitraum.zeitpunkte == orig(this.song.zeitraum.zeitpunkte)
this.song.zeitraum.zeitpunkte[] == orig(this.song.zeitraum.zeitpunkte[])
this.song.zeitraum.zeitpunkte.getClass().getName() == orig(this.song.zeitraum.zeitpunkte.getClass().getName())
this.song.varianten == orig(this.song.varianten)
this.song.varianten[] == orig(this.song.varianten[])
this.song.varianten.getClass().getName() == orig(this.song.varianten.getClass().getName())
this.variante == orig(this.variante)
this.variante.bezeichnung == orig(this.variante.bezeichnung)
this.variante.bezeichnung.toString == orig(this.variante.bezeichnung.toString)
this.variante.laenge == orig(this.variante.laenge)
return != null
===========================================================================
Songs:::CLASS
===========================================================================
Songs:::OBJECT
this.list != null
this.list[] elements != null
this.list[].getClass().getName() elements == Song.class
this.list[].getClass().getName() one of { [], [Song, Song, Song] }
this.list.getClass().getName() == java.util.ArrayList.class
this.removed != null
this.removed[] == []
this.removed[].getClass().getName() == []
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors != null
this.selectors[] elements != null
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 0, 3 }
size(this.list[])-1 != 0
size(this.selectors[]) one of { 0, 1 }
===========================================================================
Songs.Songs():::EXIT
this.list[] == []
this.list[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
===========================================================================
Songs.Songs(Songs, java.util.List):::ENTER
arg0 has only one value
arg0.list has only one value
arg0.list[] contains no nulls and has only one value, of length 3
arg0.list[].getClass().getName() == [Song, Song, Song]
arg0.list[].getClass().getName() elements == Song.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed has only one value
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors has only one value
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0.list[]) == 3
size(arg1[]) == 1
===========================================================================
Songs.Songs(Songs, java.util.List):::EXIT
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.removed == orig(arg0.removed)
arg0.removed[] == orig(arg0.removed[])
arg0.removed.getClass().getName() == orig(arg0.removed.getClass().getName())
arg0.selectors == orig(arg0.selectors)
arg0.selectors[] == orig(arg0.selectors[])
arg0.selectors.getClass().getName() == orig(arg0.selectors.getClass().getName())
arg1[] == orig(arg1[])
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
arg0.list has only one value
arg0.list[] contains no nulls and has only one value, of length 3
arg0.list[].getClass().getName() == [Song, Song, Song]
arg0.list[].getClass().getName() elements == Song.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed has only one value
arg0.removed[] == []
arg0.removed[].getClass().getName() == []
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors has only one value
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
size(this.list[]) == 3
size(this.selectors[]) == 1
size(arg0.list[]) == 3
===========================================================================
Songs.getSongVarianten():::ENTER
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
size(this.list[]) == 3
===========================================================================
Songs.getSongVarianten():::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
return[].getClass().getName() elements == SongVariante.class
return[].getClass().getName() one of { [SongVariante, SongVariante, SongVariante, SongVariante], [SongVariante, SongVariante, SongVariante, SongVariante, SongVariante] }
return.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(return[]) one of { 4, 5 }
===========================================================================
Songs.getSongVarianten(java.util.List):::ENTER
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
arg0[] elements has only one value
arg0[].getClass().getName() elements == Variante.BezeichnungSelektor.class
arg0[].getClass().getName() one of { [], [Variante.BezeichnungSelektor] }
arg0.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(arg0[]) one of { 0, 1 }
===========================================================================
Songs.getSongVarianten(java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
arg0[] elements has only one value
arg0[].getClass().getName() elements == Variante.BezeichnungSelektor.class
arg0[].getClass().getName() one of { [], [Variante.BezeichnungSelektor] }
return[].getClass().getName() elements == SongVariante.class
return.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(return[]) one of { 2, 4, 5 }
===========================================================================
Songs.select(Variante, java.util.List):::ENTER
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
arg0 != null
arg0.bezeichnung != null
arg0.bezeichnung.toString one of { "Acoustic", "Normal" }
arg0.laenge one of { 195, 200, 210 }
arg1 != null
arg1[] elements has only one value
arg1[] elements != null
arg1[].getClass().getName() elements == Variante.BezeichnungSelektor.class
arg1[].getClass().getName() one of { [], [Variante.BezeichnungSelektor] }
arg1.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(arg1[]) one of { 0, 1 }
===========================================================================
Songs.select(Variante, java.util.List):::EXIT66
arg0.bezeichnung has only one value
arg0.bezeichnung.toString == "Normal"
arg0.laenge one of { 195, 200 }
arg1[] contains no nulls and has only one value, of length 1
arg1[].getClass().getName() == [Variante.BezeichnungSelektor]
return == false
orig(arg1) has only one value
orig(size(arg1[])) == 1
===========================================================================
Songs.select(Variante, java.util.List):::EXIT66;condition="not(return == true)"
===========================================================================
Songs.select(Variante, java.util.List):::EXIT69
return == true
===========================================================================
Songs.select(Variante, java.util.List):::EXIT69;condition="return == true"
===========================================================================
Songs.select(Variante, java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == orig(arg0.bezeichnung.toString)
arg0.laenge == orig(arg0.laenge)
arg1[] == orig(arg1[])
(return == false)  ==>  (arg0.bezeichnung has only one value)
(return == false)  ==>  (arg0.bezeichnung.toString == "Normal")
(return == false)  ==>  (arg0.laenge one of { 195, 200 })
(return == false)  ==>  (arg1[] contains no nulls and has only one value, of length 1)
(return == false)  ==>  (arg1[].getClass().getName() == [Variante.BezeichnungSelektor])
(return == false)  ==>  (orig(arg1) has only one value)
(return == false)  ==>  (orig(size(arg1[])) == 1)
(return == true)  ==>  (arg0.bezeichnung.toString one of { "Acoustic", "Normal" })
(return == true)  ==>  (arg0.laenge one of { 195, 200, 210 })
(return == true)  ==>  (arg1[].getClass().getName() one of { [], [Variante.BezeichnungSelektor] })
(return == true)  ==>  (orig(size(arg1[])) one of { 0, 1 })
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors[] elements has only one value
this.selectors[].getClass().getName() elements == Song.ZeitpunktSelektor.class
this.selectors[].getClass().getName() one of { [], [Song.ZeitpunktSelektor] }
arg0.bezeichnung != null
arg0.bezeichnung.toString one of { "Acoustic", "Normal" }
arg0.laenge one of { 195, 200, 210 }
arg1[] elements has only one value
arg1[] elements != null
arg1[].getClass().getName() elements == Variante.BezeichnungSelektor.class
arg1[].getClass().getName() one of { [], [Variante.BezeichnungSelektor] }
size(this.list[]) == 3
===========================================================================
Songs.select(Variante, java.util.List):::EXIT;condition="return == true"
return == true
===========================================================================
Songs.select(Variante, java.util.List):::EXIT;condition="not(return == true)"
arg0.bezeichnung has only one value
arg0.bezeichnung.toString == "Normal"
arg0.laenge one of { 195, 200 }
arg1[] contains no nulls and has only one value, of length 1
arg1[].getClass().getName() == [Variante.BezeichnungSelektor]
return == false
orig(arg1) has only one value
orig(size(arg1[])) == 1
===========================================================================
Songs.select(java.util.List):::ENTER
this has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
arg0.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(arg0[]) == 1
===========================================================================
Songs.select(java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.list has only one value
this.list[] contains no nulls and has only one value, of length 3
this.list[].getClass().getName() == [Song, Song, Song]
this.removed has only one value
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
return.list has only one value
return.list[] contains no nulls and has only one value, of length 3
return.list[].getClass().getName() == [Song, Song, Song]
return.list[].getClass().getName() elements == Song.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed has only one value
return.removed[] == []
return.removed[].getClass().getName() == []
return.removed.getClass().getName() == java.util.ArrayList.class
return.selectors[].getClass().getName() one of { [Song.TerminSelector], [Song.ZeitpunktSelektor] }
return.selectors.getClass().getName() == java.util.ArrayList.class
size(this.list[]) == 3
size(return.list[]) == 3
size(return.selectors[]) == 1
===========================================================================
Termin$TeilnehmerSelektor:::OBJECT
this.m.nachrichten.getClass().getName() == this.m.terminvorschlaege.getClass().getName()
this.m != null
this.m.name != null
this.m.telNr != null
this.m.instrument != null
this.m.instrument.toString one of { "Bass", "Gesang", "Getanze" }
this.m.zeitraum != null
this.m.zeitraum.zeitpunkte != null
this.m.zeitraum.zeitpunkte[] elements != null
this.m.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
this.m.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.m.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.m.nachrichten != null
this.m.nachrichten.getClass().getName() == java.util.LinkedList.class
this.m.terminvorschlaege != null
this.m.ersatzmitglied == true
size(this.m.zeitraum.zeitpunkte[]) == 1
this.m.zeitraum.zeitpunkte.getClass().getName() != this.m.nachrichten.getClass().getName()
===========================================================================
Termin$TeilnehmerSelektor.TeilnehmerSelektor(Mitglied):::ENTER
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.instrument.toString one of { "Bass", "Gesang", "Getanze" }
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.ersatzmitglied == true
size(arg0.zeitraum.zeitpunkte[]) == 1
===========================================================================
Termin$TeilnehmerSelektor.TeilnehmerSelektor(Mitglied):::EXIT
this.m == orig(arg0)
this.m.name == arg0.name
this.m.telNr == arg0.telNr
this.m.instrument == arg0.instrument
this.m.zeitraum == arg0.zeitraum
this.m.zeitraum.zeitpunkte == arg0.zeitraum.zeitpunkte
this.m.zeitraum.zeitpunkte.getClass().getName() == arg0.zeitraum.zeitpunkte.getClass().getName()
this.m.nachrichten == arg0.nachrichten
this.m.nachrichten.getClass().getName() == arg0.nachrichten.getClass().getName()
this.m.terminvorschlaege == arg0.terminvorschlaege
this.m.terminvorschlaege.getClass().getName() == arg0.nachrichten.getClass().getName()
this.m.ersatzmitglied == arg0.ersatzmitglied
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == arg0.terminvorschlaege.getClass().getName()
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.nachrichten.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
arg0.instrument.toString one of { "Bass", "Gesang", "Getanze" }
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.ersatzmitglied == true
size(arg0.zeitraum.zeitpunkte[]) == 1
===========================================================================
Termin$TeilnehmerSelektor.select(Termin):::ENTER
this.m.zeitraum.zeitpunkte.getClass().getName() == arg0.ort.infrastruktur.getClass().getName()
this.m.zeitraum.zeitpunkte.getClass().getName() == arg0.zeitraum.zeitpunkte.getClass().getName()
this.m.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.typus == Termin$Typ.Probe
arg0 != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.bezeichnung.toString one of { "Korneuburg", "Kueniglberg", "St. Poelten" }
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen == 0.0
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString == "Probe"
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig == null
size(Termin$Typ.$VALUES[]) == 2
size(arg0.ort.infrastruktur[]) one of { 1, 2, 5 }
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.teilnehmer[]) one of { 2, 3, 7 }
this.m.zeitraum.zeitpunkte.getClass().getName() != Termin$Typ.$VALUES.getClass().getName()
this.m.nachrichten.getClass().getName() != Termin$Typ.$VALUES.getClass().getName()
===========================================================================
Termin$TeilnehmerSelektor.select(Termin):::EXIT
this.m == orig(this.m)
this.m.name == orig(this.m.name)
this.m.name.toString == orig(this.m.name.toString)
this.m.telNr == orig(this.m.telNr)
this.m.telNr.toString == orig(this.m.telNr.toString)
this.m.instrument == orig(this.m.instrument)
this.m.instrument.toString == orig(this.m.instrument.toString)
this.m.zeitraum == orig(this.m.zeitraum)
this.m.zeitraum.zeitpunkte == orig(this.m.zeitraum.zeitpunkte)
this.m.zeitraum.zeitpunkte[] == orig(this.m.zeitraum.zeitpunkte[])
this.m.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.m.nachrichten == orig(this.m.nachrichten)
this.m.nachrichten.getClass().getName() == orig(this.m.nachrichten.getClass().getName())
this.m.nachrichten.getClass().getName() == orig(this.m.terminvorschlaege.getClass().getName())
this.m.terminvorschlaege == orig(this.m.terminvorschlaege)
this.m.ersatzmitglied == orig(this.m.ersatzmitglied)
arg0.typus == Termin$Typ.Probe
Termin$Typ.Probe == orig(arg0.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == orig(this.m.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.bezeichnung.toString one of { "Korneuburg", "Kueniglberg", "St. Poelten" }
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen == 0.0
arg0.posten.bezeichnung has only one value
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString == "Probe"
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
return == true
size(Termin$Typ.$VALUES[]) == 2
size(arg0.ort.infrastruktur[]) one of { 1, 2, 5 }
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.teilnehmer[]) one of { 2, 3, 7 }
this.m.nachrichten.getClass().getName() != Termin$Typ.$VALUES.getClass().getName()
this.m.nachrichten.getClass().getName() != arg0.teilnehmer.getClass().getName()
Termin$Typ.$VALUES.getClass().getName() != arg0.teilnehmer.getClass().getName()
===========================================================================
Termin$TeilnehmerSelektor.select(Termin):::EXIT;condition="return == true"
===========================================================================
Termin$Typ:::CLASS
Termin$Typ.Probe has only one value
Termin$Typ.Auftritt has only one value
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
size(Termin$Typ.$VALUES[]) == 2
===========================================================================
Termin$Typ:::OBJECT
===========================================================================
Termin$Typ.Typ(java.lang.String, int):::ENTER
arg0.toString one of { "Auftritt", "Probe" }
arg1 one of { 0, 1 }
===========================================================================
Termin$Typ.Typ(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Auftritt", "Probe" }
===========================================================================
Termin$Typ.values():::ENTER
===========================================================================
Termin$Typ.values():::EXIT
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
return has only one value
return.getClass().getName() == Termin$Typ[].class
return[] contains no nulls and has only one value, of length 2
size(return[]) == 2
===========================================================================
Termin$TypSelektor:::OBJECT
this.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
size(Termin$Typ.$VALUES[]) == 2
===========================================================================
Termin$TypSelektor.TypSelektor(Termin$Typ):::ENTER
arg0 != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
size(Termin$Typ.$VALUES[]) == 2
===========================================================================
Termin$TypSelektor.TypSelektor(Termin$Typ):::EXIT
this.typus == orig(arg0)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
===========================================================================
Termin$TypSelektor.select(Termin):::ENTER
Termin$Typ.Auftritt == arg0.orig.typus
arg0.typus == arg0.orig.typus
arg0.ort == arg0.orig.ort
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == arg0.orig.zeitraum
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.teilnehmer == arg0.orig.teilnehmer
arg0.teilnehmer.getClass().getName() == arg0.orig.teilnehmer.getClass().getName()
arg0 != null
arg0.typus != null
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.ausgaben >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.typus has only one value
arg0.orig.ort has only one value
arg0.orig.zeitraum has only one value
arg0.orig.posten has only one value
arg0.orig.teilnehmer has only one value
arg0.orig.teilnehmer[] contains no nulls and has only one value, of length 3
arg0.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
arg0.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.orig has only one value
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.orig.teilnehmer[]) == 3
Termin$Typ.$VALUES.getClass().getName() != arg0.teilnehmer.getClass().getName()
Termin$Typ.$VALUES.getClass().getName() != arg0.orig.teilnehmer.getClass().getName()
===========================================================================
Termin$TypSelektor.select(Termin):::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == arg0.orig.typus
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg0.typus == arg0.orig.typus
arg0.typus == orig(arg0.typus)
arg0.ort == arg0.orig.ort
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == arg0.orig.zeitraum
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == arg0.orig.teilnehmer
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == arg0.orig.teilnehmer.getClass().getName()
arg0.teilnehmer.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
arg0.orig.typus == orig(arg0.orig.typus)
arg0.orig.ort == orig(arg0.orig.ort)
arg0.orig.zeitraum == orig(arg0.orig.zeitraum)
arg0.orig.posten == orig(arg0.orig.posten)
arg0.orig.teilnehmer == orig(arg0.orig.teilnehmer)
arg0.orig.teilnehmer[] == orig(arg0.orig.teilnehmer[])
arg0.orig.teilnehmer.getClass().getName() == orig(arg0.orig.teilnehmer.getClass().getName())
arg0.orig.orig == orig(arg0.orig.orig)
(return == true)  ==>  (this.typus == arg0.orig.typus)
(return == true)  ==>  (this.typus == arg0.typus)
arg0.typus != null
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.ausgaben >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.typus has only one value
arg0.orig.ort has only one value
arg0.orig.zeitraum has only one value
arg0.orig.posten has only one value
arg0.orig.teilnehmer has only one value
arg0.orig.teilnehmer[] contains no nulls and has only one value, of length 3
arg0.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
arg0.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.orig has only one value
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.orig.teilnehmer[]) == 3
Termin$Typ.$VALUES.getClass().getName() != arg0.teilnehmer.getClass().getName()
Termin$Typ.$VALUES.getClass().getName() != arg0.orig.teilnehmer.getClass().getName()
===========================================================================
Termin$TypSelektor.select(Termin):::EXIT;condition="return == true"
this.typus == arg0.typus
this.typus == arg0.orig.typus
this.typus == orig(arg0.typus)
return == true
===========================================================================
Termin$TypSelektor.select(Termin):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Termin$ZeitraumSelektor:::OBJECT
this.zeitraum != null
this.zeitraum.zeitpunkte != null
this.zeitraum.zeitpunkte[] elements != null
this.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
this.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(this.zeitraum.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Termin$ZeitraumSelektor.ZeitraumSelektor(Zeitraum):::ENTER
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Termin$ZeitraumSelektor.ZeitraumSelektor(Zeitraum):::EXIT
this.zeitraum == orig(arg0)
this.zeitraum.zeitpunkte == arg0.zeitpunkte
this.zeitraum.zeitpunkte.getClass().getName() == arg0.zeitpunkte.getClass().getName()
arg0.zeitpunkte == orig(arg0.zeitpunkte)
arg0.zeitpunkte[] == orig(arg0.zeitpunkte[])
arg0.zeitpunkte.getClass().getName() == orig(arg0.zeitpunkte.getClass().getName())
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Termin$ZeitraumSelektor.select(Termin):::ENTER
this.zeitraum.zeitpunkte.getClass().getName() == arg0.ort.infrastruktur.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.zeitraum.zeitpunkte.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
this.zeitraum.zeitpunkte.getClass().getName() == arg0.orig.teilnehmer.getClass().getName()
arg0 != null
arg0.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.bezeichnung.toString one of { "Korneuburg", "Kueniglberg", "St. Poelten" }
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen one of { 0.0, 2500.0, 57025.11 }
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig.typus has only one value
arg0.orig.ort has only one value
arg0.orig.zeitraum has only one value
arg0.orig.posten has only one value
arg0.orig.teilnehmer has only one value
arg0.orig.teilnehmer[] contains no nulls and has only one value, of length 3
arg0.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
arg0.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.orig has only one value
size(Termin$Typ.$VALUES[]) == 2
size(arg0.ort.infrastruktur[]) one of { 1, 2, 5 }
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.teilnehmer[]) one of { 2, 3, 7 }
size(arg0.orig.teilnehmer[]) == 3
this.zeitraum.zeitpunkte.getClass().getName() != Termin$Typ.$VALUES.getClass().getName()
===========================================================================
Termin$ZeitraumSelektor.select(Termin):::EXIT
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.typus == orig(arg0.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == arg0.teilnehmer.getClass().getName()
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == arg0.orig.teilnehmer.getClass().getName()
arg0.teilnehmer.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
arg0.orig.typus == orig(arg0.orig.typus)
arg0.orig.ort == orig(arg0.orig.ort)
arg0.orig.zeitraum == orig(arg0.orig.zeitraum)
arg0.orig.posten == orig(arg0.orig.posten)
arg0.orig.teilnehmer == orig(arg0.orig.teilnehmer)
arg0.orig.teilnehmer[] == orig(arg0.orig.teilnehmer[])
arg0.orig.teilnehmer.getClass().getName() == orig(arg0.orig.teilnehmer.getClass().getName())
arg0.orig.orig == orig(arg0.orig.orig)
(return == false)  ==>  (arg0.orig.orig has only one value)
(return == false)  ==>  (arg0.orig.ort has only one value)
(return == false)  ==>  (arg0.orig.posten has only one value)
(return == false)  ==>  (arg0.orig.teilnehmer has only one value)
(return == false)  ==>  (arg0.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class)
(return == false)  ==>  (arg0.orig.teilnehmer[] contains no nulls and has only one value, of length 3)
(return == false)  ==>  (arg0.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied])
(return == false)  ==>  (arg0.orig.teilnehmer[].getClass().getName() elements == Mitglied.class)
(return == false)  ==>  (arg0.orig.typus has only one value)
(return == false)  ==>  (arg0.orig.zeitraum has only one value)
(return == false)  ==>  (arg0.ort has only one value)
(return == false)  ==>  (arg0.ort.bezeichnung has only one value)
(return == false)  ==>  (arg0.ort.bezeichnung.toString == "Kueniglberg")
(return == false)  ==>  (arg0.ort.infrastruktur has only one value)
(return == false)  ==>  (arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 5)
(return == false)  ==>  (arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (arg0.posten.ausgaben one of { 0.0, 2600.99, 2700.99 })
(return == false)  ==>  (arg0.posten.einnahmen one of { 0.0, 2500.0 })
(return == false)  ==>  (arg0.teilnehmer.getClass().getName() == arg0.orig.teilnehmer.getClass().getName())
(return == false)  ==>  (arg0.teilnehmer[].getClass().getName() one of { [Mitglied, Mitglied, Mitglied], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] })
(return == false)  ==>  (size(arg0.ort.infrastruktur[]) == 5)
(return == false)  ==>  (size(arg0.teilnehmer[]) one of { 3, 7 })
(return == false)  ==>  (size(this.zeitraum.zeitpunkte[]) == 1)
(return == false)  ==>  (this.zeitraum has only one value)
(return == false)  ==>  (this.zeitraum.zeitpunkte has only one value)
(return == false)  ==>  (this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 1)
(return == false)  ==>  (this.zeitraum.zeitpunkte[] elements has only one value)
(return == false)  ==>  (this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date])
(return == true)  ==>  (arg0.orig == null)
(return == true)  ==>  (arg0.ort.bezeichnung.toString one of { "Korneuburg", "Kueniglberg", "St. Poelten" })
(return == true)  ==>  (arg0.posten.einnahmen one of { 0.0, 57025.11 })
(return == true)  ==>  (size(arg0.ort.infrastruktur[]) one of { 1, 2, 5 })
(return == true)  ==>  (size(arg0.teilnehmer[]) one of { 2, 3, 7 })
(return == true)  ==>  (size(this.zeitraum.zeitpunkte[]) one of { 1, 2 })
(return == true)  ==>  (this.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] })
arg0.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.bezeichnung.toString one of { "Korneuburg", "Kueniglberg", "St. Poelten" }
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.posten != null
arg0.posten.einnahmen one of { 0.0, 2500.0, 57025.11 }
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.typus has only one value
arg0.orig.ort has only one value
arg0.orig.zeitraum has only one value
arg0.orig.posten has only one value
arg0.orig.teilnehmer has only one value
arg0.orig.teilnehmer[] contains no nulls and has only one value, of length 3
arg0.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
arg0.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig.orig has only one value
size(Termin$Typ.$VALUES[]) == 2
size(arg0.ort.infrastruktur[]) one of { 1, 2, 5 }
size(arg0.zeitraum.zeitpunkte[]) == 2
size(arg0.teilnehmer[]) one of { 2, 3, 7 }
size(arg0.orig.teilnehmer[]) == 3
Termin$Typ.$VALUES.getClass().getName() != arg0.teilnehmer.getClass().getName()
===========================================================================
Termin$ZeitraumSelektor.select(Termin):::EXIT;condition="return == true"
arg0.posten.einnahmen one of { 0.0, 57025.11 }
arg0.orig == null
return == true
===========================================================================
Termin$ZeitraumSelektor.select(Termin):::EXIT;condition="not(return == true)"
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 1
this.zeitraum.zeitpunkte[] elements has only one value
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.ort has only one value
arg0.ort.bezeichnung has only one value
arg0.ort.bezeichnung.toString == "Kueniglberg"
arg0.ort.infrastruktur has only one value
arg0.ort.infrastruktur[] contains no nulls and has only one value, of length 5
arg0.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
arg0.posten.einnahmen one of { 0.0, 2500.0 }
arg0.posten.ausgaben one of { 0.0, 2600.99, 2700.99 }
arg0.teilnehmer[].getClass().getName() one of { [Mitglied, Mitglied, Mitglied], [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied] }
return == false
size(this.zeitraum.zeitpunkte[]) == 1
size(arg0.ort.infrastruktur[]) == 5
size(arg0.teilnehmer[]) one of { 3, 7 }
===========================================================================
Termin:::CLASS
===========================================================================
Termin:::OBJECT
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
this.ort.bezeichnung != null
this.ort.infrastruktur != null
this.ort.infrastruktur[] elements != null
this.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
this.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
this.zeitraum.zeitpunkte != null
this.zeitraum.zeitpunkte[] elements != null
this.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
this.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.posten.einnahmen >= 0.0
this.posten.ausgaben >= 0.0
this.posten.bezeichnung != null
this.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
this.posten.datum != null
this.teilnehmer[] elements != null
this.teilnehmer[].getClass().getName() elements == Mitglied.class
this.teilnehmer.getClass().getName() == java.util.ArrayList.class
this.orig.typus has only one value
this.orig.typus != null
this.orig.ort has only one value
this.orig.ort != null
this.orig.ort.bezeichnung has only one value
this.orig.ort.bezeichnung != null
this.orig.ort.bezeichnung.toString == "Kueniglberg"
this.orig.ort.infrastruktur has only one value
this.orig.ort.infrastruktur != null
this.orig.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.orig.ort.infrastruktur[] elements != null
this.orig.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.orig.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
this.orig.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
this.orig.zeitraum has only one value
this.orig.zeitraum != null
this.orig.zeitraum.zeitpunkte has only one value
this.orig.zeitraum.zeitpunkte != null
this.orig.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.orig.zeitraum.zeitpunkte[] elements != null
this.orig.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
this.orig.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.orig.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.orig.posten != null
this.orig.posten.einnahmen one of { 0.0, 2500.0 }
this.orig.posten.ausgaben one of { 0.0, 2500.99 }
this.orig.posten.bezeichnung has only one value
this.orig.posten.bezeichnung != null
this.orig.posten.bezeichnung.toString == "Auftritt"
this.orig.posten.datum has only one value
this.orig.posten.datum != null
this.orig.teilnehmer has only one value
this.orig.teilnehmer != null
this.orig.teilnehmer[] contains no nulls and has only one value, of length 3
this.orig.teilnehmer[] elements != null
this.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
this.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
this.orig.orig.typus has only one value
this.orig.orig.typus != null
this.orig.orig.ort has only one value
this.orig.orig.ort != null
this.orig.orig.zeitraum has only one value
this.orig.orig.zeitraum != null
this.orig.orig.posten != null
this.orig.orig.teilnehmer has only one value
this.orig.orig.teilnehmer != null
this.orig.orig.teilnehmer[] contains no nulls and has only one value, of length 3
this.orig.orig.teilnehmer[] elements != null
this.orig.orig.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.orig.teilnehmer[].getClass().getName() elements == Mitglied.class
this.orig.orig.teilnehmer.getClass().getName() == java.util.ArrayList.class
size(Termin$Typ.$VALUES[]) == 2
size(this.zeitraum.zeitpunkte[]) == 2
size(this.teilnehmer[])-1 != 0
size(this.orig.ort.infrastruktur[]) == 5
size(this.orig.zeitraum.zeitpunkte[]) == 2
size(this.orig.teilnehmer[]) == 3
size(this.orig.orig.teilnehmer[]) == 3
===========================================================================
Termin.Termin():::EXIT
this.typus == null
this.ort == null
this.zeitraum == null
this.posten == null
this.teilnehmer == null
this.orig == null
===========================================================================
Termin.Termin(Termin$Typ, Ort, java.util.Date, java.util.Date, double, double, java.util.List):::ENTER
arg0 != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg1 != null
arg1.bezeichnung != null
arg1.infrastruktur != null
arg1.infrastruktur[] elements != null
arg1.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg1.infrastruktur.getClass().getName() == java.util.ArrayList.class
arg2 != null
arg3 != null
arg5 >= 0.0
arg6 != null
arg6[] elements != null
arg6[].getClass().getName() elements == Mitglied.class
arg6.getClass().getName() == java.util.ArrayList.class
size(Termin$Typ.$VALUES[]) == 2
===========================================================================
Termin.Termin(Termin$Typ, Ort, java.util.Date, java.util.Date, double, double, java.util.List):::EXIT
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg1.bezeichnung == orig(arg1.bezeichnung)
arg1.bezeichnung.toString == orig(arg1.bezeichnung.toString)
arg1.infrastruktur == orig(arg1.infrastruktur)
arg1.infrastruktur[] == orig(arg1.infrastruktur[])
arg1.infrastruktur.getClass().getName() == orig(arg1.infrastruktur.getClass().getName())
arg6[] == orig(arg6[])
this.typus != null
this.ort != null
this.zeitraum != null
this.posten != null
this.teilnehmer != null
this.orig == null
arg1.bezeichnung != null
arg1.infrastruktur != null
arg1.infrastruktur[] elements != null
arg1.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg1.infrastruktur.getClass().getName() == java.util.ArrayList.class
arg6[] elements != null
arg6[].getClass().getName() elements == Mitglied.class
===========================================================================
Termin.getAusgaben():::ENTER
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen == 2500.0
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.posten.ausgaben == 2500.99
this.orig.orig.posten has only one value
this.orig.orig.orig == null
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.getAusgaben():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.posten == orig(this.orig.orig.posten)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.orig.orig.orig == orig(this.orig.orig.orig)
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen == 2500.0
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.posten.ausgaben == 2500.99
this.orig.orig.posten has only one value
this.orig.orig.orig == null
return one of { 0.0, 2500.99 }
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.getEinnahmen():::ENTER
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen one of { 0.0, 2500.0 }
this.posten.ausgaben == 2500.99
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.posten has only one value
this.orig.posten.einnahmen == 0.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig == null
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.getEinnahmen():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen one of { 0.0, 2500.0 }
this.posten.ausgaben == 2500.99
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.posten has only one value
this.orig.posten.einnahmen == 0.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig == null
return one of { 0.0, 2500.0 }
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.getPosten():::ENTER
this.typus != null
this.ort != null
this.ort.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
this.zeitraum != null
this.posten != null
this.posten.einnahmen one of { 0.0, 8000.0, 10000.0 }
this.posten.ausgaben one of { 100.0, 200.0, 500.0 }
this.teilnehmer != null
this.orig == null
size(this.ort.infrastruktur[]) one of { 1, 2, 4 }
size(this.teilnehmer[]) one of { 2, 3, 4 }
===========================================================================
Termin.getPosten():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.typus != null
this.ort != null
this.ort.bezeichnung.toString one of { "Korneuburg", "St. Poelten", "Wien" }
this.zeitraum != null
this.posten != null
this.posten.einnahmen one of { 0.0, 8000.0, 10000.0 }
this.posten.ausgaben one of { 100.0, 200.0, 500.0 }
this.teilnehmer != null
this.orig == null
return != null
return.einnahmen one of { 0.0, 8000.0, 10000.0 }
return.ausgaben one of { 100.0, 200.0, 500.0 }
return.bezeichnung != null
return.bezeichnung.toString one of { "Auftritt", "Probe" }
return.datum != null
size(this.ort.infrastruktur[]) one of { 1, 2, 4 }
size(this.teilnehmer[]) one of { 2, 3, 4 }
===========================================================================
Termin.getTeilnehmer():::ENTER
this.typus != null
this.ort != null
this.zeitraum != null
this.posten != null
this.teilnehmer != null
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig == null
===========================================================================
Termin.getTeilnehmer():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.posten == orig(this.orig.orig.posten)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.orig.orig.orig == orig(this.orig.orig.orig)
this.typus != null
this.ort != null
this.zeitraum != null
this.posten != null
this.teilnehmer != null
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig == null
return != null
return[] elements != null
return[].getClass().getName() elements == Mitglied.class
return.getClass().getName() == java.util.ArrayList.class
===========================================================================
Termin.getZeitraum():::ENTER
this.typus has only one value
this.ort.bezeichnung.toString one of { "Kueniglberg", "St. Poelten", "Wien" }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.orig == null
size(this.ort.infrastruktur[]) one of { 2, 4, 5 }
===========================================================================
Termin.getZeitraum():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.typus has only one value
this.ort.bezeichnung.toString one of { "Kueniglberg", "St. Poelten", "Wien" }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.orig == null
return.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return.zeitpunkte[].getClass().getName() elements == java.util.Date.class
return.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(this.ort.infrastruktur[]) one of { 2, 4, 5 }
size(return.zeitpunkte[]) == 2
===========================================================================
Termin.meldeUpdate(java.lang.String):::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.posten.einnahmen == 2500.0
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.meldeUpdate(java.lang.String):::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.posten == orig(this.orig.orig.posten)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.orig.orig.orig == orig(this.orig.orig.orig)
arg0.toString == orig(arg0.toString)
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.posten.einnahmen == 2500.0
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.prepareUpdate():::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen one of { 0.0, 2500.0 }
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig.posten.ausgaben == 2500.99
this.orig.orig.posten has only one value
this.orig.orig.orig == null
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.prepareUpdate():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[].getClass().getName() == orig(this.orig.ort.infrastruktur[].getClass().getName())
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[].getClass().getName() == orig(this.orig.zeitraum.zeitpunkte[].getClass().getName())
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[].getClass().getName() == orig(this.orig.teilnehmer[].getClass().getName())
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[].getClass().getName() == orig(this.orig.orig.teilnehmer[].getClass().getName())
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten.einnahmen one of { 0.0, 2500.0 }
this.posten.ausgaben one of { 0.0, 2500.99 }
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[]) (elementwise)
this.orig.ort.infrastruktur[].getClass().getName() == orig(this.orig.ort.infrastruktur[].getClass().getName()) (elementwise)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[]) (elementwise)
this.orig.zeitraum.zeitpunkte[].getClass().getName() == orig(this.orig.zeitraum.zeitpunkte[].getClass().getName()) (elementwise)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[]) (elementwise)
this.orig.teilnehmer[].getClass().getName() == orig(this.orig.teilnehmer[].getClass().getName()) (elementwise)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[]) (elementwise)
this.orig.orig.teilnehmer[].getClass().getName() == orig(this.orig.orig.teilnehmer[].getClass().getName()) (elementwise)
===========================================================================
Termin.setAusgaben(double):::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 2500.99
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 0.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig == null
arg0 == 0.0
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.setAusgaben(double):::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 0.0
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig == null
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.setEinnahmen(double):::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 0.0
this.posten.ausgaben == 2500.99
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig == null
arg0 == 2500.0
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.setEinnahmen(double):::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 2500.99
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 0.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig == null
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.setZeitraum(java.util.Date, java.util.Date):::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 0.0
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig == null
arg0 has only one value
arg1 has only one value
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.setZeitraum(java.util.Date, java.util.Date):::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
size(this.zeitraum.zeitpunkte[]) == orig(size(this.zeitraum.zeitpunkte[]))
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 0.0
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 0.0
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig has only one value
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.toDetailString():::ENTER
this.orig.posten.einnahmen == 2500.0
size(this.teilnehmer[]) one of { 2, 3, 4 }
===========================================================================
Termin.toDetailString():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.posten == orig(this.orig.orig.posten)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.orig.orig.orig == orig(this.orig.orig.orig)
this.orig.posten.einnahmen == 2500.0
size(this.teilnehmer[]) one of { 2, 3, 4 }
===========================================================================
Termin.toString():::ENTER
this.typus != null
this.ort != null
this.zeitraum != null
this.posten != null
this.teilnehmer != null
===========================================================================
Termin.toString():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum == orig(this.zeitraum)
this.zeitraum.zeitpunkte == orig(this.zeitraum.zeitpunkte)
this.zeitraum.zeitpunkte[] == orig(this.zeitraum.zeitpunkte[])
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig == orig(this.orig)
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten == orig(this.orig.posten)
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.ausgaben == orig(this.orig.posten.ausgaben)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig == orig(this.orig.orig)
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.posten == orig(this.orig.orig.posten)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
this.orig.orig.orig == orig(this.orig.orig.orig)
this.typus != null
this.ort != null
this.zeitraum != null
this.posten != null
this.teilnehmer != null
return != null
===========================================================================
Termin.undo():::ENTER
this has only one value
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 0.0
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 0.0
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig has only one value
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.undo():::EXIT98
===========================================================================
Termin.undo():::EXIT98;condition="return == true"
===========================================================================
Termin.undo():::EXIT
this.typus == orig(this.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.ort == orig(this.ort)
this.ort.bezeichnung == orig(this.ort.bezeichnung)
this.ort.bezeichnung.toString == orig(this.ort.bezeichnung.toString)
this.ort.infrastruktur == orig(this.ort.infrastruktur)
this.ort.infrastruktur[] == orig(this.ort.infrastruktur[])
this.ort.infrastruktur.getClass().getName() == orig(this.ort.infrastruktur.getClass().getName())
this.zeitraum.zeitpunkte.getClass().getName() == orig(this.zeitraum.zeitpunkte.getClass().getName())
this.posten == orig(this.posten)
this.posten.einnahmen == orig(this.posten.einnahmen)
this.posten.ausgaben == orig(this.posten.ausgaben)
this.posten.bezeichnung == orig(this.posten.bezeichnung)
this.posten.bezeichnung.toString == orig(this.posten.bezeichnung.toString)
this.posten.datum == orig(this.posten.datum)
this.teilnehmer == orig(this.teilnehmer)
this.teilnehmer[] == orig(this.teilnehmer[])
this.teilnehmer.getClass().getName() == orig(this.teilnehmer.getClass().getName())
this.orig.typus == orig(this.orig.typus)
this.orig.ort == orig(this.orig.ort)
this.orig.ort.bezeichnung == orig(this.orig.ort.bezeichnung)
this.orig.ort.bezeichnung.toString == orig(this.orig.ort.bezeichnung.toString)
this.orig.ort.infrastruktur == orig(this.orig.ort.infrastruktur)
this.orig.ort.infrastruktur[] == orig(this.orig.ort.infrastruktur[])
this.orig.ort.infrastruktur.getClass().getName() == orig(this.orig.ort.infrastruktur.getClass().getName())
this.orig.zeitraum == orig(this.orig.zeitraum)
this.orig.zeitraum.zeitpunkte == orig(this.orig.zeitraum.zeitpunkte)
this.orig.zeitraum.zeitpunkte[] == orig(this.orig.zeitraum.zeitpunkte[])
this.orig.zeitraum.zeitpunkte.getClass().getName() == orig(this.orig.zeitraum.zeitpunkte.getClass().getName())
this.orig.posten.einnahmen == orig(this.orig.posten.einnahmen)
this.orig.posten.bezeichnung == orig(this.orig.posten.bezeichnung)
this.orig.posten.bezeichnung.toString == orig(this.orig.posten.bezeichnung.toString)
this.orig.posten.datum == orig(this.orig.posten.datum)
this.orig.teilnehmer == orig(this.orig.teilnehmer)
this.orig.teilnehmer[] == orig(this.orig.teilnehmer[])
this.orig.teilnehmer.getClass().getName() == orig(this.orig.teilnehmer.getClass().getName())
this.orig.orig.typus == orig(this.orig.orig.typus)
this.orig.orig.ort == orig(this.orig.orig.ort)
this.orig.orig.zeitraum == orig(this.orig.orig.zeitraum)
this.orig.orig.teilnehmer == orig(this.orig.orig.teilnehmer)
this.orig.orig.teilnehmer[] == orig(this.orig.orig.teilnehmer[])
this.orig.orig.teilnehmer.getClass().getName() == orig(this.orig.orig.teilnehmer.getClass().getName())
size(this.zeitraum.zeitpunkte[]) == orig(size(this.zeitraum.zeitpunkte[]))
this.typus has only one value
this.ort has only one value
this.ort.bezeichnung has only one value
this.ort.bezeichnung.toString == "Kueniglberg"
this.ort.infrastruktur has only one value
this.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.zeitraum has only one value
this.zeitraum.zeitpunkte has only one value
this.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.posten has only one value
this.posten.einnahmen == 2500.0
this.posten.ausgaben == 0.0
this.posten.bezeichnung has only one value
this.posten.bezeichnung.toString == "Auftritt"
this.posten.datum has only one value
this.teilnehmer has only one value
this.teilnehmer[] contains no nulls and has only one value, of length 3
this.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.orig has only one value
this.orig.posten has only one value
this.orig.posten.einnahmen == 2500.0
this.orig.posten.ausgaben == 2500.99
this.orig.orig has only one value
this.orig.orig.posten has only one value
this.orig.orig.orig == null
return == true
size(this.ort.infrastruktur[]) == 5
size(this.teilnehmer[]) == 3
===========================================================================
Termin.undo():::EXIT;condition="return == true"
===========================================================================
Termine:::CLASS
===========================================================================
Termine:::OBJECT
this.list != null
this.list[] elements != null
this.list[].getClass().getName() elements == Termin.class
this.list.getClass().getName() == java.util.ArrayList.class
this.removed != null
this.removed[] elements has only one value
this.removed[] elements != null
this.removed[].getClass().getName() elements == Termin.class
this.removed[].getClass().getName() one of { [], [Termin] }
this.removed.getClass().getName() == java.util.ArrayList.class
this.selectors != null
this.selectors[] elements != null
this.selectors.getClass().getName() == java.util.ArrayList.class
size(this.removed[]) one of { 0, 1 }
===========================================================================
Termine.Termine():::EXIT
this.list[] == []
this.list[].getClass().getName() == []
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
===========================================================================
Termine.Termine(Termine, java.util.List):::ENTER
arg0 != null
arg0.list != null
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == Termin.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed != null
arg0.removed[] elements has only one value
arg0.removed[] elements != null
arg0.removed[].getClass().getName() elements == Termin.class
arg0.removed[].getClass().getName() one of { [], [Termin] }
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors != null
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1 != null
arg1[] elements != null
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0.removed[]) one of { 0, 1 }
size(arg1[]) one of { 1, 2, 3 }
===========================================================================
Termine.Termine(Termine, java.util.List):::EXIT
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.removed == orig(arg0.removed)
arg0.removed[] == orig(arg0.removed[])
arg0.removed.getClass().getName() == orig(arg0.removed.getClass().getName())
arg0.selectors == orig(arg0.selectors)
arg0.selectors[] == orig(arg0.selectors[])
arg0.selectors.getClass().getName() == orig(arg0.selectors.getClass().getName())
arg1[] == orig(arg1[])
arg0.list != null
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == Termin.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.removed != null
arg0.removed[] elements has only one value
arg0.removed[] elements != null
arg0.removed[].getClass().getName() elements == Termin.class
arg0.removed[].getClass().getName() one of { [], [Termin] }
arg0.removed.getClass().getName() == java.util.ArrayList.class
arg0.selectors != null
arg0.selectors[] == []
arg0.selectors[].getClass().getName() == []
arg0.selectors.getClass().getName() == java.util.ArrayList.class
arg1[] elements != null
size(this.selectors[]) one of { 1, 2, 3 }
size(arg0.removed[]) one of { 0, 1 }
===========================================================================
Termine.add(Terminvorschlag):::ENTER
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.termin.orig == null
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.list.getClass().getName() == java.util.ArrayList.class
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.removed.getClass().getName() == java.util.ArrayList.class
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.target.selectors.getClass().getName() == java.util.ArrayList.class
arg0.offen[] == []
arg0.offen[].getClass().getName() == []
arg0.offen.getClass().getName() == java.util.ArrayList.class
===========================================================================
Termine.add(Terminvorschlag):::EXIT
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0.termin == orig(arg0.termin)
arg0.termin.typus == orig(arg0.termin.typus)
arg0.termin.ort == orig(arg0.termin.ort)
arg0.termin.zeitraum == orig(arg0.termin.zeitraum)
arg0.termin.posten == orig(arg0.termin.posten)
arg0.termin.teilnehmer == orig(arg0.termin.teilnehmer)
arg0.termin.teilnehmer[] == orig(arg0.termin.teilnehmer[])
arg0.termin.teilnehmer.getClass().getName() == orig(arg0.termin.teilnehmer.getClass().getName())
arg0.termin.orig == orig(arg0.termin.orig)
arg0.target == orig(arg0.target)
arg0.target.list == orig(arg0.target.list)
arg0.target.list.getClass().getName() == orig(arg0.target.list.getClass().getName())
arg0.target.removed == orig(arg0.target.removed)
arg0.target.removed[] == orig(arg0.target.removed[])
arg0.target.removed.getClass().getName() == orig(arg0.target.removed.getClass().getName())
arg0.target.selectors == orig(arg0.target.selectors)
arg0.target.selectors[] == orig(arg0.target.selectors[])
arg0.target.selectors.getClass().getName() == orig(arg0.target.selectors.getClass().getName())
arg0.offen == orig(arg0.offen)
arg0.offen[] == orig(arg0.offen[])
arg0.offen.getClass().getName() == orig(arg0.offen.getClass().getName())
size(this.list[])-1 == orig(size(this.list[]))
size(arg0.target.list[])-1 == orig(size(arg0.target.list[]))
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.termin.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.termin.orig == null
arg0.target.list[].getClass().getName() elements == Termin.class
arg0.target.list.getClass().getName() == java.util.ArrayList.class
arg0.target.removed[] == []
arg0.target.removed[].getClass().getName() == []
arg0.target.removed.getClass().getName() == java.util.ArrayList.class
arg0.target.selectors[] == []
arg0.target.selectors[].getClass().getName() == []
arg0.target.selectors.getClass().getName() == java.util.ArrayList.class
arg0.offen[] == []
arg0.offen[].getClass().getName() == []
arg0.offen.getClass().getName() == java.util.ArrayList.class
===========================================================================
Termine.remove():::ENTER
this has only one value
this.list has only one value
this.list[] contains no nulls and has only one value, of length 1
this.list[] elements has only one value
this.list[].getClass().getName() == [Termin]
this.removed has only one value
this.removed[] == []
this.removed[].getClass().getName() == []
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
size(this.list[]) == 1
===========================================================================
Termine.remove():::EXIT
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
size(this.list[]) == orig(size(this.list[]))-1
size(this.removed[])-1 == orig(size(this.removed[]))
this.list has only one value
this.list[] == []
this.list[].getClass().getName() == []
this.removed has only one value
this.removed[] contains no nulls and has only one value, of length 1
this.removed[].getClass().getName() == [Termin]
this.selectors has only one value
this.selectors[] == []
this.selectors[].getClass().getName() == []
return == 1
size(this.removed[]) == 1
===========================================================================
Termine.select(java.util.List):::ENTER
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0 != null
arg0[] elements != null
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) one of { 1, 2, 3 }
===========================================================================
Termine.select(java.util.List):::EXIT
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.removed == orig(this.removed)
this.removed[] == orig(this.removed[])
this.removed.getClass().getName() == orig(this.removed.getClass().getName())
this.selectors == orig(this.selectors)
this.selectors[] == orig(this.selectors[])
this.selectors.getClass().getName() == orig(this.selectors.getClass().getName())
arg0[] == orig(arg0[])
this.selectors[] == []
this.selectors[].getClass().getName() == []
arg0[] elements != null
return != null
return.list != null
return.list[] elements != null
return.list[].getClass().getName() elements == Termin.class
return.list.getClass().getName() == java.util.ArrayList.class
return.removed != null
return.removed[] elements has only one value
return.removed[] elements != null
return.removed[].getClass().getName() elements == Termin.class
return.removed[].getClass().getName() one of { [], [Termin] }
return.removed.getClass().getName() == java.util.ArrayList.class
return.selectors != null
return.selectors[] elements != null
return.selectors.getClass().getName() == java.util.ArrayList.class
size(return.removed[]) one of { 0, 1 }
size(return.selectors[]) one of { 1, 2, 3 }
===========================================================================
Terminvorschlag:::CLASS
===========================================================================
Terminvorschlag:::OBJECT
this.termin != null
this.termin.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
this.termin.ort != null
this.termin.ort.bezeichnung != null
this.termin.ort.infrastruktur != null
this.termin.ort.infrastruktur[] elements != null
this.termin.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
this.termin.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
this.termin.zeitraum != null
this.termin.zeitraum.zeitpunkte != null
this.termin.zeitraum.zeitpunkte[] elements != null
this.termin.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
this.termin.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.termin.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
this.termin.posten != null
this.termin.posten.einnahmen >= 0.0
this.termin.posten.bezeichnung != null
this.termin.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
this.termin.posten.datum != null
this.termin.teilnehmer != null
this.termin.teilnehmer[] elements != null
this.termin.teilnehmer[].getClass().getName() elements == Mitglied.class
this.termin.teilnehmer.getClass().getName() == java.util.ArrayList.class
this.termin.orig == null
this.target != null
this.target.list != null
this.target.list[] elements != null
this.target.list[].getClass().getName() elements == Termin.class
this.target.list.getClass().getName() == java.util.ArrayList.class
this.target.removed != null
this.target.removed[] == []
this.target.removed[].getClass().getName() == []
this.target.removed.getClass().getName() == java.util.ArrayList.class
this.target.selectors != null
this.target.selectors[] == []
this.target.selectors[].getClass().getName() == []
this.target.selectors.getClass().getName() == java.util.ArrayList.class
this.offen != null
this.offen[] elements != null
this.offen[].getClass().getName() elements == Mitglied.class
this.offen.getClass().getName() == java.util.ArrayList.class
size(Termin$Typ.$VALUES[]) == 2
size(this.termin.zeitraum.zeitpunkte[]) == 2
===========================================================================
Terminvorschlag.Terminvorschlag(Termin, Termine):::ENTER
arg0 != null
arg0.typus != null
Termin$Typ.Probe has only one value
Termin$Typ.Probe != null
Termin$Typ.Auftritt has only one value
Termin$Typ.Auftritt != null
Termin$Typ.$VALUES has only one value
Termin$Typ.$VALUES != null
Termin$Typ.$VALUES.getClass().getName() == Termin$Typ[].class
Termin$Typ.$VALUES[] contains no nulls and has only one value, of length 2
Termin$Typ.$VALUES[] elements != null
Termin$Typ.$VALUES[].getClass().getName() == [Termin.Typ, Termin.Typ]
Termin$Typ.$VALUES[].getClass().getName() elements == Termin.Typ.class
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
arg1 != null
arg1.list != null
arg1.list[] elements != null
arg1.list[].getClass().getName() elements == Termin.class
arg1.list.getClass().getName() == java.util.ArrayList.class
arg1.removed != null
arg1.removed[] == []
arg1.removed[].getClass().getName() == []
arg1.removed.getClass().getName() == java.util.ArrayList.class
arg1.selectors != null
arg1.selectors[] == []
arg1.selectors[].getClass().getName() == []
arg1.selectors.getClass().getName() == java.util.ArrayList.class
size(Termin$Typ.$VALUES[]) == 2
size(arg0.zeitraum.zeitpunkte[]) == 2
===========================================================================
Terminvorschlag.Terminvorschlag(Termin, Termine):::EXIT
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
arg0.typus == orig(arg0.typus)
arg0.ort == orig(arg0.ort)
arg0.ort.bezeichnung == orig(arg0.ort.bezeichnung)
arg0.ort.bezeichnung.toString == orig(arg0.ort.bezeichnung.toString)
arg0.ort.infrastruktur == orig(arg0.ort.infrastruktur)
arg0.ort.infrastruktur[] == orig(arg0.ort.infrastruktur[])
arg0.ort.infrastruktur.getClass().getName() == orig(arg0.ort.infrastruktur.getClass().getName())
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.posten == orig(arg0.posten)
arg0.posten.einnahmen == orig(arg0.posten.einnahmen)
arg0.posten.ausgaben == orig(arg0.posten.ausgaben)
arg0.posten.bezeichnung == orig(arg0.posten.bezeichnung)
arg0.posten.bezeichnung.toString == orig(arg0.posten.bezeichnung.toString)
arg0.posten.datum == orig(arg0.posten.datum)
arg0.teilnehmer == orig(arg0.teilnehmer)
arg0.teilnehmer[] == orig(arg0.teilnehmer[])
arg0.teilnehmer.getClass().getName() == orig(arg0.teilnehmer.getClass().getName())
arg0.orig == orig(arg0.orig)
arg1.list == orig(arg1.list)
arg1.list[] == orig(arg1.list[])
arg1.list.getClass().getName() == orig(arg1.list.getClass().getName())
arg1.removed == orig(arg1.removed)
arg1.removed[] == orig(arg1.removed[])
arg1.removed.getClass().getName() == orig(arg1.removed.getClass().getName())
arg1.selectors == orig(arg1.selectors)
arg1.selectors[] == orig(arg1.selectors[])
arg1.selectors.getClass().getName() == orig(arg1.selectors.getClass().getName())
arg0.typus != null
arg0.ort != null
arg0.ort.bezeichnung != null
arg0.ort.infrastruktur != null
arg0.ort.infrastruktur[] elements != null
arg0.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
arg0.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.posten != null
arg0.posten.einnahmen >= 0.0
arg0.posten.bezeichnung != null
arg0.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
arg0.posten.datum != null
arg0.teilnehmer != null
arg0.teilnehmer[] elements != null
arg0.teilnehmer[].getClass().getName() elements == Mitglied.class
arg0.teilnehmer.getClass().getName() == java.util.ArrayList.class
arg0.orig == null
arg1.list != null
arg1.list[] elements != null
arg1.list[].getClass().getName() elements == Termin.class
arg1.list.getClass().getName() == java.util.ArrayList.class
arg1.removed != null
arg1.removed[] == []
arg1.removed[].getClass().getName() == []
arg1.removed.getClass().getName() == java.util.ArrayList.class
arg1.selectors != null
arg1.selectors[] == []
arg1.selectors[].getClass().getName() == []
arg1.selectors.getClass().getName() == java.util.ArrayList.class
size(arg0.zeitraum.zeitpunkte[]) == 2
===========================================================================
Terminvorschlag.accept(Mitglied):::ENTER
arg0 != null
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
arg0.terminvorschlaege.getClass().getName() == java.util.LinkedList.class
size(this.offen[]) >= 1
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Terminvorschlag.accept(Mitglied):::EXIT
this.termin == orig(this.termin)
this.termin.typus == orig(this.termin.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
this.termin.orig == orig(this.termin.orig)
this.target == orig(this.target)
this.target.list == orig(this.target.list)
this.target.list.getClass().getName() == orig(this.target.list.getClass().getName())
this.target.removed == orig(this.target.removed)
this.target.removed[] == orig(this.target.removed[])
this.target.removed.getClass().getName() == orig(this.target.removed.getClass().getName())
this.target.selectors == orig(this.target.selectors)
this.target.selectors[] == orig(this.target.selectors[])
this.target.selectors.getClass().getName() == orig(this.target.selectors.getClass().getName())
this.offen == orig(this.offen)
this.offen.getClass().getName() == orig(this.offen.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.terminvorschlaege.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
size(this.offen[]) == orig(size(this.offen[]))-1
arg0.name != null
arg0.telNr != null
arg0.instrument != null
arg0.zeitraum != null
arg0.zeitraum.zeitpunkte != null
arg0.zeitraum.zeitpunkte[] elements != null
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten != null
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege != null
arg0.terminvorschlaege.getClass().getName() == java.util.LinkedList.class
size(arg0.zeitraum.zeitpunkte[]) one of { 1, 2 }
size(this.target.list[]) >= orig(size(this.target.list[]))
size(this.target.list[])-1 <= orig(size(this.target.list[]))
size(this.target.list[])-1 >= orig(size(this.target.list[]))-1
===========================================================================
Terminvorschlag.accepted():::ENTER
===========================================================================
Terminvorschlag.accepted():::EXIT
this.termin == orig(this.termin)
this.termin.typus == orig(this.termin.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
this.termin.orig == orig(this.termin.orig)
this.target == orig(this.target)
this.target.list == orig(this.target.list)
this.target.list[] == orig(this.target.list[])
this.target.list.getClass().getName() == orig(this.target.list.getClass().getName())
this.target.removed == orig(this.target.removed)
this.target.removed[] == orig(this.target.removed[])
this.target.removed.getClass().getName() == orig(this.target.removed.getClass().getName())
this.target.selectors == orig(this.target.selectors)
this.target.selectors[] == orig(this.target.selectors[])
this.target.selectors.getClass().getName() == orig(this.target.selectors.getClass().getName())
this.offen == orig(this.offen)
this.offen[] == orig(this.offen[])
this.offen.getClass().getName() == orig(this.offen.getClass().getName())
(return == false)  <==>  (size(this.offen[]) >= 1)
(return == false)  ==>  (this.offen[].getClass().getName() elements == Mitglied.class)
(return == true)  ==>  (this.offen[] == [])
(return == true)  ==>  (this.offen[].getClass().getName() == [])
===========================================================================
Terminvorschlag.accepted():::EXIT;condition="return == true"
this.offen[] == []
this.offen[].getClass().getName() == []
return == true
===========================================================================
Terminvorschlag.accepted():::EXIT;condition="not(return == true)"
return == false
size(this.offen[]) >= 1
===========================================================================
Terminvorschlag.decline(Mitglied, java.lang.String):::ENTER
this has only one value
this.termin has only one value
this.termin.typus has only one value
this.termin.ort has only one value
this.termin.ort.bezeichnung has only one value
this.termin.ort.bezeichnung.toString == "Kueniglberg"
this.termin.ort.infrastruktur has only one value
this.termin.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.termin.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.termin.zeitraum has only one value
this.termin.zeitraum.zeitpunkte has only one value
this.termin.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.termin.posten has only one value
this.termin.posten.einnahmen == 0.0
this.termin.posten.ausgaben == 2600.99
this.termin.posten.bezeichnung has only one value
this.termin.posten.bezeichnung.toString == "Probe"
this.termin.posten.datum has only one value
this.termin.teilnehmer has only one value
this.termin.teilnehmer[] contains no nulls and has only one value, of length 7
this.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.target has only one value
this.target.list has only one value
this.target.list[] contains no nulls and has only one value, of length 1
this.target.list[] elements has only one value
this.target.list[].getClass().getName() == [Termin]
this.target.removed has only one value
this.target.selectors has only one value
this.offen has only one value
this.offen[] contains no nulls and has only one value, of length 7
this.offen[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Sido"
arg0.telNr has only one value
arg0.telNr.toString == "12345"
arg0.instrument has only one value
arg0.instrument.toString == "Gesang"
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 1
arg0.zeitraum.zeitpunkte[] elements has only one value
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten has only one value
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege has only one value
arg0.terminvorschlaege.getClass().getName() == java.util.LinkedList.class
arg0.ersatzmitglied == false
arg1 has only one value
arg1.toString == "Ne, nicht mit mir!!!"
size(this.termin.ort.infrastruktur[]) == 5
size(this.termin.teilnehmer[]) == 7
size(this.target.list[]) == 1
size(this.offen[]) == 7
size(arg0.zeitraum.zeitpunkte[]) == 1
===========================================================================
Terminvorschlag.decline(Mitglied, java.lang.String):::EXIT
this.termin == orig(this.termin)
this.termin.typus == orig(this.termin.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
this.termin.orig == orig(this.termin.orig)
this.target == orig(this.target)
this.target.list == orig(this.target.list)
this.target.list[] == orig(this.target.list[])
this.target.list.getClass().getName() == orig(this.target.list.getClass().getName())
this.target.removed == orig(this.target.removed)
this.target.removed[] == orig(this.target.removed[])
this.target.removed.getClass().getName() == orig(this.target.removed.getClass().getName())
this.target.selectors == orig(this.target.selectors)
this.target.selectors[] == orig(this.target.selectors[])
this.target.selectors.getClass().getName() == orig(this.target.selectors.getClass().getName())
this.offen == orig(this.offen)
this.offen[] == orig(this.offen[])
this.offen.getClass().getName() == orig(this.offen.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.telNr == orig(arg0.telNr)
arg0.telNr.toString == orig(arg0.telNr.toString)
arg0.instrument == orig(arg0.instrument)
arg0.instrument.toString == orig(arg0.instrument.toString)
arg0.zeitraum == orig(arg0.zeitraum)
arg0.zeitraum.zeitpunkte == orig(arg0.zeitraum.zeitpunkte)
arg0.zeitraum.zeitpunkte[] == orig(arg0.zeitraum.zeitpunkte[])
arg0.zeitraum.zeitpunkte.getClass().getName() == orig(arg0.zeitraum.zeitpunkte.getClass().getName())
arg0.nachrichten == orig(arg0.nachrichten)
arg0.nachrichten.getClass().getName() == orig(arg0.nachrichten.getClass().getName())
arg0.terminvorschlaege == orig(arg0.terminvorschlaege)
arg0.terminvorschlaege.getClass().getName() == orig(arg0.terminvorschlaege.getClass().getName())
arg0.ersatzmitglied == orig(arg0.ersatzmitglied)
arg1.toString == orig(arg1.toString)
this.termin has only one value
this.termin.typus has only one value
this.termin.ort has only one value
this.termin.ort.bezeichnung has only one value
this.termin.ort.bezeichnung.toString == "Kueniglberg"
this.termin.ort.infrastruktur has only one value
this.termin.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.termin.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.termin.zeitraum has only one value
this.termin.zeitraum.zeitpunkte has only one value
this.termin.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.termin.posten has only one value
this.termin.posten.einnahmen == 0.0
this.termin.posten.ausgaben == 2600.99
this.termin.posten.bezeichnung has only one value
this.termin.posten.bezeichnung.toString == "Probe"
this.termin.posten.datum has only one value
this.termin.teilnehmer has only one value
this.termin.teilnehmer[] contains no nulls and has only one value, of length 7
this.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
this.target has only one value
this.target.list has only one value
this.target.list[] contains no nulls and has only one value, of length 1
this.target.list[] elements has only one value
this.target.list[].getClass().getName() == [Termin]
this.target.removed has only one value
this.target.selectors has only one value
this.offen has only one value
this.offen[] contains no nulls and has only one value, of length 7
this.offen[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.name has only one value
arg0.name.toString == "Sido"
arg0.telNr has only one value
arg0.telNr.toString == "12345"
arg0.instrument has only one value
arg0.instrument.toString == "Gesang"
arg0.zeitraum has only one value
arg0.zeitraum.zeitpunkte has only one value
arg0.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 1
arg0.zeitraum.zeitpunkte[] elements has only one value
arg0.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date]
arg0.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
arg0.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
arg0.nachrichten has only one value
arg0.nachrichten.getClass().getName() == java.util.LinkedList.class
arg0.terminvorschlaege has only one value
arg0.terminvorschlaege.getClass().getName() == java.util.LinkedList.class
arg0.ersatzmitglied == false
arg1.toString == "Ne, nicht mit mir!!!"
size(this.termin.ort.infrastruktur[]) == 5
size(this.termin.teilnehmer[]) == 7
size(this.target.list[]) == 1
size(this.offen[]) == 7
size(arg0.zeitraum.zeitpunkte[]) == 1
===========================================================================
Terminvorschlag.getTermin():::ENTER
this.offen[] == []
this.offen[].getClass().getName() == []
===========================================================================
Terminvorschlag.getTermin():::EXIT
this.termin == orig(this.termin)
this.termin.typus == orig(this.termin.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
this.termin.orig == orig(this.termin.orig)
this.target == orig(this.target)
this.target.list == orig(this.target.list)
this.target.list[] == orig(this.target.list[])
this.target.list.getClass().getName() == orig(this.target.list.getClass().getName())
this.target.removed == orig(this.target.removed)
this.target.removed[] == orig(this.target.removed[])
this.target.removed.getClass().getName() == orig(this.target.removed.getClass().getName())
this.target.selectors == orig(this.target.selectors)
this.target.selectors[] == orig(this.target.selectors[])
this.target.selectors.getClass().getName() == orig(this.target.selectors.getClass().getName())
this.offen == orig(this.offen)
this.offen[] == orig(this.offen[])
this.offen.getClass().getName() == orig(this.offen.getClass().getName())
this.offen[] == []
this.offen[].getClass().getName() == []
return.ort.infrastruktur[].getClass().getName() elements == java.lang.String.class
return.ort.infrastruktur.getClass().getName() == java.util.ArrayList.class
return.zeitraum.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return.zeitraum.zeitpunkte[].getClass().getName() elements == java.util.Date.class
return.zeitraum.zeitpunkte.getClass().getName() == java.util.ArrayList.class
return.posten.einnahmen >= 0.0
return.posten.bezeichnung.toString one of { "Auftritt", "Probe" }
return.teilnehmer[].getClass().getName() elements == Mitglied.class
return.teilnehmer.getClass().getName() == java.util.ArrayList.class
return.orig == null
size(return.zeitraum.zeitpunkte[]) == 2
===========================================================================
Terminvorschlag.toString():::ENTER
this has only one value
this.termin has only one value
this.termin.typus has only one value
this.termin.ort has only one value
this.termin.ort.bezeichnung has only one value
this.termin.ort.bezeichnung.toString == "Kueniglberg"
this.termin.ort.infrastruktur has only one value
this.termin.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.termin.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.termin.zeitraum has only one value
this.termin.zeitraum.zeitpunkte has only one value
this.termin.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.termin.posten has only one value
this.termin.posten.einnahmen == 0.0
this.termin.posten.ausgaben == 2500.99
this.termin.posten.bezeichnung has only one value
this.termin.posten.bezeichnung.toString == "Auftritt"
this.termin.posten.datum has only one value
this.termin.teilnehmer has only one value
this.termin.teilnehmer[] contains no nulls and has only one value, of length 3
this.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.target has only one value
this.target.list has only one value
this.target.list[] == []
this.target.list[].getClass().getName() == []
this.target.removed has only one value
this.target.selectors has only one value
this.offen has only one value
size(this.termin.ort.infrastruktur[]) == 5
size(this.termin.teilnehmer[]) == 3
size(this.offen[]) one of { 1, 2, 3 }
===========================================================================
Terminvorschlag.toString():::EXIT
this.termin == orig(this.termin)
this.termin.typus == orig(this.termin.typus)
Termin$Typ.Probe == orig(Termin$Typ.Probe)
Termin$Typ.Auftritt == orig(Termin$Typ.Auftritt)
Termin$Typ.$VALUES == orig(Termin$Typ.$VALUES)
Termin$Typ.$VALUES.getClass().getName() == orig(Termin$Typ.$VALUES.getClass().getName())
Termin$Typ.$VALUES[] == orig(Termin$Typ.$VALUES[])
this.termin.ort == orig(this.termin.ort)
this.termin.ort.bezeichnung == orig(this.termin.ort.bezeichnung)
this.termin.ort.bezeichnung.toString == orig(this.termin.ort.bezeichnung.toString)
this.termin.ort.infrastruktur == orig(this.termin.ort.infrastruktur)
this.termin.ort.infrastruktur[] == orig(this.termin.ort.infrastruktur[])
this.termin.ort.infrastruktur.getClass().getName() == orig(this.termin.ort.infrastruktur.getClass().getName())
this.termin.zeitraum == orig(this.termin.zeitraum)
this.termin.zeitraum.zeitpunkte == orig(this.termin.zeitraum.zeitpunkte)
this.termin.zeitraum.zeitpunkte[] == orig(this.termin.zeitraum.zeitpunkte[])
this.termin.zeitraum.zeitpunkte.getClass().getName() == orig(this.termin.zeitraum.zeitpunkte.getClass().getName())
this.termin.posten == orig(this.termin.posten)
this.termin.posten.einnahmen == orig(this.termin.posten.einnahmen)
this.termin.posten.ausgaben == orig(this.termin.posten.ausgaben)
this.termin.posten.bezeichnung == orig(this.termin.posten.bezeichnung)
this.termin.posten.bezeichnung.toString == orig(this.termin.posten.bezeichnung.toString)
this.termin.posten.datum == orig(this.termin.posten.datum)
this.termin.teilnehmer == orig(this.termin.teilnehmer)
this.termin.teilnehmer[] == orig(this.termin.teilnehmer[])
this.termin.teilnehmer.getClass().getName() == orig(this.termin.teilnehmer.getClass().getName())
this.termin.orig == orig(this.termin.orig)
this.target == orig(this.target)
this.target.list == orig(this.target.list)
this.target.list[] == orig(this.target.list[])
this.target.list.getClass().getName() == orig(this.target.list.getClass().getName())
this.target.removed == orig(this.target.removed)
this.target.removed[] == orig(this.target.removed[])
this.target.removed.getClass().getName() == orig(this.target.removed.getClass().getName())
this.target.selectors == orig(this.target.selectors)
this.target.selectors[] == orig(this.target.selectors[])
this.target.selectors.getClass().getName() == orig(this.target.selectors.getClass().getName())
this.offen == orig(this.offen)
this.offen[] == orig(this.offen[])
this.offen.getClass().getName() == orig(this.offen.getClass().getName())
this.termin has only one value
this.termin.typus has only one value
this.termin.ort has only one value
this.termin.ort.bezeichnung has only one value
this.termin.ort.bezeichnung.toString == "Kueniglberg"
this.termin.ort.infrastruktur has only one value
this.termin.ort.infrastruktur[] contains no nulls and has only one value, of length 5
this.termin.ort.infrastruktur[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.termin.zeitraum has only one value
this.termin.zeitraum.zeitpunkte has only one value
this.termin.zeitraum.zeitpunkte[] contains no nulls and has only one value, of length 2
this.termin.posten has only one value
this.termin.posten.einnahmen == 0.0
this.termin.posten.ausgaben == 2500.99
this.termin.posten.bezeichnung has only one value
this.termin.posten.bezeichnung.toString == "Auftritt"
this.termin.posten.datum has only one value
this.termin.teilnehmer has only one value
this.termin.teilnehmer[] contains no nulls and has only one value, of length 3
this.termin.teilnehmer[].getClass().getName() == [Mitglied, Mitglied, Mitglied]
this.target has only one value
this.target.list has only one value
this.target.list[] == []
this.target.list[].getClass().getName() == []
this.target.removed has only one value
this.target.selectors has only one value
this.offen has only one value
return.toString == "Auftritt: Kueniglberg [01.04.2012 01:00 - 01.04.2012 01:00]"
size(this.termin.ort.infrastruktur[]) == 5
size(this.termin.teilnehmer[]) == 3
size(this.offen[]) one of { 1, 2, 3 }
===========================================================================
Test:::CLASS
Test.kalender has only one value
Test.kalender != null
Test.kalender.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
Test.erstelleMitglieder(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] == []
arg0.mitglieder.list[].getClass().getName() == []
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
===========================================================================
Test.erstelleMitglieder(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
===========================================================================
Test.erstelleOrte(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
===========================================================================
Test.erstelleOrte(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.erstellePosten(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.erstellePosten(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.erstelleRepertoire(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.erstelleRepertoire(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] contains no nulls and has only one value, of length 3
arg0.repertoire.list[].getClass().getName() == [Song, Song, Song]
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.repertoire.list[]) == 3
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.erstelleTermine(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.erstelleTermine(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
Test.main(java.lang.String[]):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
Test.testeBands():::ENTER
===========================================================================
Test.testeBands():::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
===========================================================================
Test.testeGuV(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.testeGuV(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.testeMitglieder(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
===========================================================================
Test.testeMitglieder(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] == []
arg0.orte.list[].getClass().getName() == []
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
===========================================================================
Test.testeOrte(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.testeOrte(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] == []
arg0.repertoire.list[].getClass().getName() == []
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] == []
arg0.termine.list[].getClass().getName() == []
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] == []
arg0.guv.list[].getClass().getName() == []
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
===========================================================================
Test.testeRepertoire(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] contains no nulls and has only one value, of length 3
arg0.repertoire.list[].getClass().getName() == [Song, Song, Song]
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.repertoire.list[]) == 3
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.testeRepertoire(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.ausrichtung == orig(arg0.ausrichtung)
arg0.ausrichtung.toString == orig(arg0.ausrichtung.toString)
arg0.minProben == orig(arg0.minProben)
arg0.repertoire == orig(arg0.repertoire)
arg0.repertoire.list == orig(arg0.repertoire.list)
arg0.repertoire.list[] == orig(arg0.repertoire.list[])
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.repertoire.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.termine.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.mitglieder.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.orte.selectors.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.list.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.removed.getClass().getName())
arg0.repertoire.list.getClass().getName() == orig(arg0.guv.selectors.getClass().getName())
arg0.repertoire.removed == orig(arg0.repertoire.removed)
arg0.repertoire.removed[] == orig(arg0.repertoire.removed[])
arg0.repertoire.selectors == orig(arg0.repertoire.selectors)
arg0.repertoire.selectors[] == orig(arg0.repertoire.selectors[])
arg0.termine == orig(arg0.termine)
arg0.termine.list == orig(arg0.termine.list)
arg0.termine.list[] == orig(arg0.termine.list[])
arg0.termine.removed == orig(arg0.termine.removed)
arg0.termine.removed[] == orig(arg0.termine.removed[])
arg0.termine.selectors == orig(arg0.termine.selectors)
arg0.termine.selectors[] == orig(arg0.termine.selectors[])
arg0.mitglieder == orig(arg0.mitglieder)
arg0.mitglieder.list == orig(arg0.mitglieder.list)
arg0.mitglieder.list[] == orig(arg0.mitglieder.list[])
arg0.mitglieder.removed == orig(arg0.mitglieder.removed)
arg0.mitglieder.removed[] == orig(arg0.mitglieder.removed[])
arg0.mitglieder.selectors == orig(arg0.mitglieder.selectors)
arg0.mitglieder.selectors[] == orig(arg0.mitglieder.selectors[])
arg0.orte == orig(arg0.orte)
arg0.orte.list == orig(arg0.orte.list)
arg0.orte.list[] == orig(arg0.orte.list[])
arg0.orte.removed == orig(arg0.orte.removed)
arg0.orte.removed[] == orig(arg0.orte.removed[])
arg0.orte.selectors == orig(arg0.orte.selectors)
arg0.orte.selectors[] == orig(arg0.orte.selectors[])
arg0.guv == orig(arg0.guv)
arg0.guv.band == orig(arg0)
arg0.guv.list == orig(arg0.guv.list)
arg0.guv.list[] == orig(arg0.guv.list[])
arg0.guv.removed == orig(arg0.guv.removed)
arg0.guv.removed[] == orig(arg0.guv.removed[])
arg0.guv.selectors == orig(arg0.guv.selectors)
arg0.guv.selectors[] == orig(arg0.guv.selectors[])
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] contains no nulls and has only one value, of length 3
arg0.repertoire.list[].getClass().getName() == [Song, Song, Song]
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.repertoire.list[]) == 3
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.testeSicherung(Band):::ENTER
arg0 == arg0.guv.band
arg0.repertoire.list.getClass().getName() == arg0.repertoire.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.repertoire.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.termine.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.mitglieder.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.orte.selectors.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.list.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.removed.getClass().getName()
arg0.repertoire.list.getClass().getName() == arg0.guv.selectors.getClass().getName()
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Green Day"
arg0.ausrichtung has only one value
arg0.ausrichtung.toString == "Rock"
arg0.minProben == 2
arg0.repertoire has only one value
arg0.repertoire.list has only one value
arg0.repertoire.list[] contains no nulls and has only one value, of length 3
arg0.repertoire.list[].getClass().getName() == [Song, Song, Song]
arg0.repertoire.list[].getClass().getName() elements == Song.class
arg0.repertoire.list.getClass().getName() == java.util.ArrayList.class
arg0.repertoire.removed has only one value
arg0.repertoire.removed[] == []
arg0.repertoire.removed[].getClass().getName() == []
arg0.repertoire.selectors has only one value
arg0.repertoire.selectors[] == []
arg0.repertoire.selectors[].getClass().getName() == []
arg0.termine has only one value
arg0.termine.list has only one value
arg0.termine.list[] contains no nulls and has only one value, of length 4
arg0.termine.list[].getClass().getName() == [Termin, Termin, Termin, Termin]
arg0.termine.list[].getClass().getName() elements == Termin.class
arg0.termine.removed has only one value
arg0.termine.removed[] == []
arg0.termine.removed[].getClass().getName() == []
arg0.termine.selectors has only one value
arg0.termine.selectors[] == []
arg0.termine.selectors[].getClass().getName() == []
arg0.mitglieder has only one value
arg0.mitglieder.list has only one value
arg0.mitglieder.list[] contains no nulls and has only one value, of length 7
arg0.mitglieder.list[].getClass().getName() == [Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied, Mitglied]
arg0.mitglieder.list[].getClass().getName() elements == Mitglied.class
arg0.mitglieder.removed has only one value
arg0.mitglieder.removed[] == []
arg0.mitglieder.removed[].getClass().getName() == []
arg0.mitglieder.selectors has only one value
arg0.mitglieder.selectors[] == []
arg0.mitglieder.selectors[].getClass().getName() == []
arg0.orte has only one value
arg0.orte.list has only one value
arg0.orte.list[] contains no nulls and has only one value, of length 3
arg0.orte.list[].getClass().getName() == [Ort, Ort, Ort]
arg0.orte.list[].getClass().getName() elements == Ort.class
arg0.orte.removed has only one value
arg0.orte.removed[] == []
arg0.orte.removed[].getClass().getName() == []
arg0.orte.selectors has only one value
arg0.orte.selectors[] == []
arg0.orte.selectors[].getClass().getName() == []
arg0.guv has only one value
arg0.guv.list has only one value
arg0.guv.list[] contains no nulls and has only one value, of length 3
arg0.guv.list[].getClass().getName() == [Posten, Posten, Posten]
arg0.guv.list[].getClass().getName() elements == Posten.class
arg0.guv.removed has only one value
arg0.guv.removed[] == []
arg0.guv.removed[].getClass().getName() == []
arg0.guv.selectors has only one value
arg0.guv.selectors[] == []
arg0.guv.selectors[].getClass().getName() == []
size(arg0.repertoire.list[]) == 3
size(arg0.termine.list[]) == 4
size(arg0.mitglieder.list[]) == 7
size(arg0.orte.list[]) == 3
size(arg0.guv.list[]) == 3
===========================================================================
Test.testeSicherung(Band):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
===========================================================================
Test.testeTermine():::ENTER
===========================================================================
Test.testeTermine():::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
===========================================================================
Test.toDate(int, int, int):::ENTER
arg1 >= 1
arg2 >= 1
arg0 > arg1
arg0 > arg2
===========================================================================
Test.toDate(int, int, int):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
return != null
===========================================================================
Test.toDate(int, int, int, int, int):::ENTER
arg0 == 2012
arg1 one of { 3, 10 }
arg4 == 0
arg0 > arg1
arg0 > arg2
arg0 > arg3
arg1 != arg2
arg1 != arg3
arg1 > arg4
arg2 != arg3
arg2 > arg4
arg3 > arg4
===========================================================================
Test.toDate(int, int, int, int, int):::EXIT
Test.kalender == orig(Test.kalender)
Test.kalender.getClass().getName() == orig(Test.kalender.getClass().getName())
===========================================================================
Variante$BezeichnungSelektor:::OBJECT
this has only one value
this.bezeichnung has only one value
this.bezeichnung != null
this.bezeichnung.toString == "Acoustic"
===========================================================================
Variante$BezeichnungSelektor.BezeichnungSelektor(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Acoustic"
===========================================================================
Variante$BezeichnungSelektor.BezeichnungSelektor(java.lang.String):::EXIT
this.bezeichnung == orig(arg0)
arg0.toString == orig(arg0.toString)
arg0.toString == "Acoustic"
===========================================================================
Variante$BezeichnungSelektor.select(Variante):::ENTER
arg0.bezeichnung.toString one of { "Acoustic", "Normal" }
arg0.laenge one of { 195, 200, 210 }
===========================================================================
Variante$BezeichnungSelektor.select(Variante):::EXIT
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
arg0.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == orig(arg0.bezeichnung.toString)
arg0.laenge == orig(arg0.laenge)
(arg0.bezeichnung.toString == "Acoustic")  <==>  (return == true)
(arg0.bezeichnung.toString == "Acoustic")  ==>  (arg0.laenge one of { 200, 210 })
(arg0.bezeichnung.toString == "Acoustic")  ==>  (this.bezeichnung == arg0.bezeichnung)
(arg0.bezeichnung.toString == "Normal")  <==>  (return == false)
(arg0.bezeichnung.toString == "Normal")  ==>  (arg0.laenge one of { 195, 200 })
arg0.bezeichnung.toString one of { "Acoustic", "Normal" }
arg0.laenge one of { 195, 200, 210 }
===========================================================================
Variante$BezeichnungSelektor.select(Variante):::EXIT;condition="return == true"
this.bezeichnung == arg0.bezeichnung
this.bezeichnung == orig(arg0.bezeichnung)
arg0.bezeichnung.toString == "Acoustic"
arg0.laenge one of { 200, 210 }
return == true
===========================================================================
Variante$BezeichnungSelektor.select(Variante):::EXIT;condition="not(return == true)"
arg0.bezeichnung has only one value
arg0.bezeichnung.toString == "Normal"
arg0.laenge one of { 195, 200 }
return == false
===========================================================================
Variante:::CLASS
===========================================================================
Variante:::OBJECT
this.bezeichnung != null
this.bezeichnung.toString one of { "Acoustic", "Normal" }
this.laenge one of { 195, 200, 210 }
===========================================================================
Variante.Variante(java.lang.String, int):::ENTER
arg0.toString one of { "Acoustic", "Normal" }
arg1 one of { 195, 200, 210 }
===========================================================================
Variante.Variante(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Acoustic", "Normal" }
===========================================================================
Variante.toString():::ENTER
===========================================================================
Variante.toString():::EXIT
this.bezeichnung == orig(this.bezeichnung)
this.bezeichnung.toString == orig(this.bezeichnung.toString)
this.laenge == orig(this.laenge)
return != null
===========================================================================
Zeitraum:::CLASS
===========================================================================
Zeitraum:::OBJECT
this.zeitpunkte != null
this.zeitpunkte[] elements != null
this.zeitpunkte[].getClass().getName() elements == java.util.Date.class
this.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] }
this.zeitpunkte.getClass().getName() == java.util.ArrayList.class
size(this.zeitpunkte[]) one of { 1, 2 }
===========================================================================
Zeitraum.Zeitraum(java.util.Date[]):::ENTER
arg0 != null
arg0.getClass().getName() == java.util.Date[].class
arg0[] elements != null
size(arg0[]) one of { 1, 2 }
===========================================================================
Zeitraum.Zeitraum(java.util.Date[]):::EXIT
arg0[] == orig(arg0[])
arg0[] elements != null
this.zeitpunkte.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
Zeitraum.enthaelt(Zeitraum):::ENTER
this.zeitpunkte.getClass().getName() == arg0.zeitpunkte.getClass().getName()
arg0 != null
arg0.zeitpunkte != null
arg0.zeitpunkte[] elements != null
arg0.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
size(arg0.zeitpunkte[]) == 2
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT79
return == false
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT79;condition="not(return == true)"
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT89
return == true
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT89;condition="return == true"
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == arg0.zeitpunkte.getClass().getName()
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
this.zeitpunkte.getClass().getName() == orig(arg0.zeitpunkte.getClass().getName())
arg0.zeitpunkte == orig(arg0.zeitpunkte)
arg0.zeitpunkte[] == orig(arg0.zeitpunkte[])
arg0.zeitpunkte != null
arg0.zeitpunkte[] elements != null
arg0.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
arg0.zeitpunkte[].getClass().getName() elements == java.util.Date.class
size(arg0.zeitpunkte[]) == 2
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT;condition="return == true"
return == true
===========================================================================
Zeitraum.enthaelt(Zeitraum):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::ENTER
arg0 != null
arg1 != null
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT175
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return == true
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT175;condition="return == true"
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT182
(return == false)  ==>  (orig(this) has only one value)
(return == false)  ==>  (this.zeitpunkte has only one value)
(return == false)  ==>  (this.zeitpunkte[] contains no nulls and has only one value, of length 1)
(return == false)  ==>  (this.zeitpunkte[] elements has only one value)
this.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitpunkte[]) == 1
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT182;condition="return == true"
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT182;condition="not(return == true)"
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 1
this.zeitpunkte[] elements has only one value
orig(this) has only one value
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT185
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 2
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return == false
orig(this) has only one value
orig(arg0) has only one value
orig(arg1) has only one value
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT185;condition="not(return == true)"
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT;condition="return == true"
return == true
===========================================================================
Zeitraum.enthaelt(java.util.Date, java.util.Date):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Zeitraum.getFirst():::ENTER
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.getFirst():::EXIT31
===========================================================================
Zeitraum.getFirst():::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.getLast():::ENTER
this has only one value
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 2
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.getLast():::EXIT38
===========================================================================
Zeitraum.getLast():::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 2
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return has only one value
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::ENTER
arg0 != null
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT59
(return == false)  ==>  (orig(this) has only one value)
(return == false)  ==>  (this.zeitpunkte has only one value)
(return == false)  ==>  (this.zeitpunkte[] contains no nulls and has only one value, of length 1)
(return == false)  ==>  (this.zeitpunkte[] elements has only one value)
this.zeitpunkte[].getClass().getName() == [java.util.Date]
size(this.zeitpunkte[]) == 1
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT59;condition="return == true"
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT59;condition="not(return == true)"
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 1
this.zeitpunkte[] elements has only one value
orig(this) has only one value
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT62
this.zeitpunkte has only one value
this.zeitpunkte[] contains no nulls and has only one value, of length 2
this.zeitpunkte[].getClass().getName() == [java.util.Date, java.util.Date]
return == false
orig(this) has only one value
orig(arg0) has only one value
size(this.zeitpunkte[]) == 2
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT62;condition="not(return == true)"
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
(return == false)  ==>  (size(this.zeitpunkte[]) one of { 1, 2 })
(return == false)  ==>  (this.zeitpunkte[].getClass().getName() one of { [java.util.Date], [java.util.Date, java.util.Date] })
(return == true)  ==>  (size(this.zeitpunkte[]) == 1)
(return == true)  ==>  (this.zeitpunkte[].getClass().getName() == [java.util.Date])
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT;condition="return == true"
this.zeitpunkte[].getClass().getName() == [java.util.Date]
return == true
size(this.zeitpunkte[]) == 1
===========================================================================
Zeitraum.inZeitraum(java.util.Date):::EXIT;condition="not(return == true)"
return == false
===========================================================================
Zeitraum.inZeitraum(java.util.Date, java.util.Date, java.util.Date):::ENTER
arg0 != null
arg1 != null
arg2 != null
===========================================================================
Zeitraum.inZeitraum(java.util.Date, java.util.Date, java.util.Date):::EXIT
(return == false)  ==>  (orig(arg1) has only one value)
(return == false)  ==>  (orig(arg2) has only one value)
===========================================================================
Zeitraum.inZeitraum(java.util.Date, java.util.Date, java.util.Date):::EXIT;condition="return == true"
return == true
===========================================================================
Zeitraum.inZeitraum(java.util.Date, java.util.Date, java.util.Date):::EXIT;condition="not(return == true)"
return == false
orig(arg1) has only one value
orig(arg2) has only one value
===========================================================================
Zeitraum.toString():::ENTER
===========================================================================
Zeitraum.toString():::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
return != null
===========================================================================
Zeitraum.toString(java.text.DateFormat):::ENTER
arg0 != null
arg0.getClass().getName() == java.text.SimpleDateFormat.class
===========================================================================
Zeitraum.toString(java.text.DateFormat):::EXIT
this.zeitpunkte == orig(this.zeitpunkte)
this.zeitpunkte[] == orig(this.zeitpunkte[])
this.zeitpunkte.getClass().getName() == orig(this.zeitpunkte.getClass().getName())
return != null
Exiting Daikon.
