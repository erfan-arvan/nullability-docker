Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
sjm.examples.book.robot.RobotRefactored:::OBJECT
this has only one value
===========================================================================
sjm.examples.book.robot.RobotRefactored.RobotRefactored():::EXIT
===========================================================================
sjm.examples.book.robot.RobotRefactored.command():::ENTER
===========================================================================
sjm.examples.book.robot.RobotRefactored.command():::EXIT
return has only one value
return.getClass().getName() == sjm.parse.Alternation.class
===========================================================================
sjm.examples.book.robot.RobotRefactored.location():::ENTER
===========================================================================
sjm.examples.book.robot.RobotRefactored.location():::EXIT
return.getClass().getName() == sjm.parse.tokens.Word.class
return.name == null
return.assembler == null
===========================================================================
sjm.examples.book.robot.RobotRefactored.pickCommand():::ENTER
===========================================================================
sjm.examples.book.robot.RobotRefactored.pickCommand():::EXIT
return has only one value
return.getClass().getName() == sjm.parse.Sequence.class
return.name == null
return.assembler == null
===========================================================================
sjm.examples.book.robot.RobotRefactored.placeCommand():::ENTER
===========================================================================
sjm.examples.book.robot.RobotRefactored.placeCommand():::EXIT
return has only one value
return.getClass().getName() == sjm.parse.Sequence.class
return.name == null
return.assembler == null
===========================================================================
sjm.examples.book.robot.RobotRefactored.scanCommand():::ENTER
===========================================================================
sjm.examples.book.robot.RobotRefactored.scanCommand():::EXIT
return has only one value
return.getClass().getName() == sjm.parse.Sequence.class
return.name == null
return.assembler == null
===========================================================================
sjm.examples.book.robot.ShowRobotRefactored.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
sjm.examples.book.robot.ShowRobotRefactored.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
sjm.parse.Alternation:::OBJECT
this has only one value
this.subparsers has only one value
this.subparsers[].getClass().getName() elements == sjm.parse.Sequence.class
this.subparsers[].getClass().getName() one of { [], [sjm.parse.Sequence, sjm.parse.Sequence, sjm.parse.Sequence] }
this.subparsers.getClass().getName() == java.util.ArrayList.class
this.name == null
this.assembler == null
size(this.subparsers[]) one of { 0, 3 }
===========================================================================
sjm.parse.Alternation.Alternation():::EXIT
this.subparsers[] == []
this.subparsers[].getClass().getName() == []
===========================================================================
sjm.parse.Alternation.match(java.util.Set):::ENTER
this.subparsers[] contains no nulls and has only one value, of length 3
this.subparsers[].getClass().getName() == [sjm.parse.Sequence, sjm.parse.Sequence, sjm.parse.Sequence]
arg0 has only one value
arg0.getClass().getName() == java.util.HashSet.class
size(this.subparsers[]) == 3
===========================================================================
sjm.parse.Alternation.match(java.util.Set):::EXIT
this.subparsers == orig(this.subparsers)
this.subparsers[] == orig(this.subparsers[])
this.subparsers.getClass().getName() == orig(this.subparsers.getClass().getName())
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return.getClass().getName() == orig(arg0.getClass().getName())
this.subparsers[] contains no nulls and has only one value, of length 3
this.subparsers[].getClass().getName() == [sjm.parse.Sequence, sjm.parse.Sequence, sjm.parse.Sequence]
return has only one value
return.getClass().getName() == java.util.HashSet.class
size(this.subparsers[]) == 3
===========================================================================
sjm.parse.Assembly:::OBJECT
this.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
this.stack != null
this.target == null
this.index >= 0
this.stackSizesBeforeMatch != null
===========================================================================
sjm.parse.Assembly.Assembly():::EXIT
this.stack has only one value
this.index == 0
this.stackSizesBeforeMatch has only one value
===========================================================================
sjm.parse.Assembly.announceMatchingEnd():::ENTER
===========================================================================
sjm.parse.Assembly.announceMatchingEnd():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
===========================================================================
sjm.parse.Assembly.announceMatchingStart():::ENTER
===========================================================================
sjm.parse.Assembly.announceMatchingStart():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
===========================================================================
sjm.parse.Assembly.clone():::ENTER
===========================================================================
sjm.parse.Assembly.clone():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
return.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
return.target == null
===========================================================================
sjm.parse.Assembly.elementsConsumed():::ENTER
===========================================================================
sjm.parse.Assembly.elementsConsumed():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
return >= 0
===========================================================================
sjm.parse.Assembly.hasNext():::ENTER
===========================================================================
sjm.parse.Assembly.hasNext():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
(this.index == 4)  <==>  (return == false)
(this.index == 4)  ==>  (orig(this) has only one value)
(this.index == 4)  ==>  (this.stack has only one value)
(this.index == 4)  ==>  (this.stackSizesBeforeMatch has only one value)
===========================================================================
sjm.parse.Assembly.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
sjm.parse.Assembly.hasNext():::EXIT;condition="not(return == true)"
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
return == false
orig(this) has only one value
===========================================================================
sjm.parse.Assembly.push(java.lang.Object):::ENTER
arg0.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.Assembly.push(java.lang.Object):::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
===========================================================================
sjm.parse.Assembly.toString():::ENTER
this has only one value
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
===========================================================================
sjm.parse.Assembly.toString():::EXIT
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
return has only one value
return.toString == "[Token:place, Token:carrier, Token:at, Token:WB500_IN](4) : Token:place/Token:carrier/Token:at/Token:WB500_IN^"
===========================================================================
sjm.parse.CollectionParser:::OBJECT
this.subparsers != null
this.subparsers[] elements != null
this.subparsers.getClass().getName() == java.util.ArrayList.class
this.name == null
this.assembler == null
this.getClass().getName() != this.subparsers.getClass().getName()
===========================================================================
sjm.parse.CollectionParser.CollectionParser():::EXIT
this.subparsers[] == []
this.subparsers[].getClass().getName() == []
===========================================================================
sjm.parse.CollectionParser.add(sjm.parse.Parser):::ENTER
arg0 != null
arg0.name == null
arg0.assembler == null
this.getClass().getName() != arg0.getClass().getName()
this.subparsers.getClass().getName() != arg0.getClass().getName()
===========================================================================
sjm.parse.CollectionParser.add(sjm.parse.Parser):::EXIT
this.subparsers == return.subparsers
this.subparsers == orig(this.subparsers)
this.subparsers.getClass().getName() == return.subparsers.getClass().getName()
this.subparsers.getClass().getName() == orig(this.subparsers.getClass().getName())
this.name == orig(this.name)
this.assembler == orig(this.assembler)
arg0.name == orig(arg0.name)
arg0.assembler == orig(arg0.assembler)
return == orig(this)
return.getClass().getName() == orig(this.getClass().getName())
size(this.subparsers[])-1 == orig(size(this.subparsers[]))
arg0.name == null
arg0.assembler == null
return != null
return.subparsers[] elements != null
return.name == null
return.assembler == null
size(this.subparsers[]) >= 1
size(return.subparsers[]) >= 1
orig(arg0.getClass().getName()) in this.subparsers[].getClass().getName()
this.subparsers.getClass().getName() != return.getClass().getName()
this.subparsers.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
orig(arg0.getClass().getName()) in return.subparsers[].getClass().getName()
===========================================================================
sjm.parse.Parser:::OBJECT
this.name == null
this.assembler == null
===========================================================================
sjm.parse.Parser.Parser():::EXIT
===========================================================================
sjm.parse.Parser.announceMatchingEnd(java.util.Set):::ENTER
arg0.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != arg0.getClass().getName()
===========================================================================
sjm.parse.Parser.announceMatchingEnd(java.util.Set):::EXIT
this.name == orig(this.name)
this.assembler == orig(this.assembler)
===========================================================================
sjm.parse.Parser.announceMatchingStart(java.util.Set):::ENTER
arg0.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != arg0.getClass().getName()
===========================================================================
sjm.parse.Parser.announceMatchingStart(java.util.Set):::EXIT
this.name == orig(this.name)
this.assembler == orig(this.assembler)
===========================================================================
sjm.parse.Parser.best(java.util.Set):::ENTER
this has only one value
this.getClass().getName() == sjm.parse.Alternation.class
arg0 has only one value
arg0.getClass().getName() == java.util.HashSet.class
===========================================================================
sjm.parse.Parser.best(java.util.Set):::EXIT134
===========================================================================
sjm.parse.Parser.best(java.util.Set):::EXIT
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return has only one value
return.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
return.stack has only one value
return.target == null
return.index == 4
return.stackSizesBeforeMatch has only one value
===========================================================================
sjm.parse.Parser.bestMatch(sjm.parse.Assembly):::ENTER
this has only one value
this.getClass().getName() == sjm.parse.Alternation.class
arg0 has only one value
arg0.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
arg0.stack has only one value
arg0.target == null
arg0.index == 0
arg0.stackSizesBeforeMatch has only one value
===========================================================================
sjm.parse.Parser.bestMatch(sjm.parse.Assembly):::EXIT
this.name == orig(this.name)
this.assembler == orig(this.assembler)
arg0.stack == orig(arg0.stack)
arg0.target == orig(arg0.target)
arg0.index == orig(arg0.index)
arg0.stackSizesBeforeMatch == orig(arg0.stackSizesBeforeMatch)
return.getClass().getName() == orig(arg0.getClass().getName())
arg0.stack has only one value
arg0.target == null
arg0.index == 0
arg0.stackSizesBeforeMatch has only one value
return has only one value
return.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
return.stack has only one value
return.target == null
return.index == 4
return.stackSizesBeforeMatch has only one value
===========================================================================
sjm.parse.Parser.matchAndAssemble(java.util.Set):::ENTER
arg0.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != arg0.getClass().getName()
===========================================================================
sjm.parse.Parser.matchAndAssemble(java.util.Set):::EXIT
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return.getClass().getName() == orig(arg0.getClass().getName())
return.getClass().getName() == java.util.HashSet.class
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
sjm.parse.Sequence:::OBJECT
this.subparsers.getClass().getName() == java.util.ArrayList.class
this.name == null
this.assembler == null
size(this.subparsers[]) one of { 0, 2, 4 }
===========================================================================
sjm.parse.Sequence.Sequence():::EXIT
this.subparsers[] == []
this.subparsers[].getClass().getName() == []
===========================================================================
sjm.parse.Sequence.match(java.util.Set):::ENTER
this.subparsers[].getClass().getName() one of { [sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.Word], [sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.Word] }
arg0 has only one value
arg0.getClass().getName() == java.util.HashSet.class
size(this.subparsers[]) one of { 2, 4 }
===========================================================================
sjm.parse.Sequence.match(java.util.Set):::EXIT72
===========================================================================
sjm.parse.Sequence.match(java.util.Set):::EXIT75
this.subparsers has only one value
this.subparsers[] contains no nulls and has only one value, of length 4
this.subparsers[].getClass().getName() == [sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.Word]
return has only one value
orig(this) has only one value
size(this.subparsers[]) == 4
===========================================================================
sjm.parse.Sequence.match(java.util.Set):::EXIT
this.subparsers == orig(this.subparsers)
this.subparsers[] == orig(this.subparsers[])
this.subparsers.getClass().getName() == orig(this.subparsers.getClass().getName())
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return.getClass().getName() == orig(arg0.getClass().getName())
this.subparsers[].getClass().getName() one of { [sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.Word], [sjm.parse.tokens.CaselessLiteral, sjm.parse.tokens.Word] }
return.getClass().getName() == java.util.HashSet.class
size(this.subparsers[]) one of { 2, 4 }
===========================================================================
sjm.parse.Terminal:::OBJECT
this.discard == false
this.name == null
this.assembler == null
===========================================================================
sjm.parse.Terminal.Terminal():::EXIT
===========================================================================
sjm.parse.Terminal.elementToPushOnStack(java.lang.Object):::ENTER
arg0.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.Terminal.elementToPushOnStack(java.lang.Object):::EXIT
this.discard == orig(this.discard)
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return == orig(arg0)
return.getClass().getName() == orig(arg0.getClass().getName())
return.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.Terminal.match(java.util.Set):::ENTER
arg0.getClass().getName() == java.util.HashSet.class
===========================================================================
sjm.parse.Terminal.match(java.util.Set):::EXIT
this.discard == orig(this.discard)
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return.getClass().getName() == orig(arg0.getClass().getName())
return.getClass().getName() == java.util.HashSet.class
===========================================================================
sjm.parse.Terminal.matchOneAssembly(sjm.parse.Assembly):::ENTER
arg0.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
arg0.target == null
arg0.index >= 0
===========================================================================
sjm.parse.Terminal.matchOneAssembly(sjm.parse.Assembly):::EXIT119
===========================================================================
sjm.parse.Terminal.matchOneAssembly(sjm.parse.Assembly):::EXIT121
arg0.stack has only one value
arg0.index == 0
arg0.stackSizesBeforeMatch has only one value
return == null
orig(arg0) has only one value
===========================================================================
sjm.parse.Terminal.matchOneAssembly(sjm.parse.Assembly):::EXIT
this.discard == orig(this.discard)
this.name == orig(this.name)
this.assembler == orig(this.assembler)
arg0.stack == orig(arg0.stack)
arg0.target == orig(arg0.target)
arg0.index == orig(arg0.index)
arg0.stackSizesBeforeMatch == orig(arg0.stackSizesBeforeMatch)
return.getClass().getName() == orig(arg0.getClass().getName())
arg0.target == null
arg0.index >= 0
return.getClass().getName() == sjm.parse.tokens.TokenAssembly.class
return.target == null
arg0.index - return.index + 1 == 0
===========================================================================
sjm.parse.tokens.CaselessLiteral:::OBJECT
this.literal.ttype == sjm.parse.tokens.Token.TT_WORD
this.literal.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.literal != null
this.literal.ttype.name has only one value
this.literal.ttype.name != null
this.literal.ttype.name.toString == "word"
this.literal.sval != null
this.literal.nval has only one value
this.literal.nval != null
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF != null
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name != null
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF != null
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.ttype != null
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval != null
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.EOF.nval != null
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_NUMBER != null
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_WORD != null
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_SYMBOL != null
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_QUOTED != null
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_WHITESPACE != null
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name != null
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name != null
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name != null
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name != null
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name != null
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
this.discard == false
this.name == null
this.assembler == null
===========================================================================
sjm.parse.tokens.CaselessLiteral.CaselessLiteral(java.lang.String):::ENTER
===========================================================================
sjm.parse.tokens.CaselessLiteral.CaselessLiteral(java.lang.String):::EXIT
this.literal.sval == orig(arg0)
arg0.toString == orig(arg0.toString)
===========================================================================
sjm.parse.tokens.CaselessLiteral.qualifies(java.lang.Object):::ENTER
arg0.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.tokens.CaselessLiteral.qualifies(java.lang.Object):::EXIT
this.literal == orig(this.literal)
this.literal.ttype.name == orig(this.literal.ttype.name)
this.literal.ttype.name.toString == orig(this.literal.ttype.name.toString)
this.literal.sval == orig(this.literal.sval)
this.literal.sval.toString == orig(this.literal.sval.toString)
this.literal.nval == orig(this.literal.nval)
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == orig(this.literal.nval.getClass().getName())
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(this.literal.ttype)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
this.discard == orig(this.discard)
this.name == orig(this.name)
this.assembler == orig(this.assembler)
(this.literal.sval.toString one of { "at", "carrier", "place" })  <==>  (return == true)
(this.literal.sval.toString one of { "pick", "scan" })  <==>  (return == false)
(this.literal.sval.toString one of { "pick", "scan" })  ==>  (orig(arg0) has only one value)
===========================================================================
sjm.parse.tokens.CaselessLiteral.qualifies(java.lang.Object):::EXIT;condition="return == true"
this.literal.sval.toString one of { "at", "carrier", "place" }
return == true
===========================================================================
sjm.parse.tokens.CaselessLiteral.qualifies(java.lang.Object):::EXIT;condition="not(return == true)"
this.literal.sval.toString one of { "pick", "scan" }
return == false
orig(arg0) has only one value
===========================================================================
sjm.parse.tokens.Literal:::OBJECT
this.literal.ttype == sjm.parse.tokens.Token.TT_WORD
this.literal.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.literal.ttype.name has only one value
this.literal.ttype.name.toString == "word"
this.literal.nval has only one value
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
this.discard == false
this.name == null
this.assembler == null
===========================================================================
sjm.parse.tokens.Literal.Literal(java.lang.String):::ENTER
===========================================================================
sjm.parse.tokens.Literal.Literal(java.lang.String):::EXIT
this.literal.sval == orig(arg0)
arg0.toString == orig(arg0.toString)
===========================================================================
sjm.parse.tokens.NumberState:::OBJECT
this has only one value
this.c == 0
this.value == null
this.absorbedLeadingMinus == false
this.absorbedDot == false
this.gotAdigit == false
===========================================================================
sjm.parse.tokens.NumberState.NumberState():::EXIT
===========================================================================
sjm.parse.tokens.QuoteState:::OBJECT
this has only one value
this.charbuf has only one value
this.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.charbuf[] elements == 0
size(this.charbuf[]) == 16
===========================================================================
sjm.parse.tokens.QuoteState.QuoteState():::EXIT
===========================================================================
sjm.parse.tokens.SlashSlashState:::OBJECT
this has only one value
===========================================================================
sjm.parse.tokens.SlashSlashState.SlashSlashState():::EXIT
===========================================================================
sjm.parse.tokens.SlashStarState:::OBJECT
this has only one value
===========================================================================
sjm.parse.tokens.SlashStarState.SlashStarState():::EXIT
===========================================================================
sjm.parse.tokens.SlashState:::OBJECT
this has only one value
this.slashStarState has only one value
this.slashSlashState has only one value
===========================================================================
sjm.parse.tokens.SlashState.SlashState():::EXIT
===========================================================================
sjm.parse.tokens.SymbolNode:::OBJECT
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.myChar >= 0
this.children != null
this.children[] elements != null
this.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.children[].getClass().getName() one of { [], [sjm.parse.tokens.SymbolNode] }
this.children.getClass().getName() == java.util.ArrayList.class
this.parent.myChar >= 0
this.parent.children != null
this.parent.children[] elements != null
this.parent.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.parent.children[].getClass().getName() one of { [], [sjm.parse.tokens.SymbolNode] }
this.parent.children.getClass().getName() == java.util.ArrayList.class
this.parent.parent.myChar == 0
this.parent.parent.children has only one value
this.parent.parent.children != null
this.parent.parent.children[] == []
this.parent.parent.children[].getClass().getName() == []
this.parent.parent.children.getClass().getName() == java.util.ArrayList.class
this.parent.parent.valid == false
this.parent.parent.parent == null
size(this.children[]) one of { 0, 1 }
size(this.parent.children[]) one of { 0, 1 }
===========================================================================
sjm.parse.tokens.SymbolNode.SymbolNode(sjm.parse.tokens.SymbolNode, char):::ENTER
arg0.children.getClass().getName() == arg0.parent.children.getClass().getName()
arg0.myChar >= 0
arg0.children != null
arg0.children[] == []
arg0.children[].getClass().getName() == []
arg0.children.getClass().getName() == java.util.ArrayList.class
arg0.parent.myChar == 0
arg0.parent.children has only one value
arg0.parent.children[] == []
arg0.parent.children[].getClass().getName() == []
arg0.parent.children.getClass().getName() == java.util.ArrayList.class
arg0.parent.valid == false
arg0.parent.parent == null
===========================================================================
sjm.parse.tokens.SymbolNode.SymbolNode(sjm.parse.tokens.SymbolNode, char):::EXIT
this.myChar == orig(arg1)
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.parent == orig(arg0)
this.parent.myChar == arg0.myChar
this.parent.children == arg0.children
this.parent.children.getClass().getName() == arg0.children.getClass().getName()
this.parent.valid == arg0.valid
this.parent.parent == arg0.parent
this.parent.parent.myChar == arg0.parent.myChar
this.parent.parent.children == arg0.parent.children
this.parent.parent.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.parent.parent.valid == arg0.parent.valid
arg0.myChar == orig(arg0.myChar)
arg0.children == orig(arg0.children)
arg0.children[] == orig(arg0.children[])
arg0.children.getClass().getName() == arg0.parent.children.getClass().getName()
arg0.children.getClass().getName() == orig(arg0.children.getClass().getName())
arg0.valid == orig(arg0.valid)
arg0.parent == orig(arg0.parent)
arg0.parent.myChar == orig(arg0.parent.myChar)
arg0.parent.children == orig(arg0.parent.children)
arg0.parent.children[] == orig(arg0.parent.children[])
arg0.parent.children.getClass().getName() == orig(arg0.parent.children.getClass().getName())
arg0.parent.valid == orig(arg0.parent.valid)
arg0.parent.parent == orig(arg0.parent.parent)
this.children[] == []
this.children[].getClass().getName() == []
this.valid == false
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
arg0.myChar >= 0
arg0.children != null
arg0.children[] == []
arg0.children[].getClass().getName() == []
arg0.children.getClass().getName() == java.util.ArrayList.class
arg0.parent.myChar == 0
arg0.parent.children has only one value
arg0.parent.children[] == []
arg0.parent.children[].getClass().getName() == []
arg0.parent.children.getClass().getName() == java.util.ArrayList.class
arg0.parent.valid == false
arg0.parent.parent == null
===========================================================================
sjm.parse.tokens.SymbolNode.addDescendantLine(java.lang.String):::ENTER
this.children[] == []
this.children[].getClass().getName() == []
arg0.toString one of { "", "-", "=" }
===========================================================================
sjm.parse.tokens.SymbolNode.addDescendantLine(java.lang.String):::EXIT
this.myChar == orig(this.myChar)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.valid == orig(this.valid)
this.parent == orig(this.parent)
this.parent.myChar == orig(this.parent.myChar)
this.parent.children == orig(this.parent.children)
this.parent.children[] == orig(this.parent.children[])
this.parent.valid == orig(this.parent.valid)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.myChar == orig(this.parent.parent.myChar)
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children[] == orig(this.parent.parent.children[])
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.valid == orig(this.parent.parent.valid)
this.parent.parent.parent == orig(this.parent.parent.parent)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "", "-", "=" }
size(this.children[]) >= orig(size(this.children[]))
size(this.children[])-1 <= orig(size(this.children[]))
size(this.children[])-1 >= orig(size(this.children[]))-1
===========================================================================
sjm.parse.tokens.SymbolNode.ensureChildWithChar(char):::ENTER
this.children[] == []
this.children[].getClass().getName() == []
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
===========================================================================
sjm.parse.tokens.SymbolNode.ensureChildWithChar(char):::EXIT
this.myChar == return.parent.myChar
this.myChar == orig(this.myChar)
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.valid == return.parent.valid
this.valid == orig(this.valid)
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.myChar == orig(this.parent.myChar)
this.parent.children == orig(this.parent.children)
this.parent.children[] == orig(this.parent.children[])
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.valid == orig(this.parent.valid)
this.parent.parent == orig(this.parent.parent)
return.myChar == orig(arg0)
return.parent == orig(this)
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
return.children[] == []
return.children[].getClass().getName() == []
return.parent.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
return.parent.children[].getClass().getName() one of { [], [sjm.parse.tokens.SymbolNode] }
size(return.parent.children[]) one of { 0, 1 }
size(this.children[]) >= orig(size(this.children[]))
size(this.children[])-1 <= orig(size(this.children[]))
size(this.children[])-1 >= orig(size(this.children[]))-1
===========================================================================
sjm.parse.tokens.SymbolNode.findChildWithChar(char):::ENTER
this.valid == true
this.parent has only one value
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
arg0 one of { 45, 61 }
===========================================================================
sjm.parse.tokens.SymbolNode.findChildWithChar(char):::EXIT123
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode]
size(this.children[]) == 1
===========================================================================
sjm.parse.tokens.SymbolNode.findChildWithChar(char):::EXIT126
this.children[] == []
this.children[].getClass().getName() == []
return == null
===========================================================================
sjm.parse.tokens.SymbolNode.findChildWithChar(char):::EXIT
this.myChar == return.parent.myChar
this.myChar == orig(this.myChar)
this.children == return.parent.children
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.valid == return.parent.valid
this.valid == orig(this.valid)
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.myChar == orig(this.parent.myChar)
this.parent.children == orig(this.parent.children)
this.parent.children[] == orig(this.parent.children[])
this.parent.valid == orig(this.parent.valid)
this.parent.parent == orig(this.parent.parent)
return.myChar == orig(arg0)
return.children.getClass().getName() == return.parent.children.getClass().getName()
return.parent == orig(this)
(this.children[].getClass().getName() == [])  <==>  (return == null)
(this.children[].getClass().getName() == [])  ==>  (this.children[] == [])
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  <==>  (size(this.children[]) == 1)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.children.getClass().getName() == java.util.ArrayList.class)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.children[] == [])
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.children[].getClass().getName() == [])
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.myChar == orig(arg0))
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.myChar one of { 45, 61 })
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.parent == orig(this))
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.parent.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.parent.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (return.parent.parent has only one value)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (this.children == return.parent.children)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (this.children.getClass().getName() == return.children.getClass().getName())
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (this.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (this.myChar == return.parent.myChar)
(this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode])  ==>  (this.parent == return.parent.parent)
this.valid == true
this.parent has only one value
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
return.myChar one of { 45, 61 }
return.children[] == []
return.children[].getClass().getName() == []
return.children.getClass().getName() == java.util.ArrayList.class
return.valid == false
return.parent.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode]
return.parent.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
return.parent.valid == true
return.parent.parent has only one value
size(return.parent.children[]) == 1
===========================================================================
sjm.parse.tokens.SymbolNode.findDescendant(java.lang.String):::ENTER
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
===========================================================================
sjm.parse.tokens.SymbolNode.findDescendant(java.lang.String):::EXIT136
this.myChar == return.parent.myChar
this.children == return.parent.children
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.valid == return.parent.valid
this.parent == return.parent.parent
return.parent == orig(this)
this.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode]
this.valid == true
this.parent has only one value
arg0.toString one of { "-", "=" }
size(this.children[]) == 1
===========================================================================
sjm.parse.tokens.SymbolNode.findDescendant(java.lang.String):::EXIT138
return.parent.parent == orig(this)
this.myChar == 0
this.children has only one value
this.children[] == []
this.children[].getClass().getName() == []
this.valid == false
this.parent == null
orig(this) has only one value
===========================================================================
sjm.parse.tokens.SymbolNode.findDescendant(java.lang.String):::EXIT
this.myChar == orig(this.myChar)
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.valid == orig(this.valid)
this.parent == orig(this.parent)
this.parent.myChar == orig(this.parent.myChar)
this.parent.children == orig(this.parent.children)
this.parent.children[] == orig(this.parent.children[])
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.valid == orig(this.parent.valid)
this.parent.parent == orig(this.parent.parent)
arg0.toString == orig(arg0.toString)
(this.myChar == 0)  <==>  (this.children[].getClass().getName() == [])
(this.myChar == 0)  <==>  (this.parent == null)
(this.myChar == 0)  <==>  (this.valid == false)
(this.myChar == 0)  ==>  (orig(this) has only one value)
(this.myChar == 0)  ==>  (return.parent.parent == orig(this))
(this.myChar == 0)  ==>  (this.children has only one value)
(this.myChar == 0)  ==>  (this.children[] == [])
this.parent.myChar == 0
this.parent.children has only one value
this.parent.children[] == []
this.parent.children[].getClass().getName() == []
this.parent.valid == false
this.parent.parent == null
return.myChar one of { 45, 61 }
return.children[] == []
return.children[].getClass().getName() == []
return.valid == false
return.parent.children[].getClass().getName() == [sjm.parse.tokens.SymbolNode]
return.parent.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
return.parent.valid == true
return.parent.parent has only one value
size(return.parent.children[]) == 1
this.myChar % return.parent.myChar == 0
this.myChar <= return.parent.myChar
===========================================================================
sjm.parse.tokens.SymbolNode.setValid(boolean):::ENTER
this.children[] == []
this.children[].getClass().getName() == []
this.valid == false
this.parent != null
arg0 == true
===========================================================================
sjm.parse.tokens.SymbolNode.setValid(boolean):::EXIT
this.myChar == orig(this.myChar)
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.valid == orig(arg0)
this.parent == orig(this.parent)
this.parent.myChar == orig(this.parent.myChar)
this.parent.children == orig(this.parent.children)
this.parent.children[] == orig(this.parent.children[])
this.parent.valid == orig(this.parent.valid)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.myChar == orig(this.parent.parent.myChar)
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children[] == orig(this.parent.parent.children[])
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.valid == orig(this.parent.parent.valid)
this.parent.parent.parent == orig(this.parent.parent.parent)
this.children[] == []
this.children[].getClass().getName() == []
this.valid == true
this.parent != null
===========================================================================
sjm.parse.tokens.SymbolRootNode:::OBJECT
this has only one value
this.rootsChildren has only one value
this.rootsChildren != null
this.rootsChildren.getClass().getName() == sjm.parse.tokens.SymbolNode[].class
this.rootsChildren[].getClass().getName() one of { [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode] }
this.rootsChildren[].myChar == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
this.rootsChildren[].myChar elements >= 0
this.rootsChildren[].myChar sorted by <
this.rootsChildren[].children contains no nulls and has only one value, of length 256
this.rootsChildren[].children elements != null
this.rootsChildren[].children.getClass().getName() one of { [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList] }
this.rootsChildren[].valid == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
this.rootsChildren[].valid elements == true
this.rootsChildren[].valid elements != null
this.rootsChildren[].parent contains no nulls and has only one value, of length 256
this.rootsChildren[].parent elements has only one value
this.rootsChildren[].parent elements != null
this.rootsChildren[].parent.myChar == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.rootsChildren[].parent.myChar elements == 0
this.rootsChildren[].parent.children contains no nulls and has only one value, of length 256
this.rootsChildren[].parent.children elements has only one value
this.rootsChildren[].parent.children elements != null
this.rootsChildren[].parent.children.getClass().getName() one of { [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject], [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList] }
this.rootsChildren[].parent.valid == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.rootsChildren[].parent.valid elements == false
this.rootsChildren[].parent.parent contains only nulls and has only one value, of length 256
this.rootsChildren[].parent.parent elements == null
this.myChar == 0
this.children has only one value
this.children != null
this.children[] == []
this.children[].getClass().getName() == []
this.children.getClass().getName() == java.util.ArrayList.class
this.valid == false
this.parent == null
size(this.rootsChildren[]) == 256
this.rootsChildren.getClass().getName() != this.children.getClass().getName()
size(this.rootsChildren[])-1 in this.rootsChildren[].myChar
this.rootsChildren[].myChar elements <= size(this.rootsChildren[])-1
this.myChar in this.rootsChildren[].parent.myChar
this.rootsChildren[].parent.myChar elements == this.myChar
this.children in this.rootsChildren[].parent.children
this.rootsChildren[].parent.children elements == this.children
this.rootsChildren[].parent.valid elements == this.valid
this.valid in this.rootsChildren[].parent.valid
===========================================================================
sjm.parse.tokens.SymbolRootNode.SymbolRootNode():::EXIT
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
===========================================================================
sjm.parse.tokens.SymbolRootNode.add(java.lang.String):::ENTER
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
===========================================================================
sjm.parse.tokens.SymbolRootNode.add(java.lang.String):::EXIT
this.rootsChildren == orig(this.rootsChildren)
this.rootsChildren.getClass().getName() == orig(this.rootsChildren.getClass().getName())
this.rootsChildren[] == orig(this.rootsChildren[])
this.rootsChildren[].myChar == orig(this.rootsChildren[].myChar)
this.rootsChildren[].children == orig(this.rootsChildren[].children)
this.rootsChildren[].valid == orig(this.rootsChildren[].valid)
this.rootsChildren[].parent == orig(this.rootsChildren[].parent)
this.rootsChildren[].parent.myChar == orig(this.rootsChildren[].parent.myChar)
this.rootsChildren[].parent.children == orig(this.rootsChildren[].parent.children)
this.rootsChildren[].parent.valid == orig(this.rootsChildren[].parent.valid)
this.rootsChildren[].parent.parent == orig(this.rootsChildren[].parent.parent)
this.myChar == orig(this.myChar)
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.valid == orig(this.valid)
this.parent == orig(this.parent)
arg0.toString == orig(arg0.toString)
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
===========================================================================
sjm.parse.tokens.SymbolRootNode.findChildWithChar(char):::ENTER
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
arg0 in this.rootsChildren[].myChar
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
arg0 < size(this.rootsChildren[])-1
===========================================================================
sjm.parse.tokens.SymbolRootNode.findChildWithChar(char):::EXIT
this.rootsChildren == orig(this.rootsChildren)
this.rootsChildren.getClass().getName() == orig(this.rootsChildren.getClass().getName())
this.rootsChildren[] == orig(this.rootsChildren[])
this.rootsChildren[].myChar == orig(this.rootsChildren[].myChar)
this.rootsChildren[].children == orig(this.rootsChildren[].children)
this.rootsChildren[].valid == orig(this.rootsChildren[].valid)
this.rootsChildren[].parent == orig(this.rootsChildren[].parent)
this.rootsChildren[].parent.myChar == orig(this.rootsChildren[].parent.myChar)
this.rootsChildren[].parent.children == orig(this.rootsChildren[].parent.children)
this.rootsChildren[].parent.valid == orig(this.rootsChildren[].parent.valid)
this.rootsChildren[].parent.parent == orig(this.rootsChildren[].parent.parent)
this.myChar == return.parent.myChar
this.myChar == orig(this.myChar)
this.children == return.parent.children
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.valid == return.parent.valid
this.valid == orig(this.valid)
this.parent == orig(this.parent)
return == this.rootsChildren[return.myChar]
return == this.rootsChildren[orig(arg0)]
return == orig(this.rootsChildren[post(arg0)])
return == orig(this.rootsChildren[post(return.myChar)])
return == orig(this.rootsChildren[arg0])
return.myChar == orig(arg0)
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
return.children[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
return.children[].getClass().getName() one of { [], [sjm.parse.tokens.SymbolNode] }
return.valid == true
return.parent has only one value
return.parent.children[] == []
return.parent.children[].getClass().getName() == []
return.parent.parent == null
size(return.children[]) one of { 0, 1 }
return.myChar in this.rootsChildren[].myChar
return.children in this.rootsChildren[].children
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
return.valid in this.rootsChildren[].valid
this.rootsChildren[].valid elements == return.valid
return.parent in this.rootsChildren[].parent
this.rootsChildren[].parent elements == return.parent
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
return.myChar < size(this.rootsChildren[])-1
===========================================================================
sjm.parse.tokens.SymbolRootNode.init():::ENTER
this.rootsChildren[] contains only nulls and has only one value, of length 256
this.rootsChildren[] elements == null
this.rootsChildren[].getClass().getName() == [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
this.rootsChildren[].getClass().getName() elements == null
this.rootsChildren[].children.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.rootsChildren[].children.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
this.rootsChildren[].parent.children.getClass().getName() == [daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject, daikon.chicory.NonsensicalObject]
this.rootsChildren[].parent.children.getClass().getName() elements == daikon.chicory.NonsensicalObject.class
===========================================================================
sjm.parse.tokens.SymbolRootNode.init():::EXIT
this.rootsChildren == orig(this.rootsChildren)
this.rootsChildren.getClass().getName() == orig(this.rootsChildren.getClass().getName())
this.myChar == orig(this.myChar)
this.children == orig(this.children)
this.children[] == orig(this.children[])
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.valid == orig(this.valid)
this.parent == orig(this.parent)
size(this.rootsChildren[]) == orig(size(this.rootsChildren[]))
this.rootsChildren[] contains no nulls and has only one value, of length 256
this.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.rootsChildren[].parent.children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.rootsChildren[].parent.children.getClass().getName() elements == java.util.ArrayList.class
this.children.getClass().getName() in this.rootsChildren[].children.getClass().getName()
this.children.getClass().getName() in this.rootsChildren[].parent.children.getClass().getName()
===========================================================================
sjm.parse.tokens.SymbolState:::OBJECT
this has only one value
this.symbols has only one value
this.symbols.rootsChildren has only one value
this.symbols.rootsChildren.getClass().getName() == sjm.parse.tokens.SymbolNode[].class
this.symbols.rootsChildren[] contains no nulls and has only one value, of length 256
this.symbols.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.symbols.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.symbols.rootsChildren[].myChar == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
this.symbols.rootsChildren[].myChar elements >= 0
this.symbols.rootsChildren[].myChar sorted by <
this.symbols.rootsChildren[].children contains no nulls and has only one value, of length 256
this.symbols.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.symbols.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.symbols.rootsChildren[].valid == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
this.symbols.rootsChildren[].valid elements == true
this.symbols.rootsChildren[].parent contains no nulls and has only one value, of length 256
this.symbols.rootsChildren[].parent elements has only one value
this.symbols.myChar == 0
this.symbols.children has only one value
this.symbols.children[] == []
this.symbols.children[].getClass().getName() == []
this.symbols.children.getClass().getName() == java.util.ArrayList.class
this.symbols.valid == false
this.symbols.parent == null
size(this.symbols.rootsChildren[]) == 256
this.symbols.rootsChildren.getClass().getName() != this.symbols.children.getClass().getName()
size(this.symbols.rootsChildren[])-1 in this.symbols.rootsChildren[].myChar
this.symbols.rootsChildren[].myChar elements <= size(this.symbols.rootsChildren[])-1
this.symbols.children.getClass().getName() in this.symbols.rootsChildren[].children.getClass().getName()
===========================================================================
sjm.parse.tokens.SymbolState.SymbolState():::EXIT
===========================================================================
sjm.parse.tokens.SymbolState.add(java.lang.String):::ENTER
===========================================================================
sjm.parse.tokens.SymbolState.add(java.lang.String):::EXIT
this.symbols == orig(this.symbols)
this.symbols.rootsChildren == orig(this.symbols.rootsChildren)
this.symbols.rootsChildren.getClass().getName() == orig(this.symbols.rootsChildren.getClass().getName())
this.symbols.rootsChildren[] == orig(this.symbols.rootsChildren[])
this.symbols.rootsChildren[].myChar == orig(this.symbols.rootsChildren[].myChar)
this.symbols.rootsChildren[].children == orig(this.symbols.rootsChildren[].children)
this.symbols.rootsChildren[].valid == orig(this.symbols.rootsChildren[].valid)
this.symbols.rootsChildren[].parent == orig(this.symbols.rootsChildren[].parent)
this.symbols.myChar == orig(this.symbols.myChar)
this.symbols.children == orig(this.symbols.children)
this.symbols.children[] == orig(this.symbols.children[])
this.symbols.children.getClass().getName() == orig(this.symbols.children.getClass().getName())
this.symbols.valid == orig(this.symbols.valid)
this.symbols.parent == orig(this.symbols.parent)
arg0.toString == orig(arg0.toString)
===========================================================================
sjm.parse.tokens.Token:::CLASS
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF != null
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name != null
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF != null
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.ttype != null
sjm.parse.tokens.Token.EOF.ttype.name has only one value
sjm.parse.tokens.Token.EOF.ttype.name != null
sjm.parse.tokens.Token.EOF.ttype.name.toString == "eof"
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval != null
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.EOF.nval != null
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_NUMBER != null
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_WORD != null
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_SYMBOL != null
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_QUOTED != null
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_WHITESPACE != null
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name != null
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name != null
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name != null
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name != null
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name != null
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
===========================================================================
sjm.parse.tokens.Token:::OBJECT
this.ttype != null
this.ttype.name != null
this.ttype.name.toString one of { "eof", "word" }
this.sval != null
this.nval has only one value
this.nval != null
this.nval.getClass().getName() == java.math.BigDecimal.class
===========================================================================
sjm.parse.tokens.Token.Token(java.lang.String):::ENTER
===========================================================================
sjm.parse.tokens.Token.Token(java.lang.String):::EXIT
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.sval == orig(arg0)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
arg0.toString == orig(arg0.toString)
this.ttype.name has only one value
this.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Token.Token(sjm.parse.tokens.TokenType, java.lang.String, java.lang.Number):::ENTER
arg0 != null
arg0.name != null
arg0.name.toString one of { "eof", "word" }
arg1 != null
arg2 has only one value
arg2 != null
arg2.getClass().getName() == java.math.BigDecimal.class
===========================================================================
sjm.parse.tokens.Token.Token(sjm.parse.tokens.TokenType, java.lang.String, java.lang.Number):::EXIT
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.ttype == orig(arg0)
this.ttype.name == arg0.name
this.sval == orig(arg1)
this.nval == orig(arg2)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.nval.getClass().getName() == orig(arg2.getClass().getName())
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg1.toString == orig(arg1.toString)
arg0.name != null
arg0.name.toString one of { "eof", "word" }
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::ENTER
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
this.ttype.name has only one value
this.ttype.name.toString == "word"
arg0.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT174
(this.sval.toString one of { "at", "carrier", "place" })  <==>  (return == true)
(this.sval.toString one of { "pick", "scan" })  <==>  (return == false)
(this.sval.toString one of { "pick", "scan" })  ==>  (orig(arg0) has only one value)
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT174;condition="return == true"
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT174;condition="not(return == true)"
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.ttype.name == orig(this.ttype.name)
this.ttype.name.toString == orig(this.ttype.name.toString)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.nval == orig(this.nval)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.nval.getClass().getName() == orig(this.nval.getClass().getName())
this.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.EOF.ttype.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.ttype.name.toString == orig(sjm.parse.tokens.Token.EOF.ttype.name.toString)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(this.ttype)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
(this.sval.toString one of { "at", "carrier", "place" })  <==>  (return == true)
(this.sval.toString one of { "pick", "scan" })  <==>  (return == false)
(this.sval.toString one of { "pick", "scan" })  ==>  (orig(arg0) has only one value)
this.ttype.name has only one value
this.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT;condition="return == true"
this.sval.toString one of { "at", "carrier", "place" }
return == true
===========================================================================
sjm.parse.tokens.Token.equalsIgnoreCase(java.lang.Object):::EXIT;condition="not(return == true)"
this.sval.toString one of { "pick", "scan" }
return == false
orig(arg0) has only one value
===========================================================================
sjm.parse.tokens.Token.isWord():::ENTER
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
this has only one value
this.ttype.name has only one value
this.ttype.name.toString == "word"
this.sval has only one value
this.sval.toString == "WB500_IN"
===========================================================================
sjm.parse.tokens.Token.isWord():::EXIT
this.ttype == sjm.parse.tokens.Token.TT_WORD
this.ttype.name == orig(this.ttype.name)
this.ttype.name.toString == orig(this.ttype.name.toString)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.nval == orig(this.nval)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.nval.getClass().getName() == orig(this.nval.getClass().getName())
this.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.EOF.ttype.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.ttype.name.toString == orig(sjm.parse.tokens.Token.EOF.ttype.name.toString)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(this.ttype)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
this.ttype.name has only one value
this.ttype.name.toString == "word"
this.sval has only one value
this.sval.toString == "WB500_IN"
return == true
===========================================================================
sjm.parse.tokens.Token.isWord():::EXIT;condition="return == true"
===========================================================================
sjm.parse.tokens.Token.toString():::ENTER
this.ttype has only one value
this.ttype.name has only one value
this.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Token.toString():::EXIT245
===========================================================================
sjm.parse.tokens.Token.toString():::EXIT
this.ttype == orig(this.ttype)
this.ttype.name == orig(this.ttype.name)
this.ttype.name.toString == orig(this.ttype.name.toString)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.nval == orig(this.nval)
this.nval.getClass().getName() == orig(this.nval.getClass().getName())
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.ttype.name == orig(sjm.parse.tokens.Token.EOF.ttype.name)
sjm.parse.tokens.Token.EOF.ttype.name.toString == orig(sjm.parse.tokens.Token.EOF.ttype.name.toString)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.EOF.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
this.ttype has only one value
this.ttype.name has only one value
this.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Token.ttype():::ENTER
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
===========================================================================
sjm.parse.tokens.Token.ttype():::EXIT
this.ttype == return
this.ttype.name == return.name
this.ttype.name.toString == orig(this.ttype.name.toString)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.nval == orig(this.nval)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.nval.getClass().getName() == orig(this.nval.getClass().getName())
this.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == sjm.parse.tokens.Token.EOF.ttype.name
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.EOF.ttype.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.ttype.name.toString == orig(sjm.parse.tokens.Token.EOF.ttype.name.toString)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
return == orig(this.ttype)
return.name == orig(this.ttype.name)
return.name.toString one of { "eof", "word" }
===========================================================================
sjm.parse.tokens.Token.value():::ENTER
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.ttype has only one value
this.ttype.name has only one value
this.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Token.value():::EXIT271
===========================================================================
sjm.parse.tokens.Token.value():::EXIT
this.ttype == orig(this.ttype)
this.ttype.name == orig(this.ttype.name)
this.ttype.name.toString == orig(this.ttype.name.toString)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.nval == orig(this.nval)
this.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.nval.getClass().getName() == orig(this.nval.getClass().getName())
this.nval.getClass().getName() == orig(sjm.parse.tokens.Token.EOF.nval.getClass().getName())
sjm.parse.tokens.Token.TT_EOF == orig(sjm.parse.tokens.Token.TT_EOF)
sjm.parse.tokens.Token.TT_EOF.name == orig(sjm.parse.tokens.Token.TT_EOF.name)
sjm.parse.tokens.Token.TT_EOF.name.toString == orig(sjm.parse.tokens.Token.TT_EOF.name.toString)
sjm.parse.tokens.Token.EOF == orig(sjm.parse.tokens.Token.EOF)
sjm.parse.tokens.Token.EOF.ttype == orig(sjm.parse.tokens.Token.EOF.ttype)
sjm.parse.tokens.Token.EOF.ttype.name == orig(sjm.parse.tokens.Token.EOF.ttype.name)
sjm.parse.tokens.Token.EOF.ttype.name.toString == orig(sjm.parse.tokens.Token.EOF.ttype.name.toString)
sjm.parse.tokens.Token.EOF.sval == orig(sjm.parse.tokens.Token.EOF.sval)
sjm.parse.tokens.Token.EOF.sval.toString == orig(sjm.parse.tokens.Token.EOF.sval.toString)
sjm.parse.tokens.Token.EOF.nval == orig(sjm.parse.tokens.Token.EOF.nval)
sjm.parse.tokens.Token.TT_NUMBER == orig(sjm.parse.tokens.Token.TT_NUMBER)
sjm.parse.tokens.Token.TT_WORD == orig(sjm.parse.tokens.Token.TT_WORD)
sjm.parse.tokens.Token.TT_SYMBOL == orig(sjm.parse.tokens.Token.TT_SYMBOL)
sjm.parse.tokens.Token.TT_QUOTED == orig(sjm.parse.tokens.Token.TT_QUOTED)
sjm.parse.tokens.Token.TT_WHITESPACE == orig(sjm.parse.tokens.Token.TT_WHITESPACE)
sjm.parse.tokens.Token.TT_NUMBER.name == orig(sjm.parse.tokens.Token.TT_NUMBER.name)
sjm.parse.tokens.Token.TT_NUMBER.name.toString == orig(sjm.parse.tokens.Token.TT_NUMBER.name.toString)
sjm.parse.tokens.Token.TT_WORD.name == orig(sjm.parse.tokens.Token.TT_WORD.name)
sjm.parse.tokens.Token.TT_WORD.name.toString == orig(sjm.parse.tokens.Token.TT_WORD.name.toString)
sjm.parse.tokens.Token.TT_SYMBOL.name == orig(sjm.parse.tokens.Token.TT_SYMBOL.name)
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == orig(sjm.parse.tokens.Token.TT_SYMBOL.name.toString)
sjm.parse.tokens.Token.TT_QUOTED.name == orig(sjm.parse.tokens.Token.TT_QUOTED.name)
sjm.parse.tokens.Token.TT_QUOTED.name.toString == orig(sjm.parse.tokens.Token.TT_QUOTED.name.toString)
sjm.parse.tokens.Token.TT_WHITESPACE.name == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name)
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == orig(sjm.parse.tokens.Token.TT_WHITESPACE.name.toString)
this.ttype has only one value
this.ttype.name has only one value
this.ttype.name.toString == "word"
return.getClass().getName() == java.lang.String.class
this.nval.getClass().getName() != return.getClass().getName()
===========================================================================
sjm.parse.tokens.TokenAssembly:::OBJECT
this.tokenString has only one value
this.tokenString != null
this.tokenString.tokens has only one value
this.tokenString.tokens != null
this.tokenString.tokens.getClass().getName() == sjm.parse.tokens.Token[].class
this.tokenString.tokens[] contains no nulls and has only one value, of length 4
this.tokenString.tokens[] elements != null
this.tokenString.tokens[].getClass().getName() == [sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token]
this.tokenString.tokens[].getClass().getName() elements == sjm.parse.tokens.Token.class
this.tokenString.tokens[].ttype contains no nulls and has only one value, of length 4
this.tokenString.tokens[].ttype elements has only one value
this.tokenString.tokens[].ttype elements != null
this.tokenString.tokens[].sval contains no nulls and has only one value, of length 4
this.tokenString.tokens[].sval elements != null
this.tokenString.tokens[].sval.toString == [place, carrier, at, WB500_IN]
this.tokenString.tokens[].nval contains no nulls and has only one value, of length 4
this.tokenString.tokens[].nval elements has only one value
this.tokenString.tokens[].nval elements != null
this.tokenString.tokens[].nval.getClass().getName() == [java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal]
this.tokenString.tokens[].nval.getClass().getName() elements == java.math.BigDecimal.class
this.stack != null
this.target == null
this.index >= 0
this.stackSizesBeforeMatch != null
size(this.tokenString.tokens[]) == 4
this.index <= size(this.tokenString.tokens[])
===========================================================================
sjm.parse.tokens.TokenAssembly.TokenAssembly(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.TokenAssembly.TokenAssembly(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.stack has only one value
this.index == 0
this.stackSizesBeforeMatch has only one value
arg0.toString == "place carrier at WB500_IN"
this.tokenString.tokens[this.index] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.TokenAssembly(sjm.parse.tokens.TokenString):::ENTER
arg0 has only one value
arg0.tokens has only one value
arg0.tokens.getClass().getName() == sjm.parse.tokens.Token[].class
arg0.tokens[] contains no nulls and has only one value, of length 4
arg0.tokens[].getClass().getName() == [sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token]
arg0.tokens[].getClass().getName() elements == sjm.parse.tokens.Token.class
arg0.tokens[].ttype contains no nulls and has only one value, of length 4
arg0.tokens[].ttype elements has only one value
arg0.tokens[].sval contains no nulls and has only one value, of length 4
arg0.tokens[].sval.toString == [place, carrier, at, WB500_IN]
arg0.tokens[].nval contains no nulls and has only one value, of length 4
arg0.tokens[].nval elements has only one value
arg0.tokens[].nval.getClass().getName() == [java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal]
arg0.tokens[].nval.getClass().getName() elements == java.math.BigDecimal.class
size(arg0.tokens[]) == 4
===========================================================================
sjm.parse.tokens.TokenAssembly.TokenAssembly(sjm.parse.tokens.TokenString):::EXIT
this.tokenString == orig(arg0)
this.tokenString.tokens == arg0.tokens
this.tokenString.tokens.getClass().getName() == arg0.tokens.getClass().getName()
this.tokenString.tokens[] == arg0.tokens[]
arg0.tokens == orig(arg0.tokens)
arg0.tokens.getClass().getName() == orig(arg0.tokens.getClass().getName())
arg0.tokens[] == orig(arg0.tokens[])
arg0.tokens[].ttype == orig(arg0.tokens[].ttype)
arg0.tokens[].sval == orig(arg0.tokens[].sval)
arg0.tokens[].nval == orig(arg0.tokens[].nval)
this.stack has only one value
this.index == 0
this.stackSizesBeforeMatch has only one value
arg0.tokens has only one value
arg0.tokens.getClass().getName() == sjm.parse.tokens.Token[].class
arg0.tokens[] contains no nulls and has only one value, of length 4
arg0.tokens[].getClass().getName() == [sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token]
arg0.tokens[].getClass().getName() elements == sjm.parse.tokens.Token.class
arg0.tokens[].ttype contains no nulls and has only one value, of length 4
arg0.tokens[].ttype elements has only one value
arg0.tokens[].sval contains no nulls and has only one value, of length 4
arg0.tokens[].sval.toString == [place, carrier, at, WB500_IN]
arg0.tokens[].nval contains no nulls and has only one value, of length 4
arg0.tokens[].nval elements has only one value
arg0.tokens[].nval.getClass().getName() == [java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal]
arg0.tokens[].nval.getClass().getName() elements == java.math.BigDecimal.class
size(arg0.tokens[]) == 4
arg0.tokens[this.index] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.consumed(java.lang.String):::ENTER
this.index == size(this.tokenString.tokens[])
this has only one value
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
arg0 has only one value
arg0.toString == "/"
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.consumed(java.lang.String):::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.index == size(this.tokenString.tokens[])
this.index == orig(size(this.tokenString.tokens[]))
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
arg0.toString == orig(arg0.toString)
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
arg0.toString == "/"
return has only one value
return.toString == "Token:place/Token:carrier/Token:at/Token:WB500_IN"
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.defaultDelimiter():::ENTER
this.index == size(this.tokenString.tokens[])
this has only one value
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.defaultDelimiter():::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.index == size(this.tokenString.tokens[])
this.index == orig(size(this.tokenString.tokens[]))
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
return has only one value
return.toString == "/"
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.length():::ENTER
===========================================================================
sjm.parse.tokens.TokenAssembly.length():::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
return == size(this.tokenString.tokens[])
return == orig(size(this.tokenString.tokens[]))
return == 4
this.tokenString.tokens[return-1] has only one value
this.index <= return
===========================================================================
sjm.parse.tokens.TokenAssembly.next():::ENTER
===========================================================================
sjm.parse.tokens.TokenAssembly.next():::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
return == this.tokenString.tokens[this.index-1]
this.tokenString.tokens[this.index-1] == this.tokenString.tokens[orig(this.index)]
this.tokenString.tokens[this.index-1] == orig(this.tokenString.tokens[this.index])
return.getClass().getName() == sjm.parse.tokens.Token.class
return in this.tokenString.tokens[]
return.getClass().getName() in this.tokenString.tokens[].getClass().getName()
this.index - orig(this.index) - 1 == 0
===========================================================================
sjm.parse.tokens.TokenAssembly.peek():::ENTER
===========================================================================
sjm.parse.tokens.TokenAssembly.peek():::EXIT133
===========================================================================
sjm.parse.tokens.TokenAssembly.peek():::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
return == this.tokenString.tokens[this.index]
return.getClass().getName() == sjm.parse.tokens.Token.class
return in this.tokenString.tokens[]
return.getClass().getName() in this.tokenString.tokens[].getClass().getName()
===========================================================================
sjm.parse.tokens.TokenAssembly.remainder(java.lang.String):::ENTER
this.index == size(this.tokenString.tokens[])
this has only one value
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
arg0 has only one value
arg0.toString == "/"
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenAssembly.remainder(java.lang.String):::EXIT
this.tokenString == orig(this.tokenString)
this.tokenString.tokens == orig(this.tokenString.tokens)
this.tokenString.tokens.getClass().getName() == orig(this.tokenString.tokens.getClass().getName())
this.tokenString.tokens[] == orig(this.tokenString.tokens[])
this.tokenString.tokens[].ttype == orig(this.tokenString.tokens[].ttype)
this.tokenString.tokens[].sval == orig(this.tokenString.tokens[].sval)
this.tokenString.tokens[].nval == orig(this.tokenString.tokens[].nval)
this.stack == orig(this.stack)
this.target == orig(this.target)
this.index == orig(this.index)
this.index == size(this.tokenString.tokens[])
this.index == orig(size(this.tokenString.tokens[]))
this.stackSizesBeforeMatch == orig(this.stackSizesBeforeMatch)
arg0.toString == orig(arg0.toString)
this.stack has only one value
this.index == 4
this.stackSizesBeforeMatch has only one value
arg0.toString == "/"
return has only one value
return.toString == ""
this.tokenString.tokens[this.index-1] has only one value
===========================================================================
sjm.parse.tokens.TokenString:::OBJECT
this has only one value
this.tokens has only one value
this.tokens != null
this.tokens.getClass().getName() == sjm.parse.tokens.Token[].class
this.tokens[] contains no nulls and has only one value, of length 4
this.tokens[] elements != null
this.tokens[].getClass().getName() == [sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token, sjm.parse.tokens.Token]
this.tokens[].getClass().getName() elements == sjm.parse.tokens.Token.class
this.tokens[].ttype contains no nulls and has only one value, of length 4
this.tokens[].ttype elements has only one value
this.tokens[].ttype elements != null
this.tokens[].ttype.name contains no nulls and has only one value, of length 4
this.tokens[].ttype.name elements has only one value
this.tokens[].ttype.name elements != null
this.tokens[].ttype.name.toString == [word, word, word, word]
this.tokens[].ttype.name.toString elements == "word"
this.tokens[].sval contains no nulls and has only one value, of length 4
this.tokens[].sval elements != null
this.tokens[].sval.toString == [place, carrier, at, WB500_IN]
this.tokens[].nval contains no nulls and has only one value, of length 4
this.tokens[].nval elements has only one value
this.tokens[].nval elements != null
this.tokens[].nval.getClass().getName() == [java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal, java.math.BigDecimal]
this.tokens[].nval.getClass().getName() elements == java.math.BigDecimal.class
size(this.tokens[]) == 4
===========================================================================
sjm.parse.tokens.TokenString.TokenString(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.TokenString.TokenString(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.TokenString.TokenString(sjm.parse.tokens.ITokenizer):::ENTER
arg0 has only one value
arg0.getClass().getName() == sjm.parse.tokens.Tokenizer.class
===========================================================================
sjm.parse.tokens.TokenString.TokenString(sjm.parse.tokens.ITokenizer):::EXIT
===========================================================================
sjm.parse.tokens.TokenString.length():::ENTER
===========================================================================
sjm.parse.tokens.TokenString.length():::EXIT
this.tokens == orig(this.tokens)
this.tokens.getClass().getName() == orig(this.tokens.getClass().getName())
this.tokens[] == orig(this.tokens[])
this.tokens[].ttype == orig(this.tokens[].ttype)
this.tokens[].ttype.name == orig(this.tokens[].ttype.name)
this.tokens[].sval == orig(this.tokens[].sval)
this.tokens[].nval == orig(this.tokens[].nval)
return == size(this.tokens[])
return == orig(size(this.tokens[]))
return == 4
this.tokens[return-1] has only one value
===========================================================================
sjm.parse.tokens.TokenString.tokenAt(int):::ENTER
arg0 >= 0
arg0 <= size(this.tokens[])-1
===========================================================================
sjm.parse.tokens.TokenString.tokenAt(int):::EXIT
this.tokens == orig(this.tokens)
this.tokens.getClass().getName() == orig(this.tokens.getClass().getName())
this.tokens[] == orig(this.tokens[])
this.tokens[].ttype == orig(this.tokens[].ttype)
this.tokens[].ttype.name == orig(this.tokens[].ttype.name)
this.tokens[].sval == orig(this.tokens[].sval)
this.tokens[].nval == orig(this.tokens[].nval)
return == this.tokens[orig(arg0)]
return == orig(this.tokens[post(arg0)])
return == orig(this.tokens[arg0])
return.ttype == sjm.parse.tokens.Token.TT_WORD
return.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
return.ttype.name has only one value
return.ttype.name != null
return.ttype.name.toString == "word"
return.sval != null
return.nval has only one value
return.nval != null
return.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF != null
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name != null
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF != null
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.ttype != null
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval != null
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.EOF.nval != null
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_NUMBER != null
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_WORD != null
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_SYMBOL != null
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_QUOTED != null
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_WHITESPACE != null
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name != null
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name != null
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name != null
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name != null
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name != null
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
this.tokens.getClass().getName() != return.nval.getClass().getName()
sjm.parse.tokens.Token.TT_WORD in this.tokens[].ttype
this.tokens[].ttype elements == sjm.parse.tokens.Token.TT_WORD
return.ttype.name in this.tokens[].ttype.name
this.tokens[].ttype.name elements == return.ttype.name
return.sval in this.tokens[].sval
return.nval in this.tokens[].nval
this.tokens[].nval elements == return.nval
return.nval.getClass().getName() in this.tokens[].nval.getClass().getName()
orig(arg0) <= size(this.tokens[])-1
===========================================================================
sjm.parse.tokens.TokenType:::OBJECT
===========================================================================
sjm.parse.tokens.TokenType.TokenType(java.lang.String):::ENTER
===========================================================================
sjm.parse.tokens.TokenType.TokenType(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
===========================================================================
sjm.parse.tokens.Tokenizer:::CLASS
===========================================================================
sjm.parse.tokens.Tokenizer:::OBJECT
this has only one value
this.characterStates has only one value
this.characterStates != null
this.characterStates.getClass().getName() == java.util.HashMap.class
this.numberState has only one value
this.numberState != null
this.numberState.c == 0
this.numberState.value == null
this.numberState.absorbedLeadingMinus == false
this.numberState.absorbedDot == false
this.numberState.gotAdigit == false
this.quoteState has only one value
this.quoteState != null
this.quoteState.charbuf has only one value
this.quoteState.charbuf != null
this.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.quoteState.charbuf[] elements == 0
this.slashState has only one value
this.slashState != null
this.slashState.slashStarState has only one value
this.slashState.slashStarState != null
this.slashState.slashSlashState has only one value
this.slashState.slashSlashState != null
this.symbolState has only one value
this.symbolState != null
this.symbolState.symbols has only one value
this.symbolState.symbols != null
this.symbolState.symbols.rootsChildren has only one value
this.symbolState.symbols.rootsChildren != null
this.symbolState.symbols.rootsChildren.getClass().getName() == sjm.parse.tokens.SymbolNode[].class
this.symbolState.symbols.rootsChildren[] contains no nulls and has only one value, of length 256
this.symbolState.symbols.rootsChildren[] elements != null
this.symbolState.symbols.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
this.symbolState.symbols.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
this.symbolState.symbols.rootsChildren[].myChar == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
this.symbolState.symbols.rootsChildren[].myChar elements >= 0
this.symbolState.symbols.rootsChildren[].myChar sorted by <
this.symbolState.symbols.rootsChildren[].children contains no nulls and has only one value, of length 256
this.symbolState.symbols.rootsChildren[].children elements != null
this.symbolState.symbols.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
this.symbolState.symbols.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
this.symbolState.symbols.rootsChildren[].valid == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
this.symbolState.symbols.rootsChildren[].valid elements == true
this.symbolState.symbols.rootsChildren[].valid elements != null
this.symbolState.symbols.rootsChildren[].parent contains no nulls and has only one value, of length 256
this.symbolState.symbols.rootsChildren[].parent elements has only one value
this.symbolState.symbols.rootsChildren[].parent elements != null
this.symbolState.symbols.myChar == 0
this.symbolState.symbols.children has only one value
this.symbolState.symbols.children != null
this.symbolState.symbols.children[] == []
this.symbolState.symbols.children[].getClass().getName() == []
this.symbolState.symbols.children.getClass().getName() == java.util.ArrayList.class
this.symbolState.symbols.valid == false
this.symbolState.symbols.parent == null
this.whitespaceState has only one value
this.whitespaceState != null
this.whitespaceState.whitespaceChar has only one value
this.whitespaceState.whitespaceChar != null
this.whitespaceState.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.whitespaceState.whitespaceTokensEnabled == false
this.wordState has only one value
this.wordState != null
this.wordState.wordChars has only one value
this.wordState.wordChars != null
this.wordState.wordChars.getClass().getName() == java.util.HashSet.class
size(this.quoteState.charbuf[]) == 16
size(this.symbolState.symbols.rootsChildren[]) == 256
size(this.whitespaceState.whitespaceChar[]) == 256
this.characterStates.getClass().getName() != this.symbolState.symbols.rootsChildren.getClass().getName()
this.characterStates.getClass().getName() != this.symbolState.symbols.children.getClass().getName()
this.characterStates.getClass().getName() != this.wordState.wordChars.getClass().getName()
this.symbolState.symbols.rootsChildren.getClass().getName() != this.symbolState.symbols.children.getClass().getName()
this.symbolState.symbols.rootsChildren.getClass().getName() != this.wordState.wordChars.getClass().getName()
size(this.symbolState.symbols.rootsChildren[])-1 in this.symbolState.symbols.rootsChildren[].myChar
this.symbolState.symbols.rootsChildren[].myChar elements <= size(this.symbolState.symbols.rootsChildren[])-1
this.symbolState.symbols.children.getClass().getName() in this.symbolState.symbols.rootsChildren[].children.getClass().getName()
this.symbolState.symbols.children.getClass().getName() != this.wordState.wordChars.getClass().getName()
===========================================================================
sjm.parse.tokens.Tokenizer.Tokenizer():::EXIT
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.Tokenizer(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.Tokenizer.Tokenizer(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.reader has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.Tokenizer.getCharacterState(int):::ENTER
this.reader has only one value
arg0 < size(this.whitespaceState.whitespaceChar[])-1
===========================================================================
sjm.parse.tokens.Tokenizer.getCharacterState(int):::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
this.reader has only one value
this.characterStates.getClass().getName() != return.getClass().getName()
this.symbolState.symbols.rootsChildren.getClass().getName() != return.getClass().getName()
this.symbolState.symbols.children.getClass().getName() != return.getClass().getName()
this.wordState.wordChars.getClass().getName() != return.getClass().getName()
orig(arg0) < size(this.whitespaceState.whitespaceChar[])-1
===========================================================================
sjm.parse.tokens.Tokenizer.nextToken():::ENTER
this.reader has only one value
===========================================================================
sjm.parse.tokens.Tokenizer.nextToken():::EXIT153
return.ttype == sjm.parse.tokens.Token.TT_WORD
return.ttype.name has only one value
return.ttype.name.toString == "word"
===========================================================================
sjm.parse.tokens.Tokenizer.nextToken():::EXIT155
return == sjm.parse.tokens.Token.EOF
return.ttype == sjm.parse.tokens.Token.TT_EOF
return has only one value
return.ttype.name has only one value
return.ttype.name.toString == "eof"
return.sval has only one value
return.sval.toString == ""
===========================================================================
sjm.parse.tokens.Tokenizer.nextToken():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
(return.ttype.name.toString == "eof")  ==>  (return == sjm.parse.tokens.Token.EOF)
(return.ttype.name.toString == "eof")  ==>  (return has only one value)
(return.ttype.name.toString == "eof")  ==>  (return.sval has only one value)
(return.ttype.name.toString == "eof")  ==>  (return.sval.toString == "")
(return.ttype.name.toString == "eof")  ==>  (return.ttype == sjm.parse.tokens.Token.TT_EOF)
(return.ttype.name.toString == "word")  ==>  (return.ttype == sjm.parse.tokens.Token.TT_WORD)
this.reader has only one value
return.ttype.name.toString one of { "eof", "word" }
return.nval has only one value
return.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
this.characterStates.getClass().getName() != return.nval.getClass().getName()
this.symbolState.symbols.rootsChildren.getClass().getName() != return.nval.getClass().getName()
this.symbolState.symbols.children.getClass().getName() != return.nval.getClass().getName()
this.wordState.wordChars.getClass().getName() != return.nval.getClass().getName()
===========================================================================
sjm.parse.tokens.Tokenizer.numberState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.numberState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == return
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return == orig(this.numberState)
this.reader == null
return has only one value
return.c == 0
return.value == null
return.absorbedLeadingMinus == false
return.absorbedDot == false
return.gotAdigit == false
===========================================================================
sjm.parse.tokens.Tokenizer.quoteState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.quoteState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == return
this.quoteState.charbuf == return.charbuf
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return == orig(this.quoteState)
return.charbuf == orig(this.quoteState.charbuf)
this.reader == null
return has only one value
return.charbuf has only one value
return.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
return.charbuf[] elements == 0
size(return.charbuf[]) == 16
===========================================================================
sjm.parse.tokens.Tokenizer.setCharacterState(int, int, sjm.parse.tokens.TokenizerState):::ENTER
this.reader == null
this.characterStates.getClass().getName() != arg2.getClass().getName()
this.symbolState.symbols.rootsChildren.getClass().getName() != arg2.getClass().getName()
this.symbolState.symbols.children.getClass().getName() != arg2.getClass().getName()
this.wordState.wordChars.getClass().getName() != arg2.getClass().getName()
arg0 <= arg1
===========================================================================
sjm.parse.tokens.Tokenizer.setCharacterState(int, int, sjm.parse.tokens.TokenizerState):::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
this.reader == null
this.characterStates.getClass().getName() != orig(arg2.getClass().getName())
this.symbolState.symbols.rootsChildren.getClass().getName() != orig(arg2.getClass().getName())
this.symbolState.symbols.children.getClass().getName() != orig(arg2.getClass().getName())
this.wordState.wordChars.getClass().getName() != orig(arg2.getClass().getName())
===========================================================================
sjm.parse.tokens.Tokenizer.setReader(java.io.PushbackReader):::ENTER
this.reader == null
arg0 has only one value
===========================================================================
sjm.parse.tokens.Tokenizer.setReader(java.io.PushbackReader):::EXIT
this.reader == orig(arg0)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
this.reader has only one value
===========================================================================
sjm.parse.tokens.Tokenizer.setString(java.lang.String):::ENTER
this.reader == null
arg0 has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.Tokenizer.setString(java.lang.String):::EXIT
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
arg0.toString == orig(arg0.toString)
this.reader has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.Tokenizer.setString(java.lang.String, int):::ENTER
this.reader == null
arg0 has only one value
arg0.toString == "place carrier at WB500_IN"
arg1 == 4
===========================================================================
sjm.parse.tokens.Tokenizer.setString(java.lang.String, int):::EXIT
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
arg0.toString == orig(arg0.toString)
this.reader has only one value
arg0.toString == "place carrier at WB500_IN"
===========================================================================
sjm.parse.tokens.Tokenizer.slashState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.slashState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == return
this.slashState.slashStarState == return.slashStarState
this.slashState.slashSlashState == return.slashSlashState
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return == orig(this.slashState)
return.slashStarState == orig(this.slashState.slashStarState)
return.slashSlashState == orig(this.slashState.slashSlashState)
this.reader == null
return has only one value
return.slashStarState has only one value
return.slashSlashState has only one value
===========================================================================
sjm.parse.tokens.Tokenizer.symbolState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.symbolState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == return
this.symbolState.symbols == return.symbols
this.symbolState.symbols.rootsChildren == return.symbols.rootsChildren
this.symbolState.symbols.rootsChildren.getClass().getName() == return.symbols.rootsChildren.getClass().getName()
this.symbolState.symbols.rootsChildren[] == return.symbols.rootsChildren[]
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == return.symbols.myChar
this.symbolState.symbols.children == return.symbols.children
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == return.symbols.children.getClass().getName()
this.symbolState.symbols.valid == return.symbols.valid
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return == orig(this.symbolState)
return.symbols == orig(this.symbolState.symbols)
return.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
return.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
return.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
return.symbols.myChar == orig(this.symbolState.symbols.myChar)
return.symbols.children == orig(this.symbolState.symbols.children)
return.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
return.symbols.valid == orig(this.symbolState.symbols.valid)
this.reader == null
return has only one value
return.symbols has only one value
return.symbols.rootsChildren has only one value
return.symbols.rootsChildren.getClass().getName() == sjm.parse.tokens.SymbolNode[].class
return.symbols.rootsChildren[] contains no nulls and has only one value, of length 256
return.symbols.rootsChildren[].getClass().getName() == [sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode, sjm.parse.tokens.SymbolNode]
return.symbols.rootsChildren[].getClass().getName() elements == sjm.parse.tokens.SymbolNode.class
return.symbols.rootsChildren[].myChar == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]
return.symbols.rootsChildren[].children contains no nulls and has only one value, of length 256
return.symbols.rootsChildren[].children.getClass().getName() == [java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList]
return.symbols.rootsChildren[].children.getClass().getName() elements == java.util.ArrayList.class
return.symbols.rootsChildren[].valid == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
return.symbols.rootsChildren[].valid elements == true
return.symbols.rootsChildren[].parent contains no nulls and has only one value, of length 256
return.symbols.rootsChildren[].parent elements has only one value
return.symbols.myChar == 0
return.symbols.children has only one value
return.symbols.children[] == []
return.symbols.children[].getClass().getName() == []
return.symbols.children.getClass().getName() == java.util.ArrayList.class
return.symbols.valid == false
return.symbols.parent == null
size(return.symbols.rootsChildren[]) == 256
size(return.symbols.rootsChildren[])-1 in this.symbolState.symbols.rootsChildren[].myChar
return.symbols.children.getClass().getName() in this.symbolState.symbols.rootsChildren[].children.getClass().getName()
size(return.symbols.rootsChildren[])-1 in return.symbols.rootsChildren[].myChar
return.symbols.children.getClass().getName() in return.symbols.rootsChildren[].children.getClass().getName()
===========================================================================
sjm.parse.tokens.Tokenizer.whitespaceState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.whitespaceState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == return
this.whitespaceState.whitespaceChar == return.whitespaceChar
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == return.whitespaceTokensEnabled
this.wordState == orig(this.wordState)
this.wordState.wordChars == orig(this.wordState.wordChars)
this.wordState.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
return == orig(this.whitespaceState)
return.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
return.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.reader == null
return has only one value
return.whitespaceChar has only one value
return.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
return.whitespaceTokensEnabled == false
size(return.whitespaceChar[]) == 256
===========================================================================
sjm.parse.tokens.Tokenizer.wordState():::ENTER
this.reader == null
===========================================================================
sjm.parse.tokens.Tokenizer.wordState():::EXIT
this.reader == orig(this.reader)
this.characterStates == orig(this.characterStates)
this.characterStates.getClass().getName() == orig(this.characterStates.getClass().getName())
this.numberState == orig(this.numberState)
this.numberState.c == orig(this.numberState.c)
this.numberState.value == orig(this.numberState.value)
this.numberState.absorbedLeadingMinus == orig(this.numberState.absorbedLeadingMinus)
this.numberState.absorbedDot == orig(this.numberState.absorbedDot)
this.numberState.gotAdigit == orig(this.numberState.gotAdigit)
this.quoteState == orig(this.quoteState)
this.quoteState.charbuf == orig(this.quoteState.charbuf)
this.quoteState.charbuf[] == orig(this.quoteState.charbuf[])
this.slashState == orig(this.slashState)
this.slashState.slashStarState == orig(this.slashState.slashStarState)
this.slashState.slashSlashState == orig(this.slashState.slashSlashState)
this.symbolState == orig(this.symbolState)
this.symbolState.symbols == orig(this.symbolState.symbols)
this.symbolState.symbols.rootsChildren == orig(this.symbolState.symbols.rootsChildren)
this.symbolState.symbols.rootsChildren.getClass().getName() == orig(this.symbolState.symbols.rootsChildren.getClass().getName())
this.symbolState.symbols.rootsChildren[] == orig(this.symbolState.symbols.rootsChildren[])
this.symbolState.symbols.rootsChildren[].myChar == orig(this.symbolState.symbols.rootsChildren[].myChar)
this.symbolState.symbols.rootsChildren[].children == orig(this.symbolState.symbols.rootsChildren[].children)
this.symbolState.symbols.rootsChildren[].valid == orig(this.symbolState.symbols.rootsChildren[].valid)
this.symbolState.symbols.rootsChildren[].parent == orig(this.symbolState.symbols.rootsChildren[].parent)
this.symbolState.symbols.myChar == orig(this.symbolState.symbols.myChar)
this.symbolState.symbols.children == orig(this.symbolState.symbols.children)
this.symbolState.symbols.children[] == orig(this.symbolState.symbols.children[])
this.symbolState.symbols.children.getClass().getName() == orig(this.symbolState.symbols.children.getClass().getName())
this.symbolState.symbols.valid == orig(this.symbolState.symbols.valid)
this.symbolState.symbols.parent == orig(this.symbolState.symbols.parent)
this.whitespaceState == orig(this.whitespaceState)
this.whitespaceState.whitespaceChar == orig(this.whitespaceState.whitespaceChar)
this.whitespaceState.whitespaceChar[] == orig(this.whitespaceState.whitespaceChar[])
this.whitespaceState.whitespaceTokensEnabled == orig(this.whitespaceState.whitespaceTokensEnabled)
this.wordState == return
this.wordState.wordChars == return.wordChars
this.wordState.wordChars.getClass().getName() == return.wordChars.getClass().getName()
return == orig(this.wordState)
return.wordChars == orig(this.wordState.wordChars)
return.wordChars.getClass().getName() == orig(this.wordState.wordChars.getClass().getName())
this.reader == null
return has only one value
return.wordChars has only one value
return.wordChars.getClass().getName() == java.util.HashSet.class
===========================================================================
sjm.parse.tokens.TokenizerState:::OBJECT
===========================================================================
sjm.parse.tokens.TokenizerState.TokenizerState():::EXIT
===========================================================================
sjm.parse.tokens.WhitespaceState:::OBJECT
this has only one value
this.whitespaceChar has only one value
this.whitespaceChar != null
this.whitespaceChar[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
this.whitespaceTokensEnabled == false
size(this.whitespaceChar[]) == 256
===========================================================================
sjm.parse.tokens.WhitespaceState.WhitespaceState():::EXIT
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
===========================================================================
sjm.parse.tokens.WhitespaceState.isWhitespaceChar(int):::ENTER
this.whitespaceChar[arg0] == this.whitespaceChar[arg0-1]
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0 one of { 87, 97, 99 }
this.whitespaceChar[arg0] == false
===========================================================================
sjm.parse.tokens.WhitespaceState.isWhitespaceChar(int):::EXIT
this.whitespaceChar == orig(this.whitespaceChar)
this.whitespaceChar[] == orig(this.whitespaceChar[])
this.whitespaceTokensEnabled == orig(this.whitespaceTokensEnabled)
this.whitespaceChar[orig(arg0)] == this.whitespaceChar[orig(arg0)-1]
this.whitespaceChar[orig(arg0)] == orig(this.whitespaceChar[post(arg0)-1])
this.whitespaceChar[orig(arg0)] == orig(this.whitespaceChar[arg0-1])
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
return == false
this.whitespaceChar[orig(arg0)] == false
===========================================================================
sjm.parse.tokens.WhitespaceState.isWhitespaceChar(int):::EXIT;condition="not(return == true)"
===========================================================================
sjm.parse.tokens.WhitespaceState.nextToken(java.io.PushbackReader, int, sjm.parse.tokens.Tokenizer):::ENTER
this == arg2.whitespaceState
this.whitespaceChar == arg2.whitespaceState.whitespaceChar
this.whitespaceChar[] == arg2.whitespaceState.whitespaceChar[]
this.whitespaceTokensEnabled == arg2.whitespaceState.whitespaceTokensEnabled
arg0 == arg2.reader
this.whitespaceChar[arg1] == this.whitespaceChar[arg1-1]
this.whitespaceChar[arg1] == arg2.whitespaceState.whitespaceChar[arg1-1]
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0 has only one value
arg1 == 32
arg2 has only one value
arg2.characterStates has only one value
arg2.characterStates.getClass().getName() == java.util.HashMap.class
arg2.numberState has only one value
arg2.numberState.c == 0
arg2.numberState.value == null
arg2.numberState.absorbedLeadingMinus == false
arg2.numberState.absorbedDot == false
arg2.numberState.gotAdigit == false
arg2.quoteState has only one value
arg2.quoteState.charbuf has only one value
arg2.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.quoteState.charbuf[] elements == 0
arg2.slashState has only one value
arg2.slashState.slashStarState has only one value
arg2.slashState.slashSlashState has only one value
arg2.symbolState has only one value
arg2.symbolState.symbols has only one value
arg2.whitespaceState has only one value
arg2.wordState has only one value
arg2.wordState.wordChars has only one value
arg2.wordState.wordChars.getClass().getName() == java.util.HashSet.class
size(arg2.quoteState.charbuf[]) == 16
this.whitespaceChar[arg1] == true
===========================================================================
sjm.parse.tokens.WhitespaceState.nextToken(java.io.PushbackReader, int, sjm.parse.tokens.Tokenizer):::EXIT52
===========================================================================
sjm.parse.tokens.WhitespaceState.nextToken(java.io.PushbackReader, int, sjm.parse.tokens.Tokenizer):::EXIT
this.whitespaceChar == arg2.whitespaceState.whitespaceChar
this.whitespaceChar == orig(this.whitespaceChar)
this.whitespaceChar == orig(arg2.whitespaceState.whitespaceChar)
this.whitespaceChar[] == arg2.whitespaceState.whitespaceChar[]
this.whitespaceChar[] == orig(this.whitespaceChar[])
this.whitespaceChar[] == orig(arg2.whitespaceState.whitespaceChar[])
this.whitespaceTokensEnabled == arg2.whitespaceState.whitespaceTokensEnabled
this.whitespaceTokensEnabled == orig(this.whitespaceTokensEnabled)
this.whitespaceTokensEnabled == orig(arg2.whitespaceState.whitespaceTokensEnabled)
arg2.reader == orig(arg0)
arg2.reader == orig(arg2.reader)
arg2.characterStates == orig(arg2.characterStates)
arg2.characterStates.getClass().getName() == orig(arg2.characterStates.getClass().getName())
arg2.numberState == orig(arg2.numberState)
arg2.numberState.c == orig(arg2.numberState.c)
arg2.numberState.value == orig(arg2.numberState.value)
arg2.numberState.absorbedLeadingMinus == orig(arg2.numberState.absorbedLeadingMinus)
arg2.numberState.absorbedDot == orig(arg2.numberState.absorbedDot)
arg2.numberState.gotAdigit == orig(arg2.numberState.gotAdigit)
arg2.quoteState == orig(arg2.quoteState)
arg2.quoteState.charbuf == orig(arg2.quoteState.charbuf)
arg2.quoteState.charbuf[] == orig(arg2.quoteState.charbuf[])
arg2.slashState == orig(arg2.slashState)
arg2.slashState.slashStarState == orig(arg2.slashState.slashStarState)
arg2.slashState.slashSlashState == orig(arg2.slashState.slashSlashState)
arg2.symbolState == orig(arg2.symbolState)
arg2.symbolState.symbols == orig(arg2.symbolState.symbols)
arg2.whitespaceState == orig(this)
arg2.whitespaceState == orig(arg2.whitespaceState)
arg2.wordState == orig(arg2.wordState)
arg2.wordState.wordChars == orig(arg2.wordState.wordChars)
arg2.wordState.wordChars.getClass().getName() == orig(arg2.wordState.wordChars.getClass().getName())
return.ttype == sjm.parse.tokens.Token.TT_WORD
return.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.whitespaceChar[orig(arg1)] == this.whitespaceChar[orig(arg1)-1]
this.whitespaceChar[orig(arg1)] == orig(this.whitespaceChar[post(arg1)-1])
this.whitespaceChar[orig(arg1)] == orig(arg2.whitespaceState.whitespaceChar[post(arg1)-1])
this.whitespaceChar[orig(arg1)] == arg2.whitespaceState.whitespaceChar[orig(arg1)-1]
this.whitespaceChar[orig(arg1)] == orig(this.whitespaceChar[arg1-1])
this.whitespaceChar[orig(arg1)] == orig(arg2.whitespaceState.whitespaceChar[arg1-1])
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.reader has only one value
arg2.characterStates has only one value
arg2.characterStates.getClass().getName() == java.util.HashMap.class
arg2.numberState has only one value
arg2.numberState.c == 0
arg2.numberState.value == null
arg2.numberState.absorbedLeadingMinus == false
arg2.numberState.absorbedDot == false
arg2.numberState.gotAdigit == false
arg2.quoteState has only one value
arg2.quoteState.charbuf has only one value
arg2.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.quoteState.charbuf[] elements == 0
arg2.slashState has only one value
arg2.slashState.slashStarState has only one value
arg2.slashState.slashSlashState has only one value
arg2.symbolState has only one value
arg2.symbolState.symbols has only one value
arg2.whitespaceState has only one value
arg2.wordState has only one value
arg2.wordState.wordChars has only one value
arg2.wordState.wordChars.getClass().getName() == java.util.HashSet.class
return.ttype.name has only one value
return.ttype.name.toString == "word"
return.sval.toString one of { "WB500_IN", "at", "carrier" }
return.nval has only one value
return.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
size(arg2.quoteState.charbuf[]) == 16
this.whitespaceChar[orig(arg1)] == true
===========================================================================
sjm.parse.tokens.WhitespaceState.nextTokenWithoutWhitespaceTokenizing(java.io.PushbackReader, sjm.parse.tokens.Tokenizer):::ENTER
this == arg1.whitespaceState
this.whitespaceChar == arg1.whitespaceState.whitespaceChar
this.whitespaceTokensEnabled == arg1.whitespaceState.whitespaceTokensEnabled
arg0 == arg1.reader
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg0 has only one value
arg1 has only one value
arg1.characterStates has only one value
arg1.characterStates.getClass().getName() == java.util.HashMap.class
arg1.numberState has only one value
arg1.numberState.c == 0
arg1.numberState.value == null
arg1.numberState.absorbedLeadingMinus == false
arg1.numberState.absorbedDot == false
arg1.numberState.gotAdigit == false
arg1.quoteState has only one value
arg1.quoteState.charbuf has only one value
arg1.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg1.quoteState.charbuf[] elements == 0
arg1.slashState has only one value
arg1.slashState.slashStarState has only one value
arg1.slashState.slashSlashState has only one value
arg1.symbolState has only one value
arg1.symbolState.symbols has only one value
arg1.whitespaceState has only one value
arg1.whitespaceState.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg1.wordState has only one value
arg1.wordState.wordChars has only one value
arg1.wordState.wordChars.getClass().getName() == java.util.HashSet.class
size(arg1.quoteState.charbuf[]) == 16
size(arg1.whitespaceState.whitespaceChar[]) == 256
===========================================================================
sjm.parse.tokens.WhitespaceState.nextTokenWithoutWhitespaceTokenizing(java.io.PushbackReader, sjm.parse.tokens.Tokenizer):::EXIT
this.whitespaceChar == arg1.whitespaceState.whitespaceChar
this.whitespaceChar == orig(this.whitespaceChar)
this.whitespaceChar == orig(arg1.whitespaceState.whitespaceChar)
this.whitespaceChar[] == orig(this.whitespaceChar[])
this.whitespaceTokensEnabled == arg1.whitespaceState.whitespaceTokensEnabled
this.whitespaceTokensEnabled == orig(this.whitespaceTokensEnabled)
this.whitespaceTokensEnabled == orig(arg1.whitespaceState.whitespaceTokensEnabled)
arg1.reader == orig(arg0)
arg1.reader == orig(arg1.reader)
arg1.characterStates == orig(arg1.characterStates)
arg1.characterStates.getClass().getName() == orig(arg1.characterStates.getClass().getName())
arg1.numberState == orig(arg1.numberState)
arg1.numberState.c == orig(arg1.numberState.c)
arg1.numberState.value == orig(arg1.numberState.value)
arg1.numberState.absorbedLeadingMinus == orig(arg1.numberState.absorbedLeadingMinus)
arg1.numberState.absorbedDot == orig(arg1.numberState.absorbedDot)
arg1.numberState.gotAdigit == orig(arg1.numberState.gotAdigit)
arg1.quoteState == orig(arg1.quoteState)
arg1.quoteState.charbuf == orig(arg1.quoteState.charbuf)
arg1.quoteState.charbuf[] == orig(arg1.quoteState.charbuf[])
arg1.slashState == orig(arg1.slashState)
arg1.slashState.slashStarState == orig(arg1.slashState.slashStarState)
arg1.slashState.slashSlashState == orig(arg1.slashState.slashSlashState)
arg1.symbolState == orig(arg1.symbolState)
arg1.symbolState.symbols == orig(arg1.symbolState.symbols)
arg1.whitespaceState == orig(this)
arg1.whitespaceState == orig(arg1.whitespaceState)
arg1.whitespaceState.whitespaceChar[] == orig(arg1.whitespaceState.whitespaceChar[])
arg1.wordState == orig(arg1.wordState)
arg1.wordState.wordChars == orig(arg1.wordState.wordChars)
arg1.wordState.wordChars.getClass().getName() == orig(arg1.wordState.wordChars.getClass().getName())
return.ttype == sjm.parse.tokens.Token.TT_WORD
return.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg1.reader has only one value
arg1.characterStates has only one value
arg1.characterStates.getClass().getName() == java.util.HashMap.class
arg1.numberState has only one value
arg1.numberState.c == 0
arg1.numberState.value == null
arg1.numberState.absorbedLeadingMinus == false
arg1.numberState.absorbedDot == false
arg1.numberState.gotAdigit == false
arg1.quoteState has only one value
arg1.quoteState.charbuf has only one value
arg1.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg1.quoteState.charbuf[] elements == 0
arg1.slashState has only one value
arg1.slashState.slashStarState has only one value
arg1.slashState.slashSlashState has only one value
arg1.symbolState has only one value
arg1.symbolState.symbols has only one value
arg1.whitespaceState has only one value
arg1.whitespaceState.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg1.wordState has only one value
arg1.wordState.wordChars has only one value
arg1.wordState.wordChars.getClass().getName() == java.util.HashSet.class
return.ttype.name has only one value
return.ttype.name.toString == "word"
return.sval.toString one of { "WB500_IN", "at", "carrier" }
return.nval has only one value
return.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
size(arg1.quoteState.charbuf[]) == 16
size(arg1.whitespaceState.whitespaceChar[]) == 256
===========================================================================
sjm.parse.tokens.WhitespaceState.setWhitespaceChars(int, int, boolean):::ENTER
this.whitespaceChar[arg0] == this.whitespaceChar[arg1]
this.whitespaceChar[arg0] == this.whitespaceChar[arg1-1]
this.whitespaceChar[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
this.whitespaceChar[] elements == false
arg0 == 0
arg1 == 32
arg2 == true
this.whitespaceChar[] elements == this.whitespaceChar[arg0]
===========================================================================
sjm.parse.tokens.WhitespaceState.setWhitespaceChars(int, int, boolean):::EXIT
this.whitespaceChar == orig(this.whitespaceChar)
this.whitespaceTokensEnabled == orig(this.whitespaceTokensEnabled)
orig(arg2) == this.whitespaceChar[orig(arg0)]
orig(arg2) == this.whitespaceChar[orig(arg1)]
orig(arg2) == this.whitespaceChar[orig(arg1)-1]
size(this.whitespaceChar[]) == orig(size(this.whitespaceChar[]))
orig(this.whitespaceChar[post(arg1)]) == orig(this.whitespaceChar[arg0])
orig(this.whitespaceChar[post(arg1)-1]) == orig(this.whitespaceChar[arg0])
this.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
orig(this.whitespaceChar[arg0]) in this.whitespaceChar[]
===========================================================================
sjm.parse.tokens.Word:::OBJECT
this.discard == false
this.name == null
this.assembler == null
===========================================================================
sjm.parse.tokens.Word.Word():::EXIT
===========================================================================
sjm.parse.tokens.Word.qualifies(java.lang.Object):::ENTER
this has only one value
arg0 has only one value
arg0.getClass().getName() == sjm.parse.tokens.Token.class
===========================================================================
sjm.parse.tokens.Word.qualifies(java.lang.Object):::EXIT
this.discard == orig(this.discard)
this.name == orig(this.name)
this.assembler == orig(this.assembler)
return == true
===========================================================================
sjm.parse.tokens.Word.qualifies(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
sjm.parse.tokens.WordState:::OBJECT
this has only one value
this.wordChars has only one value
this.wordChars != null
this.wordChars.getClass().getName() == java.util.HashSet.class
===========================================================================
sjm.parse.tokens.WordState.WordState():::EXIT
===========================================================================
sjm.parse.tokens.WordState.isWordChar(int):::ENTER
===========================================================================
sjm.parse.tokens.WordState.isWordChar(int):::EXIT
this.wordChars == orig(this.wordChars)
this.wordChars.getClass().getName() == orig(this.wordChars.getClass().getName())
(return == false)  <==>  (orig(arg0) one of { -1, 32 })
===========================================================================
sjm.parse.tokens.WordState.isWordChar(int):::EXIT;condition="return == true"
return == true
===========================================================================
sjm.parse.tokens.WordState.isWordChar(int):::EXIT;condition="not(return == true)"
return == false
orig(arg0) one of { -1, 32 }
===========================================================================
sjm.parse.tokens.WordState.nextToken(java.io.PushbackReader, int, sjm.parse.tokens.Tokenizer):::ENTER
this == arg2.wordState
this.wordChars == arg2.wordState.wordChars
this.wordChars.getClass().getName() == arg2.wordState.wordChars.getClass().getName()
arg0 == arg2.reader
arg2.whitespaceState.whitespaceChar[arg1] == arg2.whitespaceState.whitespaceChar[arg1-1]
arg0 has only one value
arg2 has only one value
arg2.characterStates has only one value
arg2.characterStates.getClass().getName() == java.util.HashMap.class
arg2.numberState has only one value
arg2.numberState.c == 0
arg2.numberState.value == null
arg2.numberState.absorbedLeadingMinus == false
arg2.numberState.absorbedDot == false
arg2.numberState.gotAdigit == false
arg2.quoteState has only one value
arg2.quoteState.charbuf has only one value
arg2.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.quoteState.charbuf[] elements == 0
arg2.slashState has only one value
arg2.slashState.slashStarState has only one value
arg2.slashState.slashSlashState has only one value
arg2.symbolState has only one value
arg2.symbolState.symbols has only one value
arg2.whitespaceState has only one value
arg2.whitespaceState.whitespaceChar has only one value
arg2.whitespaceState.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.whitespaceState.whitespaceTokensEnabled == false
arg2.wordState has only one value
size(arg2.quoteState.charbuf[]) == 16
size(arg2.whitespaceState.whitespaceChar[]) == 256
arg2.whitespaceState.whitespaceChar[arg1] == false
===========================================================================
sjm.parse.tokens.WordState.nextToken(java.io.PushbackReader, int, sjm.parse.tokens.Tokenizer):::EXIT
this.wordChars == arg2.wordState.wordChars
this.wordChars == orig(this.wordChars)
this.wordChars == orig(arg2.wordState.wordChars)
this.wordChars.getClass().getName() == arg2.wordState.wordChars.getClass().getName()
this.wordChars.getClass().getName() == orig(this.wordChars.getClass().getName())
this.wordChars.getClass().getName() == orig(arg2.wordState.wordChars.getClass().getName())
arg2.reader == orig(arg0)
arg2.reader == orig(arg2.reader)
arg2.characterStates == orig(arg2.characterStates)
arg2.characterStates.getClass().getName() == orig(arg2.characterStates.getClass().getName())
arg2.numberState == orig(arg2.numberState)
arg2.numberState.c == orig(arg2.numberState.c)
arg2.numberState.value == orig(arg2.numberState.value)
arg2.numberState.absorbedLeadingMinus == orig(arg2.numberState.absorbedLeadingMinus)
arg2.numberState.absorbedDot == orig(arg2.numberState.absorbedDot)
arg2.numberState.gotAdigit == orig(arg2.numberState.gotAdigit)
arg2.quoteState == orig(arg2.quoteState)
arg2.quoteState.charbuf == orig(arg2.quoteState.charbuf)
arg2.quoteState.charbuf[] == orig(arg2.quoteState.charbuf[])
arg2.slashState == orig(arg2.slashState)
arg2.slashState.slashStarState == orig(arg2.slashState.slashStarState)
arg2.slashState.slashSlashState == orig(arg2.slashState.slashSlashState)
arg2.symbolState == orig(arg2.symbolState)
arg2.symbolState.symbols == orig(arg2.symbolState.symbols)
arg2.whitespaceState == orig(arg2.whitespaceState)
arg2.whitespaceState.whitespaceChar == orig(arg2.whitespaceState.whitespaceChar)
arg2.whitespaceState.whitespaceChar[] == orig(arg2.whitespaceState.whitespaceChar[])
arg2.whitespaceState.whitespaceTokensEnabled == orig(arg2.whitespaceState.whitespaceTokensEnabled)
arg2.wordState == orig(this)
arg2.wordState == orig(arg2.wordState)
return.ttype == sjm.parse.tokens.Token.TT_WORD
return.nval.getClass().getName() == sjm.parse.tokens.Token.EOF.nval.getClass().getName()
arg2.whitespaceState.whitespaceChar[orig(arg1)] == arg2.whitespaceState.whitespaceChar[orig(arg1)-1]
arg2.whitespaceState.whitespaceChar[orig(arg1)] == orig(arg2.whitespaceState.whitespaceChar[arg1-1])
arg2.reader has only one value
arg2.characterStates has only one value
arg2.characterStates.getClass().getName() == java.util.HashMap.class
arg2.numberState has only one value
arg2.numberState.c == 0
arg2.numberState.value == null
arg2.numberState.absorbedLeadingMinus == false
arg2.numberState.absorbedDot == false
arg2.numberState.gotAdigit == false
arg2.quoteState has only one value
arg2.quoteState.charbuf has only one value
arg2.quoteState.charbuf[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.quoteState.charbuf[] elements == 0
arg2.slashState has only one value
arg2.slashState.slashStarState has only one value
arg2.slashState.slashSlashState has only one value
arg2.symbolState has only one value
arg2.symbolState.symbols has only one value
arg2.whitespaceState has only one value
arg2.whitespaceState.whitespaceChar has only one value
arg2.whitespaceState.whitespaceChar[] == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
arg2.whitespaceState.whitespaceTokensEnabled == false
arg2.wordState has only one value
return.ttype.name has only one value
return.ttype.name.toString == "word"
return.nval has only one value
return.nval.getClass().getName() == java.math.BigDecimal.class
sjm.parse.tokens.Token.TT_EOF has only one value
sjm.parse.tokens.Token.TT_EOF.name has only one value
sjm.parse.tokens.Token.TT_EOF.name.toString == "eof"
sjm.parse.tokens.Token.EOF has only one value
sjm.parse.tokens.Token.EOF.ttype has only one value
sjm.parse.tokens.Token.EOF.sval has only one value
sjm.parse.tokens.Token.EOF.sval.toString == ""
sjm.parse.tokens.Token.EOF.nval has only one value
sjm.parse.tokens.Token.TT_NUMBER has only one value
sjm.parse.tokens.Token.TT_WORD has only one value
sjm.parse.tokens.Token.TT_SYMBOL has only one value
sjm.parse.tokens.Token.TT_QUOTED has only one value
sjm.parse.tokens.Token.TT_WHITESPACE has only one value
sjm.parse.tokens.Token.TT_NUMBER.name has only one value
sjm.parse.tokens.Token.TT_NUMBER.name.toString == "number"
sjm.parse.tokens.Token.TT_WORD.name has only one value
sjm.parse.tokens.Token.TT_WORD.name.toString == "word"
sjm.parse.tokens.Token.TT_SYMBOL.name has only one value
sjm.parse.tokens.Token.TT_SYMBOL.name.toString == "symbol"
sjm.parse.tokens.Token.TT_QUOTED.name has only one value
sjm.parse.tokens.Token.TT_QUOTED.name.toString == "quoted"
sjm.parse.tokens.Token.TT_WHITESPACE.name has only one value
sjm.parse.tokens.Token.TT_WHITESPACE.name.toString == "whitespace"
size(arg2.quoteState.charbuf[]) == 16
size(arg2.whitespaceState.whitespaceChar[]) == 256
arg2.whitespaceState.whitespaceChar[orig(arg1)] == false
===========================================================================
sjm.parse.tokens.WordState.setWordChar(int, boolean):::ENTER
arg1 == true
===========================================================================
sjm.parse.tokens.WordState.setWordChar(int, boolean):::EXIT104
===========================================================================
sjm.parse.tokens.WordState.setWordChar(int, boolean):::EXIT
this.wordChars == orig(this.wordChars)
this.wordChars.getClass().getName() == orig(this.wordChars.getClass().getName())
===========================================================================
sjm.parse.tokens.WordState.setWordChars(int, int, boolean):::ENTER
arg2 == true
arg0 <= arg1
===========================================================================
sjm.parse.tokens.WordState.setWordChars(int, int, boolean):::EXIT
this.wordChars == orig(this.wordChars)
this.wordChars.getClass().getName() == orig(this.wordChars.getClass().getName())
Exiting Daikon.
