Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 12 times.  Unmatched entries are ignored!
Unterminated calls:
  ch.thn.util.tests.TreeTest.main(java.lang.String[]) : 1 invocation
  com.google.common.collect.Iterators$3.next() : 5 invocations
  com.google.common.collect.Multisets$MultisetIteratorImpl.next() : 5 invocations
  ch.thn.util.file.FileUtil.writeStringToFile(java.lang.String, java.lang.StringBuilder) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

missing variables in newEnterExitRel:
  parent = com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::ENTER
  child = com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@6b0af513
parent varinfos missing from parent_to_child_map:
   com.google.common.collect.LinkedListMultimap.this.valuesList[com.google.common.collect.LinkedListMultimap.serialVersionUID]
   com.google.common.collect.LinkedListMultimap.this.valuesList[com.google.common.collect.LinkedListMultimap.serialVersionUID-1]
   com.google.common.collect.LinkedListMultimap.this.entries[com.google.common.collect.LinkedListMultimap.serialVersionUID]
   com.google.common.collect.LinkedListMultimap.this.entries[com.google.common.collect.LinkedListMultimap.serialVersionUID-1]
rel.parent_to_child_map:
    com.google.common.collect.LinkedListMultimap.this => orig(com.google.common.collect.LinkedListMultimap.this)
    com.google.common.collect.LinkedListMultimap.this.head => orig(com.google.common.collect.LinkedListMultimap.this.head)
    com.google.common.collect.LinkedListMultimap.this.head.key => orig(com.google.common.collect.LinkedListMultimap.this.head.key)
    com.google.common.collect.LinkedListMultimap.this.head.key.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.head.key.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.head.value => orig(com.google.common.collect.LinkedListMultimap.this.head.value)
    com.google.common.collect.LinkedListMultimap.this.head.value.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.head.value.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.head.next => orig(com.google.common.collect.LinkedListMultimap.this.head.next)
    com.google.common.collect.LinkedListMultimap.this.head.previous => orig(com.google.common.collect.LinkedListMultimap.this.head.previous)
    com.google.common.collect.LinkedListMultimap.this.head.nextSibling => orig(com.google.common.collect.LinkedListMultimap.this.head.nextSibling)
    com.google.common.collect.LinkedListMultimap.this.head.previousSibling => orig(com.google.common.collect.LinkedListMultimap.this.head.previousSibling)
    com.google.common.collect.LinkedListMultimap.this.tail => orig(com.google.common.collect.LinkedListMultimap.this.tail)
    com.google.common.collect.LinkedListMultimap.this.tail.key => orig(com.google.common.collect.LinkedListMultimap.this.tail.key)
    com.google.common.collect.LinkedListMultimap.this.tail.key.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.tail.key.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.tail.value => orig(com.google.common.collect.LinkedListMultimap.this.tail.value)
    com.google.common.collect.LinkedListMultimap.this.tail.value.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.tail.value.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.tail.next => orig(com.google.common.collect.LinkedListMultimap.this.tail.next)
    com.google.common.collect.LinkedListMultimap.this.tail.previous => orig(com.google.common.collect.LinkedListMultimap.this.tail.previous)
    com.google.common.collect.LinkedListMultimap.this.tail.nextSibling => orig(com.google.common.collect.LinkedListMultimap.this.tail.nextSibling)
    com.google.common.collect.LinkedListMultimap.this.tail.previousSibling => orig(com.google.common.collect.LinkedListMultimap.this.tail.previousSibling)
    com.google.common.collect.LinkedListMultimap.this.keyCount => orig(com.google.common.collect.LinkedListMultimap.this.keyCount)
    com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.keyToKeyHead => orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead)
    com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.keyToKeyTail => orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail)
    com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.keySet => orig(com.google.common.collect.LinkedListMultimap.this.keySet)
    com.google.common.collect.LinkedListMultimap.this.keySet.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.keySet.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.keys => orig(com.google.common.collect.LinkedListMultimap.this.keys)
    com.google.common.collect.LinkedListMultimap.this.keys.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.keys.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.valuesList => orig(com.google.common.collect.LinkedListMultimap.this.valuesList)
    com.google.common.collect.LinkedListMultimap.this.valuesList[..] => orig(com.google.common.collect.LinkedListMultimap.this.valuesList[..])
    com.google.common.collect.LinkedListMultimap.this.valuesList[..].getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.valuesList[..].getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.valuesList.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.valuesList.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.entries => orig(com.google.common.collect.LinkedListMultimap.this.entries)
    com.google.common.collect.LinkedListMultimap.this.entries[..] => orig(com.google.common.collect.LinkedListMultimap.this.entries[..])
    com.google.common.collect.LinkedListMultimap.this.entries[..].getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.entries[..].getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.entries.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.entries.getClass().getName())
    com.google.common.collect.LinkedListMultimap.this.map => orig(com.google.common.collect.LinkedListMultimap.this.map)
    com.google.common.collect.LinkedListMultimap.this.map.getClass().getName() => orig(com.google.common.collect.LinkedListMultimap.this.map.getClass().getName())
    com.google.common.collect.LinkedListMultimap.serialVersionUID => com.google.common.collect.LinkedListMultimap.serialVersionUID
    size(com.google.common.collect.LinkedListMultimap.this.valuesList[..]) => orig(size(com.google.common.collect.LinkedListMultimap.this.valuesList[..]))
    size(com.google.common.collect.LinkedListMultimap.this.valuesList[..])-1 => orig(size(com.google.common.collect.LinkedListMultimap.this.valuesList[..]))-1
    size(com.google.common.collect.LinkedListMultimap.this.entries[..]) => orig(size(com.google.common.collect.LinkedListMultimap.this.entries[..]))
    size(com.google.common.collect.LinkedListMultimap.this.entries[..])-1 => orig(size(com.google.common.collect.LinkedListMultimap.this.entries[..]))-1
child.var_infos:
    this
    com.google.common.collect.LinkedListMultimap.this
    com.google.common.collect.LinkedListMultimap.this.head
    com.google.common.collect.LinkedListMultimap.this.head.key
    com.google.common.collect.LinkedListMultimap.this.head.key.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.head.value
    com.google.common.collect.LinkedListMultimap.this.head.value.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.head.next
    com.google.common.collect.LinkedListMultimap.this.head.previous
    com.google.common.collect.LinkedListMultimap.this.head.nextSibling
    com.google.common.collect.LinkedListMultimap.this.head.previousSibling
    com.google.common.collect.LinkedListMultimap.this.tail
    com.google.common.collect.LinkedListMultimap.this.tail.key
    com.google.common.collect.LinkedListMultimap.this.tail.key.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.tail.value
    com.google.common.collect.LinkedListMultimap.this.tail.value.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.tail.next
    com.google.common.collect.LinkedListMultimap.this.tail.previous
    com.google.common.collect.LinkedListMultimap.this.tail.nextSibling
    com.google.common.collect.LinkedListMultimap.this.tail.previousSibling
    com.google.common.collect.LinkedListMultimap.this.keyCount
    com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.keyToKeyHead
    com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.keyToKeyTail
    com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.keySet
    com.google.common.collect.LinkedListMultimap.this.keySet.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.keys
    com.google.common.collect.LinkedListMultimap.this.keys.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.valuesList
    com.google.common.collect.LinkedListMultimap.this.valuesList[..]
    com.google.common.collect.LinkedListMultimap.this.valuesList[..].getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.valuesList.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.entries
    com.google.common.collect.LinkedListMultimap.this.entries[..]
    com.google.common.collect.LinkedListMultimap.this.entries[..].getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.entries.getClass().getName()
    com.google.common.collect.LinkedListMultimap.this.map
    com.google.common.collect.LinkedListMultimap.this.map.getClass().getName()
    com.google.common.collect.LinkedListMultimap.serialVersionUID
    orig(com.google.common.collect.LinkedListMultimap.this)
    orig(com.google.common.collect.LinkedListMultimap.this.head)
    orig(com.google.common.collect.LinkedListMultimap.this.head.key)
    orig(com.google.common.collect.LinkedListMultimap.this.head.key.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.head.value)
    orig(com.google.common.collect.LinkedListMultimap.this.head.value.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.head.next)
    orig(com.google.common.collect.LinkedListMultimap.this.head.previous)
    orig(com.google.common.collect.LinkedListMultimap.this.head.nextSibling)
    orig(com.google.common.collect.LinkedListMultimap.this.head.previousSibling)
    orig(com.google.common.collect.LinkedListMultimap.this.tail)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.key)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.key.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.tail.value)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.value.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.tail.next)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.previous)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.nextSibling)
    orig(com.google.common.collect.LinkedListMultimap.this.tail.previousSibling)
    orig(com.google.common.collect.LinkedListMultimap.this.keyCount)
    orig(com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead)
    orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail)
    orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.keySet)
    orig(com.google.common.collect.LinkedListMultimap.this.keySet.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.keys)
    orig(com.google.common.collect.LinkedListMultimap.this.keys.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.valuesList)
    orig(com.google.common.collect.LinkedListMultimap.this.valuesList[..])
    orig(com.google.common.collect.LinkedListMultimap.this.valuesList[..].getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.valuesList.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.entries)
    orig(com.google.common.collect.LinkedListMultimap.this.entries[..])
    orig(com.google.common.collect.LinkedListMultimap.this.entries[..].getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.entries.getClass().getName())
    orig(com.google.common.collect.LinkedListMultimap.this.map)
    orig(com.google.common.collect.LinkedListMultimap.this.map.getClass().getName())
    size(com.google.common.collect.LinkedListMultimap.this.valuesList[..])
    size(com.google.common.collect.LinkedListMultimap.this.valuesList[..])-1
    size(com.google.common.collect.LinkedListMultimap.this.entries[..])
    size(com.google.common.collect.LinkedListMultimap.this.entries[..])-1
    orig(size(com.google.common.collect.LinkedListMultimap.this.valuesList[..]))
    orig(size(com.google.common.collect.LinkedListMultimap.this.valuesList[..]))-1
    orig(size(com.google.common.collect.LinkedListMultimap.this.entries[..]))
    orig(size(com.google.common.collect.LinkedListMultimap.this.entries[..]))-1
End of diagnostics for newEnterExitRel(com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::ENTER, com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::EXIT)
===========================================================================
ch.thn.util.file.FileUtilError:::CLASS
===========================================================================
ch.thn.util.file.FileUtilError:::OBJECT
this has only one value
===========================================================================
ch.thn.util.file.FileUtilError.FileUtilError(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Failed to open writer"
===========================================================================
ch.thn.util.file.FileUtilError.FileUtilError(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "Failed to open writer"
===========================================================================
ch.thn.util.tests.TreeTest$1:::OBJECT
this has only one value
===========================================================================
ch.thn.util.tests.TreeTest$1.():::EXIT
===========================================================================
ch.thn.util.tests.TreeTest$1.compare(java.lang.Integer, java.lang.Integer):::ENTER
arg1 has only one value
===========================================================================
ch.thn.util.tests.TreeTest$1.compare(java.lang.Integer, java.lang.Integer):::EXIT
return == 0
===========================================================================
ch.thn.util.tests.TreeTest$TestTreeNodeListener:::OBJECT
this has only one value
===========================================================================
ch.thn.util.tests.TreeTest$TestTreeNodeListener.TestTreeNodeListener():::EXIT
===========================================================================
ch.thn.util.tests.TreeTest$TestTreeNodeListener.nodeAdded(ch.thn.util.tree.TreeNodeEvent):::ENTER
arg0.node.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
arg0.oldNode == null
arg0.parentOfRemoved == null
arg0.nodeIndexOfRemoved == -1
===========================================================================
ch.thn.util.tests.TreeTest$TestTreeNodeListener.nodeAdded(ch.thn.util.tree.TreeNodeEvent):::EXIT
arg0.node == orig(arg0.node)
arg0.node.getClass().getName() == orig(arg0.node.getClass().getName())
arg0.oldNode == orig(arg0.oldNode)
arg0.parentOfRemoved == orig(arg0.parentOfRemoved)
arg0.nodeIndexOfRemoved == orig(arg0.nodeIndexOfRemoved)
arg0.node.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
arg0.oldNode == null
arg0.parentOfRemoved == null
arg0.nodeIndexOfRemoved == -1
===========================================================================
ch.thn.util.tests.TreeTest.fillCollectionTree(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
===========================================================================
ch.thn.util.tests.TreeTest.fillCollectionTree(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
===========================================================================
ch.thn.util.tests.TreeTest.fillMapTree(ch.thn.util.tree.core.MapTreeNodeInterface):::ENTER
===========================================================================
ch.thn.util.tests.TreeTest.fillMapTree(ch.thn.util.tree.core.MapTreeNodeInterface):::EXIT
===========================================================================
ch.thn.util.tree.KeyListTreeNode:::OBJECT
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.formerNodeIndex == -1
this.map != null
this.map.getClass().getName() == com.google.common.collect.LinkedListMultimap.class
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
this.parent.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.parent.children != null
this.parent.children.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children != null
this.parent.parent.children.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
this.parent.parent.parent == null
this.parent.parent.formerParent == null
this.parent.parent.value has only one value
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners has only one value
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.KeyListTreeNode.KeyListTreeNode(java.lang.Object, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Integer.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.KeyListTreeNode.KeyListTreeNode(java.lang.Object, java.lang.Object):::EXIT
this.key == orig(arg0)
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.KeyListTreeNode.internalGetThis():::ENTER
===========================================================================
ch.thn.util.tree.KeyListTreeNode.internalGetThis():::EXIT
this.formerNodeIndex == return.formerNodeIndex
this.formerNodeIndex == orig(this.formerNodeIndex)
this.map == return.map
this.map == orig(this.map)
this.map.getClass().getName() == return.map.getClass().getName()
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == return.key
this.key == orig(this.key)
this.key.getClass().getName() == return.key.getClass().getName()
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == return.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == return.parent.children
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == return.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == return.parent.parent
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.parent.value
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == return.parent.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == return.parent.listeners
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.value
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this)
return != null
return.parent.formerParent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.KeyListTreeNode.nodeFactory(java.lang.Object, java.lang.Object):::ENTER
this.key.getClass().getName() == arg0.getClass().getName()
this.value.getClass().getName() == arg1.getClass().getName()
arg0 != null
arg1 != null
===========================================================================
ch.thn.util.tree.KeyListTreeNode.nodeFactory(java.lang.Object, java.lang.Object):::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.map == orig(this.map)
this.map.getClass().getName() == return.map.getClass().getName()
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == return.key.getClass().getName()
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.key == orig(arg0)
return.value == orig(arg1)
return != null
return.formerNodeIndex == -1
return.map != null
return.key != null
return.children != null
return.parent == null
return.formerParent == null
return.value != null
return.listeners != null
===========================================================================
ch.thn.util.tree.KeySetTreeNode:::OBJECT
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.keyComparator != null
this.valueComparator != null
this.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.children != null
this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children != null
this.parent.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.parent == null
this.parent.parent.formerParent == null
this.parent.parent.value has only one value
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners has only one value
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.keyComparator.getClass().getName() != this.valueComparator.getClass().getName()
this.keyComparator.getClass().getName() != this.map.getClass().getName()
this.keyComparator.getClass().getName() != this.key.getClass().getName()
this.keyComparator.getClass().getName() != this.children.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.children.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.parent.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.parent.children.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.parent.value.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.value.getClass().getName()
this.keyComparator.getClass().getName() != this.parent.listeners.getClass().getName()
this.keyComparator.getClass().getName() != this.value.getClass().getName()
this.keyComparator.getClass().getName() != this.listeners.getClass().getName()
this.valueComparator.getClass().getName() != this.map.getClass().getName()
this.valueComparator.getClass().getName() != this.key.getClass().getName()
this.valueComparator.getClass().getName() != this.children.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.children.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.parent.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.parent.children.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.parent.value.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.value.getClass().getName()
this.valueComparator.getClass().getName() != this.parent.listeners.getClass().getName()
this.valueComparator.getClass().getName() != this.value.getClass().getName()
this.valueComparator.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.KeySetTreeNode.KeySetTreeNode(java.lang.Object, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Integer.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.KeySetTreeNode.KeySetTreeNode(java.lang.Object, java.lang.Object):::EXIT
this.key == orig(arg0)
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
this.parent == null
===========================================================================
ch.thn.util.tree.KeySetTreeNode.KeySetTreeNode(java.util.Comparator, java.util.Comparator, java.lang.Object, java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tests.TreeTest$1.class
arg1 == null
arg2 has only one value
arg2.getClass().getName() == java.lang.Integer.class
arg3 has only one value
arg3.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.KeySetTreeNode.KeySetTreeNode(java.util.Comparator, java.util.Comparator, java.lang.Object, java.lang.Object):::EXIT
this.keyComparator == orig(arg0)
this.keyComparator.getClass().getName() == orig(arg0.getClass().getName())
this.key == orig(arg2)
this.key.getClass().getName() == orig(arg2.getClass().getName())
this.value == orig(arg3)
this.value.getClass().getName() == orig(arg3.getClass().getName())
this.keyComparator has only one value
this.keyComparator.getClass().getName() == ch.thn.util.tests.TreeTest$1.class
this.valueComparator has only one value
this.map has only one value
this.key has only one value
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
===========================================================================
ch.thn.util.tree.KeySetTreeNode.internalGetThis():::ENTER
===========================================================================
ch.thn.util.tree.KeySetTreeNode.internalGetThis():::EXIT
this.keyComparator == return.keyComparator
this.keyComparator == orig(this.keyComparator)
this.keyComparator.getClass().getName() == return.keyComparator.getClass().getName()
this.keyComparator.getClass().getName() == orig(this.keyComparator.getClass().getName())
this.valueComparator == return.valueComparator
this.valueComparator == orig(this.valueComparator)
this.valueComparator.getClass().getName() == return.valueComparator.getClass().getName()
this.valueComparator.getClass().getName() == orig(this.valueComparator.getClass().getName())
this.map == return.map
this.map == orig(this.map)
this.map.getClass().getName() == return.map.getClass().getName()
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == return.key
this.key == orig(this.key)
this.key.getClass().getName() == return.key.getClass().getName()
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == return.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == return.parent.children
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == return.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == return.parent.parent
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.parent.value
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == return.parent.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == return.parent.listeners
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.value
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this)
return != null
return.parent.formerParent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.KeySetTreeNode.nodeFactory(java.lang.Object, java.lang.Object):::ENTER
this.key.getClass().getName() == arg0.getClass().getName()
this.value.getClass().getName() == arg1.getClass().getName()
arg0 != null
arg1 != null
===========================================================================
ch.thn.util.tree.KeySetTreeNode.nodeFactory(java.lang.Object, java.lang.Object):::EXIT
this.keyComparator == orig(this.keyComparator)
this.keyComparator.getClass().getName() == orig(this.keyComparator.getClass().getName())
this.valueComparator == orig(this.valueComparator)
this.valueComparator.getClass().getName() == return.valueComparator.getClass().getName()
this.valueComparator.getClass().getName() == orig(this.valueComparator.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == return.map.getClass().getName()
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == return.key.getClass().getName()
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.key == orig(arg0)
return.value == orig(arg1)
return != null
return.keyComparator != null
return.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
return.valueComparator != null
return.map != null
return.key != null
return.children != null
return.parent == null
return.formerParent == null
return.value != null
return.listeners != null
this.valueComparator.getClass().getName() != return.keyComparator.getClass().getName()
this.map.getClass().getName() != return.keyComparator.getClass().getName()
this.key.getClass().getName() != return.keyComparator.getClass().getName()
this.children.getClass().getName() != return.keyComparator.getClass().getName()
this.parent.getClass().getName() != return.keyComparator.getClass().getName()
this.parent.children.getClass().getName() != return.keyComparator.getClass().getName()
this.parent.value.getClass().getName() != return.keyComparator.getClass().getName()
this.parent.listeners.getClass().getName() != return.keyComparator.getClass().getName()
this.value.getClass().getName() != return.keyComparator.getClass().getName()
this.listeners.getClass().getName() != return.keyComparator.getClass().getName()
===========================================================================
ch.thn.util.tree.ListTreeIterator:::OBJECT
this.previousNodeCache.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.startNode != null
this.startNode.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.nextNodeCache.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.lastReturned.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.iterators != null
this.iterators[] elements != null
this.iterators[].getClass().getName() elements == null
===========================================================================
ch.thn.util.tree.ListTreeIterator.ListTreeIterator(ch.thn.util.tree.core.ListTreeNodeInterface):::ENTER
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.ListTreeIterator.ListTreeIterator(ch.thn.util.tree.core.ListTreeNodeInterface):::EXIT
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.startNode has only one value
this.nextNodeCache has only one value
this.lastReturned == null
this.iterators has only one value
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.subtreeOnly == false
this.restOfTree == false
===========================================================================
ch.thn.util.tree.ListTreeIterator.ListTreeIterator(ch.thn.util.tree.core.ListTreeNodeInterface, boolean):::ENTER
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.ListTreeIterator.ListTreeIterator(ch.thn.util.tree.core.ListTreeNodeInterface, boolean):::EXIT
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.startNode has only one value
this.nextNodeCache has only one value
this.lastReturned == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.restOfTree == false
===========================================================================
ch.thn.util.tree.ListTreeIterator.getIterator(java.util.Collection):::ENTER
this.previousNodeCache == null
this.cursorBelowLastReturned == true
this.nextNodeCache == null
arg0.getClass().getName() == java.util.Collections$UnmodifiableList.class
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.getIterator(java.util.Collection):::EXIT
this.previousNodeCache == orig(this.previousNodeCache)
this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned)
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.iterators[] == orig(this.iterators[])
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.previousNodeCache == null
this.cursorBelowLastReturned == true
this.nextNodeCache == null
return.getClass().getName() == java.util.Collections$UnmodifiableList$1.class
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::ENTER
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT121
this.previousNodeCache == orig(this.previousNodeCache)
this.iterators[] == orig(this.iterators[])
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.startNode has only one value
this.lastReturned has only one value
this.iterators has only one value
this.iterators[] contains no nulls and has only one value, of length 2
this.iterators[].getClass().getName() == [null, null]
this.subtreeOnly == true
return == false
orig(this) has only one value
size(this.iterators[]) == 2
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT121;condition="not(return == true)"
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT124
(this.previousNodeCache != null)  <==>  (return == true)
(this.previousNodeCache != null)  ==>  (orig(this.previousNodeCache.getClass().getName()) == ch.thn.util.tree.ListTreeNode.class)
(this.previousNodeCache != null)  ==>  (size(this.iterators[]) one of { 1, 2, 3 })
(this.previousNodeCache != null)  ==>  (this.previousNodeCache.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.previousNodeCache != null)  ==>  (this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName()))
(this.previousNodeCache == null)  <==>  (return == false)
(this.previousNodeCache == null)  ==>  (orig(size(this.iterators[])) == 1)
(this.previousNodeCache == null)  ==>  (orig(this.iterators[].getClass().getName()) == [null])
(this.previousNodeCache == null)  ==>  (orig(this.previousNodeCache) == null)
(this.previousNodeCache == null)  ==>  (size(this.iterators[]) == 1)
(this.previousNodeCache == null)  ==>  (this.cursorBelowLastReturned == false)
(this.previousNodeCache == null)  ==>  (this.iterators[] == orig(this.iterators[]))
(this.previousNodeCache == null)  ==>  (this.iterators[].getClass().getName() == [null])
(this.previousNodeCache == null)  ==>  (this.lastReturned has only one value)
(this.previousNodeCache == null)  ==>  (this.previousNodeCache == orig(this.previousNodeCache))
(this.previousNodeCache == null)  ==>  (this.subtreeOnly == false)
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT124;condition="return == true"
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT124;condition="not(return == true)"
this.lastReturned has only one value
this.iterators[].getClass().getName() == [null]
this.subtreeOnly == false
size(this.iterators[]) == 1
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT
this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName())
this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned)
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
(this.previousNodeCache != null)  <==>  (return == true)
(this.previousNodeCache != null)  ==>  (orig(this.previousNodeCache.getClass().getName()) == ch.thn.util.tree.ListTreeNode.class)
(this.previousNodeCache != null)  ==>  (size(this.iterators[]) one of { 1, 2, 3 })
(this.previousNodeCache != null)  ==>  (this.previousNodeCache.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.previousNodeCache != null)  ==>  (this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName()))
(this.previousNodeCache == null)  <==>  (return == false)
(this.previousNodeCache == null)  ==>  (orig(size(this.iterators[])) one of { 1, 2 })
(this.previousNodeCache == null)  ==>  (orig(this.iterators[].getClass().getName()) one of { [null], [null, null] })
(this.previousNodeCache == null)  ==>  (orig(this.previousNodeCache) == null)
(this.previousNodeCache == null)  ==>  (size(this.iterators[]) one of { 1, 2 })
(this.previousNodeCache == null)  ==>  (this.cursorBelowLastReturned == false)
(this.previousNodeCache == null)  ==>  (this.iterators[] == orig(this.iterators[]))
(this.previousNodeCache == null)  ==>  (this.iterators[].getClass().getName() one of { [null], [null, null] })
(this.previousNodeCache == null)  ==>  (this.previousNodeCache == orig(this.previousNodeCache))
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
size(this.iterators[]) one of { 1, 2, 3 }
size(this.iterators[]) >= orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT;condition="return == true"
this.previousNodeCache != null
return == true
===========================================================================
ch.thn.util.tree.ListTreeIterator.hasPrevious():::EXIT;condition="not(return == true)"
this.previousNodeCache == orig(this.previousNodeCache)
this.iterators[] == orig(this.iterators[])
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.iterators[].getClass().getName() one of { [null], [null, null] }
return == false
size(this.iterators[]) one of { 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::ENTER
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT203
this.previousNodeCache == orig(this.previousNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.cursorBelowLastReturned == false
this.iterators[].getClass().getName() one of { [null], [null, null] }
orig(arg0) == true
size(this.iterators[]) one of { 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT207
this.iterators[] == orig(this.iterators[])
this.previousNodeCache == null
this.cursorBelowLastReturned == false
return != null
orig(this.previousNodeCache) != null
orig(arg0) == false
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT216
this.previousNodeCache == orig(this.previousNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.lastReturned has only one value
this.iterators[].getClass().getName() == [null]
this.subtreeOnly == false
return == null
orig(arg0) == true
size(this.iterators[]) == 1
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT224
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.previousNodeCache has only one value
this.cursorBelowLastReturned == false
this.lastReturned has only one value
this.iterators[].getClass().getName() == [null]
this.subtreeOnly == false
return has only one value
orig(this.previousNodeCache) == null
orig(arg0) == true
size(this.iterators[]) == 1
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT227
this.previousNodeCache == orig(this.previousNodeCache)
this.iterators[] == orig(this.iterators[])
this.previousNodeCache == null
this.cursorBelowLastReturned == false
this.startNode has only one value
this.lastReturned has only one value
this.iterators has only one value
this.iterators[] contains no nulls and has only one value, of length 2
this.iterators[].getClass().getName() == [null, null]
this.subtreeOnly == false
return has only one value
orig(this) has only one value
orig(this.lastReturned) has only one value
orig(arg0) == false
size(this.iterators[]) == 2
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT255
this.lastReturned == orig(this.lastReturned)
this.previousNodeCache != null
return != null
orig(this.previousNodeCache) == null
orig(arg0) == true
===========================================================================
ch.thn.util.tree.ListTreeIterator.internalPrevious(boolean):::EXIT
this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName())
this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned)
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
size(this.iterators[]) one of { 1, 2, 3 }
size(this.iterators[]) >= orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.ListTreeIterator.next():::ENTER
this.previousNodeCache == null
===========================================================================
ch.thn.util.tree.ListTreeIterator.next():::EXIT156
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.startNode has only one value
this.lastReturned has only one value
this.iterators has only one value
this.iterators[] contains no nulls and has only one value, of length 1
this.iterators[] elements has only one value
this.iterators[].getClass().getName() == [null]
this.subtreeOnly == false
this.restOfTree == false
return has only one value
orig(this) has only one value
orig(this.cursorBelowLastReturned) == false
size(this.iterators[]) == 1
===========================================================================
ch.thn.util.tree.ListTreeIterator.next():::EXIT160
===========================================================================
ch.thn.util.tree.ListTreeIterator.next():::EXIT
this.previousNodeCache == orig(this.previousNodeCache)
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.previousNodeCache == null
this.cursorBelowLastReturned == true
this.nextNodeCache == null
this.lastReturned != null
return != null
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
size(this.iterators[]) >= orig(size(this.iterators[]))
size(this.iterators[])-1 <= orig(size(this.iterators[]))
size(this.iterators[])-1 >= orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.ListTreeIterator.positionIterator(java.util.Collection, ch.thn.util.tree.core.ListTreeNodeInterface):::ENTER
this.previousNodeCache == null
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
arg0 != null
arg0.getClass().getName() == java.util.Collections$UnmodifiableList.class
arg1 != null
arg1.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.positionIterator(java.util.Collection, ch.thn.util.tree.core.ListTreeNodeInterface):::EXIT
this.previousNodeCache == orig(this.previousNodeCache)
this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned)
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.iterators[] == orig(this.iterators[])
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.previousNodeCache == null
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
return != null
return.getClass().getName() == java.util.Collections$UnmodifiableList$1.class
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.previous():::ENTER
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
size(this.iterators[]) one of { 1, 2, 3 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.previous():::EXIT136
this.previousNodeCache == orig(this.previousNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[].getClass().getName() one of { [null], [null, null] }
orig(this.cursorBelowLastReturned) == true
size(this.iterators[]) one of { 1, 2 }
===========================================================================
ch.thn.util.tree.ListTreeIterator.previous():::EXIT144
this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned)
this.previousNodeCache == null
===========================================================================
ch.thn.util.tree.ListTreeIterator.previous():::EXIT
this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName())
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.iterators[] == orig(this.iterators[])
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
(orig(this.cursorBelowLastReturned) == false)  ==>  (size(this.iterators[]) one of { 1, 2, 3 })
(orig(this.cursorBelowLastReturned) == false)  ==>  (this.cursorBelowLastReturned == orig(this.cursorBelowLastReturned))
(orig(this.cursorBelowLastReturned) == false)  ==>  (this.previousNodeCache == null)
(orig(this.cursorBelowLastReturned) == true)  ==>  (size(this.iterators[]) one of { 1, 2 })
(orig(this.cursorBelowLastReturned) == true)  ==>  (this.iterators[].getClass().getName() one of { [null], [null, null] })
(orig(this.cursorBelowLastReturned) == true)  ==>  (this.lastReturned == orig(this.lastReturned))
(orig(this.cursorBelowLastReturned) == true)  ==>  (this.previousNodeCache == orig(this.previousNodeCache))
(orig(this.cursorBelowLastReturned) == true)  ==>  (this.previousNodeCache.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(orig(this.cursorBelowLastReturned) == true)  ==>  (this.previousNodeCache.getClass().getName() == orig(this.previousNodeCache.getClass().getName()))
this.cursorBelowLastReturned == false
this.nextNodeCache == null
this.lastReturned != null
this.restOfTree == false
return != null
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
size(this.iterators[]) one of { 1, 2, 3 }
===========================================================================
ch.thn.util.tree.ListTreeNode:::OBJECT
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.formerNodeIndex == -1
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children != null
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children != null
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.formerParent == null
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.ListTreeNode.ListTreeNode(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.ListTreeNode.ListTreeNode(java.lang.Object):::EXIT
this.value == orig(arg0)
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.ListTreeNode.internalGetThis():::ENTER
===========================================================================
ch.thn.util.tree.ListTreeNode.internalGetThis():::EXIT
this.formerNodeIndex == return.formerNodeIndex
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == return.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == return.parent.children
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == return.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == return.parent.parent
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.parent.value
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == return.parent.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == return.parent.listeners
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.value
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this)
return != null
return.parent.formerParent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.ListTreeNode.nodeFactory(java.lang.Object):::ENTER
this.value.getClass().getName() == arg0.getClass().getName()
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
===========================================================================
ch.thn.util.tree.ListTreeNode.nodeFactory(java.lang.Object):::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.value == orig(arg0)
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return.formerNodeIndex == -1
return.parent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.SetTreeNode:::OBJECT
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.comparator != null
this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.children != null
this.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.parent == null
this.parent.parent.formerParent == null
this.parent.parent.value has only one value
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners has only one value
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.comparator.getClass().getName() != this.children.getClass().getName()
this.comparator.getClass().getName() != this.parent.getClass().getName()
this.comparator.getClass().getName() != this.parent.children.getClass().getName()
this.comparator.getClass().getName() != this.parent.parent.getClass().getName()
this.comparator.getClass().getName() != this.parent.parent.children.getClass().getName()
this.comparator.getClass().getName() != this.parent.parent.value.getClass().getName()
this.comparator.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.comparator.getClass().getName() != this.parent.value.getClass().getName()
this.comparator.getClass().getName() != this.parent.listeners.getClass().getName()
this.comparator.getClass().getName() != this.value.getClass().getName()
this.comparator.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.SetTreeNode.SetTreeNode(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.SetTreeNode.SetTreeNode(java.lang.Object):::EXIT
this.value == orig(arg0)
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.SetTreeNode.internalGetThis():::ENTER
===========================================================================
ch.thn.util.tree.SetTreeNode.internalGetThis():::EXIT
this.comparator == return.comparator
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == return.comparator.getClass().getName()
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.children == return.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == return.parent.children
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == return.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == return.parent.parent
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.parent.value
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == return.parent.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == return.parent.listeners
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.value
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this)
return != null
return.parent.formerParent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.SetTreeNode.nodeFactory(java.lang.Object):::ENTER
this.value.getClass().getName() == arg0.getClass().getName()
===========================================================================
ch.thn.util.tree.SetTreeNode.nodeFactory(java.lang.Object):::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == return.comparator.getClass().getName()
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.value == orig(arg0)
return.parent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.TreeIterator:::OBJECT
this has only one value
this.startNode has only one value
this.startNode.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.nextNodeCache.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.lastReturned.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.iterators has only one value
this.iterators[].getClass().getName() elements == null
this.subtreeOnly == true
this.restOfTree == false
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.TreeIterator.TreeIterator(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
===========================================================================
ch.thn.util.tree.TreeIterator.TreeIterator(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
this.nextNodeCache has only one value
this.lastReturned == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
===========================================================================
ch.thn.util.tree.TreeIterator.getIterator(java.util.Collection):::ENTER
this.nextNodeCache == null
arg0.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
ch.thn.util.tree.TreeIterator.getIterator(java.util.Collection):::EXIT
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.iterators[] == orig(this.iterators[])
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.nextNodeCache == null
return.getClass().getName() == com.google.common.collect.Iterators$3.class
===========================================================================
ch.thn.util.tree.TreeNodeEvent:::CLASS
===========================================================================
ch.thn.util.tree.TreeNodeEvent:::OBJECT
this.node != null
this.node.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.oldNode == null
this.parentOfRemoved == null
this.nodeIndexOfRemoved == -1
===========================================================================
ch.thn.util.tree.TreeNodeEvent.TreeNodeEvent(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0.getClass().getName() == arg1.getClass().getName()
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.TreeNodeEvent.TreeNodeEvent(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
this.node == orig(arg1)
this.node.getClass().getName() == orig(arg0.getClass().getName())
this.node.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
ch.thn.util.tree.TreeNodeEvent.TreeNodeEvent(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, int):::ENTER
arg0.getClass().getName() == arg1.getClass().getName()
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
arg2 == null
arg3 == null
arg4 == -1
===========================================================================
ch.thn.util.tree.TreeNodeEvent.TreeNodeEvent(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface, int):::EXIT
this.node == orig(arg1)
this.node.getClass().getName() == orig(arg0.getClass().getName())
this.node.getClass().getName() == orig(arg1.getClass().getName())
this.nodeIndexOfRemoved == orig(arg4)
===========================================================================
ch.thn.util.tree.TreeNodeEvent.getNode():::ENTER
===========================================================================
ch.thn.util.tree.TreeNodeEvent.getNode():::EXIT
this.node == return
this.node.getClass().getName() == return.getClass().getName()
this.oldNode == orig(this.oldNode)
this.parentOfRemoved == orig(this.parentOfRemoved)
this.nodeIndexOfRemoved == orig(this.nodeIndexOfRemoved)
return == orig(this.node)
return.getClass().getName() == orig(this.node.getClass().getName())
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.TreeUtil.getLastLeafNode(ch.thn.util.tree.core.ListTreeNodeInterface):::ENTER
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.TreeUtil.getLastLeafNode(ch.thn.util.tree.core.ListTreeNodeInterface):::EXIT128
===========================================================================
ch.thn.util.tree.TreeUtil.getLastLeafNode(ch.thn.util.tree.core.ListTreeNodeInterface):::EXIT
return.getClass().getName() == orig(arg0.getClass().getName())
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode:::OBJECT
this.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.children != null
this.parent.parent.children != null
this.parent.parent.formerParent == null
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.AbstractGenericCollectionTreeNode(java.util.Collection, java.lang.Object):::ENTER
arg0.getClass().getName() == java.util.LinkedList.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.AbstractGenericCollectionTreeNode(java.util.Collection, java.lang.Object):::EXIT
this.children == orig(arg0)
this.children.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.children.getClass().getName() == java.util.LinkedList.class
this.parent == null
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addChildNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.getClass().getName() == arg0.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.parent == arg0.parent
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0 != null
arg0.children != null
arg0.parent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addChildNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::EXIT
this.children == arg0.parent.children
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.children.getClass().getName())
this.parent == arg0.parent.parent
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent == orig(arg0.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == arg0.parent.value
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
this.listeners == arg0.parent.listeners
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.children == return.children
arg0.children == orig(arg0.children)
arg0.parent == return.parent
arg0.parent == orig(this)
arg0.parent.getClass().getName() == return.getClass().getName()
arg0.formerParent == orig(arg0.formerParent)
arg0.value == return.value
arg0.value == orig(arg0.value)
arg0.listeners == return.listeners
arg0.listeners == orig(arg0.listeners)
return == orig(arg0)
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.getClass().getName() == orig(arg0.getClass().getName())
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0.children != null
arg0.parent != null
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
return != null
return.parent.formerParent == null
return.formerParent == null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addChildNode(java.lang.Object):::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.value.getClass().getName() == arg0.getClass().getName()
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0 != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addChildNode(java.lang.Object):::EXIT
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.parent == orig(this)
return.value == orig(arg0)
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
return != null
return.children != null
return.parent != null
return.parent.formerParent == null
return.formerParent == null
return.value != null
return.listeners != null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addTreeNodeListener(ch.thn.util.tree.TreeNodeListener):::ENTER
this has only one value
this.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.children has only one value
this.children.getClass().getName() == java.util.LinkedList.class
this.parent == null
this.value has only one value
this.listeners has only one value
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tests.TreeTest$TestTreeNodeListener.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.addTreeNodeListener(ch.thn.util.tree.TreeNodeListener):::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.children has only one value
this.children.getClass().getName() == java.util.LinkedList.class
this.parent == null
this.value has only one value
this.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.fireNodeAdded(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::ENTER
this == arg0.parent
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.getClass().getName() == arg0.getClass().getName()
this.getClass().getName() == arg0.parent.getClass().getName()
this.children == arg0.parent.children
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.parent == arg0.parent.parent
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.value == arg0.parent.value
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.listeners == arg0.parent.listeners
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.children != null
this.parent.parent.parent == null
arg0 != null
arg0.children != null
arg0.parent != null
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.fireNodeAdded(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::EXIT
this.children == arg0.parent.children
this.children == orig(this.children)
this.children == orig(arg0.parent.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.parent.children.getClass().getName())
this.parent == arg0.parent.parent
this.parent == orig(this.parent)
this.parent == orig(arg0.parent.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.getClass().getName() == orig(arg0.parent.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == arg0.parent.value
this.value == orig(this.value)
this.value == orig(arg0.parent.value)
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.parent.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
this.listeners == arg0.parent.listeners
this.listeners == orig(this.listeners)
this.listeners == orig(arg0.parent.listeners)
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.children == orig(arg0.children)
arg0.parent == orig(this)
arg0.parent == orig(arg0.parent)
arg0.parent.getClass().getName() == orig(this.getClass().getName())
arg0.parent.getClass().getName() == orig(arg0.getClass().getName())
arg0.parent.getClass().getName() == orig(arg0.parent.getClass().getName())
arg0.parent.formerParent == orig(arg0.parent.formerParent)
arg0.formerParent == orig(arg0.formerParent)
arg0.value == orig(arg0.value)
arg0.listeners == orig(arg0.listeners)
this.children != null
this.parent.parent.parent == null
arg0.children != null
arg0.parent != null
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != arg0.parent.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != arg0.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getChildNodesCount():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.children != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getChildNodesCount():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.children != null
return one of { 0, 1, 4 }
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getNodeValue():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.children != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getNodeValue():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == return.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == return.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return
this.value.getClass().getName() == return.getClass().getName()
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this.value)
return.getClass().getName() == orig(this.value.getClass().getName())
this.children != null
return != null
return.getClass().getName() == java.lang.String.class
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getParentNode():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.children != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getParentNode():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return
this.parent.getClass().getName() == return.getClass().getName()
this.parent.children == return.children
this.parent.children.getClass().getName() == return.children.getClass().getName()
this.parent.parent == return.parent
this.parent.parent.getClass().getName() == return.parent.getClass().getName()
this.parent.parent.children == return.parent.children
this.parent.parent.children.getClass().getName() == return.parent.children.getClass().getName()
this.parent.parent.parent == return.parent.parent
this.parent.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == return.parent.value
this.parent.parent.value.getClass().getName() == return.parent.value.getClass().getName()
this.parent.parent.listeners == return.parent.listeners
this.parent.parent.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.value
this.parent.value.getClass().getName() == return.value.getClass().getName()
this.parent.listeners == return.listeners
this.parent.listeners.getClass().getName() == return.listeners.getClass().getName()
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this.parent)
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == return.parent.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.getClass().getName() == orig(this.parent.getClass().getName())
return.children == orig(this.parent.children)
return.children.getClass().getName() == return.parent.children.getClass().getName()
return.children.getClass().getName() == orig(this.parent.children.getClass().getName())
return.parent == orig(this.parent.parent)
return.parent.getClass().getName() == return.parent.parent.getClass().getName()
return.parent.getClass().getName() == orig(this.getClass().getName())
return.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
return.parent.children == orig(this.parent.parent.children)
return.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
return.parent.parent == orig(this.parent.parent.parent)
return.parent.parent.getClass().getName() == orig(this.getClass().getName())
return.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
return.parent.value == orig(this.parent.parent.value)
return.parent.value.getClass().getName() == return.value.getClass().getName()
return.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
return.parent.listeners == orig(this.parent.parent.listeners)
return.parent.listeners.getClass().getName() == return.listeners.getClass().getName()
return.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
return.value == orig(this.parent.value)
return.value.getClass().getName() == orig(this.parent.value.getClass().getName())
return.listeners == orig(this.parent.listeners)
return.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.children != null
return.children != null
return.parent.children != null
return.parent.formerParent == null
return.parent.value != null
return.parent.value.getClass().getName() == java.lang.String.class
return.parent.listeners != null
return.parent.listeners.getClass().getName() == java.util.HashSet.class
return.formerParent == null
return.value != null
return.value.getClass().getName() == java.lang.String.class
return.listeners != null
return.listeners.getClass().getName() == java.util.HashSet.class
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.children.getClass().getName() != return.parent.getClass().getName()
this.children.getClass().getName() != return.parent.parent.getClass().getName()
this.children.getClass().getName() != return.parent.value.getClass().getName()
this.children.getClass().getName() != return.parent.listeners.getClass().getName()
this.children.getClass().getName() != return.value.getClass().getName()
this.children.getClass().getName() != return.listeners.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != return.children.getClass().getName()
this.value.getClass().getName() != return.parent.getClass().getName()
this.value.getClass().getName() != return.parent.children.getClass().getName()
this.value.getClass().getName() != return.parent.parent.getClass().getName()
this.value.getClass().getName() != return.parent.listeners.getClass().getName()
this.value.getClass().getName() != return.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.children.getClass().getName()
this.listeners.getClass().getName() != return.parent.getClass().getName()
this.listeners.getClass().getName() != return.parent.children.getClass().getName()
this.listeners.getClass().getName() != return.parent.parent.getClass().getName()
this.listeners.getClass().getName() != return.parent.value.getClass().getName()
this.listeners.getClass().getName() != return.value.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != return.children.getClass().getName()
return.getClass().getName() != return.parent.children.getClass().getName()
return.getClass().getName() != return.parent.value.getClass().getName()
return.getClass().getName() != return.parent.listeners.getClass().getName()
return.getClass().getName() != return.value.getClass().getName()
return.getClass().getName() != return.listeners.getClass().getName()
return.children.getClass().getName() != return.parent.getClass().getName()
return.children.getClass().getName() != return.parent.parent.getClass().getName()
return.children.getClass().getName() != return.parent.value.getClass().getName()
return.children.getClass().getName() != return.parent.listeners.getClass().getName()
return.children.getClass().getName() != return.value.getClass().getName()
return.children.getClass().getName() != return.listeners.getClass().getName()
return.children.getClass().getName() != orig(this.getClass().getName())
return.parent.getClass().getName() != return.parent.children.getClass().getName()
return.parent.getClass().getName() != return.parent.value.getClass().getName()
return.parent.getClass().getName() != return.parent.listeners.getClass().getName()
return.parent.getClass().getName() != return.value.getClass().getName()
return.parent.getClass().getName() != return.listeners.getClass().getName()
return.parent.children.getClass().getName() != return.parent.parent.getClass().getName()
return.parent.children.getClass().getName() != return.parent.value.getClass().getName()
return.parent.children.getClass().getName() != return.parent.listeners.getClass().getName()
return.parent.children.getClass().getName() != return.value.getClass().getName()
return.parent.children.getClass().getName() != return.listeners.getClass().getName()
return.parent.children.getClass().getName() != orig(this.getClass().getName())
return.parent.parent.getClass().getName() != return.parent.value.getClass().getName()
return.parent.parent.getClass().getName() != return.parent.listeners.getClass().getName()
return.parent.parent.getClass().getName() != return.value.getClass().getName()
return.parent.parent.getClass().getName() != return.listeners.getClass().getName()
return.parent.value.getClass().getName() != return.parent.listeners.getClass().getName()
return.parent.value.getClass().getName() != return.listeners.getClass().getName()
return.parent.value.getClass().getName() != orig(this.getClass().getName())
return.parent.listeners.getClass().getName() != return.value.getClass().getName()
return.parent.listeners.getClass().getName() != orig(this.getClass().getName())
return.value.getClass().getName() != return.listeners.getClass().getName()
return.value.getClass().getName() != orig(this.getClass().getName())
return.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getRootNode():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getRootNode():::EXIT394
this.children == return.children
this.value == return.value
this.listeners == return.listeners
return == orig(this)
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
orig(this) has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getRootNode():::EXIT397
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
return.getClass().getName() == orig(this.parent.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.getRootNode():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == orig(this.getClass().getName())
(this.parent == null)  ==>  (orig(this) has only one value)
(this.parent == null)  ==>  (return == orig(this))
(this.parent == null)  ==>  (this.children == return.children)
(this.parent == null)  ==>  (this.children has only one value)
(this.parent == null)  ==>  (this.listeners == return.listeners)
(this.parent == null)  ==>  (this.listeners has only one value)
(this.parent == null)  ==>  (this.value == return.value)
(this.parent == null)  ==>  (this.value has only one value)
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return has only one value
return != null
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return.children has only one value
return.children != null
return.parent == null
return.formerParent == null
return.value has only one value
return.value != null
return.listeners has only one value
return.listeners != null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalAddChildNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode, boolean):::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.getClass().getName() == arg0.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.parent == arg0.parent
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0 != null
arg0.children != null
arg0.parent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
arg1 == true
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalAddChildNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode, boolean):::EXIT195
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalAddChildNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode, boolean):::EXIT
this.children == arg0.parent.children
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.children.getClass().getName())
this.parent == arg0.parent.parent
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent == orig(arg0.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == arg0.parent.value
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
this.listeners == arg0.parent.listeners
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.children == return.children
arg0.children == orig(arg0.children)
arg0.parent == return.parent
arg0.parent == orig(this)
arg0.parent.getClass().getName() == return.getClass().getName()
arg0.formerParent == orig(arg0.formerParent)
arg0.value == return.value
arg0.value == orig(arg0.value)
arg0.listeners == return.listeners
arg0.listeners == orig(arg0.listeners)
return == orig(arg0)
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.getClass().getName() == orig(arg0.getClass().getName())
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0.children != null
arg0.parent != null
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
return != null
return.parent.formerParent == null
return.formerParent == null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalGetChildren():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.children != null
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalGetChildren():::EXIT
this.children == return
this.children.getClass().getName() == return.getClass().getName()
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == return.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == return.getClass().getName()
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this.children)
return.getClass().getName() == orig(this.children.getClass().getName())
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
return != null
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalSetChildrenCollection(java.util.Collection):::ENTER
this.children == null
this.parent == null
arg0 != null
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.getClass().getName() != arg0.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != arg0.getClass().getName()
this.listeners.getClass().getName() != arg0.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalSetChildrenCollection(java.util.Collection):::EXIT
this.children == orig(arg0)
this.children.getClass().getName() == orig(arg0.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.children != null
this.parent == null
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalSetParentNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::ENTER
this.getClass().getName() == arg0.getClass().getName()
this.getClass().getName() == arg0.parent.getClass().getName()
this.getClass().getName() == arg0.parent.parent.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
arg0.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.children != null
this.parent == null
arg0 != null
arg0.children != null
arg0.parent.children != null
arg0.parent.formerParent == null
arg0.parent.value != null
arg0.parent.value.getClass().getName() == java.lang.String.class
arg0.parent.listeners != null
arg0.parent.listeners.getClass().getName() == java.util.HashSet.class
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.getClass().getName() != arg0.parent.children.getClass().getName()
this.getClass().getName() != arg0.parent.value.getClass().getName()
this.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != arg0.parent.getClass().getName()
this.children.getClass().getName() != arg0.parent.parent.getClass().getName()
this.children.getClass().getName() != arg0.parent.value.getClass().getName()
this.children.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != arg0.parent.getClass().getName()
this.value.getClass().getName() != arg0.parent.children.getClass().getName()
this.value.getClass().getName() != arg0.parent.parent.getClass().getName()
this.value.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.children.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.children.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.parent.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.parent.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.parent.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.value.getClass().getName() != arg0.parent.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.internalSetParentNode(ch.thn.util.tree.core.AbstractGenericCollectionTreeNode):::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.children.getClass().getName())
this.parent == orig(arg0)
this.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(arg0.getClass().getName())
this.parent.children == arg0.children
this.parent.parent == arg0.parent
this.parent.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.parent.children == arg0.parent.children
this.parent.parent.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.parent.parent.parent == arg0.parent.parent
this.parent.parent.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.parent.value == arg0.parent.value
this.parent.parent.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.parent.parent.listeners == arg0.parent.listeners
this.parent.parent.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.parent.value == arg0.value
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners == arg0.listeners
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.children == orig(arg0.children)
arg0.parent == orig(arg0.parent)
arg0.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
arg0.parent.getClass().getName() == orig(arg0.parent.getClass().getName())
arg0.parent.children == orig(arg0.parent.children)
arg0.parent.children.getClass().getName() == orig(arg0.parent.children.getClass().getName())
arg0.parent.parent == orig(arg0.parent.parent)
arg0.parent.parent.getClass().getName() == orig(arg0.parent.parent.getClass().getName())
arg0.parent.formerParent == orig(arg0.parent.formerParent)
arg0.parent.value == orig(arg0.parent.value)
arg0.parent.value.getClass().getName() == orig(arg0.parent.value.getClass().getName())
arg0.parent.listeners == orig(arg0.parent.listeners)
arg0.parent.listeners.getClass().getName() == orig(arg0.parent.listeners.getClass().getName())
arg0.formerParent == orig(arg0.formerParent)
arg0.value == orig(arg0.value)
arg0.listeners == orig(arg0.listeners)
this.children != null
this.parent != null
arg0.children != null
arg0.parent.children != null
arg0.parent.formerParent == null
arg0.parent.value != null
arg0.parent.value.getClass().getName() == java.lang.String.class
arg0.parent.listeners != null
arg0.parent.listeners.getClass().getName() == java.util.HashSet.class
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != arg0.parent.getClass().getName()
this.children.getClass().getName() != arg0.parent.parent.getClass().getName()
this.children.getClass().getName() != arg0.parent.value.getClass().getName()
this.children.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != arg0.parent.children.getClass().getName()
this.parent.getClass().getName() != arg0.parent.value.getClass().getName()
this.parent.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != arg0.parent.getClass().getName()
this.value.getClass().getName() != arg0.parent.children.getClass().getName()
this.value.getClass().getName() != arg0.parent.parent.getClass().getName()
this.value.getClass().getName() != arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.children.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.children.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.parent.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.children.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.parent.getClass().getName() != arg0.parent.value.getClass().getName()
arg0.parent.parent.getClass().getName() != arg0.parent.listeners.getClass().getName()
arg0.parent.value.getClass().getName() != arg0.parent.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isLeafNode():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.children != null
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isLeafNode():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
(return == false)  ==>  (this.parent.parent.parent == null)
(return == false)  ==>  (this.parent.parent.value has only one value)
(return == true)  ==>  (this.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent != null)
(return == true)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() != this.value.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName()))
this.children != null
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isLeafNode():::EXIT;condition="return == true"
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.parent != null
return == true
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isLeafNode():::EXIT;condition="not(return == true)"
this.parent.parent.parent == null
this.parent.parent.value has only one value
return == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isRootNode():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isRootNode():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
(this.parent != null)  <==>  (return == false)
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() == this.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() == this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.children != null)
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() == java.util.LinkedList.class)
(this.parent != null)  ==>  (this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.formerParent == null)
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.getClass().getName() == this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.listeners != null)
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() == java.util.HashSet.class)
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() == this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children != null)
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() == java.util.LinkedList.class)
(this.parent != null)  ==>  (this.parent.parent.formerParent == null)
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners != null)
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class)
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.value != null)
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == java.lang.String.class)
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.value != null)
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.value.getClass().getName() == java.lang.String.class)
(this.parent != null)  ==>  (this.parent.value.getClass().getName() == this.value.getClass().getName())
(this.parent == null)  <==>  (return == true)
(this.parent == null)  ==>  (orig(this) has only one value)
(this.parent == null)  ==>  (this.children has only one value)
(this.parent == null)  ==>  (this.listeners has only one value)
(this.parent == null)  ==>  (this.value has only one value)
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isRootNode():::EXIT;condition="return == true"
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
return == true
orig(this) has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.isRootNode():::EXIT;condition="not(return == true)"
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.parent != null
return == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.iterator():::ENTER
this has only one value
this.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent == null
this.value has only one value
this.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.iterator():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.startNode == return.nextNodeCache
return.startNode.getClass().getName() == return.nextNodeCache.getClass().getName()
return.startNode.getClass().getName() == orig(this.getClass().getName())
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent == null
this.value has only one value
this.listeners has only one value
return has only one value
return.startNode has only one value
return.startNode.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.lastReturned == null
return.iterators has only one value
return.iterators[] == []
return.iterators[].getClass().getName() == []
return.subtreeOnly == true
return.restOfTree == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.toString():::ENTER
this.children != null
this.parent.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericCollectionTreeNode.toString():::EXIT
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.children != null
this.parent.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return != null
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeyListTreeNode:::OBJECT
this.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.formerNodeIndex == -1
this.map != null
this.map.getClass().getName() == com.google.common.collect.LinkedListMultimap.class
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
this.parent == null
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != this.map.getClass().getName()
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeyListTreeNode.AbstractGenericKeyListTreeNode(java.lang.Object, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Integer.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeyListTreeNode.AbstractGenericKeyListTreeNode(java.lang.Object, java.lang.Object):::EXIT
this.key == orig(arg0)
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1:::OBJECT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == java.lang.Integer.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::ENTER
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == java.lang.Integer.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::EXIT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.compare(java.lang.Object, java.lang.Object):::ENTER
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == arg0.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == arg1.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent != null
arg0 != null
arg1 != null
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.compare(java.lang.Object, java.lang.Object):::EXIT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName())
orig(arg0.getClass().getName()) == orig(arg1.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent != null
return <= 2
return >= -1
orig(arg0.getClass().getName()) == java.lang.Integer.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2:::OBJECT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == java.lang.Integer.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::ENTER
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == java.lang.Integer.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::EXIT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.compare(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode, ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::ENTER
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg0.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg0.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg1.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg1.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == arg1.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == arg1.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == arg1.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == arg0.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == arg1.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == arg1.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == arg1.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == arg0.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == arg1.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == arg1.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == arg1.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == arg1.listeners.getClass().getName()
arg0.keyComparator.getClass().getName() == arg1.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children != null
arg0 != null
arg0.keyComparator != null
arg0.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
arg0.valueComparator != null
arg0.map != null
arg0.key != null
arg0.children != null
arg0.parent != null
arg0.parent.children != null
arg0.parent.formerParent == null
arg0.parent.value != null
arg0.parent.listeners != null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
arg1 != null
arg1.keyComparator != null
arg1.valueComparator != null
arg1.map != null
arg1.key != null
arg1.children != null
arg1.parent != null
arg1.parent.children != null
arg1.parent.formerParent == null
arg1.parent.value != null
arg1.parent.listeners != null
arg1.formerParent == null
arg1.value != null
arg1.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() != arg0.keyComparator.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.compare(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode, ch.thn.util.tree.core.AbstractGenericKeySetTreeNode):::EXIT
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg0.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == arg1.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(arg0.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(arg1.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() == orig(arg1.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName() == arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName() == arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName() == arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == arg1.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == orig(arg0.parent.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() == orig(arg1.parent.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
arg0.keyComparator == orig(arg0.keyComparator)
arg0.keyComparator.getClass().getName() == arg1.keyComparator.getClass().getName()
arg0.keyComparator.getClass().getName() == orig(arg0.keyComparator.getClass().getName())
arg0.keyComparator.getClass().getName() == orig(arg1.keyComparator.getClass().getName())
arg0.valueComparator == orig(arg0.valueComparator)
arg0.valueComparator.getClass().getName() == arg1.valueComparator.getClass().getName()
arg0.valueComparator.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator.getClass().getName())
arg0.valueComparator.getClass().getName() == orig(arg0.valueComparator.getClass().getName())
arg0.valueComparator.getClass().getName() == orig(arg1.valueComparator.getClass().getName())
arg0.map == orig(arg0.map)
arg0.map.getClass().getName() == arg1.map.getClass().getName()
arg0.map.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map.getClass().getName())
arg0.map.getClass().getName() == orig(arg0.map.getClass().getName())
arg0.map.getClass().getName() == orig(arg1.map.getClass().getName())
arg0.key == orig(arg0.key)
arg0.key.getClass().getName() == arg1.key.getClass().getName()
arg0.key.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.key.getClass().getName())
arg0.key.getClass().getName() == orig(arg0.key.getClass().getName())
arg0.key.getClass().getName() == orig(arg1.key.getClass().getName())
arg0.children == orig(arg0.children)
arg0.children.getClass().getName() == arg0.parent.children.getClass().getName()
arg0.children.getClass().getName() == arg1.children.getClass().getName()
arg0.children.getClass().getName() == arg1.parent.children.getClass().getName()
arg0.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg0.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg0.parent.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg1.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg1.parent.children.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.parent.children == orig(arg0.parent.children)
arg0.parent.parent == orig(arg0.parent.parent)
arg0.parent.formerParent == orig(arg0.parent.formerParent)
arg0.parent.value == orig(arg0.parent.value)
arg0.parent.value.getClass().getName() == arg0.value.getClass().getName()
arg0.parent.listeners == orig(arg0.parent.listeners)
arg0.parent.listeners.getClass().getName() == arg0.listeners.getClass().getName()
arg0.formerParent == orig(arg0.formerParent)
arg0.value == orig(arg0.value)
arg0.value.getClass().getName() == arg1.parent.value.getClass().getName()
arg0.value.getClass().getName() == arg1.value.getClass().getName()
arg0.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg0.parent.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg0.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg1.parent.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg1.value.getClass().getName())
arg0.listeners == orig(arg0.listeners)
arg0.listeners.getClass().getName() == arg1.parent.listeners.getClass().getName()
arg0.listeners.getClass().getName() == arg1.listeners.getClass().getName()
arg0.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg0.parent.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg1.parent.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg1.listeners.getClass().getName())
arg1.keyComparator == orig(arg1.keyComparator)
arg1.valueComparator == orig(arg1.valueComparator)
arg1.map == orig(arg1.map)
arg1.key == orig(arg1.key)
arg1.children == orig(arg1.children)
arg1.parent == orig(arg1.parent)
arg1.parent.children == orig(arg1.parent.children)
arg1.parent.parent == orig(arg1.parent.parent)
arg1.parent.formerParent == orig(arg1.parent.formerParent)
arg1.parent.value == orig(arg1.parent.value)
arg1.parent.listeners == orig(arg1.parent.listeners)
arg1.formerParent == orig(arg1.formerParent)
arg1.value == orig(arg1.value)
arg1.listeners == orig(arg1.listeners)
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.valueComparator != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.map != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.children != null
arg0.keyComparator != null
arg0.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
arg0.valueComparator != null
arg0.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
arg0.map != null
arg0.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
arg0.key != null
arg0.key.getClass().getName() == java.lang.Integer.class
arg0.children != null
arg0.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
arg0.parent != null
arg0.parent.children != null
arg0.parent.formerParent == null
arg0.parent.value != null
arg0.parent.listeners != null
arg0.formerParent == null
arg0.value != null
arg0.value.getClass().getName() == java.lang.String.class
arg0.listeners != null
arg0.listeners.getClass().getName() == java.util.HashSet.class
arg1.keyComparator != null
arg1.valueComparator != null
arg1.map != null
arg1.key != null
arg1.children != null
arg1.parent != null
arg1.parent.children != null
arg1.parent.formerParent == null
arg1.parent.value != null
arg1.parent.listeners != null
arg1.formerParent == null
arg1.value != null
arg1.listeners != null
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.getClass().getName() != arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.keyComparator.getClass().getName() != arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.getClass().getName() != arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.children.getClass().getName() != arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.value.getClass().getName() != arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.keyComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.valueComparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.map.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.key.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.this.parent.listeners.getClass().getName() != arg0.value.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.valueComparator.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.map.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.key.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.children.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.value.getClass().getName()
arg0.keyComparator.getClass().getName() != arg0.listeners.getClass().getName()
arg0.valueComparator.getClass().getName() != arg0.map.getClass().getName()
arg0.valueComparator.getClass().getName() != arg0.key.getClass().getName()
arg0.valueComparator.getClass().getName() != arg0.children.getClass().getName()
arg0.valueComparator.getClass().getName() != arg0.value.getClass().getName()
arg0.valueComparator.getClass().getName() != arg0.listeners.getClass().getName()
arg0.map.getClass().getName() != arg0.key.getClass().getName()
arg0.map.getClass().getName() != arg0.children.getClass().getName()
arg0.map.getClass().getName() != arg0.value.getClass().getName()
arg0.map.getClass().getName() != arg0.listeners.getClass().getName()
arg0.key.getClass().getName() != arg0.children.getClass().getName()
arg0.key.getClass().getName() != arg0.value.getClass().getName()
arg0.key.getClass().getName() != arg0.listeners.getClass().getName()
arg0.children.getClass().getName() != arg0.value.getClass().getName()
arg0.children.getClass().getName() != arg0.listeners.getClass().getName()
arg0.value.getClass().getName() != arg0.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode:::OBJECT
this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.keyComparator != null
this.valueComparator != null
this.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent == null
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != this.keyComparator.getClass().getName()
this.getClass().getName() != this.valueComparator.getClass().getName()
this.getClass().getName() != this.map.getClass().getName()
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.keyComparator.getClass().getName() != this.valueComparator.getClass().getName()
this.keyComparator.getClass().getName() != this.map.getClass().getName()
this.keyComparator.getClass().getName() != this.key.getClass().getName()
this.keyComparator.getClass().getName() != this.children.getClass().getName()
this.keyComparator.getClass().getName() != this.value.getClass().getName()
this.keyComparator.getClass().getName() != this.listeners.getClass().getName()
this.valueComparator.getClass().getName() != this.map.getClass().getName()
this.valueComparator.getClass().getName() != this.key.getClass().getName()
this.valueComparator.getClass().getName() != this.children.getClass().getName()
this.valueComparator.getClass().getName() != this.value.getClass().getName()
this.valueComparator.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.AbstractGenericKeySetTreeNode(java.lang.Object, java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.Integer.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.AbstractGenericKeySetTreeNode(java.lang.Object, java.lang.Object):::EXIT
this.key == orig(arg0)
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.keyComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$1.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.AbstractGenericKeySetTreeNode(java.util.Comparator, java.util.Comparator, java.lang.Object, java.lang.Object):::ENTER
arg0.getClass().getName() == ch.thn.util.tests.TreeTest$1.class
arg1 == null
arg2 != null
arg2.getClass().getName() == java.lang.Integer.class
arg3 != null
arg3.getClass().getName() == java.lang.String.class
arg2.getClass().getName() != arg3.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericKeySetTreeNode.AbstractGenericKeySetTreeNode(java.util.Comparator, java.util.Comparator, java.lang.Object, java.lang.Object):::EXIT
this.keyComparator.getClass().getName() == orig(arg0.getClass().getName())
this.key == orig(arg2)
this.key.getClass().getName() == orig(arg2.getClass().getName())
this.value == orig(arg3)
this.value.getClass().getName() == orig(arg3.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode:::OBJECT
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.formerNodeIndex == -1
this.children != null
this.children.getClass().getName() == java.util.LinkedList.class
this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.children != null
this.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.children != null
this.parent.parent.children.getClass().getName() == java.util.LinkedList.class
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.parent.parent.formerParent == null
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.AbstractGenericListTreeNode(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.AbstractGenericListTreeNode(java.lang.Object):::EXIT
this.value == orig(arg0)
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNode(int):::ENTER
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
arg0 >= 0
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNode(int):::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return != null
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return.formerNodeIndex == -1
return.children != null
return.parent != null
return.parent.formerParent == null
return.formerParent == null
return.value != null
return.listeners != null
this.children.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNodeIndex(ch.thn.util.tree.core.AbstractGenericListTreeNode):::ENTER
this.getClass().getName() == arg0.getClass().getName()
this.getClass().getName() == arg0.parent.getClass().getName()
this.children == arg0.parent.children
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.parent == arg0.parent.parent
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.value == arg0.parent.value
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.listeners == arg0.parent.listeners
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
arg0 != null
arg0.formerNodeIndex == -1
arg0.children != null
arg0.parent != null
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNodeIndex(ch.thn.util.tree.core.AbstractGenericListTreeNode):::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == arg0.parent.children
this.children == orig(this.children)
this.children == orig(arg0.parent.children)
this.children.getClass().getName() == arg0.children.getClass().getName()
this.children.getClass().getName() == arg0.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.children.getClass().getName())
this.children.getClass().getName() == orig(arg0.parent.children.getClass().getName())
this.parent == arg0.parent.parent
this.parent == orig(this.parent)
this.parent == orig(arg0.parent.parent)
this.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.getClass().getName() == arg0.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.getClass().getName() == orig(arg0.parent.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == arg0.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == arg0.parent.value
this.value == orig(this.value)
this.value == orig(arg0.parent.value)
this.value.getClass().getName() == arg0.parent.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.parent.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
this.listeners == arg0.parent.listeners
this.listeners == orig(this.listeners)
this.listeners == orig(arg0.parent.listeners)
this.listeners.getClass().getName() == arg0.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.formerNodeIndex == orig(arg0.formerNodeIndex)
arg0.children == orig(arg0.children)
arg0.parent == orig(arg0.parent)
arg0.parent.getClass().getName() == orig(this.getClass().getName())
arg0.parent.getClass().getName() == orig(arg0.getClass().getName())
arg0.parent.getClass().getName() == orig(arg0.parent.getClass().getName())
arg0.parent.formerParent == orig(arg0.parent.formerParent)
arg0.formerParent == orig(arg0.formerParent)
arg0.value == orig(arg0.value)
arg0.listeners == orig(arg0.listeners)
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
arg0.formerNodeIndex == -1
arg0.children != null
arg0.parent != null
arg0.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
arg0.parent.formerParent == null
arg0.formerParent == null
arg0.value != null
arg0.listeners != null
return >= 0
this.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.value.getClass().getName() != arg0.parent.getClass().getName()
this.parent.parent.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.parent.value.getClass().getName() != arg0.parent.getClass().getName()
this.parent.listeners.getClass().getName() != arg0.parent.getClass().getName()
this.value.getClass().getName() != arg0.parent.getClass().getName()
this.listeners.getClass().getName() != arg0.parent.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNodes():::ENTER
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getChildNodes():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return != null
return[] elements != null
return[].getClass().getName() elements == ch.thn.util.tree.ListTreeNode.class
return[].getClass().getName() one of { [ch.thn.util.tree.ListTreeNode], [ch.thn.util.tree.ListTreeNode, ch.thn.util.tree.ListTreeNode, ch.thn.util.tree.ListTreeNode, ch.thn.util.tree.ListTreeNode] }
return.getClass().getName() == java.util.Collections$UnmodifiableList.class
size(return[]) one of { 1, 4 }
this.children.getClass().getName() != return.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() in return[].getClass().getName()
this.parent.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() in return[].getClass().getName()
this.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
orig(this.getClass().getName()) in return[].getClass().getName()
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getLastChildNode():::ENTER
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getLastChildNode():::EXIT102
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getLastChildNode():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.getClass().getName()
this.parent.children == orig(this.parent.children)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.listeners == orig(this.parent.listeners)
this.formerParent == orig(this.formerParent)
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == return.parent.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return.formerNodeIndex == -1
return.parent.formerParent == null
return.formerParent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getNodeIndex():::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getNodeIndex():::EXIT196
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
return == 0
orig(this) has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getNodeIndex():::EXIT199
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.parent != null
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getNodeIndex():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() == this.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.children.getClass().getName() == this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.children != null)
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.children.getClass().getName() == java.util.LinkedList.class)
(this.parent != null)  ==>  (this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.formerParent == null)
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.getClass().getName() == this.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.listeners != null)
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() == java.util.HashSet.class)
(this.parent != null)  ==>  (this.parent.listeners.getClass().getName() == this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children != null)
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.children.getClass().getName() == java.util.LinkedList.class)
(this.parent != null)  ==>  (this.parent.parent.formerParent == null)
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners != null)
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class)
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() != this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(this.parent != null)  ==>  (this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.value != null)
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == java.lang.String.class)
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.parent.value.getClass().getName() == this.value.getClass().getName())
(this.parent != null)  ==>  (this.parent.value != null)
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != orig(this.getClass().getName()))
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != this.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName())
(this.parent != null)  ==>  (this.parent.value.getClass().getName() == java.lang.String.class)
(this.parent != null)  ==>  (this.parent.value.getClass().getName() == this.value.getClass().getName())
(this.parent == null)  ==>  (orig(this) has only one value)
(this.parent == null)  ==>  (return == 0)
(this.parent == null)  ==>  (this.children has only one value)
(this.parent == null)  ==>  (this.listeners has only one value)
(this.parent == null)  ==>  (this.value has only one value)
return >= 0
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getPreviousSibling():::ENTER
this.parent != null
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getPreviousSibling():::EXIT138
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.getPreviousSibling():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent == return.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.getClass().getName()
this.parent.children == return.parent.children
this.parent.children == orig(this.parent.children)
this.parent.parent == return.parent.parent
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == return.parent.value
this.parent.value == orig(this.parent.value)
this.parent.listeners == return.parent.listeners
this.parent.listeners == orig(this.parent.listeners)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.getClass().getName() == orig(this.parent.getClass().getName())
this.parent != null
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return != null
return.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return.formerNodeIndex == -1
return.children != null
return.parent.formerParent == null
return.formerParent == null
return.value != null
return.listeners != null
this.children.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.isFirstNode():::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.isFirstNode():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
(return == false)  ==>  (this.parent != null)
(return == false)  ==>  (this.parent.parent.children has only one value)
(return == false)  ==>  (this.parent.parent.listeners has only one value)
(return == false)  ==>  (this.parent.parent.parent == null)
(return == false)  ==>  (this.parent.parent.value has only one value)
(return == true)  ==>  (this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName())
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.ListTreeNode.class)
(return == true)  ==>  (this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName()))
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.isFirstNode():::EXIT;condition="return == true"
return == true
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.isFirstNode():::EXIT;condition="not(return == true)"
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.parent != null
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
return == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.listIterator():::ENTER
this has only one value
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.listIterator():::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.startNode == return.nextNodeCache
return.startNode.getClass().getName() == return.nextNodeCache.getClass().getName()
return.startNode.getClass().getName() == orig(this.getClass().getName())
this.children has only one value
this.parent == null
this.value has only one value
this.listeners has only one value
return has only one value
return.previousNodeCache == null
return.cursorBelowLastReturned == false
return.startNode has only one value
return.startNode.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
return.lastReturned == null
return.iterators has only one value
return.iterators[] == []
return.iterators[].getClass().getName() == []
return.subtreeOnly == false
return.restOfTree == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.listIterator(boolean):::ENTER
this has only one value
this.children has only one value
this.parent has only one value
this.parent.children has only one value
this.parent.parent has only one value
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
this.parent.value has only one value
this.parent.listeners has only one value
this.value has only one value
this.listeners has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericListTreeNode.listIterator(boolean):::EXIT
this.formerNodeIndex == orig(this.formerNodeIndex)
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == return.startNode.getClass().getName()
this.parent.getClass().getName() == return.nextNodeCache.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.listeners == orig(this.parent.listeners)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.startNode == return.nextNodeCache
return.subtreeOnly == orig(arg0)
this.children has only one value
this.parent has only one value
this.parent.children has only one value
this.parent.parent has only one value
this.parent.parent.children has only one value
this.parent.parent.parent == null
this.parent.parent.value has only one value
this.parent.parent.listeners has only one value
this.parent.value has only one value
this.parent.listeners has only one value
this.value has only one value
this.listeners has only one value
return.previousNodeCache == null
return.cursorBelowLastReturned == false
return.startNode has only one value
return.lastReturned == null
return.iterators[] == []
return.iterators[].getClass().getName() == []
return.restOfTree == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode:::OBJECT
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.parent.children != null
this.parent.parent.children != null
this.parent.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.formerParent == null
this.parent.parent.value != null
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners != null
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value != null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners != null
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.AbstractGenericMapTreeNode(com.google.common.collect.LinkedListMultimap, java.lang.Object, java.lang.Object):::ENTER
arg0 == null
arg1 != null
arg1.getClass().getName() == java.lang.Integer.class
arg2 != null
arg2.getClass().getName() == java.lang.String.class
arg1.getClass().getName() != arg2.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.AbstractGenericMapTreeNode(com.google.common.collect.LinkedListMultimap, java.lang.Object, java.lang.Object):::EXIT
this.key == orig(arg1)
this.key.getClass().getName() == orig(arg1.getClass().getName())
this.value == orig(arg2)
this.value.getClass().getName() == orig(arg2.getClass().getName())
this.map == null
this.children == null
this.parent == null
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.addChildNode(java.lang.Object, java.lang.Object):::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.key.getClass().getName() == arg0.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.value.getClass().getName() == arg1.getClass().getName()
this.map != null
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
arg0 != null
arg1 != null
this.getClass().getName() != this.map.getClass().getName()
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.addChildNode(java.lang.Object, java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == return.map.getClass().getName()
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == return.key.getClass().getName()
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.children == return.parent.children
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == return.children.getClass().getName()
this.children.getClass().getName() == return.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == return.parent.parent
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == return.getClass().getName()
this.parent.getClass().getName() == return.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == return.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == return.parent.value
this.value == orig(this.value)
this.value.getClass().getName() == return.parent.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.listeners == return.parent.listeners
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == return.parent.listeners.getClass().getName()
this.listeners.getClass().getName() == return.listeners.getClass().getName()
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == return.parent.getClass().getName()
return.getClass().getName() == orig(this.getClass().getName())
return.key == orig(arg0)
return.value == orig(arg1)
this.map != null
this.children != null
this.parent.parent.parent == null
this.parent.parent.value has only one value
return != null
return.map != null
return.key != null
return.children != null
return.parent != null
return.parent.formerParent == null
return.formerParent == null
return.value != null
return.listeners != null
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != return.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != return.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.getChildNodes():::ENTER
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.getClass().getName() != this.map.getClass().getName()
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.children.getClass().getName()
this.getClass().getName() != this.parent.parent.value.getClass().getName()
this.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.getChildNodes():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == this.parent.parent.parent.getClass().getName()
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
return != null
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.children.getClass().getName()
this.map.getClass().getName() != this.parent.getClass().getName()
this.map.getClass().getName() != this.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.children.getClass().getName()
this.map.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.map.getClass().getName() != this.parent.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.parent.value.getClass().getName()
this.map.getClass().getName() != this.parent.listeners.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != orig(this.getClass().getName())
this.key.getClass().getName() != this.children.getClass().getName()
this.key.getClass().getName() != this.parent.getClass().getName()
this.key.getClass().getName() != this.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.children.getClass().getName()
this.key.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.key.getClass().getName() != this.parent.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.parent.value.getClass().getName()
this.key.getClass().getName() != this.parent.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != return.getClass().getName()
this.key.getClass().getName() != orig(this.getClass().getName())
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != return.getClass().getName()
this.children.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != return.getClass().getName()
this.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.getClass().getName() != this.parent.parent.children.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.parent.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.children.getClass().getName() != return.getClass().getName()
this.parent.parent.children.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.parent.getClass().getName() != this.parent.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.value.getClass().getName()
this.parent.parent.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.parent.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.parent.value.getClass().getName() != return.getClass().getName()
this.parent.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.parent.listeners.getClass().getName() != this.parent.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != return.getClass().getName()
this.parent.value.getClass().getName() != orig(this.getClass().getName())
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.parent.listeners.getClass().getName() != return.getClass().getName()
this.parent.listeners.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.getChildNodes(java.lang.Object):::ENTER
this.key.getClass().getName() == arg0.getClass().getName()
this has only one value
this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.map has only one value
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key has only one value
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent == null
this.value has only one value
this.listeners has only one value
arg0 has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.getChildNodes(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.map has only one value
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key has only one value
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent == null
this.value has only one value
this.listeners has only one value
return has only one value
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.hasChildNodes(java.lang.Object):::ENTER
this.key.getClass().getName() == arg0.getClass().getName()
this has only one value
this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.map has only one value
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key has only one value
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent == null
this.value has only one value
this.listeners has only one value
arg0 has only one value
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.hasChildNodes(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.key.getClass().getName() == orig(arg0.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.map has only one value
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.key has only one value
this.children has only one value
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent == null
this.value has only one value
this.listeners has only one value
return == true
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.hasChildNodes(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.internalGetMap():::ENTER
this.map != null
this.children == null
this.parent == null
this.getClass().getName() != this.map.getClass().getName()
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.internalGetMap():::EXIT
this.map == return
this.map.getClass().getName() == return.getClass().getName()
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == orig(this.children)
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return == orig(this.map)
return.getClass().getName() == orig(this.map.getClass().getName())
this.children == null
this.parent == null
return != null
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != return.getClass().getName()
this.key.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != return.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != return.getClass().getName()
this.listeners.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.internalSetChildrenMap(com.google.common.collect.Multimap):::ENTER
this.map == null
this.children == null
this.parent == null
arg0 != null
this.getClass().getName() != this.key.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.getClass().getName() != arg0.getClass().getName()
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != arg0.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != arg0.getClass().getName()
this.listeners.getClass().getName() != arg0.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.internalSetChildrenMap(com.google.common.collect.Multimap):::EXIT
this.map == orig(arg0)
this.map.getClass().getName() == orig(arg0.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == orig(this.children)
this.parent == orig(this.parent)
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.map != null
this.children == null
this.parent == null
this.map.getClass().getName() != this.key.getClass().getName()
this.map.getClass().getName() != this.value.getClass().getName()
this.map.getClass().getName() != this.listeners.getClass().getName()
this.map.getClass().getName() != orig(this.getClass().getName())
this.key.getClass().getName() != this.value.getClass().getName()
this.key.getClass().getName() != this.listeners.getClass().getName()
this.key.getClass().getName() != orig(this.getClass().getName())
this.value.getClass().getName() != this.listeners.getClass().getName()
this.value.getClass().getName() != orig(this.getClass().getName())
this.listeners.getClass().getName() != orig(this.getClass().getName())
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.toString():::ENTER
this.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericMapTreeNode.toString():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.parent.getClass().getName() == orig(this.parent.parent.parent.getClass().getName())
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
this.map != null
this.map.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.parent.parent.children.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
return != null
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode$1:::OBJECT
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children has only one value
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.parent == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.formerParent == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value has only one value
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners has only one value
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.(ch.thn.util.tree.core.AbstractGenericSetTreeNode):::ENTER
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this != null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value != null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == java.lang.String.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners != null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == java.util.HashSet.class
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() != ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.(ch.thn.util.tree.core.AbstractGenericSetTreeNode):::EXIT
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children == null
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.compare(ch.thn.util.tree.core.AbstractGenericSetTreeNode, ch.thn.util.tree.core.AbstractGenericSetTreeNode):::ENTER
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == arg0.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == arg1.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == arg1.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() == arg0.comparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() == arg1.comparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == arg1.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == arg1.parent.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() == arg1.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == arg1.parent.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == arg1.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == arg1.parent.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == arg1.listeners.getClass().getName()
arg0.parent == null
arg0.formerParent == null
arg1.parent.formerParent == null
arg1.formerParent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.compare(ch.thn.util.tree.core.AbstractGenericSetTreeNode, ch.thn.util.tree.core.AbstractGenericSetTreeNode):::EXIT
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == arg1.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == orig(arg0.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == orig(arg1.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() == orig(arg1.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName() == arg0.comparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() == arg1.parent.parent.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.getClass().getName() == orig(arg1.parent.parent.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() == arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.children.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.parent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.parent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.formerParent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.formerParent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.value.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName() == arg0.listeners.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.parent.listeners.getClass().getName())
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.formerParent)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName() == arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners)
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName() == arg0.listeners.getClass().getName()
arg0.comparator == orig(arg0.comparator)
arg0.comparator.getClass().getName() == arg1.comparator.getClass().getName()
arg0.comparator.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.comparator.getClass().getName())
arg0.comparator.getClass().getName() == orig(arg0.comparator.getClass().getName())
arg0.comparator.getClass().getName() == orig(arg1.comparator.getClass().getName())
arg0.children == orig(arg0.children)
arg0.children.getClass().getName() == arg1.children.getClass().getName()
arg0.children.getClass().getName() == arg1.parent.children.getClass().getName()
arg0.children.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg0.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg1.children.getClass().getName())
arg0.children.getClass().getName() == orig(arg1.parent.children.getClass().getName())
arg0.parent == orig(arg0.parent)
arg0.formerParent == orig(arg0.formerParent)
arg0.value == orig(arg0.value)
arg0.value.getClass().getName() == arg1.parent.value.getClass().getName()
arg0.value.getClass().getName() == arg1.value.getClass().getName()
arg0.value.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg0.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg1.parent.value.getClass().getName())
arg0.value.getClass().getName() == orig(arg1.value.getClass().getName())
arg0.listeners == orig(arg0.listeners)
arg0.listeners.getClass().getName() == arg1.parent.listeners.getClass().getName()
arg0.listeners.getClass().getName() == arg1.listeners.getClass().getName()
arg0.listeners.getClass().getName() == orig(ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg0.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg1.parent.listeners.getClass().getName())
arg0.listeners.getClass().getName() == orig(arg1.listeners.getClass().getName())
arg1.comparator == orig(arg1.comparator)
arg1.children == orig(arg1.children)
arg1.parent == orig(arg1.parent)
arg1.parent.children == orig(arg1.parent.children)
arg1.parent.parent == orig(arg1.parent.parent)
arg1.parent.formerParent == orig(arg1.parent.formerParent)
arg1.parent.value == orig(arg1.parent.value)
arg1.parent.listeners == orig(arg1.parent.listeners)
arg1.formerParent == orig(arg1.formerParent)
arg1.value == orig(arg1.value)
arg1.listeners == orig(arg1.listeners)
arg0.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
arg0.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
arg0.parent == null
arg0.formerParent == null
arg0.value.getClass().getName() == java.lang.String.class
arg0.listeners.getClass().getName() == java.util.HashSet.class
arg1.parent.formerParent == null
arg1.formerParent == null
return >= 1
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != arg0.comparator.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != arg0.children.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != arg0.value.getClass().getName()
ch.thn.util.tree.core.AbstractGenericSetTreeNode.this.getClass().getName() != arg0.listeners.getClass().getName()
arg0.comparator.getClass().getName() != arg0.children.getClass().getName()
arg0.comparator.getClass().getName() != arg0.value.getClass().getName()
arg0.comparator.getClass().getName() != arg0.listeners.getClass().getName()
arg0.children.getClass().getName() != arg0.value.getClass().getName()
arg0.children.getClass().getName() != arg0.listeners.getClass().getName()
arg0.value.getClass().getName() != arg0.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode:::OBJECT
this.getClass().getName() == this.parent.getClass().getName()
this.getClass().getName() == this.parent.parent.getClass().getName()
this.children.getClass().getName() == this.parent.children.getClass().getName()
this.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.getClass().getName() == this.parent.parent.getClass().getName()
this.parent.children.getClass().getName() == this.parent.parent.children.getClass().getName()
this.parent.parent.value.getClass().getName() == this.parent.value.getClass().getName()
this.parent.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.parent.listeners.getClass().getName()
this.parent.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.parent.value.getClass().getName() == this.value.getClass().getName()
this.parent.listeners.getClass().getName() == this.listeners.getClass().getName()
this.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.comparator != null
this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
this.children != null
this.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.parent.parent.children has only one value
this.parent.parent.children.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.parent.parent.parent == null
this.parent.parent.formerParent == null
this.parent.parent.value has only one value
this.parent.parent.value.getClass().getName() == java.lang.String.class
this.parent.parent.listeners has only one value
this.parent.parent.listeners.getClass().getName() == java.util.HashSet.class
this.parent.formerParent == null
this.parent.value.getClass().getName() == java.lang.String.class
this.parent.listeners.getClass().getName() == java.util.HashSet.class
this.formerParent == null
this.value != null
this.value.getClass().getName() == java.lang.String.class
this.listeners != null
this.listeners.getClass().getName() == java.util.HashSet.class
this.getClass().getName() != this.comparator.getClass().getName()
this.getClass().getName() != this.children.getClass().getName()
this.getClass().getName() != this.parent.children.getClass().getName()
this.getClass().getName() != this.parent.value.getClass().getName()
this.getClass().getName() != this.parent.listeners.getClass().getName()
this.getClass().getName() != this.value.getClass().getName()
this.getClass().getName() != this.listeners.getClass().getName()
this.comparator.getClass().getName() != this.children.getClass().getName()
this.comparator.getClass().getName() != this.parent.getClass().getName()
this.comparator.getClass().getName() != this.parent.children.getClass().getName()
this.comparator.getClass().getName() != this.parent.value.getClass().getName()
this.comparator.getClass().getName() != this.parent.listeners.getClass().getName()
this.comparator.getClass().getName() != this.value.getClass().getName()
this.comparator.getClass().getName() != this.listeners.getClass().getName()
this.children.getClass().getName() != this.parent.getClass().getName()
this.children.getClass().getName() != this.parent.value.getClass().getName()
this.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.children.getClass().getName() != this.value.getClass().getName()
this.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.getClass().getName() != this.parent.children.getClass().getName()
this.parent.getClass().getName() != this.parent.value.getClass().getName()
this.parent.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.getClass().getName() != this.value.getClass().getName()
this.parent.getClass().getName() != this.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.parent.value.getClass().getName()
this.parent.children.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.children.getClass().getName() != this.value.getClass().getName()
this.parent.children.getClass().getName() != this.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.parent.listeners.getClass().getName()
this.parent.value.getClass().getName() != this.listeners.getClass().getName()
this.parent.listeners.getClass().getName() != this.value.getClass().getName()
this.value.getClass().getName() != this.listeners.getClass().getName()
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.AbstractGenericSetTreeNode(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.AbstractGenericSetTreeNode(java.lang.Object):::EXIT
this.value == orig(arg0)
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.AbstractGenericSetTreeNode(java.util.Comparator, java.lang.Object):::ENTER
arg0 == null
arg1 != null
arg1.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.AbstractGenericSetTreeNode(java.util.Comparator, java.lang.Object):::EXIT
this.value == orig(arg1)
this.value.getClass().getName() == orig(arg1.getClass().getName())
this.parent == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.getChildNodes():::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericSetTreeNode.getChildNodes():::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.children == orig(this.children)
this.children.getClass().getName() == orig(this.children.getClass().getName())
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.parent.children == orig(this.parent.children)
this.parent.children.getClass().getName() == orig(this.parent.children.getClass().getName())
this.parent.parent == orig(this.parent.parent)
this.parent.parent.getClass().getName() == orig(this.getClass().getName())
this.parent.parent.getClass().getName() == orig(this.parent.parent.getClass().getName())
this.parent.parent.children == orig(this.parent.parent.children)
this.parent.parent.children.getClass().getName() == orig(this.parent.parent.children.getClass().getName())
this.parent.parent.parent == orig(this.parent.parent.parent)
this.parent.parent.formerParent == orig(this.parent.parent.formerParent)
this.parent.parent.value == orig(this.parent.parent.value)
this.parent.parent.value.getClass().getName() == orig(this.parent.parent.value.getClass().getName())
this.parent.parent.listeners == orig(this.parent.parent.listeners)
this.parent.parent.listeners.getClass().getName() == orig(this.parent.parent.listeners.getClass().getName())
this.parent.formerParent == orig(this.parent.formerParent)
this.parent.value == orig(this.parent.value)
this.parent.value.getClass().getName() == orig(this.parent.value.getClass().getName())
this.parent.listeners == orig(this.parent.listeners)
this.parent.listeners.getClass().getName() == orig(this.parent.listeners.getClass().getName())
this.formerParent == orig(this.formerParent)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners.getClass().getName() == orig(this.listeners.getClass().getName())
return.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator:::OBJECT
this.startNode != null
this.iterators != null
this.iterators[] elements != null
this.iterators[].getClass().getName() elements == null
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.AbstractGenericTreeIterator(ch.thn.util.tree.core.CollectionTreeNodeInterface, boolean):::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.AbstractGenericTreeIterator(ch.thn.util.tree.core.CollectionTreeNodeInterface, boolean):::EXIT
this.lastReturned == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.restOfTree == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.hasNext():::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.hasNext():::EXIT
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache.getClass().getName() == orig(this.nextNodeCache.getClass().getName())
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
(this.nextNodeCache != null)  <==>  (return == true)
(this.nextNodeCache != null)  ==>  (this.iterators[].getClass().getName() elements == null)
(this.nextNodeCache != null)  ==>  (this.nextNodeCache.getClass().getName() == orig(this.nextNodeCache.getClass().getName()))
(this.nextNodeCache == null)  <==>  (return == false)
(this.nextNodeCache == null)  ==>  (orig(size(this.iterators[])) one of { 1, 2 })
(this.nextNodeCache == null)  ==>  (orig(this.iterators[].getClass().getName()) one of { [null], [null, null] })
(this.nextNodeCache == null)  ==>  (orig(this.nextNodeCache) == null)
(this.nextNodeCache == null)  ==>  (this.iterators[] == [])
(this.nextNodeCache == null)  ==>  (this.iterators[].getClass().getName() == [])
(this.nextNodeCache == null)  ==>  (this.nextNodeCache == orig(this.nextNodeCache))
(this.nextNodeCache == null)  ==>  (this.restOfTree == false)
size(this.iterators[])-1 <= orig(size(this.iterators[]))
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.hasNext():::EXIT;condition="return == true"
this.nextNodeCache != null
return == true
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.hasNext():::EXIT;condition="not(return == true)"
this.nextNodeCache == orig(this.nextNodeCache)
this.nextNodeCache == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.restOfTree == false
return == false
orig(this.iterators[].getClass().getName()) one of { [null], [null, null] }
orig(size(this.iterators[])) one of { 1, 2 }
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.initBranchIterators(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
this.getClass().getName() == ch.thn.util.tree.ListTreeIterator.class
this.startNode.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.nextNodeCache == null
this.lastReturned.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.restOfTree == false
arg0.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
arg1.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
size(this.iterators[]) one of { 0, 1, 2 }
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.initBranchIterators(ch.thn.util.tree.core.CollectionTreeNodeInterface, ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.iterators[] == orig(this.iterators[])
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.startNode.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.nextNodeCache == null
this.lastReturned.getClass().getName() == ch.thn.util.tree.ListTreeNode.class
this.restOfTree == false
return[].getClass().getName() elements == null
return[].getClass().getName() one of { [null], [null, null] }
size(this.iterators[]) one of { 0, 1, 2 }
size(return[]) one of { 1, 2 }
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT165
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.restOfTree == orig(this.restOfTree)
this.lastReturned == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.restOfTree == false
orig(arg0) == true
orig(arg1) == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT169
this.iterators[] == orig(this.iterators[])
this.restOfTree == orig(this.restOfTree)
this.nextNodeCache == null
this.lastReturned != null
return != null
orig(this.nextNodeCache) != null
orig(arg0) == false
orig(arg1) == false
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT192
this.nextNodeCache == orig(this.nextNodeCache)
this.lastReturned == orig(this.lastReturned)
this.iterators[] == orig(this.iterators[])
this.nextNodeCache == null
this.iterators[] == []
this.iterators[].getClass().getName() == []
this.restOfTree == false
return == null
orig(arg0) == true
orig(arg1) == true
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT217
this.lastReturned == orig(this.lastReturned)
this.lastReturned != null
orig(this.nextNodeCache) == null
orig(arg0) == true
size(this.iterators[]) one of { 0, 1, 2 }
orig(size(this.iterators[])) one of { 1, 2, 3 }
size(this.iterators[]) != orig(size(this.iterators[]))
size(this.iterators[])-1 <= orig(size(this.iterators[]))
size(this.iterators[])-1 != orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT220
this.lastReturned != null
return != null
orig(this.nextNodeCache) == null
orig(this.lastReturned) != null
size(this.iterators[]) one of { 1, 2, 3 }
orig(size(this.iterators[])) one of { 0, 1, 2 }
size(this.iterators[]) >= orig(size(this.iterators[]))
size(this.iterators[])-1 >= orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.internalNext(boolean, boolean):::EXIT
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.nextNodeCache.getClass().getName() == orig(this.nextNodeCache.getClass().getName())
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.next():::ENTER
===========================================================================
ch.thn.util.tree.core.AbstractGenericTreeIterator.next():::EXIT
this.startNode == orig(this.startNode)
this.startNode.getClass().getName() == orig(this.startNode.getClass().getName())
this.lastReturned.getClass().getName() == orig(this.lastReturned.getClass().getName())
this.iterators == orig(this.iterators)
this.subtreeOnly == orig(this.subtreeOnly)
this.restOfTree == orig(this.restOfTree)
this.nextNodeCache == null
this.lastReturned != null
return != null
size(this.iterators[]) >= orig(size(this.iterators[]))
size(this.iterators[])-1 <= orig(size(this.iterators[]))
size(this.iterators[])-1 >= orig(size(this.iterators[]))-1
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter:::CLASS
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT has only one value
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT != null
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString == "\n"
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR has only one value
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR != null
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString == ";"
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR has only one value
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR != null
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == "\r\n"
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter:::OBJECT
this.THROUGH == this.ADDITIONALLINE_THROUGH
this.AFTEREND == this.ADDITIONALLINE_AFTEREND
this has only one value
this.alignValuesRight == true
this.HEAD == null
this.LEFT_SPACE == null
this.FIRST_CHILD has only one value
this.FIRST_CHILD != null
this.FIRST_CHILD.toString == "\u251c\u2500 "
this.LAST_NODE has only one value
this.LAST_NODE != null
this.LAST_NODE.toString == "\u2514\u2500 "
this.THROUGH has only one value
this.THROUGH != null
this.THROUGH.toString == "\u2502  "
this.AFTEREND has only one value
this.AFTEREND != null
this.AFTEREND.toString == "   "
this.ADDITIONALLINE_THROUGH.toString == "\u2502  "
this.ADDITIONALLINE_AFTEREND.toString == "   "
this.ADDITIONALLINE_CONNECTFIRST has only one value
this.ADDITIONALLINE_CONNECTFIRST != null
this.ADDITIONALLINE_CONNECTFIRST.toString == "\u2502 "
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD has only one value
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD != null
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == "  "
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.TreeNodeCSVPrinter(boolean):::ENTER
arg0 == true
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.TreeNodeCSVPrinter(boolean):::EXIT
this.alignValuesRight == orig(arg0)
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.createPrintableForm(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.createPrintableForm(java.util.List):::EXIT
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString)
this.alignValuesRight == orig(this.alignValuesRight)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return has only one value
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString)
this.alignValuesRight == orig(this.alignValuesRight)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodeCSVPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR)
ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString == orig(ch.thn.util.tree.printer.TreeNodeCSVPrinter.CSV_SEPARATOR.toString)
this.alignValuesRight == orig(this.alignValuesRight)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Arrays$ArrayList.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter:::CLASS
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT has only one value
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT != null
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString == "\n"
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR has only one value
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR != null
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == "\r\n"
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter:::OBJECT
this.THROUGH == this.ADDITIONALLINE_THROUGH
this.AFTEREND == this.ADDITIONALLINE_AFTEREND
this has only one value
this.HEAD == null
this.LEFT_SPACE == null
this.FIRST_CHILD has only one value
this.FIRST_CHILD != null
this.FIRST_CHILD.toString == "\u251c\u2500 "
this.LAST_NODE has only one value
this.LAST_NODE != null
this.LAST_NODE.toString == "\u2514\u2500 "
this.THROUGH has only one value
this.THROUGH != null
this.THROUGH.toString == "\u2502  "
this.AFTEREND has only one value
this.AFTEREND != null
this.AFTEREND.toString == "   "
this.ADDITIONALLINE_THROUGH.toString == "\u2502  "
this.ADDITIONALLINE_AFTEREND.toString == "   "
this.ADDITIONALLINE_CONNECTFIRST has only one value
this.ADDITIONALLINE_CONNECTFIRST != null
this.ADDITIONALLINE_CONNECTFIRST.toString == "\u2502 "
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD has only one value
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD != null
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == "  "
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.TreeNodeDebugPrinter():::EXIT
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.createPrintableForm(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.createPrintableForm(java.util.List):::EXIT
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return has only one value
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodeDebugPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodeDebugPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Arrays$ArrayList.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter:::CLASS
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT has only one value
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT != null
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString == "\n"
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR has only one value
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR != null
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == "\r\n"
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter:::OBJECT
this.THROUGH == this.ADDITIONALLINE_THROUGH
this.AFTEREND == this.ADDITIONALLINE_AFTEREND
this has only one value
this.HEAD == null
this.LEFT_SPACE == null
this.FIRST_CHILD has only one value
this.FIRST_CHILD != null
this.FIRST_CHILD.toString == "\u251c\u2500 "
this.LAST_NODE has only one value
this.LAST_NODE != null
this.LAST_NODE.toString == "\u2514\u2500 "
this.THROUGH has only one value
this.THROUGH != null
this.THROUGH.toString == "\u2502  "
this.AFTEREND has only one value
this.AFTEREND != null
this.AFTEREND.toString == "   "
this.ADDITIONALLINE_THROUGH.toString == "\u2502  "
this.ADDITIONALLINE_AFTEREND.toString == "   "
this.ADDITIONALLINE_CONNECTFIRST has only one value
this.ADDITIONALLINE_CONNECTFIRST != null
this.ADDITIONALLINE_CONNECTFIRST.toString == "\u2502 "
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD has only one value
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD != null
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == "  "
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.TreeNodePlainTextPrinter():::EXIT
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.createPrintableForm(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.createPrintableForm(java.util.List):::EXIT
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return has only one value
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.getChildren(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Collections$UnmodifiableCollection.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.getNodeValues(ch.thn.util.tree.core.CollectionTreeNodeInterface):::EXIT
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT)
ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString == orig(ch.thn.util.tree.printer.TreeNodePlainTextPrinter.VALUE_SPLIT.toString)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return != null
return.getClass().getName() == java.util.Arrays$ArrayList.class
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil:::CLASS
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR has only one value
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR != null
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString == "\u2500\u2500"
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE has only one value
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE != null
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString == "  "
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.alignValuesRight(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.alignValuesRight(java.util.List):::EXIT
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.getMaxPrefixCount(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.getMaxPrefixCount(java.util.List):::EXIT
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return == 4
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.matchLabeledColumns(ch.thn.util.tree.printer.generic.TreePrinterLine, java.lang.Object, java.lang.Object):::ENTER
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == arg1
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == arg2
arg1.getClass().getName() == arg2.getClass().getName()
arg0 != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == "_first_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == "_last_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == "_first_prefix_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == "_last_prefix_"
arg0.siblingIndex >= 0
arg0.siblingCount one of { 1, 3, 4 }
arg0.nodeValueIndex >= 0
arg0.nodeValueCount one of { 1, 2, 4 }
arg0.childrenCount >= 0
arg0.depth >= 0
arg0.columnLabels != null
arg1 has only one value
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg2 has only one value
arg2 != null
arg0.siblingIndex < arg0.siblingCount
===========================================================================
ch.thn.util.tree.printer.TreePrinterUtil.matchLabeledColumns(ch.thn.util.tree.printer.generic.TreePrinterLine, java.lang.Object, java.lang.Object):::EXIT
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_CONNECTOR.toString)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE)
ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString == orig(ch.thn.util.tree.printer.TreePrinterUtil.RIGHT_ALIGN_SPACE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(arg1)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(arg2)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
arg0.siblingIndex == orig(arg0.siblingIndex)
arg0.siblingCount == orig(arg0.siblingCount)
arg0.nodeValueIndex == orig(arg0.nodeValueIndex)
arg0.nodeValueCount == orig(arg0.nodeValueCount)
arg0.childrenCount == orig(arg0.childrenCount)
arg0.depth == orig(arg0.depth)
arg0.columnLabels == orig(arg0.columnLabels)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == "_first_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == "_last_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == "_first_prefix_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == "_last_prefix_"
arg0.siblingIndex >= 0
arg0.siblingCount one of { 1, 3, 4 }
arg0.nodeValueIndex >= 0
arg0.nodeValueCount one of { 1, 2, 4 }
arg0.childrenCount >= 0
arg0.depth >= 0
arg0.columnLabels != null
arg0.siblingIndex < arg0.siblingCount
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter:::CLASS
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR has only one value
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == "\r\n"
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter:::OBJECT
this.THROUGH == this.ADDITIONALLINE_THROUGH
this.AFTEREND == this.ADDITIONALLINE_AFTEREND
this has only one value
this.getClass().getName() == ch.thn.util.tree.printer.TreeNodeCSVPrinter.class
this.alignValuesRight == true
this.HEAD == null
this.LEFT_SPACE == null
this.FIRST_CHILD has only one value
this.FIRST_CHILD.toString == "\u251c\u2500 "
this.LAST_NODE has only one value
this.LAST_NODE.toString == "\u2514\u2500 "
this.THROUGH has only one value
this.THROUGH.toString == "\u2502  "
this.AFTEREND has only one value
this.AFTEREND.toString == "   "
this.ADDITIONALLINE_THROUGH.toString == "\u2502  "
this.ADDITIONALLINE_AFTEREND.toString == "   "
this.ADDITIONALLINE_CONNECTFIRST has only one value
this.ADDITIONALLINE_CONNECTFIRST.toString == "\u2502 "
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD has only one value
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == "  "
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter.CSVTreePrinter(boolean):::ENTER
arg0 == true
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter.CSVTreePrinter(boolean):::EXIT
this.alignValuesRight == orig(arg0)
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter.postProcessOutput(java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.generic.CSVTreePrinter.postProcessOutput(java.util.List):::EXIT
this.alignValuesRight == orig(this.alignValuesRight)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
arg0[] == orig(arg0[])
return == orig(arg0)
return.getClass().getName() == orig(arg0.getClass().getName())
arg0[] contains no nulls and has only one value, of length 31
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return has only one value
return[] contains no nulls and has only one value, of length 31
return[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
return[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 31
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter:::OBJECT
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.GenericTreePrinter():::EXIT
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.postProcessOutput(java.util.List):::ENTER
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 31
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.postProcessOutput(java.util.List):::EXIT
arg0[] == orig(arg0[])
return == orig(arg0)
return.getClass().getName() == orig(arg0.getClass().getName())
arg0[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
arg0[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return[].getClass().getName() == [ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine, ch.thn.util.tree.printer.generic.TreePrinterLine]
return[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 31
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.print(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.print(java.lang.Object):::EXIT
return.getClass().getName() == java.lang.StringBuilder.class
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.printChildren(java.lang.Object, java.lang.Object, int):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
arg1 != null
arg1.getClass().getName() == java.util.ArrayList.class
arg2 >= 0
this.getClass().getName() != arg0.getClass().getName()
this.getClass().getName() != arg1.getClass().getName()
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
ch.thn.util.tree.printer.generic.GenericTreePrinter.printChildren(java.lang.Object, java.lang.Object, int):::EXIT
return.getClass().getName() == orig(arg1.getClass().getName())
return != null
return[] elements != null
return[].getClass().getName() elements == java.util.ArrayList.class
return.getClass().getName() == java.util.ArrayList.class
return.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter:::CLASS
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR has only one value
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR != null
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == "\r\n"
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter:::OBJECT
this.THROUGH == this.ADDITIONALLINE_THROUGH
this.AFTEREND == this.ADDITIONALLINE_AFTEREND
this.HEAD == null
this.LEFT_SPACE == null
this.FIRST_CHILD has only one value
this.FIRST_CHILD != null
this.FIRST_CHILD.toString == "\u251c\u2500 "
this.LAST_NODE has only one value
this.LAST_NODE != null
this.LAST_NODE.toString == "\u2514\u2500 "
this.THROUGH has only one value
this.THROUGH != null
this.THROUGH.toString == "\u2502  "
this.AFTEREND has only one value
this.AFTEREND != null
this.AFTEREND.toString == "   "
this.ADDITIONALLINE_THROUGH.toString == "\u2502  "
this.ADDITIONALLINE_AFTEREND.toString == "   "
this.ADDITIONALLINE_CONNECTFIRST has only one value
this.ADDITIONALLINE_CONNECTFIRST != null
this.ADDITIONALLINE_CONNECTFIRST.toString == "\u2502 "
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD has only one value
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD != null
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == "  "
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.PlainTextTreePrinter():::EXIT
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.createPrinterLines(java.lang.Object, java.util.List, int, int, int, int):::ENTER
arg0 != null
arg0.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
arg1.getClass().getName() == java.util.ArrayList.class
arg2 >= 0
arg3 one of { 1, 3, 4 }
arg4 >= 0
arg5 >= 0
size(arg1[]) one of { 1, 2, 3 }
this.getClass().getName() != arg0.getClass().getName()
this.getClass().getName() != arg1.getClass().getName()
arg0.getClass().getName() != arg1.getClass().getName()
arg2 < arg3
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.createPrinterLines(java.lang.Object, java.util.List, int, int, int, int):::EXIT211
===========================================================================
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.createPrinterLines(java.lang.Object, java.util.List, int, int, int, int):::EXIT
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR)
ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString == orig(ch.thn.util.tree.printer.generic.PlainTextTreePrinter.LINE_SEPARATOR.toString)
this.HEAD == orig(this.HEAD)
this.LEFT_SPACE == orig(this.LEFT_SPACE)
this.FIRST_CHILD == orig(this.FIRST_CHILD)
this.FIRST_CHILD.toString == orig(this.FIRST_CHILD.toString)
this.LAST_NODE == orig(this.LAST_NODE)
this.LAST_NODE.toString == orig(this.LAST_NODE.toString)
this.THROUGH == orig(this.THROUGH)
this.THROUGH == orig(this.ADDITIONALLINE_THROUGH)
this.THROUGH.toString == orig(this.THROUGH.toString)
this.AFTEREND == orig(this.AFTEREND)
this.AFTEREND == orig(this.ADDITIONALLINE_AFTEREND)
this.AFTEREND.toString == orig(this.AFTEREND.toString)
this.ADDITIONALLINE_THROUGH.toString == orig(this.ADDITIONALLINE_THROUGH.toString)
this.ADDITIONALLINE_AFTEREND.toString == orig(this.ADDITIONALLINE_AFTEREND.toString)
this.ADDITIONALLINE_CONNECTFIRST == orig(this.ADDITIONALLINE_CONNECTFIRST)
this.ADDITIONALLINE_CONNECTFIRST.toString == orig(this.ADDITIONALLINE_CONNECTFIRST.toString)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD)
this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString == orig(this.ADDITIONALLINE_CONNECTFIRSTNOCHILD.toString)
return.getClass().getName() == orig(arg1.getClass().getName())
return != null
return[] elements != null
return[].getClass().getName() elements == ch.thn.util.tree.printer.generic.TreePrinterLine.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) >= 1
return.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine:::CLASS
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == "_first_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == "_last_value_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == "_first_prefix_"
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX has only one value
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX != null
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == "_last_prefix_"
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine:::OBJECT
this.siblingIndex >= 0
this.siblingCount one of { 1, 3, 4 }
this.nodeValueIndex >= 0
this.nodeValueCount one of { 1, 2, 4 }
this.childrenCount >= 0
this.depth >= 0
this.columnLabels != null
this.siblingIndex < this.siblingCount
this.siblingCount != this.depth
this.childrenCount != this.depth
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.TreePrinterLine(int, int, int, int, int, int):::ENTER
arg0 >= 0
arg1 one of { 1, 3, 4 }
arg2 >= 0
arg3 one of { 1, 2, 4 }
arg4 >= 0
arg5 >= 0
arg0 < arg1
arg1 != arg5
arg4 != arg5
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.TreePrinterLine(int, int, int, int, int, int):::EXIT
this.siblingIndex == orig(arg0)
this.siblingCount == orig(arg1)
this.nodeValueIndex == orig(arg2)
this.nodeValueCount == orig(arg3)
this.childrenCount == orig(arg4)
this.depth == orig(arg5)
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.add(java.lang.Object):::ENTER
this.childrenCount one of { 0, 1, 4 }
this.depth one of { 2, 3 }
arg0 != null
arg0.getClass().getName() == java.lang.String.class
this.siblingIndex <= this.depth
this.siblingCount != this.childrenCount
this.childrenCount % this.nodeValueCount == 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.add(java.lang.Object):::EXIT224
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.add(java.lang.Object):::EXIT224;condition="return == true"
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.add(java.lang.Object):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
this.childrenCount one of { 0, 1, 4 }
this.depth one of { 2, 3 }
return == true
this.siblingIndex <= this.depth
this.siblingCount != this.childrenCount
this.childrenCount % this.nodeValueCount == 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.add(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(int, java.lang.Object, java.lang.Object):::ENTER
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == arg2
arg1.getClass().getName() == arg2.getClass().getName()
arg1 != null
arg1.getClass().getName() == java.lang.String.class
arg2 has only one value
arg2 != null
this.depth <= arg0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(int, java.lang.Object, java.lang.Object):::EXIT204
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(int, java.lang.Object, java.lang.Object):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(arg2)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
this.depth <= orig(arg0)
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::ENTER
arg0.getClass().getName() == arg1.getClass().getName()
arg0.getClass().getName() == java.lang.String.class
arg1 != null
arg1.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT172
return == false
orig(arg0) == null
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT172;condition="not(return == true)"
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT179
return == true
orig(arg0) != null
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT179;condition="return == true"
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
(return == false)  <==>  (orig(arg0) == null)
(return == true)  <==>  (orig(arg0) != null)
(return == true)  ==>  (orig(arg0.getClass().getName()) == java.lang.String.class)
(return == true)  ==>  (orig(arg0.getClass().getName()) == orig(arg1.getClass().getName()))
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
return == true
orig(arg0) != null
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.addWithLabel(java.lang.Object, java.lang.Object):::EXIT;condition="not(return == true)"
return == false
orig(arg0) == null
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getColumnIndex(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == java.lang.String.class
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getColumnIndex(java.lang.Object):::EXIT268
return == -1
this.siblingIndex > return
this.siblingCount > return
this.nodeValueCount > return
this.childrenCount > return
this.depth > return
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getColumnIndex(java.lang.Object):::EXIT271
return >= 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getColumnIndex(java.lang.Object):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
(return == -1)  ==>  (this.childrenCount > return)
(return == -1)  ==>  (this.depth > return)
(return == -1)  ==>  (this.nodeValueCount > return)
(return == -1)  ==>  (this.siblingCount > return)
(return == -1)  ==>  (this.siblingIndex > return)
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getDepth():::ENTER
this.nodeValueIndex == 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getDepth():::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == return
this.columnLabels == orig(this.columnLabels)
return == orig(this.depth)
this.nodeValueIndex == 0
this.siblingCount != return
this.childrenCount != return
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getNodeValueIndex():::ENTER
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getNodeValueIndex():::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == return
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
return == orig(this.nodeValueIndex)
return >= 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getSiblingIndex():::ENTER
this.nodeValueIndex == 0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.getSiblingIndex():::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == return
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
return == orig(this.siblingIndex)
this.nodeValueIndex == 0
return >= 0
this.siblingCount > return
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.increaseLabelIndex(int):::ENTER
this.depth <= arg0
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.increaseLabelIndex(int):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
this.depth <= orig(arg0)
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.setColumnLabel(java.lang.Object, int):::ENTER
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == arg0
arg0 has only one value
arg0 != null
arg0.getClass().getName() == java.lang.String.class
arg1 >= 0
this.childrenCount != arg1
this.depth <= arg1
===========================================================================
ch.thn.util.tree.printer.generic.TreePrinterLine.setColumnLabel(java.lang.Object, int):::EXIT
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE == orig(arg0)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_VALUE.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_FIRST_PREFIX.toString)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX)
ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString == orig(ch.thn.util.tree.printer.generic.TreePrinterLine.LABEL_LAST_PREFIX.toString)
this.siblingIndex == orig(this.siblingIndex)
this.siblingCount == orig(this.siblingCount)
this.nodeValueIndex == orig(this.nodeValueIndex)
this.nodeValueCount == orig(this.nodeValueCount)
this.childrenCount == orig(this.childrenCount)
this.depth == orig(this.depth)
this.columnLabels == orig(this.columnLabels)
this.childrenCount != orig(arg1)
this.depth <= orig(arg1)
===========================================================================
com.google.common.base.Joiner$MapJoiner:::OBJECT
this has only one value
this.joiner has only one value
this.joiner.separator has only one value
this.joiner.separator.toString == ", "
this.keyValueSeparator has only one value
this.keyValueSeparator.toString == "="
===========================================================================
com.google.common.base.Joiner$MapJoiner.MapJoiner(com.google.common.base.Joiner, java.lang.String):::ENTER
com.google.common.base.Joiner.this has only one value
com.google.common.base.Joiner.this.separator has only one value
com.google.common.base.Joiner.this.separator.toString == ", "
keyValueSeparator has only one value
keyValueSeparator.toString == "="
===========================================================================
com.google.common.base.Joiner$MapJoiner.MapJoiner(com.google.common.base.Joiner, java.lang.String):::EXIT
this.joiner == orig(com.google.common.base.Joiner.this)
this.joiner.separator == com.google.common.base.Joiner.this.separator
this.joiner.separator.toString == com.google.common.base.Joiner.this.separator.toString
this.keyValueSeparator == orig(keyValueSeparator)
com.google.common.base.Joiner.this.separator == orig(com.google.common.base.Joiner.this.separator)
com.google.common.base.Joiner.this.separator.toString == orig(com.google.common.base.Joiner.this.separator.toString)
keyValueSeparator.toString == orig(keyValueSeparator.toString)
com.google.common.base.Joiner.this.separator has only one value
com.google.common.base.Joiner.this.separator.toString == ", "
keyValueSeparator.toString == "="
===========================================================================
com.google.common.base.Joiner:::OBJECT
this has only one value
this.separator has only one value
this.separator.toString == ", "
===========================================================================
com.google.common.base.Joiner.Joiner(java.lang.String):::ENTER
separator has only one value
separator.toString == ", "
===========================================================================
com.google.common.base.Joiner.Joiner(java.lang.String):::EXIT
this.separator == orig(separator)
separator.toString == orig(separator.toString)
separator.toString == ", "
===========================================================================
com.google.common.base.Joiner.on(java.lang.String):::ENTER
separator has only one value
separator.toString == ", "
===========================================================================
com.google.common.base.Joiner.on(java.lang.String):::EXIT
separator.toString == orig(separator.toString)
return.separator == orig(separator)
separator.toString == ", "
return has only one value
return.separator has only one value
return.separator.toString == ", "
===========================================================================
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String):::ENTER
keyValueSeparator has only one value
keyValueSeparator.toString == "="
===========================================================================
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String):::EXIT
this.separator == return.joiner.separator
this.separator == orig(this.separator)
this.separator.toString == orig(this.separator.toString)
keyValueSeparator.toString == orig(keyValueSeparator.toString)
return.joiner == orig(this)
return.keyValueSeparator == orig(keyValueSeparator)
keyValueSeparator.toString == "="
return has only one value
return.joiner has only one value
return.joiner.separator.toString == ", "
return.keyValueSeparator has only one value
return.keyValueSeparator.toString == "="
===========================================================================
com.google.common.base.Optional$Absent:::CLASS
com.google.common.base.Optional$Absent.INSTANCE has only one value
===========================================================================
com.google.common.base.Optional$Absent:::OBJECT
this has only one value
===========================================================================
com.google.common.base.Optional$Absent.Absent():::EXIT
===========================================================================
com.google.common.base.Optional$Absent.isPresent():::ENTER
===========================================================================
com.google.common.base.Optional$Absent.isPresent():::EXIT
com.google.common.base.Optional$Absent.INSTANCE == orig(com.google.common.base.Optional$Absent.INSTANCE)
return == false
===========================================================================
com.google.common.base.Optional$Absent.isPresent():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.base.Optional$Present:::CLASS
===========================================================================
com.google.common.base.Optional$Present:::OBJECT
this.reference != null
this.reference.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.base.Optional$Present.Present(java.lang.Object):::ENTER
reference.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.base.Optional$Present.Present(java.lang.Object):::EXIT
===========================================================================
com.google.common.base.Optional$Present.get():::ENTER
===========================================================================
com.google.common.base.Optional$Present.get():::EXIT
this.reference == orig(this.reference)
this.reference.getClass().getName() == orig(this.reference.getClass().getName())
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.base.Optional$Present.isPresent():::ENTER
===========================================================================
com.google.common.base.Optional$Present.isPresent():::EXIT
this.reference == orig(this.reference)
this.reference.getClass().getName() == orig(this.reference.getClass().getName())
return == true
===========================================================================
com.google.common.base.Optional$Present.isPresent():::EXIT;condition="return == true"
===========================================================================
com.google.common.base.Optional:::CLASS
===========================================================================
com.google.common.base.Optional:::OBJECT
===========================================================================
com.google.common.base.Optional.Optional():::EXIT
===========================================================================
com.google.common.base.Optional.absent():::ENTER
===========================================================================
com.google.common.base.Optional.absent():::EXIT
return has only one value
return.getClass().getName() == com.google.common.base.Optional$Absent.class
===========================================================================
com.google.common.base.Optional.fromNullable(java.lang.Object):::ENTER
nullableReference.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.base.Optional.fromNullable(java.lang.Object):::EXIT
===========================================================================
com.google.common.base.Optional.of(java.lang.Object):::ENTER
reference.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.base.Optional.of(java.lang.Object):::EXIT
return.getClass().getName() == com.google.common.base.Optional$Present.class
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean):::ENTER
expression == true
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean):::EXIT
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object):::ENTER
expression == true
errorMessage has only one value
errorMessage.getClass().getName() == java.lang.String.class
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object):::EXIT
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean, java.lang.String, java.lang.Object[]):::ENTER
expression == true
errorMessageTemplate != null
errorMessageTemplate.toString one of { "Out of range: %s", "occurrences cannot be negative: %s", "too many occurrences: %s" }
errorMessageArgs != null
errorMessageArgs.getClass().getName() == java.lang.Object[].class
errorMessageArgs[] elements != null
size(errorMessageArgs[]) == 1
===========================================================================
com.google.common.base.Preconditions.checkArgument(boolean, java.lang.String, java.lang.Object[]):::EXIT
errorMessageTemplate.toString == orig(errorMessageTemplate.toString)
errorMessageArgs[] == orig(errorMessageArgs[])
errorMessageTemplate.toString one of { "Out of range: %s", "occurrences cannot be negative: %s", "too many occurrences: %s" }
errorMessageArgs[] elements != null
===========================================================================
com.google.common.base.Preconditions.checkNotNull(java.lang.Object):::ENTER
reference != null
===========================================================================
com.google.common.base.Preconditions.checkNotNull(java.lang.Object):::EXIT
return == orig(reference)
return.getClass().getName() == orig(reference.getClass().getName())
return != null
===========================================================================
com.google.common.base.Preconditions.checkState(boolean):::ENTER
expression == true
===========================================================================
com.google.common.base.Preconditions.checkState(boolean):::EXIT
===========================================================================
com.google.common.collect.AbstractLinkedIterator:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultiset$1.class
this.nextOrNull.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.AbstractLinkedIterator.AbstractLinkedIterator(java.lang.Object):::ENTER
firstOrNull.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.AbstractLinkedIterator.AbstractLinkedIterator(java.lang.Object):::EXIT
===========================================================================
com.google.common.collect.AbstractLinkedIterator.hasNext():::ENTER
===========================================================================
com.google.common.collect.AbstractLinkedIterator.hasNext():::EXIT
this.nextOrNull == orig(this.nextOrNull)
this.nextOrNull.getClass().getName() == orig(this.nextOrNull.getClass().getName())
(this.nextOrNull != null)  <==>  (return == true)
(this.nextOrNull != null)  ==>  (this.nextOrNull.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(this.nextOrNull == null)  <==>  (return == false)
===========================================================================
com.google.common.collect.AbstractLinkedIterator.hasNext():::EXIT;condition="return == true"
this.nextOrNull != null
return == true
===========================================================================
com.google.common.collect.AbstractLinkedIterator.hasNext():::EXIT;condition="not(return == true)"
this.nextOrNull == null
return == false
===========================================================================
com.google.common.collect.AbstractLinkedIterator.next():::ENTER
===========================================================================
com.google.common.collect.AbstractLinkedIterator.next():::EXIT
this.nextOrNull.getClass().getName() == orig(this.nextOrNull.getClass().getName())
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1:::OBJECT
this.toRemove == null
this.val$backingEntries != null
this.val$backingEntries.getClass().getName() == java.util.LinkedHashMap$LinkedEntryIterator.class
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap != null
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() == java.util.LinkedHashMap.class
com.google.common.collect.AbstractMapBasedMultiset.this.size == 0
com.google.common.collect.AbstractMapBasedMultiset.this.elementSet == null
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet != null
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.val$backingEntries.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName()
this.val$backingEntries.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName()
this.val$backingEntries.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1.(com.google.common.collect.AbstractMapBasedMultiset, java.util.Iterator):::ENTER
com.google.common.collect.AbstractMapBasedMultiset.this != null
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap != null
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() == java.util.LinkedHashMap.class
com.google.common.collect.AbstractMapBasedMultiset.this.size == 0
com.google.common.collect.AbstractMapBasedMultiset.this.elementSet == null
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet != null
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
$hidden$2 != null
$hidden$2.getClass().getName() == java.util.LinkedHashMap$LinkedEntryIterator.class
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() != $hidden$2.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() != com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() != $hidden$2.getClass().getName()
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName() != $hidden$2.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1.(com.google.common.collect.AbstractMapBasedMultiset, java.util.Iterator):::EXIT
this.val$backingEntries == orig($hidden$2)
this.val$backingEntries.getClass().getName() == orig($hidden$2.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this == orig(com.google.common.collect.AbstractMapBasedMultiset.this)
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap == orig(com.google.common.collect.AbstractMapBasedMultiset.this.backingMap)
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this.size == orig(com.google.common.collect.AbstractMapBasedMultiset.this.size)
com.google.common.collect.AbstractMapBasedMultiset.this.elementSet == orig(com.google.common.collect.AbstractMapBasedMultiset.this.elementSet)
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet == orig(com.google.common.collect.AbstractMapBasedMultiset.this.entrySet)
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1.hasNext():::ENTER
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1.hasNext():::EXIT
this.toRemove == orig(this.toRemove)
this.val$backingEntries == orig(this.val$backingEntries)
this.val$backingEntries.getClass().getName() == orig(this.val$backingEntries.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this == orig(com.google.common.collect.AbstractMapBasedMultiset.this)
com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap == orig(com.google.common.collect.AbstractMapBasedMultiset.this.backingMap)
com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.backingMap.getClass().getName())
com.google.common.collect.AbstractMapBasedMultiset.this.size == orig(com.google.common.collect.AbstractMapBasedMultiset.this.size)
com.google.common.collect.AbstractMapBasedMultiset.this.elementSet == orig(com.google.common.collect.AbstractMapBasedMultiset.this.elementSet)
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet == orig(com.google.common.collect.AbstractMapBasedMultiset.this.entrySet)
com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.AbstractMapBasedMultiset.this.entrySet.getClass().getName())
return == false
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset$1.hasNext():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset:::CLASS
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset:::OBJECT
this.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
this.backingMap != null
this.backingMap.getClass().getName() == java.util.LinkedHashMap.class
this.size >= 0
this.elementSet == null
this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(java.util.Map):::ENTER
backingMap != null
backingMap.getClass().getName() == java.util.LinkedHashMap.class
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.AbstractMapBasedMultiset(java.util.Map):::EXIT
this.size == 0
this.entrySet != null
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.add(java.lang.Object, int):::ENTER
this.entrySet != null
element != null
element.getClass().getName() == java.lang.Integer.class
occurrences == 1
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.add(java.lang.Object, int):::EXIT246
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.add(java.lang.Object, int):::EXIT
this.backingMap == orig(this.backingMap)
this.backingMap.getClass().getName() == orig(this.backingMap.getClass().getName())
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
this.size >= 1
this.entrySet != null
return one of { 0, 1, 2 }
this.size - orig(this.size) - 1 == 0
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.entryIterator():::ENTER
this.size == 0
this.entrySet != null
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.entryIterator():::EXIT
this.backingMap == orig(this.backingMap)
this.backingMap.getClass().getName() == orig(this.backingMap.getClass().getName())
this.size == orig(this.size)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
this.size == 0
this.entrySet != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMapBasedMultiset$1.class
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.entrySet():::ENTER
this.size == 0
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMapBasedMultiset.entrySet():::EXIT
this.backingMap == orig(this.backingMap)
this.backingMap.getClass().getName() == orig(this.backingMap.getClass().getName())
this.size == orig(this.size)
this.elementSet == orig(this.elementSet)
this.size == 0
this.entrySet != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
===========================================================================
com.google.common.collect.AbstractMapEntry:::OBJECT
this.getClass().getName() == com.google.common.collect.ImmutableEntry.class
===========================================================================
com.google.common.collect.AbstractMapEntry.AbstractMapEntry():::EXIT
===========================================================================
com.google.common.collect.AbstractMultimap$2:::OBJECT
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize >= 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
com.google.common.collect.AbstractMultimap.this.asMap == null
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$2.(com.google.common.collect.AbstractMultimap):::ENTER
com.google.common.collect.AbstractMultimap.this != null
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize == 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection == null
com.google.common.collect.AbstractMultimap.this.entries == null
com.google.common.collect.AbstractMultimap.this.asMap == null
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$2.(com.google.common.collect.AbstractMultimap):::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
com.google.common.collect.AbstractMultimap.this.totalSize == 0
com.google.common.collect.AbstractMultimap.this.valuesCollection == null
com.google.common.collect.AbstractMultimap.this.entries == null
===========================================================================
com.google.common.collect.AbstractMultimap$2.multimap():::ENTER
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
===========================================================================
com.google.common.collect.AbstractMultimap$2.multimap():::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
return.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
return != null
return.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$3:::OBJECT
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize >= 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
com.google.common.collect.AbstractMultimap.this.asMap == null
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$3.(com.google.common.collect.AbstractMultimap):::ENTER
com.google.common.collect.AbstractMultimap.this != null
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize >= 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries == null
com.google.common.collect.AbstractMultimap.this.asMap == null
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$3.(com.google.common.collect.AbstractMultimap):::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
com.google.common.collect.AbstractMultimap.this.entries == null
===========================================================================
com.google.common.collect.AbstractMultimap$3.iterator():::ENTER
com.google.common.collect.AbstractMultimap.this.entries != null
===========================================================================
com.google.common.collect.AbstractMultimap$3.iterator():::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
com.google.common.collect.AbstractMultimap.this.entries != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$EntryIterator.class
com.google.common.collect.AbstractMultimap.this.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator:::OBJECT
this.keyIterator != null
this.keyIterator.getClass().getName() == java.util.TreeMap$EntryIterator.class
this.key.getClass().getName() == java.lang.Integer.class
this.collection.getClass().getName() == java.util.TreeSet.class
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize >= 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries != null
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
com.google.common.collect.AbstractMultimap.this.asMap == null
this.keyIterator.getClass().getName() != this.key.getClass().getName()
this.keyIterator.getClass().getName() != this.collection.getClass().getName()
this.keyIterator.getClass().getName() != this.valueIterator.getClass().getName()
this.keyIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.getClass().getName()
this.keyIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
this.keyIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
this.keyIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
this.key.getClass().getName() != this.collection.getClass().getName()
this.key.getClass().getName() != this.valueIterator.getClass().getName()
this.key.getClass().getName() != com.google.common.collect.AbstractMultimap.this.getClass().getName()
this.key.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
this.key.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
this.key.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
this.collection.getClass().getName() != this.valueIterator.getClass().getName()
this.collection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.getClass().getName()
this.collection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
this.collection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
this.collection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
this.valueIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.getClass().getName()
this.valueIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
this.valueIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
this.valueIterator.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator(com.google.common.collect.AbstractMultimap):::ENTER
com.google.common.collect.AbstractMultimap.this != null
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map != null
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize >= 0
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection != null
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries != null
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
com.google.common.collect.AbstractMultimap.this.asMap == null
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.map.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != com.google.common.collect.AbstractMultimap.this.entries.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator(com.google.common.collect.AbstractMultimap):::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
this.valueIterator != null
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey():::ENTER
this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class
com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 }
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey():::EXIT
this.keyIterator == orig(this.keyIterator)
this.keyIterator.getClass().getName() == orig(this.keyIterator.getClass().getName())
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.collection.getClass().getName() == orig(this.collection.getClass().getName())
this.valueIterator.getClass().getName() == orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
this.key != null
this.collection != null
this.valueIterator != null
this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class
com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 }
this.keyIterator.getClass().getName() != orig(this.key.getClass().getName())
this.keyIterator.getClass().getName() != orig(this.collection.getClass().getName())
this.keyIterator.getClass().getName() != orig(this.valueIterator.getClass().getName())
this.key.getClass().getName() != orig(this.collection.getClass().getName())
this.key.getClass().getName() != orig(this.valueIterator.getClass().getName())
this.collection.getClass().getName() != orig(this.key.getClass().getName())
this.collection.getClass().getName() != orig(this.valueIterator.getClass().getName())
this.valueIterator.getClass().getName() != orig(this.key.getClass().getName())
this.valueIterator.getClass().getName() != orig(this.collection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.getClass().getName() != orig(this.key.getClass().getName())
com.google.common.collect.AbstractMultimap.this.getClass().getName() != orig(this.collection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.getClass().getName() != orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != orig(this.key.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != orig(this.collection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != orig(this.key.getClass().getName())
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != orig(this.collection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != orig(this.key.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != orig(this.collection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != orig(this.valueIterator.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.hasNext():::ENTER
this.valueIterator != null
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.hasNext():::EXIT
this.keyIterator == orig(this.keyIterator)
this.keyIterator.getClass().getName() == orig(this.keyIterator.getClass().getName())
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.collection == orig(this.collection)
this.collection.getClass().getName() == orig(this.collection.getClass().getName())
this.valueIterator == orig(this.valueIterator)
this.valueIterator.getClass().getName() == orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
(return == true)  ==>  (com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 })
(return == true)  ==>  (this.collection != null)
(return == true)  ==>  (this.key != null)
(return == true)  ==>  (this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class)
this.valueIterator != null
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.hasNext():::EXIT;condition="return == true"
this.key != null
this.collection != null
this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class
com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 }
return == true
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.hasNext():::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.next():::ENTER
this.key != null
this.collection != null
this.valueIterator != null
this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class
com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 }
===========================================================================
com.google.common.collect.AbstractMultimap$EntryIterator.next():::EXIT
this.keyIterator == orig(this.keyIterator)
this.keyIterator.getClass().getName() == orig(this.keyIterator.getClass().getName())
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.collection.getClass().getName() == orig(this.collection.getClass().getName())
this.valueIterator.getClass().getName() == orig(this.valueIterator.getClass().getName())
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.entries.getClass().getName())
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
this.key != null
this.collection != null
this.valueIterator != null
this.valueIterator.getClass().getName() == java.util.TreeMap$KeyIterator.class
com.google.common.collect.AbstractMultimap.this.totalSize one of { 1, 3, 4 }
return != null
return.getClass().getName() == com.google.common.collect.ImmutableEntry.class
this.keyIterator.getClass().getName() != return.getClass().getName()
this.key.getClass().getName() != return.getClass().getName()
this.collection.getClass().getName() != return.getClass().getName()
this.valueIterator.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultimap.this.entries.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection:::OBJECT
this has only one value
this.key has only one value
this.key.getClass().getName() == java.lang.Integer.class
this.delegate has only one value
this.delegate.getClass().getName() == java.util.TreeSet.class
this.ancestor == null
this.ancestorDelegate == null
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.WrappedCollection(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.Collection, com.google.common.collect.AbstractMultimap$WrappedCollection):::ENTER
com.google.common.collect.AbstractMultimap.this has only one value
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map has only one value
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize == 3
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection has only one value
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries == null
com.google.common.collect.AbstractMultimap.this.asMap == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
delegate has only one value
delegate.getClass().getName() == java.util.TreeSet.class
ancestor == null
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.WrappedCollection(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.Collection, com.google.common.collect.AbstractMultimap$WrappedCollection):::EXIT
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty():::ENTER
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty():::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.delegate == orig(this.delegate)
this.delegate.getClass().getName() == orig(this.delegate.getClass().getName())
this.ancestor == orig(this.ancestor)
this.ancestorDelegate == orig(this.ancestorDelegate)
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.toString():::ENTER
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedCollection.toString():::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.delegate == orig(this.delegate)
this.delegate.getClass().getName() == orig(this.delegate.getClass().getName())
this.ancestor == orig(this.ancestor)
this.ancestorDelegate == orig(this.ancestorDelegate)
return has only one value
return.toString == "[[1] Child 1\nTest asdfas dfasfdsdfddddd, [2] Child 2\nTest, [3] Child 3]"
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedSortedSet:::OBJECT
this has only one value
com.google.common.collect.AbstractMultimap.this has only one value
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map has only one value
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize == 3
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection has only one value
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries == null
com.google.common.collect.AbstractMultimap.this.asMap == null
this.key has only one value
this.key.getClass().getName() == java.lang.Integer.class
this.delegate has only one value
this.delegate.getClass().getName() == java.util.TreeSet.class
this.ancestor == null
this.ancestorDelegate == null
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedSortedSet.WrappedSortedSet(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.SortedSet, com.google.common.collect.AbstractMultimap$WrappedCollection):::ENTER
com.google.common.collect.AbstractMultimap.this has only one value
com.google.common.collect.AbstractMultimap.this.getClass().getName() == com.google.common.collect.TreeMultimap.class
com.google.common.collect.AbstractMultimap.this.map has only one value
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == java.util.TreeMap.class
com.google.common.collect.AbstractMultimap.this.totalSize == 3
com.google.common.collect.AbstractMultimap.this.keySet == null
com.google.common.collect.AbstractMultimap.this.multiset == null
com.google.common.collect.AbstractMultimap.this.valuesCollection has only one value
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
com.google.common.collect.AbstractMultimap.this.entries == null
com.google.common.collect.AbstractMultimap.this.asMap == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
delegate has only one value
delegate.getClass().getName() == java.util.TreeSet.class
ancestor == null
===========================================================================
com.google.common.collect.AbstractMultimap$WrappedSortedSet.WrappedSortedSet(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.SortedSet, com.google.common.collect.AbstractMultimap$WrappedCollection):::EXIT
com.google.common.collect.AbstractMultimap.this == orig(com.google.common.collect.AbstractMultimap.this)
com.google.common.collect.AbstractMultimap.this.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.getClass().getName())
com.google.common.collect.AbstractMultimap.this.map == orig(com.google.common.collect.AbstractMultimap.this.map)
com.google.common.collect.AbstractMultimap.this.map.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.map.getClass().getName())
com.google.common.collect.AbstractMultimap.this.totalSize == orig(com.google.common.collect.AbstractMultimap.this.totalSize)
com.google.common.collect.AbstractMultimap.this.keySet == orig(com.google.common.collect.AbstractMultimap.this.keySet)
com.google.common.collect.AbstractMultimap.this.multiset == orig(com.google.common.collect.AbstractMultimap.this.multiset)
com.google.common.collect.AbstractMultimap.this.valuesCollection == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection)
com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName() == orig(com.google.common.collect.AbstractMultimap.this.valuesCollection.getClass().getName())
com.google.common.collect.AbstractMultimap.this.entries == orig(com.google.common.collect.AbstractMultimap.this.entries)
com.google.common.collect.AbstractMultimap.this.asMap == orig(com.google.common.collect.AbstractMultimap.this.asMap)
this.key == orig(key)
this.key.getClass().getName() == orig(key.getClass().getName())
this.delegate.getClass().getName() == orig(delegate.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMultimap:::CLASS
===========================================================================
com.google.common.collect.AbstractMultimap:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.map != null
this.map.getClass().getName() == java.util.TreeMap.class
this.totalSize >= 0
this.keySet == null
this.multiset == null
this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
this.asMap == null
===========================================================================
com.google.common.collect.AbstractMultimap.AbstractMultimap(java.util.Map):::ENTER
map != null
map.getClass().getName() == java.util.TreeMap.class
===========================================================================
com.google.common.collect.AbstractMultimap.AbstractMultimap(java.util.Map):::EXIT
this.totalSize == 0
this.valuesCollection == null
this.entries == null
===========================================================================
com.google.common.collect.AbstractMultimap.containsKey(java.lang.Object):::ENTER
this has only one value
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractMultimap.containsKey(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
return == true
===========================================================================
com.google.common.collect.AbstractMultimap.containsKey(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.AbstractMultimap.createCollection(java.lang.Object):::ENTER
this.totalSize one of { 0, 1, 2 }
this.valuesCollection != null
this.entries == null
key != null
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractMultimap.createCollection(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.totalSize one of { 0, 1, 2 }
this.valuesCollection != null
this.entries == null
return != null
return.getClass().getName() == java.util.TreeSet.class
===========================================================================
com.google.common.collect.AbstractMultimap.createEntries():::ENTER
this.valuesCollection != null
this.entries == null
===========================================================================
com.google.common.collect.AbstractMultimap.createEntries():::EXIT1074
===========================================================================
com.google.common.collect.AbstractMultimap.createEntries():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.valuesCollection != null
this.entries == null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
===========================================================================
com.google.common.collect.AbstractMultimap.createEntryIterator():::ENTER
this.valuesCollection != null
this.entries != null
===========================================================================
com.google.common.collect.AbstractMultimap.createEntryIterator():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.entries.getClass().getName() == orig(this.entries.getClass().getName())
this.asMap == orig(this.asMap)
this.valuesCollection != null
this.entries != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$EntryIterator.class
===========================================================================
com.google.common.collect.AbstractMultimap.entries():::ENTER
this.valuesCollection != null
===========================================================================
com.google.common.collect.AbstractMultimap.entries():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries.getClass().getName() == orig(this.entries.getClass().getName())
this.asMap == orig(this.asMap)
this.valuesCollection != null
this.entries != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
===========================================================================
com.google.common.collect.AbstractMultimap.get(java.lang.Object):::ENTER
this has only one value
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractMultimap.get(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
return has only one value
return.getClass().getName() == com.google.common.collect.AbstractMultimap$WrappedSortedSet.class
===========================================================================
com.google.common.collect.AbstractMultimap.getOrCreateCollection(java.lang.Object):::ENTER
this.valuesCollection != null
this.entries == null
key != null
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractMultimap.getOrCreateCollection(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.valuesCollection != null
this.entries == null
return != null
return.getClass().getName() == java.util.TreeSet.class
===========================================================================
com.google.common.collect.AbstractMultimap.put(java.lang.Object, java.lang.Object):::ENTER
this.valuesCollection != null
this.entries == null
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
com.google.common.collect.AbstractMultimap.put(java.lang.Object, java.lang.Object):::EXIT205
===========================================================================
com.google.common.collect.AbstractMultimap.put(java.lang.Object, java.lang.Object):::EXIT205;condition="return == true"
===========================================================================
com.google.common.collect.AbstractMultimap.put(java.lang.Object, java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.totalSize >= 1
this.valuesCollection != null
this.entries == null
return == true
this.totalSize - orig(this.totalSize) - 1 == 0
===========================================================================
com.google.common.collect.AbstractMultimap.put(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.AbstractMultimap.size():::ENTER
this.valuesCollection != null
===========================================================================
com.google.common.collect.AbstractMultimap.size():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.entries.getClass().getName() == orig(this.entries.getClass().getName())
this.asMap == orig(this.asMap)
this.valuesCollection != null
return >= 0
===========================================================================
com.google.common.collect.AbstractMultimap.values():::ENTER
this.totalSize == 0
this.valuesCollection == null
this.entries == null
===========================================================================
com.google.common.collect.AbstractMultimap.values():::EXIT1039
===========================================================================
com.google.common.collect.AbstractMultimap.values():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.totalSize == 0
this.valuesCollection != null
this.entries == null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
===========================================================================
com.google.common.collect.AbstractMultimap.wrapCollection(java.lang.Object, java.util.Collection):::ENTER
this has only one value
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
collection has only one value
collection.getClass().getName() == java.util.TreeSet.class
===========================================================================
com.google.common.collect.AbstractMultimap.wrapCollection(java.lang.Object, java.util.Collection):::EXIT365
===========================================================================
com.google.common.collect.AbstractMultimap.wrapCollection(java.lang.Object, java.util.Collection):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
return has only one value
return.getClass().getName() == com.google.common.collect.AbstractMultimap$WrappedSortedSet.class
===========================================================================
com.google.common.collect.AbstractMultiset$EntrySet:::OBJECT
com.google.common.collect.AbstractMultiset.this.elementSet == null
com.google.common.collect.AbstractMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
com.google.common.collect.AbstractMultiset.this.getClass().getName() != com.google.common.collect.AbstractMultiset.this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultiset$EntrySet.EntrySet(com.google.common.collect.AbstractMultiset):::ENTER
com.google.common.collect.AbstractMultiset.this != null
com.google.common.collect.AbstractMultiset.this.elementSet == null
com.google.common.collect.AbstractMultiset.this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset$EntrySet.EntrySet(com.google.common.collect.AbstractMultiset):::EXIT
com.google.common.collect.AbstractMultiset.this == orig(com.google.common.collect.AbstractMultiset.this)
com.google.common.collect.AbstractMultiset.this.getClass().getName() == orig(com.google.common.collect.AbstractMultiset.this.getClass().getName())
com.google.common.collect.AbstractMultiset.this.elementSet == orig(com.google.common.collect.AbstractMultiset.this.elementSet)
com.google.common.collect.AbstractMultiset.this.entrySet == orig(com.google.common.collect.AbstractMultiset.this.entrySet)
com.google.common.collect.AbstractMultiset.this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset$EntrySet.iterator():::ENTER
com.google.common.collect.AbstractMultiset.this.entrySet != null
===========================================================================
com.google.common.collect.AbstractMultiset$EntrySet.iterator():::EXIT
com.google.common.collect.AbstractMultiset.this == orig(com.google.common.collect.AbstractMultiset.this)
com.google.common.collect.AbstractMultiset.this.getClass().getName() == orig(com.google.common.collect.AbstractMultiset.this.getClass().getName())
com.google.common.collect.AbstractMultiset.this.elementSet == orig(com.google.common.collect.AbstractMultiset.this.elementSet)
com.google.common.collect.AbstractMultiset.this.entrySet == orig(com.google.common.collect.AbstractMultiset.this.entrySet)
com.google.common.collect.AbstractMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.AbstractMultiset.this.entrySet.getClass().getName())
com.google.common.collect.AbstractMultiset.this.entrySet != null
return != null
com.google.common.collect.AbstractMultiset.this.getClass().getName() != return.getClass().getName()
com.google.common.collect.AbstractMultiset.this.entrySet.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultiset:::OBJECT
this.elementSet == null
this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.getClass().getName() != this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultiset.AbstractMultiset():::EXIT
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset.add(java.lang.Object):::ENTER
element != null
this.getClass().getName() != element.getClass().getName()
this.entrySet.getClass().getName() != element.getClass().getName()
===========================================================================
com.google.common.collect.AbstractMultiset.add(java.lang.Object):::EXIT
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
return == true
this.entrySet.getClass().getName() != orig(this.getClass().getName())
this.entrySet.getClass().getName() != orig(element.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMultiset.add(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.AbstractMultiset.createEntrySet():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset.createEntrySet():::EXIT
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMultiset.entrySet():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset.entrySet():::EXIT
this.elementSet == orig(this.elementSet)
this.entrySet == return
this.entrySet.getClass().getName() == return.getClass().getName()
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
com.google.common.collect.AbstractMultiset.iterator():::ENTER
this.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset.iterator():::EXIT
this.elementSet == orig(this.elementSet)
return.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.AbstractMultiset.size():::ENTER
this.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
this.entrySet == null
===========================================================================
com.google.common.collect.AbstractMultiset.size():::EXIT
this.elementSet == orig(this.elementSet)
this.entrySet != null
return == 0
this.entrySet.getClass().getName() != orig(this.getClass().getName())
===========================================================================
com.google.common.collect.AbstractSetMultimap:::CLASS
===========================================================================
com.google.common.collect.AbstractSetMultimap:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.map != null
this.map.getClass().getName() == java.util.TreeMap.class
this.totalSize >= 0
this.keySet == null
this.multiset == null
this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.entries.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
this.asMap == null
===========================================================================
com.google.common.collect.AbstractSetMultimap.AbstractSetMultimap(java.util.Map):::ENTER
map != null
map.getClass().getName() == java.util.TreeMap.class
===========================================================================
com.google.common.collect.AbstractSetMultimap.AbstractSetMultimap(java.util.Map):::EXIT
this.totalSize == 0
this.valuesCollection == null
this.entries == null
===========================================================================
com.google.common.collect.AbstractSetMultimap.entries():::ENTER
this.valuesCollection != null
===========================================================================
com.google.common.collect.AbstractSetMultimap.entries():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries.getClass().getName() == orig(this.entries.getClass().getName())
this.asMap == orig(this.asMap)
this.valuesCollection != null
this.entries != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
===========================================================================
com.google.common.collect.AbstractSetMultimap.get(java.lang.Object):::ENTER
this has only one value
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
key has only one value
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractSetMultimap.get(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
this.entries == null
return has only one value
return.getClass().getName() == com.google.common.collect.AbstractMultimap$WrappedSortedSet.class
===========================================================================
com.google.common.collect.AbstractSetMultimap.put(java.lang.Object, java.lang.Object):::ENTER
this.valuesCollection != null
this.entries == null
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
com.google.common.collect.AbstractSetMultimap.put(java.lang.Object, java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.totalSize >= 1
this.valuesCollection != null
this.entries == null
return == true
this.totalSize - orig(this.totalSize) - 1 == 0
===========================================================================
com.google.common.collect.AbstractSetMultimap.put(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.AbstractSortedMultiset:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.comparator != null
this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
this.descendingMultiset == null
this.elementSet == null
this.entrySet == null
this.getClass().getName() != this.comparator.getClass().getName()
===========================================================================
com.google.common.collect.AbstractSortedMultiset.AbstractSortedMultiset(java.util.Comparator):::ENTER
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
===========================================================================
com.google.common.collect.AbstractSortedMultiset.AbstractSortedMultiset(java.util.Comparator):::EXIT
this.comparator == orig(comparator)
this.comparator.getClass().getName() == orig(comparator.getClass().getName())
===========================================================================
com.google.common.collect.AbstractSortedMultiset.comparator():::ENTER
===========================================================================
com.google.common.collect.AbstractSortedMultiset.comparator():::EXIT
this.comparator == return
this.comparator.getClass().getName() == return.getClass().getName()
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
return == orig(this.comparator)
return.getClass().getName() == orig(this.comparator.getClass().getName())
return.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap:::CLASS
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultimap.class
this.map != null
this.map.getClass().getName() == java.util.TreeMap.class
this.totalSize one of { 0, 3 }
this.keySet == null
this.multiset == null
this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.entries == null
this.asMap == null
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.AbstractSortedSetMultimap(java.util.Map):::ENTER
map != null
map.getClass().getName() == java.util.TreeMap.class
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.AbstractSortedSetMultimap(java.util.Map):::EXIT
this.totalSize == 0
this.valuesCollection == null
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Object):::ENTER
this has only one value
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
key has only one value
key.getClass().getName() == java.lang.Integer.class
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Object):::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.map has only one value
this.totalSize == 3
this.valuesCollection has only one value
return has only one value
return.getClass().getName() == com.google.common.collect.AbstractMultimap$WrappedSortedSet.class
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.values():::ENTER
this.totalSize == 0
this.valuesCollection == null
===========================================================================
com.google.common.collect.AbstractSortedSetMultimap.values():::EXIT
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.totalSize == 0
this.valuesCollection != null
return != null
return.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
===========================================================================
com.google.common.collect.BoundType:::OBJECT
===========================================================================
com.google.common.collect.BoundType.BoundType(java.lang.String, int):::ENTER
$hidden$1.toString one of { "CLOSED", "OPEN" }
$hidden$2 one of { 0, 1 }
===========================================================================
com.google.common.collect.BoundType.BoundType(java.lang.String, int):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
$hidden$1.toString one of { "CLOSED", "OPEN" }
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2:::OBJECT
this.val$countAggregate has only one value
this.val$countAggregate != null
this.val$countAggregate.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.(com.google.common.collect.BstAggregate):::ENTER
$hidden$1 has only one value
$hidden$1.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.(com.google.common.collect.BstAggregate):::EXIT
this.val$countAggregate == orig($hidden$1)
this.val$countAggregate.getClass().getName() == orig($hidden$1.getClass().getName())
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.balance(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::ENTER
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == left.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.left == left
source.left.key == left.key
source.left.key.getClass().getName() == left.key.getClass().getName()
source.right.key == right.key
source.right.key.getClass().getName() == left.key.getClass().getName()
source.right.key.getClass().getName() == right.key.getClass().getName()
source.right.key.getClass().getName() == right.right.key.getClass().getName()
left.key.getClass().getName() == right.key.getClass().getName()
nodeFactory has only one value
nodeFactory != null
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
source != null
source.key != null
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.left == null
source.left.right == null
source.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.right.left == null
source.right.right == null
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.left == null
right.right.right == null
this.val$countAggregate.getClass().getName() != nodeFactory.getClass().getName()
this.val$countAggregate.getClass().getName() != source.key.getClass().getName()
this.val$countAggregate.getClass().getName() != right.key.getClass().getName()
nodeFactory.getClass().getName() != source.key.getClass().getName()
nodeFactory.getClass().getName() != right.key.getClass().getName()
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.balance(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT90
source.key == return.left.key
source.key.getClass().getName() == right.right.key.getClass().getName()
source.key.getClass().getName() == return.left.key.getClass().getName()
source.key.getClass().getName() == return.right.key.getClass().getName()
source.key.getClass().getName() == orig(source.right.key.getClass().getName())
source.key.getClass().getName() == orig(right.key.getClass().getName())
source.key.getClass().getName() == orig(right.right.key.getClass().getName())
right.key == return.key
right.key == orig(source.right.key)
right.right == return.right
right.right.key == return.right.key
source.left == null
return.right.right == null
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.balance(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT95
source.key == return.key
source.left == return.left
left.key.getClass().getName() == right.right.key.getClass().getName()
left.key.getClass().getName() == return.left.key.getClass().getName()
left.key.getClass().getName() == orig(source.right.key.getClass().getName())
left.key.getClass().getName() == orig(right.right.key.getClass().getName())
right.key == return.right.key
right.right == return.right.right
return.right == orig(right)
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.balance(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT
this.val$countAggregate == orig(this.val$countAggregate)
this.val$countAggregate.getClass().getName() == orig(this.val$countAggregate.getClass().getName())
source.key == orig(source.key)
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == left.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == return.key.getClass().getName()
source.key.getClass().getName() == orig(source.key.getClass().getName())
source.left == orig(source.left)
source.left == orig(left)
source.left.key == left.key
source.left.key.getClass().getName() == left.key.getClass().getName()
source.left.left == orig(source.left.left)
source.left.right == orig(source.left.right)
source.right == orig(source.right)
source.right.key == right.key
source.right.key == orig(source.right.key)
source.right.key.getClass().getName() == left.key.getClass().getName()
source.right.key.getClass().getName() == right.key.getClass().getName()
source.right.key.getClass().getName() == right.right.key.getClass().getName()
source.right.key.getClass().getName() == return.left.key.getClass().getName()
source.right.key.getClass().getName() == orig(source.right.key.getClass().getName())
source.right.key.getClass().getName() == orig(right.right.key.getClass().getName())
source.right.left == orig(source.right.left)
source.right.right == orig(source.right.right)
left.key == return.left.key
left.key == orig(source.left.key)
left.key == orig(left.key)
left.key.getClass().getName() == right.key.getClass().getName()
left.key.getClass().getName() == orig(source.left.key.getClass().getName())
left.key.getClass().getName() == orig(left.key.getClass().getName())
left.left == orig(left.left)
left.right == orig(left.right)
right.key == orig(right.key)
right.key.getClass().getName() == return.right.key.getClass().getName()
right.key.getClass().getName() == orig(right.key.getClass().getName())
right.left == orig(right.left)
right.right == orig(right.right)
right.right.key == orig(right.right.key)
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
source.key != null
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.left == null
source.left.right == null
source.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.right.left == null
source.right.right == null
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.left == null
right.right.right == null
return != null
return.key != null
return.left.left == null
return.left.right == null
return.right.left == null
this.val$countAggregate.getClass().getName() != source.key.getClass().getName()
this.val$countAggregate.getClass().getName() != right.key.getClass().getName()
this.val$countAggregate.getClass().getName() != orig(nodeFactory.getClass().getName())
source.key.getClass().getName() != orig(nodeFactory.getClass().getName())
right.key.getClass().getName() != orig(nodeFactory.getClass().getName())
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.rotateL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::ENTER
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == right.right.key.getClass().getName()
source.right.key == right.key
nodeFactory has only one value
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left == null
source.right.left == null
source.right.right == null
left == null
right.left == null
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.rotateL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT
this.val$countAggregate == orig(this.val$countAggregate)
this.val$countAggregate.getClass().getName() == orig(this.val$countAggregate.getClass().getName())
source.key == return.left.key
source.key == orig(source.key)
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == right.right.key.getClass().getName()
source.key.getClass().getName() == return.key.getClass().getName()
source.key.getClass().getName() == return.left.key.getClass().getName()
source.key.getClass().getName() == return.right.key.getClass().getName()
source.key.getClass().getName() == orig(source.key.getClass().getName())
source.key.getClass().getName() == orig(source.right.key.getClass().getName())
source.key.getClass().getName() == orig(right.key.getClass().getName())
source.key.getClass().getName() == orig(right.right.key.getClass().getName())
source.left == orig(source.left)
source.right == orig(source.right)
source.right.key == right.key
source.right.left == orig(source.right.left)
source.right.right == orig(source.right.right)
right.key == return.key
right.key == orig(source.right.key)
right.key == orig(right.key)
right.left == orig(right.left)
right.right == return.right
right.right == orig(right.right)
right.right.key == return.right.key
right.right.key == orig(right.right.key)
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left == null
source.right.left == null
source.right.right == null
right.left == null
right.right.left == null
right.right.right == null
return.left.left == null
return.left.right == null
return.right.left == null
return.right.right == null
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.singleL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::ENTER
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == right.right.key.getClass().getName()
source.right.key == right.key
nodeFactory has only one value
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left == null
source.right.left == null
source.right.right == null
left == null
right.left == null
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies$2.singleL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT
this.val$countAggregate == orig(this.val$countAggregate)
this.val$countAggregate.getClass().getName() == orig(this.val$countAggregate.getClass().getName())
source.key == return.left.key
source.key == orig(source.key)
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == right.right.key.getClass().getName()
source.key.getClass().getName() == return.key.getClass().getName()
source.key.getClass().getName() == return.left.key.getClass().getName()
source.key.getClass().getName() == return.right.key.getClass().getName()
source.key.getClass().getName() == orig(source.key.getClass().getName())
source.key.getClass().getName() == orig(source.right.key.getClass().getName())
source.key.getClass().getName() == orig(right.key.getClass().getName())
source.key.getClass().getName() == orig(right.right.key.getClass().getName())
source.left == orig(source.left)
source.right == orig(source.right)
source.right.key == right.key
source.right.left == orig(source.right.left)
source.right.right == orig(source.right.right)
right.key == return.key
right.key == orig(source.right.key)
right.key == orig(right.key)
right.left == orig(right.left)
right.right == return.right
right.right == orig(right.right)
right.right.key == return.right.key
right.right.key == orig(right.right.key)
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left == null
source.right.left == null
source.right.right == null
right.left == null
right.right.left == null
right.right.right == null
return.left.left == null
return.left.right == null
return.right.left == null
return.right.right == null
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies:::CLASS
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies.singleRebalancePolicy(com.google.common.collect.BstAggregate):::ENTER
countAggregate has only one value
countAggregate.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
===========================================================================
com.google.common.collect.BstCountBasedBalancePolicies.singleRebalancePolicy(com.google.common.collect.BstAggregate):::EXIT
return.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
return.getClass().getName() != orig(countAggregate.getClass().getName())
===========================================================================
com.google.common.collect.BstInOrderPath$1:::OBJECT
===========================================================================
com.google.common.collect.BstInOrderPath$1.():::EXIT
===========================================================================
com.google.common.collect.BstInOrderPath$1.extension(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::ENTER
path.sideExtension == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
path.prevInOrder == null
path.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
path.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
path.prefix == null
side has only one value
side.getClass().getName() == com.google.common.collect.BstSide$1.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath$1.extension(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::EXIT
path.sideExtension == orig(path.sideExtension)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
path.prevInOrder == orig(path.prevInOrder)
path.nextInOrder == orig(path.nextInOrder)
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
path.tip == orig(path.tip)
path.tip.key == orig(path.tip.key)
path.tip.key.getClass().getName() == orig(path.tip.key.getClass().getName())
path.tip.left == orig(path.tip.left)
path.tip.right == orig(path.tip.right)
path.prefix == orig(path.prefix)
path.sideExtension == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
path.prevInOrder == null
path.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
path.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
path.prefix == null
return.sideExtension has only one value
return.sideExtension.getClass().getName() == com.google.common.collect.BstSide$1.class
return.prevInOrder == null
return.nextInOrder == null
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.tip.left == null
return.tip.right == null
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath$1.initialPath(com.google.common.collect.BstNode):::ENTER
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.right.left == null
===========================================================================
com.google.common.collect.BstInOrderPath$1.initialPath(com.google.common.collect.BstNode):::EXIT
root.key == orig(root.key)
root.key.getClass().getName() == orig(root.key.getClass().getName())
root.left == orig(root.left)
root.left.key == orig(root.left.key)
root.left.key.getClass().getName() == orig(root.left.key.getClass().getName())
root.left.left == orig(root.left.left)
root.left.right == orig(root.left.right)
root.right == orig(root.right)
root.right.key == orig(root.right.key)
root.right.key.getClass().getName() == orig(root.right.key.getClass().getName())
root.right.left == orig(root.right.left)
root.right.right == orig(root.right.right)
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.right.left == null
return.sideExtension == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
return.prevInOrder == null
return.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath:::CLASS
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
===========================================================================
com.google.common.collect.BstInOrderPath:::OBJECT
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
this.prevInOrder == null
this.tip != null
this.tip.key != null
this.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.left.key != null
this.tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.left.left == null
this.tip.left.right == null
this.tip.right.key != null
this.tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.right.left == null
this.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
this.prefix.tip != null
this.prefix.tip.key != null
this.prefix.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.prefix.tip.right != null
this.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
this.prefix.prefix.tip != null
this.prefix.prefix.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath.BstInOrderPath(com.google.common.collect.BstNode, com.google.common.collect.BstSide, com.google.common.collect.BstInOrderPath):::ENTER
tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.left == null
tip.left.right == null
tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.right.left == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
tail.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
tail.prevInOrder == null
tail.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
tail.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tail.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
tail.prefix.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath.BstInOrderPath(com.google.common.collect.BstNode, com.google.common.collect.BstSide, com.google.common.collect.BstInOrderPath):::EXIT
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
tip.key == orig(tip.key)
tip.key.getClass().getName() == orig(tip.key.getClass().getName())
tip.left == orig(tip.left)
tip.left.key == orig(tip.left.key)
tip.left.key.getClass().getName() == orig(tip.left.key.getClass().getName())
tip.left.left == orig(tip.left.left)
tip.left.right == orig(tip.left.right)
tip.right == orig(tip.right)
tip.right.key == orig(tip.right.key)
tip.right.key.getClass().getName() == orig(tip.right.key.getClass().getName())
tip.right.left == orig(tip.right.left)
tip.right.right == orig(tip.right.right)
tail.sideExtension == orig(tail.sideExtension)
tail.sideExtension.getClass().getName() == orig(tail.sideExtension.getClass().getName())
tail.prevInOrder == orig(tail.prevInOrder)
tail.nextInOrder == orig(tail.nextInOrder)
tail.tip == orig(tail.tip)
tail.tip.key == orig(tail.tip.key)
tail.tip.key.getClass().getName() == orig(tail.tip.key.getClass().getName())
tail.tip.left == orig(tail.tip.left)
tail.tip.right == orig(tail.tip.right)
tail.prefix == orig(tail.prefix)
tail.prefix.getClass().getName() == orig(tail.prefix.getClass().getName())
tail.prefix.tip == orig(tail.prefix.tip)
tail.prefix.prefix == orig(tail.prefix.prefix)
this.nextInOrder == null
tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.left == null
tip.left.right == null
tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.right.left == null
tail.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
tail.prevInOrder == null
tail.nextInOrder == null
tail.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tail.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
tail.prefix.prefix == null
===========================================================================
com.google.common.collect.BstInOrderPath.computeNextInOrder(com.google.common.collect.BstSide):::ENTER
this.nextInOrder == null
side has only one value
side.getClass().getName() == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstInOrderPath.computeNextInOrder(com.google.common.collect.BstSide):::EXIT75
this.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
this.prefix.prefix == null
return.getClass().getName() == com.google.common.base.Optional$Present.class
===========================================================================
com.google.common.collect.BstInOrderPath.computeNextInOrder(com.google.common.collect.BstSide):::EXIT82
this.tip.left == null
this.tip.right == null
===========================================================================
com.google.common.collect.BstInOrderPath.computeNextInOrder(com.google.common.collect.BstSide):::EXIT
this.sideExtension == orig(this.sideExtension)
this.sideExtension.getClass().getName() == orig(this.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
this.prevInOrder == orig(this.prevInOrder)
this.nextInOrder == orig(this.nextInOrder)
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
(this.tip.right == null)  ==>  (this.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(this.tip.right == null)  ==>  (this.prefix.prefix.prefix == null)
(this.tip.right == null)  ==>  (this.tip.left == null)
this.nextInOrder == null
===========================================================================
com.google.common.collect.BstInOrderPath.extension(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::ENTER
path.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
path.prevInOrder == null
path.nextInOrder == null
path.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
path.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
path.prefix.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath.extension(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::EXIT
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
path.sideExtension == orig(path.sideExtension)
path.sideExtension.getClass().getName() == orig(path.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
path.prevInOrder == orig(path.prevInOrder)
path.nextInOrder == orig(path.nextInOrder)
path.tip == orig(path.tip)
path.tip.key == orig(path.tip.key)
path.tip.key.getClass().getName() == orig(path.tip.key.getClass().getName())
path.tip.left == orig(path.tip.left)
path.tip.right == orig(path.tip.right)
path.prefix == orig(path.prefix)
path.prefix.getClass().getName() == orig(path.prefix.getClass().getName())
path.prefix.tip == orig(path.prefix.tip)
path.prefix.prefix == orig(path.prefix.prefix)
path.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
path.prevInOrder == null
path.nextInOrder == null
path.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
path.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
path.prefix.prefix == null
return.prevInOrder == null
return.nextInOrder == null
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.tip.left == null
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstInOrderPath.hasNext(com.google.common.collect.BstSide):::ENTER
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
side has only one value
side != null
side.getClass().getName() == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstInOrderPath.hasNext(com.google.common.collect.BstSide):::EXIT
this.sideExtension == orig(this.sideExtension)
this.sideExtension.getClass().getName() == orig(this.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
this.prevInOrder == orig(this.prevInOrder)
this.nextInOrder.getClass().getName() == orig(this.nextInOrder.getClass().getName())
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  <==>  (return == false)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  <==>  (this.prefix.tip.left == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (orig(this.nextInOrder) == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.nextInOrder has only one value)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.prefix.prefix.prefix == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.tip.left == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (this.tip.right == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  <==>  (return == true)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  <==>  (this.prefix.prefix == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (orig(this.nextInOrder.getClass().getName()) == com.google.common.base.Optional$Present.class)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.nextInOrder.getClass().getName() == orig(this.nextInOrder.getClass().getName()))
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.tip.left.left == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.tip.left.right == null)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (this.tip.right.left == null)
this.nextInOrder != null
===========================================================================
com.google.common.collect.BstInOrderPath.hasNext(com.google.common.collect.BstSide):::EXIT;condition="return == true"
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
this.prefix.prefix == null
return == true
===========================================================================
com.google.common.collect.BstInOrderPath.hasNext(com.google.common.collect.BstSide):::EXIT;condition="not(return == true)"
this.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
this.nextInOrder has only one value
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class
this.tip.left == null
this.tip.right == null
this.prefix.tip.left == null
return == false
orig(this.nextInOrder) == null
===========================================================================
com.google.common.collect.BstInOrderPath.inOrderFactory():::ENTER
===========================================================================
com.google.common.collect.BstInOrderPath.inOrderFactory():::EXIT
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
return.getClass().getName() == com.google.common.collect.BstInOrderPath$1.class
===========================================================================
com.google.common.collect.BstInOrderPath.next(com.google.common.collect.BstSide):::ENTER
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
this.prefix.prefix == null
side has only one value
side.getClass().getName() == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstInOrderPath.next(com.google.common.collect.BstSide):::EXIT
this.sideExtension == orig(this.sideExtension)
this.sideExtension.getClass().getName() == orig(this.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
this.prevInOrder == orig(this.prevInOrder)
this.nextInOrder == orig(this.nextInOrder)
this.nextInOrder.getClass().getName() == orig(this.nextInOrder.getClass().getName())
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
this.prefix.prefix == null
return.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
return.prevInOrder == null
return.nextInOrder == null
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.BstInOrderPath.nextInOrder(com.google.common.collect.BstSide):::ENTER
this.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
side has only one value
side != null
side.getClass().getName() == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstInOrderPath.nextInOrder(com.google.common.collect.BstSide):::EXIT94
===========================================================================
com.google.common.collect.BstInOrderPath.nextInOrder(com.google.common.collect.BstSide):::EXIT
this.sideExtension == orig(this.sideExtension)
this.sideExtension.getClass().getName() == orig(this.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
this.prevInOrder == orig(this.prevInOrder)
this.nextInOrder.getClass().getName() == orig(this.nextInOrder.getClass().getName())
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
this.nextInOrder != null
return != null
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType:::CLASS
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType:::OBJECT
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType.ModificationType(java.lang.String, int):::ENTER
$hidden$1.toString one of { "IDENTITY", "REBALANCING_CHANGE", "REBUILDING_CHANGE" }
$hidden$2 one of { 0, 1, 2 }
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType.ModificationType(java.lang.String, int):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
$hidden$1.toString one of { "IDENTITY", "REBALANCING_CHANGE", "REBUILDING_CHANGE" }
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType.values():::ENTER
===========================================================================
com.google.common.collect.BstModificationResult$ModificationType.values():::EXIT
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
return.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
return[] contains no nulls and has only one value, of length 3
size(return[]) == 3
===========================================================================
com.google.common.collect.BstModificationResult:::OBJECT
this.originalTarget == null
this.changedTarget != null
this.changedTarget.key != null
this.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.changedTarget.left == null
this.changedTarget.right == null
this.type has only one value
this.type != null
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY != null
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE != null
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] elements != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstModificationResult.BstModificationResult(com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult$ModificationType):::ENTER
originalTarget == null
changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedTarget.left == null
changedTarget.right == null
type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstModificationResult.BstModificationResult(com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult$ModificationType):::EXIT
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
changedTarget.key == orig(changedTarget.key)
changedTarget.key.getClass().getName() == orig(changedTarget.key.getClass().getName())
changedTarget.left == orig(changedTarget.left)
changedTarget.right == orig(changedTarget.right)
changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedTarget.left == null
changedTarget.right == null
===========================================================================
com.google.common.collect.BstModificationResult.getChangedTarget():::ENTER
===========================================================================
com.google.common.collect.BstModificationResult.getChangedTarget():::EXIT
this.originalTarget == orig(this.originalTarget)
this.changedTarget == orig(this.changedTarget)
this.changedTarget.key == orig(this.changedTarget.key)
this.changedTarget.key.getClass().getName() == orig(this.changedTarget.key.getClass().getName())
this.changedTarget.left == orig(this.changedTarget.left)
this.changedTarget.right == orig(this.changedTarget.right)
this.type == orig(this.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
return != null
return.key != null
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left == null
return.right == null
===========================================================================
com.google.common.collect.BstModificationResult.getOriginalTarget():::ENTER
===========================================================================
com.google.common.collect.BstModificationResult.getOriginalTarget():::EXIT
this.originalTarget == orig(this.originalTarget)
this.changedTarget == orig(this.changedTarget)
this.changedTarget.key == orig(this.changedTarget.key)
this.changedTarget.key.getClass().getName() == orig(this.changedTarget.key.getClass().getName())
this.changedTarget.left == orig(this.changedTarget.left)
this.changedTarget.right == orig(this.changedTarget.right)
this.type == orig(this.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
return == null
===========================================================================
com.google.common.collect.BstModificationResult.getType():::ENTER
===========================================================================
com.google.common.collect.BstModificationResult.getType():::EXIT
this.originalTarget == orig(this.originalTarget)
this.changedTarget == orig(this.changedTarget)
this.changedTarget.key == orig(this.changedTarget.key)
this.changedTarget.key.getClass().getName() == orig(this.changedTarget.key.getClass().getName())
this.changedTarget.left == orig(this.changedTarget.left)
this.changedTarget.right == orig(this.changedTarget.right)
this.type == orig(this.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
return has only one value
return != null
===========================================================================
com.google.common.collect.BstModificationResult.rebalancingChange(com.google.common.collect.BstNode, com.google.common.collect.BstNode):::ENTER
originalTarget == null
changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedTarget.left == null
changedTarget.right == null
===========================================================================
com.google.common.collect.BstModificationResult.rebalancingChange(com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT
changedTarget.key == orig(changedTarget.key)
changedTarget.key.getClass().getName() == orig(changedTarget.key.getClass().getName())
changedTarget.left == orig(changedTarget.left)
changedTarget.right == orig(changedTarget.right)
changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedTarget.left == null
changedTarget.right == null
return.originalTarget == null
return.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.changedTarget.left == null
return.changedTarget.right == null
return.type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstMutationResult:::CLASS
com.google.common.collect.BstMutationResult.$assertionsDisabled == false
===========================================================================
com.google.common.collect.BstMutationResult:::OBJECT
this.targetKey != null
this.targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.originalRoot.key != null
this.originalRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.originalRoot.left.key != null
this.originalRoot.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.originalRoot.left.left == null
this.originalRoot.left.right == null
this.originalRoot.right.key != null
this.originalRoot.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.originalRoot.right.left == null
this.originalRoot.right.right == null
this.changedRoot != null
this.changedRoot.key != null
this.changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.changedRoot.left.key != null
this.changedRoot.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.changedRoot.left.left == null
this.changedRoot.left.right == null
this.changedRoot.right.key != null
this.changedRoot.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.changedRoot.right.left == null
this.modificationResult != null
this.modificationResult.originalTarget == null
this.modificationResult.changedTarget != null
this.modificationResult.changedTarget.key != null
this.modificationResult.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.modificationResult.changedTarget.left == null
this.modificationResult.changedTarget.right == null
this.modificationResult.type has only one value
this.modificationResult.type != null
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY != null
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE != null
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] elements != null
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstMutationResult.BstMutationResult(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult):::ENTER
targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
originalRoot == null
changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedRoot.left == null
changedRoot.right == null
modificationResult.originalTarget == null
modificationResult.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
modificationResult.changedTarget.left == null
modificationResult.changedTarget.right == null
modificationResult.type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstMutationResult.BstMutationResult(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult):::EXIT
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
changedRoot.key == orig(changedRoot.key)
changedRoot.key.getClass().getName() == orig(changedRoot.key.getClass().getName())
changedRoot.left == orig(changedRoot.left)
changedRoot.right == orig(changedRoot.right)
modificationResult.originalTarget == orig(modificationResult.originalTarget)
modificationResult.changedTarget == orig(modificationResult.changedTarget)
modificationResult.changedTarget.key == orig(modificationResult.changedTarget.key)
modificationResult.changedTarget.key.getClass().getName() == orig(modificationResult.changedTarget.key.getClass().getName())
modificationResult.changedTarget.left == orig(modificationResult.changedTarget.left)
modificationResult.changedTarget.right == orig(modificationResult.changedTarget.right)
modificationResult.type == orig(modificationResult.type)
this.originalRoot == null
this.changedRoot.left == null
this.changedRoot.right == null
changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedRoot.left == null
changedRoot.right == null
modificationResult.originalTarget == null
modificationResult.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
modificationResult.changedTarget.left == null
modificationResult.changedTarget.right == null
modificationResult.type has only one value
===========================================================================
com.google.common.collect.BstMutationResult.getChangedRoot():::ENTER
===========================================================================
com.google.common.collect.BstMutationResult.getChangedRoot():::EXIT
this.targetKey == orig(this.targetKey)
this.targetKey.getClass().getName() == orig(this.targetKey.getClass().getName())
this.originalRoot == orig(this.originalRoot)
this.originalRoot.key == orig(this.originalRoot.key)
this.originalRoot.key.getClass().getName() == orig(this.originalRoot.key.getClass().getName())
this.originalRoot.left == orig(this.originalRoot.left)
this.originalRoot.left.key == orig(this.originalRoot.left.key)
this.originalRoot.left.key.getClass().getName() == orig(this.originalRoot.left.key.getClass().getName())
this.originalRoot.left.left == orig(this.originalRoot.left.left)
this.originalRoot.left.right == orig(this.originalRoot.left.right)
this.originalRoot.right == orig(this.originalRoot.right)
this.originalRoot.right.key == orig(this.originalRoot.right.key)
this.originalRoot.right.key.getClass().getName() == orig(this.originalRoot.right.key.getClass().getName())
this.originalRoot.right.left == orig(this.originalRoot.right.left)
this.originalRoot.right.right == orig(this.originalRoot.right.right)
this.changedRoot == orig(this.changedRoot)
this.changedRoot.key == orig(this.changedRoot.key)
this.changedRoot.key.getClass().getName() == orig(this.changedRoot.key.getClass().getName())
this.changedRoot.left == orig(this.changedRoot.left)
this.changedRoot.left.key == orig(this.changedRoot.left.key)
this.changedRoot.left.key.getClass().getName() == orig(this.changedRoot.left.key.getClass().getName())
this.changedRoot.left.left == orig(this.changedRoot.left.left)
this.changedRoot.left.right == orig(this.changedRoot.left.right)
this.changedRoot.right == orig(this.changedRoot.right)
this.changedRoot.right.key == orig(this.changedRoot.right.key)
this.changedRoot.right.key.getClass().getName() == orig(this.changedRoot.right.key.getClass().getName())
this.changedRoot.right.left == orig(this.changedRoot.right.left)
this.changedRoot.right.right == orig(this.changedRoot.right.right)
this.modificationResult == orig(this.modificationResult)
this.modificationResult.originalTarget == orig(this.modificationResult.originalTarget)
this.modificationResult.changedTarget == orig(this.modificationResult.changedTarget)
this.modificationResult.changedTarget.key == orig(this.modificationResult.changedTarget.key)
this.modificationResult.changedTarget.key.getClass().getName() == orig(this.modificationResult.changedTarget.key.getClass().getName())
this.modificationResult.changedTarget.left == orig(this.modificationResult.changedTarget.left)
this.modificationResult.changedTarget.right == orig(this.modificationResult.changedTarget.right)
this.modificationResult.type == orig(this.modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.left == null
return.left.right == null
return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.right.left == null
===========================================================================
com.google.common.collect.BstMutationResult.getOriginalRoot():::ENTER
===========================================================================
com.google.common.collect.BstMutationResult.getOriginalRoot():::EXIT
this.targetKey == orig(this.targetKey)
this.targetKey.getClass().getName() == orig(this.targetKey.getClass().getName())
this.originalRoot == orig(this.originalRoot)
this.originalRoot.key == orig(this.originalRoot.key)
this.originalRoot.key.getClass().getName() == orig(this.originalRoot.key.getClass().getName())
this.originalRoot.left == orig(this.originalRoot.left)
this.originalRoot.left.key == orig(this.originalRoot.left.key)
this.originalRoot.left.key.getClass().getName() == orig(this.originalRoot.left.key.getClass().getName())
this.originalRoot.left.left == orig(this.originalRoot.left.left)
this.originalRoot.left.right == orig(this.originalRoot.left.right)
this.originalRoot.right == orig(this.originalRoot.right)
this.originalRoot.right.key == orig(this.originalRoot.right.key)
this.originalRoot.right.key.getClass().getName() == orig(this.originalRoot.right.key.getClass().getName())
this.originalRoot.right.left == orig(this.originalRoot.right.left)
this.originalRoot.right.right == orig(this.originalRoot.right.right)
this.changedRoot == orig(this.changedRoot)
this.changedRoot.key == orig(this.changedRoot.key)
this.changedRoot.key.getClass().getName() == orig(this.changedRoot.key.getClass().getName())
this.changedRoot.left == orig(this.changedRoot.left)
this.changedRoot.left.key == orig(this.changedRoot.left.key)
this.changedRoot.left.key.getClass().getName() == orig(this.changedRoot.left.key.getClass().getName())
this.changedRoot.left.left == orig(this.changedRoot.left.left)
this.changedRoot.left.right == orig(this.changedRoot.left.right)
this.changedRoot.right == orig(this.changedRoot.right)
this.changedRoot.right.key == orig(this.changedRoot.right.key)
this.changedRoot.right.key.getClass().getName() == orig(this.changedRoot.right.key.getClass().getName())
this.changedRoot.right.left == orig(this.changedRoot.right.left)
this.changedRoot.right.right == orig(this.changedRoot.right.right)
this.modificationResult == orig(this.modificationResult)
this.modificationResult.originalTarget == orig(this.modificationResult.originalTarget)
this.modificationResult.changedTarget == orig(this.modificationResult.changedTarget)
this.modificationResult.changedTarget.key == orig(this.modificationResult.changedTarget.key)
this.modificationResult.changedTarget.key.getClass().getName() == orig(this.modificationResult.changedTarget.key.getClass().getName())
this.modificationResult.changedTarget.left == orig(this.modificationResult.changedTarget.left)
this.modificationResult.changedTarget.right == orig(this.modificationResult.changedTarget.right)
this.modificationResult.type == orig(this.modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.left == null
return.left.right == null
return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.right.left == null
return.right.right == null
===========================================================================
com.google.common.collect.BstMutationResult.getOriginalTarget():::ENTER
===========================================================================
com.google.common.collect.BstMutationResult.getOriginalTarget():::EXIT
this.targetKey == orig(this.targetKey)
this.targetKey.getClass().getName() == orig(this.targetKey.getClass().getName())
this.originalRoot == orig(this.originalRoot)
this.originalRoot.key == orig(this.originalRoot.key)
this.originalRoot.key.getClass().getName() == orig(this.originalRoot.key.getClass().getName())
this.originalRoot.left == orig(this.originalRoot.left)
this.originalRoot.left.key == orig(this.originalRoot.left.key)
this.originalRoot.left.key.getClass().getName() == orig(this.originalRoot.left.key.getClass().getName())
this.originalRoot.left.left == orig(this.originalRoot.left.left)
this.originalRoot.left.right == orig(this.originalRoot.left.right)
this.originalRoot.right == orig(this.originalRoot.right)
this.originalRoot.right.key == orig(this.originalRoot.right.key)
this.originalRoot.right.key.getClass().getName() == orig(this.originalRoot.right.key.getClass().getName())
this.originalRoot.right.left == orig(this.originalRoot.right.left)
this.originalRoot.right.right == orig(this.originalRoot.right.right)
this.changedRoot == orig(this.changedRoot)
this.changedRoot.key == orig(this.changedRoot.key)
this.changedRoot.key.getClass().getName() == orig(this.changedRoot.key.getClass().getName())
this.changedRoot.left == orig(this.changedRoot.left)
this.changedRoot.left.key == orig(this.changedRoot.left.key)
this.changedRoot.left.key.getClass().getName() == orig(this.changedRoot.left.key.getClass().getName())
this.changedRoot.left.left == orig(this.changedRoot.left.left)
this.changedRoot.left.right == orig(this.changedRoot.left.right)
this.changedRoot.right == orig(this.changedRoot.right)
this.changedRoot.right.key == orig(this.changedRoot.right.key)
this.changedRoot.right.key.getClass().getName() == orig(this.changedRoot.right.key.getClass().getName())
this.changedRoot.right.left == orig(this.changedRoot.right.left)
this.changedRoot.right.right == orig(this.changedRoot.right.right)
this.modificationResult == orig(this.modificationResult)
this.modificationResult.originalTarget == orig(this.modificationResult.originalTarget)
this.modificationResult.changedTarget == orig(this.modificationResult.changedTarget)
this.modificationResult.changedTarget.key == orig(this.modificationResult.changedTarget.key)
this.modificationResult.changedTarget.key.getClass().getName() == orig(this.modificationResult.changedTarget.key.getClass().getName())
this.modificationResult.changedTarget.left == orig(this.modificationResult.changedTarget.left)
this.modificationResult.changedTarget.right == orig(this.modificationResult.changedTarget.right)
this.modificationResult.type == orig(this.modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
return == null
===========================================================================
com.google.common.collect.BstMutationResult.lift(com.google.common.collect.BstNode, com.google.common.collect.BstSide, com.google.common.collect.BstNodeFactory, com.google.common.collect.BstBalancePolicy):::ENTER
this.originalRoot.left == null
this.originalRoot.right == null
this.changedRoot.left == null
this.changedRoot.right.right == null
liftOriginalRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.left.left == null
liftOriginalRoot.left.right == null
liftOriginalRoot.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.right.left == null
liftOriginalRoot.right.right == null
side has only one value
side.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
nodeFactory has only one value
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstMutationResult.lift(com.google.common.collect.BstNode, com.google.common.collect.BstSide, com.google.common.collect.BstNodeFactory, com.google.common.collect.BstBalancePolicy):::EXIT151
===========================================================================
com.google.common.collect.BstMutationResult.lift(com.google.common.collect.BstNode, com.google.common.collect.BstSide, com.google.common.collect.BstNodeFactory, com.google.common.collect.BstBalancePolicy):::EXIT
this.targetKey == orig(this.targetKey)
this.targetKey.getClass().getName() == orig(this.targetKey.getClass().getName())
this.originalRoot.key.getClass().getName() == orig(this.originalRoot.key.getClass().getName())
this.changedRoot.key.getClass().getName() == orig(this.changedRoot.key.getClass().getName())
this.changedRoot.right.key.getClass().getName() == orig(this.changedRoot.right.key.getClass().getName())
this.changedRoot.right.left == orig(this.changedRoot.right.left)
this.modificationResult == orig(this.modificationResult)
this.modificationResult.originalTarget == orig(this.modificationResult.originalTarget)
this.modificationResult.changedTarget == orig(this.modificationResult.changedTarget)
this.modificationResult.changedTarget.key == orig(this.modificationResult.changedTarget.key)
this.modificationResult.changedTarget.key.getClass().getName() == orig(this.modificationResult.changedTarget.key.getClass().getName())
this.modificationResult.changedTarget.left == orig(this.modificationResult.changedTarget.left)
this.modificationResult.changedTarget.right == orig(this.modificationResult.changedTarget.right)
this.modificationResult.type == orig(this.modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
liftOriginalRoot.key == orig(liftOriginalRoot.key)
liftOriginalRoot.key.getClass().getName() == orig(liftOriginalRoot.key.getClass().getName())
liftOriginalRoot.left == orig(liftOriginalRoot.left)
liftOriginalRoot.left.key == orig(liftOriginalRoot.left.key)
liftOriginalRoot.left.key.getClass().getName() == orig(liftOriginalRoot.left.key.getClass().getName())
liftOriginalRoot.left.left == orig(liftOriginalRoot.left.left)
liftOriginalRoot.left.right == orig(liftOriginalRoot.left.right)
liftOriginalRoot.right == orig(liftOriginalRoot.right)
liftOriginalRoot.right.key == orig(liftOriginalRoot.right.key)
liftOriginalRoot.right.key.getClass().getName() == orig(liftOriginalRoot.right.key.getClass().getName())
liftOriginalRoot.right.left == orig(liftOriginalRoot.right.left)
liftOriginalRoot.right.right == orig(liftOriginalRoot.right.right)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
liftOriginalRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.left.left == null
liftOriginalRoot.left.right == null
liftOriginalRoot.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
liftOriginalRoot.right.left == null
liftOriginalRoot.right.right == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
return.targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.originalRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.modificationResult.originalTarget == null
return.modificationResult.type has only one value
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstMutationResult.modificationType():::ENTER
this.changedRoot.left == null
this.changedRoot.right.right == null
===========================================================================
com.google.common.collect.BstMutationResult.modificationType():::EXIT
this.targetKey == orig(this.targetKey)
this.targetKey.getClass().getName() == orig(this.targetKey.getClass().getName())
this.originalRoot == orig(this.originalRoot)
this.originalRoot.key == orig(this.originalRoot.key)
this.originalRoot.key.getClass().getName() == orig(this.originalRoot.key.getClass().getName())
this.originalRoot.left == orig(this.originalRoot.left)
this.originalRoot.left.key == orig(this.originalRoot.left.key)
this.originalRoot.left.key.getClass().getName() == orig(this.originalRoot.left.key.getClass().getName())
this.originalRoot.left.left == orig(this.originalRoot.left.left)
this.originalRoot.left.right == orig(this.originalRoot.left.right)
this.originalRoot.right == orig(this.originalRoot.right)
this.originalRoot.right.key == orig(this.originalRoot.right.key)
this.originalRoot.right.key.getClass().getName() == orig(this.originalRoot.right.key.getClass().getName())
this.originalRoot.right.left == orig(this.originalRoot.right.left)
this.originalRoot.right.right == orig(this.originalRoot.right.right)
this.changedRoot == orig(this.changedRoot)
this.changedRoot.key == orig(this.changedRoot.key)
this.changedRoot.key.getClass().getName() == orig(this.changedRoot.key.getClass().getName())
this.changedRoot.left == orig(this.changedRoot.left)
this.changedRoot.right == orig(this.changedRoot.right)
this.changedRoot.right.key == orig(this.changedRoot.right.key)
this.changedRoot.right.key.getClass().getName() == orig(this.changedRoot.right.key.getClass().getName())
this.changedRoot.right.left == orig(this.changedRoot.right.left)
this.changedRoot.right.right == orig(this.changedRoot.right.right)
this.modificationResult == orig(this.modificationResult)
this.modificationResult.originalTarget == orig(this.modificationResult.originalTarget)
this.modificationResult.changedTarget == orig(this.modificationResult.changedTarget)
this.modificationResult.changedTarget.key == orig(this.modificationResult.changedTarget.key)
this.modificationResult.changedTarget.key.getClass().getName() == orig(this.modificationResult.changedTarget.key.getClass().getName())
this.modificationResult.changedTarget.left == orig(this.modificationResult.changedTarget.left)
this.modificationResult.changedTarget.right == orig(this.modificationResult.changedTarget.right)
this.modificationResult.type == orig(this.modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
this.changedRoot.left == null
this.changedRoot.right.right == null
return has only one value
return != null
===========================================================================
com.google.common.collect.BstMutationResult.mutationResult(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult):::ENTER
targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
originalRoot == null
changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedRoot.left == null
changedRoot.right == null
modificationResult.originalTarget == null
modificationResult.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
modificationResult.changedTarget.left == null
modificationResult.changedTarget.right == null
modificationResult.type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstMutationResult.mutationResult(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstModificationResult):::EXIT
com.google.common.collect.BstMutationResult.$assertionsDisabled == orig(com.google.common.collect.BstMutationResult.$assertionsDisabled)
changedRoot.key == orig(changedRoot.key)
changedRoot.key.getClass().getName() == orig(changedRoot.key.getClass().getName())
changedRoot.left == orig(changedRoot.left)
changedRoot.right == orig(changedRoot.right)
modificationResult.originalTarget == orig(modificationResult.originalTarget)
modificationResult.changedTarget == orig(modificationResult.changedTarget)
modificationResult.changedTarget.key == orig(modificationResult.changedTarget.key)
modificationResult.changedTarget.key.getClass().getName() == orig(modificationResult.changedTarget.key.getClass().getName())
modificationResult.changedTarget.left == orig(modificationResult.changedTarget.left)
modificationResult.changedTarget.right == orig(modificationResult.changedTarget.right)
modificationResult.type == orig(modificationResult.type)
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY == orig(com.google.common.collect.BstModificationResult$ModificationType.IDENTITY)
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE == orig(com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES)
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName())
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] == orig(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[])
changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
changedRoot.left == null
changedRoot.right == null
modificationResult.originalTarget == null
modificationResult.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
modificationResult.changedTarget.left == null
modificationResult.changedTarget.right == null
modificationResult.type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
return.targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.originalRoot == null
return.changedRoot.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.changedRoot.left == null
return.changedRoot.right == null
return.modificationResult.originalTarget == null
return.modificationResult.type has only one value
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.BstMutationRule:::OBJECT
this.modifier != null
this.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
this.balancePolicy != null
this.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
this.nodeFactory has only one value
this.nodeFactory != null
this.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
this.modifier.getClass().getName() != this.balancePolicy.getClass().getName()
this.modifier.getClass().getName() != this.nodeFactory.getClass().getName()
this.balancePolicy.getClass().getName() != this.nodeFactory.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.BstMutationRule(com.google.common.collect.BstModifier, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory):::ENTER
modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
nodeFactory has only one value
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
modifier.getClass().getName() != balancePolicy.getClass().getName()
modifier.getClass().getName() != nodeFactory.getClass().getName()
balancePolicy.getClass().getName() != nodeFactory.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.BstMutationRule(com.google.common.collect.BstModifier, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory):::EXIT
this.modifier == orig(modifier)
this.modifier.getClass().getName() == orig(modifier.getClass().getName())
this.balancePolicy == orig(balancePolicy)
this.balancePolicy.getClass().getName() == orig(balancePolicy.getClass().getName())
this.nodeFactory == orig(nodeFactory)
this.nodeFactory.getClass().getName() == orig(nodeFactory.getClass().getName())
===========================================================================
com.google.common.collect.BstMutationRule.createRule(com.google.common.collect.BstModifier, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory):::ENTER
modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
nodeFactory has only one value
nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
modifier.getClass().getName() != balancePolicy.getClass().getName()
modifier.getClass().getName() != nodeFactory.getClass().getName()
balancePolicy.getClass().getName() != nodeFactory.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.createRule(com.google.common.collect.BstModifier, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory):::EXIT
return.modifier == orig(modifier)
return.modifier.getClass().getName() == orig(modifier.getClass().getName())
return.balancePolicy == orig(balancePolicy)
return.balancePolicy.getClass().getName() == orig(balancePolicy.getClass().getName())
return.nodeFactory == orig(nodeFactory)
return.nodeFactory.getClass().getName() == orig(nodeFactory.getClass().getName())
return.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
return.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
return.nodeFactory has only one value
return.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
return.modifier.getClass().getName() != return.balancePolicy.getClass().getName()
return.modifier.getClass().getName() != return.nodeFactory.getClass().getName()
return.balancePolicy.getClass().getName() != return.nodeFactory.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.getBalancePolicy():::ENTER
===========================================================================
com.google.common.collect.BstMutationRule.getBalancePolicy():::EXIT
this.modifier == orig(this.modifier)
this.modifier.getClass().getName() == orig(this.modifier.getClass().getName())
this.balancePolicy == return
this.balancePolicy.getClass().getName() == return.getClass().getName()
this.nodeFactory == orig(this.nodeFactory)
this.nodeFactory.getClass().getName() == orig(this.nodeFactory.getClass().getName())
return == orig(this.balancePolicy)
return.getClass().getName() == orig(this.balancePolicy.getClass().getName())
return != null
return.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
this.modifier.getClass().getName() != return.getClass().getName()
this.nodeFactory.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.getModifier():::ENTER
===========================================================================
com.google.common.collect.BstMutationRule.getModifier():::EXIT
this.modifier == return
this.modifier.getClass().getName() == return.getClass().getName()
this.balancePolicy == orig(this.balancePolicy)
this.balancePolicy.getClass().getName() == orig(this.balancePolicy.getClass().getName())
this.nodeFactory == orig(this.nodeFactory)
this.nodeFactory.getClass().getName() == orig(this.nodeFactory.getClass().getName())
return == orig(this.modifier)
return.getClass().getName() == orig(this.modifier.getClass().getName())
return.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
this.balancePolicy.getClass().getName() != return.getClass().getName()
this.nodeFactory.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.BstMutationRule.getNodeFactory():::ENTER
===========================================================================
com.google.common.collect.BstMutationRule.getNodeFactory():::EXIT
this.modifier == orig(this.modifier)
this.modifier.getClass().getName() == orig(this.modifier.getClass().getName())
this.balancePolicy == orig(this.balancePolicy)
this.balancePolicy.getClass().getName() == orig(this.balancePolicy.getClass().getName())
this.nodeFactory == return
this.nodeFactory.getClass().getName() == return.getClass().getName()
return == orig(this.nodeFactory)
return.getClass().getName() == orig(this.nodeFactory.getClass().getName())
return has only one value
return != null
return.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
this.modifier.getClass().getName() != return.getClass().getName()
this.balancePolicy.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.BstNode:::OBJECT
this.key != null
this.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.left.key != null
this.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.left.left == null
this.left.right == null
this.right.key != null
this.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.right.left == null
this.right.right.key != null
this.right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.right.right.left == null
this.right.right.right == null
===========================================================================
com.google.common.collect.BstNode.BstNode(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::ENTER
key != null
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.BstNode.BstNode(java.lang.Object, com.google.common.collect.BstNode, com.google.common.collect.BstNode):::EXIT
left.key == orig(left.key)
left.key.getClass().getName() == orig(left.key.getClass().getName())
left.left == orig(left.left)
left.right == orig(left.right)
right.key == orig(right.key)
right.key.getClass().getName() == orig(right.key.getClass().getName())
right.left == orig(right.left)
right.right == orig(right.right)
right.right.key == orig(right.right.key)
right.right.key.getClass().getName() == orig(right.right.key.getClass().getName())
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.BstNode.childOrNull(com.google.common.collect.BstSide):::ENTER
side != null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.childOrNull(com.google.common.collect.BstSide):::EXIT84
return.right == null
orig(side) has only one value
orig(side.getClass().getName()) == com.google.common.collect.BstSide$1.class
===========================================================================
com.google.common.collect.BstNode.childOrNull(com.google.common.collect.BstSide):::EXIT86
orig(side) has only one value
orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstNode.childOrNull(com.google.common.collect.BstSide):::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.left == orig(this.left)
this.left.key == orig(this.left.key)
this.left.key.getClass().getName() == orig(this.left.key.getClass().getName())
this.left.left == orig(this.left.left)
this.left.right == orig(this.left.right)
this.right == orig(this.right)
this.right.key == orig(this.right.key)
this.right.key.getClass().getName() == orig(this.right.key.getClass().getName())
this.right.left == orig(this.right.left)
this.right.right == orig(this.right.right)
this.right.right.key == orig(this.right.right.key)
this.right.right.key.getClass().getName() == orig(this.right.right.key.getClass().getName())
this.right.right.left == orig(this.right.right.left)
this.right.right.right == orig(this.right.right.right)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$1.class)  ==>  (return.right == null)
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class)  ==>  (return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class)  ==>  (return.right.left == null)
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class)  ==>  (return.right.right == null)
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
return.key != null
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left == null
return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.right.left == null
return.right.right == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.getChild(com.google.common.collect.BstSide):::ENTER
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.getChild(com.google.common.collect.BstSide):::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.left == orig(this.left)
this.left.key == orig(this.left.key)
this.left.key.getClass().getName() == orig(this.left.key.getClass().getName())
this.left.left == orig(this.left.left)
this.left.right == orig(this.left.right)
this.right == orig(this.right)
this.right.key == orig(this.right.key)
this.right.key.getClass().getName() == orig(this.right.key.getClass().getName())
this.right.left == orig(this.right.left)
this.right.right == orig(this.right.right)
this.right.right.key == orig(this.right.right.key)
this.right.right.key.getClass().getName() == orig(this.right.right.key.getClass().getName())
this.right.right.left == orig(this.right.right.left)
this.right.right.right == orig(this.right.right.right)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left == null
return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.right.left == null
return.right.right == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.getKey():::ENTER
===========================================================================
com.google.common.collect.BstNode.getKey():::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.left == orig(this.left)
this.left.key == orig(this.left.key)
this.left.key.getClass().getName() == orig(this.left.key.getClass().getName())
this.left.left == orig(this.left.left)
this.left.right == orig(this.left.right)
this.right == orig(this.right)
this.right.key == orig(this.right.key)
this.right.key.getClass().getName() == orig(this.right.key.getClass().getName())
this.right.left == orig(this.right.left)
this.right.right == orig(this.right.right)
this.right.right.key == orig(this.right.right.key)
this.right.right.key.getClass().getName() == orig(this.right.right.key.getClass().getName())
this.right.right.left == orig(this.right.right.left)
this.right.right.right == orig(this.right.right.right)
return != null
return.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
===========================================================================
com.google.common.collect.BstNode.hasChild(com.google.common.collect.BstSide):::ENTER
side != null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.hasChild(com.google.common.collect.BstSide):::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.left == orig(this.left)
this.left.key == orig(this.left.key)
this.left.key.getClass().getName() == orig(this.left.key.getClass().getName())
this.left.left == orig(this.left.left)
this.left.right == orig(this.left.right)
this.right == orig(this.right)
this.right.key == orig(this.right.key)
this.right.key.getClass().getName() == orig(this.right.key.getClass().getName())
this.right.left == orig(this.right.left)
this.right.right == orig(this.right.right)
this.right.right.key == orig(this.right.right.key)
this.right.right.key.getClass().getName() == orig(this.right.right.key.getClass().getName())
this.right.right.left == orig(this.right.right.left)
this.right.right.right == orig(this.right.right.right)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
(return == false)  ==>  (this.left == null)
(return == false)  ==>  (this.right.right == null)
(return == true)  ==>  (this.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(return == true)  ==>  (this.left.left == null)
(return == true)  ==>  (this.left.right == null)
(return == true)  ==>  (this.right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(return == true)  ==>  (this.right.right.left == null)
(return == true)  ==>  (this.right.right.right == null)
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstNode.hasChild(com.google.common.collect.BstSide):::EXIT;condition="return == true"
return == true
===========================================================================
com.google.common.collect.BstNode.hasChild(com.google.common.collect.BstSide):::EXIT;condition="not(return == true)"
this.left == null
this.right.right == null
return == false
===========================================================================
com.google.common.collect.BstNodeFactory:::OBJECT
this has only one value
this.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
===========================================================================
com.google.common.collect.BstNodeFactory.BstNodeFactory():::EXIT
===========================================================================
com.google.common.collect.BstOperations.modify(com.google.common.collect.BstNode, java.lang.Object, com.google.common.collect.BstMutationRule):::ENTER
tree == null
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
mutationRule.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
mutationRule.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
mutationRule.nodeFactory has only one value
mutationRule.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
key.getClass().getName() != mutationRule.modifier.getClass().getName()
key.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
key.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
===========================================================================
com.google.common.collect.BstOperations.modify(com.google.common.collect.BstNode, java.lang.Object, com.google.common.collect.BstMutationRule):::EXIT
mutationRule.modifier == orig(mutationRule.modifier)
mutationRule.modifier.getClass().getName() == orig(mutationRule.modifier.getClass().getName())
mutationRule.balancePolicy == orig(mutationRule.balancePolicy)
mutationRule.balancePolicy.getClass().getName() == orig(mutationRule.balancePolicy.getClass().getName())
mutationRule.nodeFactory == orig(mutationRule.nodeFactory)
mutationRule.nodeFactory.getClass().getName() == orig(mutationRule.nodeFactory.getClass().getName())
return.targetKey == return.changedRoot.key
return.targetKey == orig(key)
return.targetKey.getClass().getName() == return.changedRoot.key.getClass().getName()
return.targetKey.getClass().getName() == orig(key.getClass().getName())
mutationRule.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
mutationRule.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
mutationRule.nodeFactory has only one value
mutationRule.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
return.targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.originalRoot == null
return.changedRoot.left == null
return.changedRoot.right == null
return.modificationResult.originalTarget == null
return.modificationResult.type has only one value
com.google.common.collect.BstMutationResult.$assertionsDisabled == false
mutationRule.modifier.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.modifier.getClass().getName() != return.targetKey.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != return.targetKey.getClass().getName()
mutationRule.nodeFactory.getClass().getName() != return.targetKey.getClass().getName()
===========================================================================
com.google.common.collect.BstOperations.mutate(java.util.Comparator, com.google.common.collect.BstMutationRule, com.google.common.collect.BstNode, java.lang.Object):::ENTER
tree.key.getClass().getName() == tree.left.key.getClass().getName()
tree.key.getClass().getName() == tree.right.key.getClass().getName()
tree.key.getClass().getName() == key.getClass().getName()
tree.left.key.getClass().getName() == tree.right.key.getClass().getName()
tree.left.key.getClass().getName() == key.getClass().getName()
tree.right.key.getClass().getName() == key.getClass().getName()
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
mutationRule != null
mutationRule.modifier != null
mutationRule.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
mutationRule.balancePolicy != null
mutationRule.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
mutationRule.nodeFactory has only one value
mutationRule.nodeFactory != null
mutationRule.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.left == null
tree.left.right == null
tree.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.right.left == null
tree.right.right == null
key != null
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
comparator.getClass().getName() != mutationRule.modifier.getClass().getName()
comparator.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
comparator.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
comparator.getClass().getName() != tree.key.getClass().getName()
comparator.getClass().getName() != key.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.modifier.getClass().getName() != tree.key.getClass().getName()
mutationRule.modifier.getClass().getName() != key.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != tree.key.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != key.getClass().getName()
mutationRule.nodeFactory.getClass().getName() != tree.key.getClass().getName()
mutationRule.nodeFactory.getClass().getName() != key.getClass().getName()
===========================================================================
com.google.common.collect.BstOperations.mutate(java.util.Comparator, com.google.common.collect.BstMutationRule, com.google.common.collect.BstNode, java.lang.Object):::EXIT80
tree.key.getClass().getName() == return.changedRoot.key.getClass().getName()
tree.key.getClass().getName() == orig(key.getClass().getName())
===========================================================================
com.google.common.collect.BstOperations.mutate(java.util.Comparator, com.google.common.collect.BstMutationRule, com.google.common.collect.BstNode, java.lang.Object):::EXIT84
return.targetKey == return.changedRoot.key
return.originalRoot == null
return.changedRoot.left == null
return.changedRoot.right == null
===========================================================================
com.google.common.collect.BstOperations.mutate(java.util.Comparator, com.google.common.collect.BstMutationRule, com.google.common.collect.BstNode, java.lang.Object):::EXIT
mutationRule.modifier == orig(mutationRule.modifier)
mutationRule.modifier.getClass().getName() == orig(mutationRule.modifier.getClass().getName())
mutationRule.balancePolicy == orig(mutationRule.balancePolicy)
mutationRule.balancePolicy.getClass().getName() == orig(mutationRule.balancePolicy.getClass().getName())
mutationRule.nodeFactory == orig(mutationRule.nodeFactory)
mutationRule.nodeFactory.getClass().getName() == orig(mutationRule.nodeFactory.getClass().getName())
tree.key == return.originalRoot.key
tree.key == orig(tree.key)
tree.key.getClass().getName() == tree.left.key.getClass().getName()
tree.key.getClass().getName() == tree.right.key.getClass().getName()
tree.key.getClass().getName() == return.targetKey.getClass().getName()
tree.key.getClass().getName() == return.originalRoot.key.getClass().getName()
tree.key.getClass().getName() == orig(tree.key.getClass().getName())
tree.left == return.originalRoot.left
tree.left == orig(tree.left)
tree.left.key == orig(tree.left.key)
tree.left.key.getClass().getName() == tree.right.key.getClass().getName()
tree.left.key.getClass().getName() == return.targetKey.getClass().getName()
tree.left.key.getClass().getName() == orig(tree.left.key.getClass().getName())
tree.left.left == orig(tree.left.left)
tree.left.right == orig(tree.left.right)
tree.right == return.originalRoot.right
tree.right == orig(tree.right)
tree.right.key == orig(tree.right.key)
tree.right.key.getClass().getName() == return.targetKey.getClass().getName()
tree.right.key.getClass().getName() == orig(tree.right.key.getClass().getName())
tree.right.left == orig(tree.right.left)
tree.right.right == orig(tree.right.right)
return.targetKey == orig(key)
return.targetKey.getClass().getName() == return.changedRoot.key.getClass().getName()
return.targetKey.getClass().getName() == orig(key.getClass().getName())
return.originalRoot == orig(tree)
(return.originalRoot == null)  <==>  (return.changedRoot.right == null)
(return.originalRoot == null)  ==>  (return.changedRoot.left == null)
(return.originalRoot == null)  ==>  (return.targetKey == return.changedRoot.key)
mutationRule.modifier != null
mutationRule.modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
mutationRule.balancePolicy != null
mutationRule.balancePolicy.getClass().getName() == com.google.common.collect.BstCountBasedBalancePolicies$2.class
mutationRule.nodeFactory has only one value
mutationRule.nodeFactory != null
mutationRule.nodeFactory.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.left == null
tree.left.right == null
tree.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.right.left == null
tree.right.right == null
return != null
return.targetKey != null
return.targetKey.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.changedRoot != null
return.changedRoot.key != null
return.modificationResult != null
return.modificationResult.originalTarget == null
return.modificationResult.changedTarget != null
return.modificationResult.type has only one value
return.modificationResult.type != null
com.google.common.collect.BstMutationResult.$assertionsDisabled == false
mutationRule.modifier.getClass().getName() != mutationRule.balancePolicy.getClass().getName()
mutationRule.modifier.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.modifier.getClass().getName() != tree.key.getClass().getName()
mutationRule.modifier.getClass().getName() != return.targetKey.getClass().getName()
mutationRule.modifier.getClass().getName() != orig(comparator.getClass().getName())
mutationRule.balancePolicy.getClass().getName() != mutationRule.nodeFactory.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != tree.key.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != return.targetKey.getClass().getName()
mutationRule.balancePolicy.getClass().getName() != orig(comparator.getClass().getName())
mutationRule.nodeFactory.getClass().getName() != tree.key.getClass().getName()
mutationRule.nodeFactory.getClass().getName() != return.targetKey.getClass().getName()
mutationRule.nodeFactory.getClass().getName() != orig(comparator.getClass().getName())
tree.key.getClass().getName() != orig(comparator.getClass().getName())
return.targetKey.getClass().getName() != orig(comparator.getClass().getName())
===========================================================================
com.google.common.collect.BstPath:::OBJECT
this.getClass().getName() == com.google.common.collect.BstInOrderPath.class
this.tip != null
this.tip.key != null
this.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.left.key != null
this.tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.left.left == null
this.tip.left.right == null
this.tip.right.key != null
this.tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.tip.right.left == null
this.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
this.prefix.tip != null
this.prefix.tip.key != null
this.prefix.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.prefix.tip.right != null
this.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
this.prefix.prefix.tip != null
this.prefix.prefix.prefix == null
===========================================================================
com.google.common.collect.BstPath.BstPath(com.google.common.collect.BstNode, com.google.common.collect.BstPath):::ENTER
tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.left == null
tip.left.right == null
tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.right.left == null
prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
prefix.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
prefix.prefix.prefix == null
===========================================================================
com.google.common.collect.BstPath.BstPath(com.google.common.collect.BstNode, com.google.common.collect.BstPath):::EXIT
tip.key == orig(tip.key)
tip.key.getClass().getName() == orig(tip.key.getClass().getName())
tip.left == orig(tip.left)
tip.left.key == orig(tip.left.key)
tip.left.key.getClass().getName() == orig(tip.left.key.getClass().getName())
tip.left.left == orig(tip.left.left)
tip.left.right == orig(tip.left.right)
tip.right == orig(tip.right)
tip.right.key == orig(tip.right.key)
tip.right.key.getClass().getName() == orig(tip.right.key.getClass().getName())
tip.right.left == orig(tip.right.left)
tip.right.right == orig(tip.right.right)
prefix.tip == orig(prefix.tip)
prefix.tip.key == orig(prefix.tip.key)
prefix.tip.key.getClass().getName() == orig(prefix.tip.key.getClass().getName())
prefix.tip.left == orig(prefix.tip.left)
prefix.tip.right == orig(prefix.tip.right)
prefix.prefix == orig(prefix.prefix)
prefix.prefix.getClass().getName() == orig(prefix.prefix.getClass().getName())
prefix.prefix.tip == orig(prefix.prefix.tip)
prefix.prefix.prefix == orig(prefix.prefix.prefix)
tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.left.left == null
tip.left.right == null
tip.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tip.right.left == null
prefix.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
prefix.prefix.prefix == null
===========================================================================
com.google.common.collect.BstPath.getPrefix():::ENTER
this.tip.left == null
this.tip.right.right == null
===========================================================================
com.google.common.collect.BstPath.getPrefix():::EXIT
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
this.tip.left == null
this.tip.right.right == null
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix == null
===========================================================================
com.google.common.collect.BstPath.getTip():::ENTER
===========================================================================
com.google.common.collect.BstPath.getTip():::EXIT
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
return != null
return.key != null
return.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.key != null
return.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.left.left == null
return.left.right == null
return.right.key != null
return.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.right.left == null
===========================================================================
com.google.common.collect.BstPath.hasPrefix():::ENTER
this.tip.left == null
this.tip.right.right == null
===========================================================================
com.google.common.collect.BstPath.hasPrefix():::EXIT
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix.getClass().getName() == orig(this.prefix.prefix.getClass().getName())
this.prefix.prefix.tip == orig(this.prefix.prefix.tip)
this.prefix.prefix.prefix == orig(this.prefix.prefix.prefix)
this.tip.left == null
this.tip.right.right == null
return == true
===========================================================================
com.google.common.collect.BstPath.hasPrefix():::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.BstPath.prefixOrNull():::ENTER
this.prefix.prefix == null
===========================================================================
com.google.common.collect.BstPath.prefixOrNull():::EXIT
this.tip == orig(this.tip)
this.tip.key == orig(this.tip.key)
this.tip.key.getClass().getName() == orig(this.tip.key.getClass().getName())
this.tip.left == orig(this.tip.left)
this.tip.left.key == orig(this.tip.left.key)
this.tip.left.key.getClass().getName() == orig(this.tip.left.key.getClass().getName())
this.tip.left.left == orig(this.tip.left.left)
this.tip.left.right == orig(this.tip.left.right)
this.tip.right == orig(this.tip.right)
this.tip.right.key == orig(this.tip.right.key)
this.tip.right.key.getClass().getName() == orig(this.tip.right.key.getClass().getName())
this.tip.right.left == orig(this.tip.right.left)
this.tip.right.right == orig(this.tip.right.right)
this.prefix == orig(this.prefix)
this.prefix.getClass().getName() == orig(this.prefix.getClass().getName())
this.prefix.tip == orig(this.prefix.tip)
this.prefix.tip.key == orig(this.prefix.tip.key)
this.prefix.tip.key.getClass().getName() == orig(this.prefix.tip.key.getClass().getName())
this.prefix.tip.left == orig(this.prefix.tip.left)
this.prefix.tip.right == orig(this.prefix.tip.right)
this.prefix.prefix == orig(this.prefix.prefix)
this.prefix.prefix == null
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.prefix == null
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::ENTER
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
range != null
range.comparator != null
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
key != null
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
side != null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != key.getClass().getName()
range.comparator.getClass().getName() != side.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != key.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != side.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
key.getClass().getName() != side.getClass().getName()
key.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
key.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
key.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
side.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT166
com.google.common.collect.BstSide.LEFT == orig(side)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(side.getClass().getName())
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT166;condition="not(return == true)"
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT168
com.google.common.collect.BstSide.RIGHT == orig(side)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(side.getClass().getName())
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT168;condition="not(return == true)"
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT
range.comparator == orig(range.comparator)
range.comparator.getClass().getName() == orig(range.comparator.getClass().getName())
range.hasLowerBound == orig(range.hasLowerBound)
range.lowerEndpoint == orig(range.lowerEndpoint)
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
com.google.common.collect.BoundType.OPEN == orig(range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
range.hasUpperBound == orig(range.hasUpperBound)
range.upperEndpoint == orig(range.upperEndpoint)
range.reverse == orig(range.reverse)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$1.class)  <==>  (com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(side.getClass().getName()))
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$1.class)  <==>  (com.google.common.collect.BstSide.RIGHT.getClass().getName() != orig(side.getClass().getName()))
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$1.class)  ==>  (com.google.common.collect.BstSide.LEFT == orig(side))
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class)  <==>  (com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(side.getClass().getName()))
(orig(side.getClass().getName()) == com.google.common.collect.BstSide$2.class)  ==>  (com.google.common.collect.BstSide.RIGHT == orig(side))
range.comparator != null
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
return == false
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
range.comparator.getClass().getName() != orig(key.getClass().getName())
range.comparator.getClass().getName() != orig(side.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(key.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(side.getClass().getName())
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != orig(key.getClass().getName())
com.google.common.collect.BstSide.RIGHT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != orig(key.getClass().getName())
com.google.common.collect.BstSide.$VALUES.getClass().getName() != orig(key.getClass().getName())
com.google.common.collect.BstSide.$VALUES.getClass().getName() != orig(side.getClass().getName())
===========================================================================
com.google.common.collect.BstRangeOps.beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide):::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstNode):::ENTER
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
side == com.google.common.collect.BstSide.LEFT
side.getClass().getName() == com.google.common.collect.BstSide.LEFT.getClass().getName()
root.key.getClass().getName() == root.left.key.getClass().getName()
root.left.key.getClass().getName() == root.right.key.getClass().getName()
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
pathFactory.getClass().getName() == com.google.common.collect.BstInOrderPath$1.class
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.left == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstNode):::EXIT135
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstNode):::EXIT
range.comparator == orig(range.comparator)
range.comparator.getClass().getName() == orig(range.comparator.getClass().getName())
range.hasLowerBound == orig(range.hasLowerBound)
range.lowerEndpoint == orig(range.lowerEndpoint)
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
com.google.common.collect.BoundType.OPEN == orig(range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
range.hasUpperBound == orig(range.hasUpperBound)
range.upperEndpoint == orig(range.upperEndpoint)
range.reverse == orig(range.reverse)
com.google.common.collect.BstSide.LEFT == orig(side)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(side.getClass().getName())
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
root.key == orig(root.key)
root.key.getClass().getName() == root.left.key.getClass().getName()
root.key.getClass().getName() == return.tip.key.getClass().getName()
root.key.getClass().getName() == orig(root.key.getClass().getName())
root.left == orig(root.left)
root.left.key == return.tip.key
root.left.key == orig(root.left.key)
root.left.key.getClass().getName() == root.right.key.getClass().getName()
root.left.key.getClass().getName() == orig(root.left.key.getClass().getName())
root.left.key.getClass().getName() == orig(root.right.key.getClass().getName())
root.left.left == orig(root.left.left)
root.left.right == orig(root.left.right)
root.right == orig(root.right)
root.right.key == orig(root.right.key)
root.right.left == orig(root.right.left)
root.right.right == orig(root.right.right)
return.getClass().getName() == return.prefix.getClass().getName()
return.prefix.tip == orig(root)
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.left == null
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.tip.left == null
return.tip.right == null
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstPath):::ENTER
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
side == com.google.common.collect.BstSide.LEFT
side.getClass().getName() == com.google.common.collect.BstSide.LEFT.getClass().getName()
currentPath.getClass().getName() == currentPath.prefix.getClass().getName()
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
pathFactory.getClass().getName() == com.google.common.collect.BstInOrderPath$1.class
currentPath.getClass().getName() == com.google.common.collect.BstInOrderPath.class
currentPath.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
currentPath.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
currentPath.prefix.prefix == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
range.comparator.getClass().getName() != pathFactory.getClass().getName()
range.comparator.getClass().getName() != currentPath.getClass().getName()
range.comparator.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != pathFactory.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != currentPath.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != pathFactory.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != currentPath.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != pathFactory.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != currentPath.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.$VALUES.getClass().getName() != pathFactory.getClass().getName()
com.google.common.collect.BstSide.$VALUES.getClass().getName() != currentPath.getClass().getName()
com.google.common.collect.BstSide.$VALUES.getClass().getName() != currentPath.tip.key.getClass().getName()
pathFactory.getClass().getName() != currentPath.getClass().getName()
pathFactory.getClass().getName() != currentPath.tip.key.getClass().getName()
currentPath.getClass().getName() != currentPath.tip.key.getClass().getName()
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstPath):::EXIT153
currentPath.tip == return.prefix.tip
currentPath.tip.left == return.tip
return.tip == orig(currentPath.tip.left)
return.prefix == orig(currentPath)
currentPath.prefix == null
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstPath):::EXIT156
currentPath.tip == return.tip
currentPath.tip.key == return.tip.key
currentPath.prefix == return.prefix
return == orig(currentPath)
currentPath.tip.left == null
currentPath.tip.right == null
===========================================================================
com.google.common.collect.BstRangeOps.furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstPath):::EXIT
range.comparator == orig(range.comparator)
range.comparator.getClass().getName() == orig(range.comparator.getClass().getName())
range.hasLowerBound == orig(range.hasLowerBound)
range.lowerEndpoint == orig(range.lowerEndpoint)
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
com.google.common.collect.BoundType.OPEN == orig(range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
range.hasUpperBound == orig(range.hasUpperBound)
range.upperEndpoint == orig(range.upperEndpoint)
range.reverse == orig(range.reverse)
com.google.common.collect.BstSide.LEFT == orig(side)
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(side.getClass().getName())
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
currentPath.tip == orig(currentPath.tip)
currentPath.tip.key == orig(currentPath.tip.key)
currentPath.tip.key.getClass().getName() == return.tip.key.getClass().getName()
currentPath.tip.key.getClass().getName() == orig(currentPath.tip.key.getClass().getName())
currentPath.tip.left == orig(currentPath.tip.left)
currentPath.tip.right == orig(currentPath.tip.right)
currentPath.prefix == orig(currentPath.prefix)
currentPath.prefix.getClass().getName() == return.getClass().getName()
currentPath.prefix.getClass().getName() == return.prefix.getClass().getName()
currentPath.prefix.getClass().getName() == orig(currentPath.prefix.getClass().getName())
currentPath.prefix.tip == return.prefix.tip
currentPath.prefix.tip == orig(currentPath.prefix.tip)
currentPath.prefix.prefix == orig(currentPath.prefix.prefix)
return.getClass().getName() == return.prefix.getClass().getName()
return.getClass().getName() == orig(currentPath.getClass().getName())
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
currentPath.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
currentPath.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
currentPath.prefix.prefix == null
return.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.tip.left == null
return.tip.right == null
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
size(com.google.common.collect.BstSide.$VALUES[]) == 2
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
range.comparator.getClass().getName() != currentPath.tip.key.getClass().getName()
range.comparator.getClass().getName() != return.getClass().getName()
range.comparator.getClass().getName() != orig(pathFactory.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.LEFT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != return.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(pathFactory.getClass().getName())
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.RIGHT.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != return.getClass().getName()
com.google.common.collect.BstSide.LEFT.getClass().getName() != orig(pathFactory.getClass().getName())
com.google.common.collect.BstSide.RIGHT.getClass().getName() != com.google.common.collect.BstSide.$VALUES.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != return.getClass().getName()
com.google.common.collect.BstSide.RIGHT.getClass().getName() != orig(pathFactory.getClass().getName())
com.google.common.collect.BstSide.$VALUES.getClass().getName() != currentPath.tip.key.getClass().getName()
com.google.common.collect.BstSide.$VALUES.getClass().getName() != return.getClass().getName()
com.google.common.collect.BstSide.$VALUES.getClass().getName() != orig(pathFactory.getClass().getName())
currentPath.tip.key.getClass().getName() != return.getClass().getName()
currentPath.tip.key.getClass().getName() != orig(pathFactory.getClass().getName())
return.getClass().getName() != orig(pathFactory.getClass().getName())
===========================================================================
com.google.common.collect.BstRangeOps.totalInRange(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstNode):::ENTER
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
root.key.getClass().getName() == root.left.key.getClass().getName()
root.left.key.getClass().getName() == root.right.key.getClass().getName()
aggregate has only one value
aggregate != null
aggregate.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
range != null
range.comparator != null
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.left == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
aggregate.getClass().getName() != range.comparator.getClass().getName()
aggregate.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
===========================================================================
com.google.common.collect.BstRangeOps.totalInRange(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstNode):::EXIT42
return == 0
orig(root) == null
===========================================================================
com.google.common.collect.BstRangeOps.totalInRange(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstNode):::EXIT51
return one of { 1, 4 }
===========================================================================
com.google.common.collect.BstRangeOps.totalInRange(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstNode):::EXIT
range.comparator == orig(range.comparator)
range.comparator.getClass().getName() == orig(range.comparator.getClass().getName())
range.hasLowerBound == orig(range.hasLowerBound)
range.lowerEndpoint == orig(range.lowerEndpoint)
range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == range.upperBoundType
com.google.common.collect.BoundType.OPEN == orig(range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
range.hasUpperBound == orig(range.hasUpperBound)
range.upperEndpoint == orig(range.upperEndpoint)
range.reverse == orig(range.reverse)
root.key == orig(root.key)
root.key.getClass().getName() == root.left.key.getClass().getName()
root.key.getClass().getName() == orig(root.key.getClass().getName())
root.left == orig(root.left)
root.left.key == orig(root.left.key)
root.left.key.getClass().getName() == root.right.key.getClass().getName()
root.left.key.getClass().getName() == orig(root.left.key.getClass().getName())
root.left.key.getClass().getName() == orig(root.right.key.getClass().getName())
root.left.left == orig(root.left.left)
root.left.right == orig(root.left.right)
root.right == orig(root.right)
root.right.key == orig(root.right.key)
root.right.left == orig(root.right.left)
root.right.right == orig(root.right.right)
(return == 0)  <==>  (orig(root) == null)
(return one of { 1, 4 })  ==>  (root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(return one of { 1, 4 })  ==>  (root.key.getClass().getName() == root.left.key.getClass().getName())
(return one of { 1, 4 })  ==>  (root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
(return one of { 1, 4 })  ==>  (root.left.left == null)
(return one of { 1, 4 })  ==>  (root.left.right == null)
(return one of { 1, 4 })  ==>  (root.right.left == null)
range.comparator != null
range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
range.hasLowerBound == false
range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
range.hasUpperBound == false
range.upperEndpoint == null
range.reverse == null
root.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
root.left.left == null
root.left.right == null
root.right.left == null
return one of { 0, 1, 4 }
size(com.google.common.collect.BoundType.$VALUES[]) == 2
range.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
range.comparator.getClass().getName() != orig(aggregate.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(aggregate.getClass().getName())
===========================================================================
com.google.common.collect.BstSide$1:::CLASS
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstSide$1:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.BstSide$1.(java.lang.String, int):::ENTER
$hidden$1 has only one value
$hidden$1.toString == "LEFT"
$hidden$2 == 0
===========================================================================
com.google.common.collect.BstSide$1.(java.lang.String, int):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
$hidden$1.toString == "LEFT"
===========================================================================
com.google.common.collect.BstSide$1.other():::ENTER
===========================================================================
com.google.common.collect.BstSide$1.other():::EXIT
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
return has only one value
return.getClass().getName() == com.google.common.collect.BstSide$2.class
===========================================================================
com.google.common.collect.BstSide$2:::CLASS
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstSide$2:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.BstSide$2.(java.lang.String, int):::ENTER
$hidden$1 has only one value
$hidden$1.toString == "RIGHT"
$hidden$2 == 1
===========================================================================
com.google.common.collect.BstSide$2.(java.lang.String, int):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
$hidden$1.toString == "RIGHT"
===========================================================================
com.google.common.collect.BstSide$2.other():::ENTER
===========================================================================
com.google.common.collect.BstSide$2.other():::EXIT
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
return has only one value
return.getClass().getName() == com.google.common.collect.BstSide$1.class
===========================================================================
com.google.common.collect.BstSide:::CLASS
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.BstSide:::OBJECT
===========================================================================
com.google.common.collect.BstSide.BstSide(java.lang.String, int):::ENTER
$hidden$1.toString one of { "LEFT", "RIGHT" }
$hidden$2 one of { 0, 1 }
===========================================================================
com.google.common.collect.BstSide.BstSide(java.lang.String, int):::EXIT
$hidden$1.toString == orig($hidden$1.toString)
$hidden$1.toString one of { "LEFT", "RIGHT" }
===========================================================================
com.google.common.collect.BstSide.values():::ENTER
===========================================================================
com.google.common.collect.BstSide.values():::EXIT
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
return.getClass().getName() == com.google.common.collect.BstSide[].class
return[] contains no nulls and has only one value, of length 2
size(return[]) == 2
===========================================================================
com.google.common.collect.Count:::OBJECT
this.value one of { 1, 2, 3 }
===========================================================================
com.google.common.collect.Count.Count(int):::ENTER
value == 1
===========================================================================
com.google.common.collect.Count.Count(int):::EXIT
this.value == 1
===========================================================================
com.google.common.collect.Count.get():::ENTER
this has only one value
this.value one of { 1, 2 }
===========================================================================
com.google.common.collect.Count.get():::EXIT
this.value == orig(this.value)
this.value one of { 1, 2 }
return one of { 1, 2 }
===========================================================================
com.google.common.collect.Count.getAndAdd(int):::ENTER
this has only one value
this.value one of { 1, 2 }
delta == 1
===========================================================================
com.google.common.collect.Count.getAndAdd(int):::EXIT
this.value one of { 2, 3 }
return one of { 1, 2 }
===========================================================================
com.google.common.collect.ForwardingCollection:::OBJECT
this.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
com.google.common.collect.ForwardingCollection.ForwardingCollection():::EXIT
===========================================================================
com.google.common.collect.ForwardingMultiset:::OBJECT
this.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
com.google.common.collect.ForwardingMultiset.ForwardingMultiset():::EXIT
===========================================================================
com.google.common.collect.ForwardingObject:::OBJECT
this.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
com.google.common.collect.ForwardingObject.ForwardingObject():::EXIT
===========================================================================
com.google.common.collect.GeneralRange:::OBJECT
this.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == this.upperBoundType
this.comparator != null
this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
this.hasLowerBound == false
this.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
this.hasUpperBound == false
this.upperEndpoint == null
this.reverse == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
this.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.GeneralRange(java.util.Comparator, boolean, java.lang.Object, com.google.common.collect.BoundType, boolean, java.lang.Object, com.google.common.collect.BoundType):::ENTER
lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == upperBoundType
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
hasLowerBound == false
lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
hasUpperBound == false
upperEndpoint == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.GeneralRange(java.util.Comparator, boolean, java.lang.Object, com.google.common.collect.BoundType, boolean, java.lang.Object, com.google.common.collect.BoundType):::EXIT
this.comparator == orig(comparator)
this.comparator.getClass().getName() == orig(comparator.getClass().getName())
this.hasLowerBound == orig(hasLowerBound)
com.google.common.collect.BoundType.OPEN == orig(lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(hasUpperBound)
===========================================================================
com.google.common.collect.GeneralRange.all(java.util.Comparator):::ENTER
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
===========================================================================
com.google.common.collect.GeneralRange.all(java.util.Comparator):::EXIT
return.comparator == orig(comparator)
return.comparator.getClass().getName() == orig(comparator.getClass().getName())
return.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == return.upperBoundType
return != null
return.comparator != null
return.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
return.hasLowerBound == false
return.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
return.hasUpperBound == false
return.upperEndpoint == null
return.reverse == null
size(com.google.common.collect.BoundType.$VALUES[]) == 2
return.comparator.getClass().getName() != com.google.common.collect.BoundType.$VALUES.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.contains(java.lang.Object):::ENTER
t != null
t.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.comparator.getClass().getName() != t.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != t.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.contains(java.lang.Object):::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == orig(this.hasLowerBound)
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(this.hasUpperBound)
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == true
this.comparator.getClass().getName() != orig(t.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(t.getClass().getName())
===========================================================================
com.google.common.collect.GeneralRange.contains(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.GeneralRange.hasLowerBound():::ENTER
===========================================================================
com.google.common.collect.GeneralRange.hasLowerBound():::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == return
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(this.hasUpperBound)
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == orig(this.hasLowerBound)
return == false
===========================================================================
com.google.common.collect.GeneralRange.hasLowerBound():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.hasUpperBound():::ENTER
===========================================================================
com.google.common.collect.GeneralRange.hasUpperBound():::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == orig(this.hasLowerBound)
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == return
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == orig(this.hasUpperBound)
return == false
===========================================================================
com.google.common.collect.GeneralRange.hasUpperBound():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.isEmpty():::ENTER
===========================================================================
com.google.common.collect.GeneralRange.isEmpty():::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == orig(this.hasLowerBound)
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(this.hasUpperBound)
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == false
===========================================================================
com.google.common.collect.GeneralRange.isEmpty():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.tooHigh(java.lang.Object):::ENTER
t != null
t.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.comparator.getClass().getName() != t.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != t.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.tooHigh(java.lang.Object):::EXIT156
===========================================================================
com.google.common.collect.GeneralRange.tooHigh(java.lang.Object):::EXIT156;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.tooHigh(java.lang.Object):::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == orig(this.hasLowerBound)
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(this.hasUpperBound)
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == false
this.comparator.getClass().getName() != orig(t.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(t.getClass().getName())
===========================================================================
com.google.common.collect.GeneralRange.tooHigh(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.tooLow(java.lang.Object):::ENTER
t != null
t.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.comparator.getClass().getName() != t.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != t.getClass().getName()
===========================================================================
com.google.common.collect.GeneralRange.tooLow(java.lang.Object):::EXIT147
===========================================================================
com.google.common.collect.GeneralRange.tooLow(java.lang.Object):::EXIT147;condition="not(return == true)"
===========================================================================
com.google.common.collect.GeneralRange.tooLow(java.lang.Object):::EXIT
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.hasLowerBound == orig(this.hasLowerBound)
this.lowerEndpoint == orig(this.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.hasUpperBound == orig(this.hasUpperBound)
this.upperEndpoint == orig(this.upperEndpoint)
this.reverse == orig(this.reverse)
return == false
this.comparator.getClass().getName() != orig(t.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(t.getClass().getName())
===========================================================================
com.google.common.collect.GeneralRange.tooLow(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.ImmutableEntry:::CLASS
===========================================================================
com.google.common.collect.ImmutableEntry:::OBJECT
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.value != null
this.value.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
com.google.common.collect.ImmutableEntry.ImmutableEntry(java.lang.Object, java.lang.Object):::ENTER
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
com.google.common.collect.ImmutableEntry.ImmutableEntry(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
com.google.common.collect.ImmutableEntry.getValue():::ENTER
===========================================================================
com.google.common.collect.ImmutableEntry.getValue():::EXIT
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
return != null
return.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
===========================================================================
com.google.common.collect.Iterators$1:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.Iterators$1.():::EXIT
===========================================================================
com.google.common.collect.Iterators$2:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.Iterators$2.():::EXIT
===========================================================================
com.google.common.collect.Iterators$2.hasNext():::ENTER
===========================================================================
com.google.common.collect.Iterators$2.hasNext():::EXIT
return == false
===========================================================================
com.google.common.collect.Iterators$2.hasNext():::EXIT;condition="not(return == true)"
===========================================================================
com.google.common.collect.Iterators$3:::OBJECT
this.val$iterator != null
this.val$iterator.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.Iterators$3.(java.util.Iterator):::ENTER
$hidden$1.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.Iterators$3.(java.util.Iterator):::EXIT
this.val$iterator == orig($hidden$1)
this.val$iterator.getClass().getName() == orig($hidden$1.getClass().getName())
===========================================================================
com.google.common.collect.Iterators$3.next():::ENTER
===========================================================================
com.google.common.collect.Iterators$3.next():::EXIT
this.val$iterator == orig(this.val$iterator)
this.val$iterator.getClass().getName() == orig(this.val$iterator.getClass().getName())
return.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.val$iterator.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.Iterators:::CLASS
com.google.common.collect.Iterators.EMPTY_ITERATOR has only one value
com.google.common.collect.Iterators.EMPTY_ITERATOR != null
com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName() == com.google.common.collect.Iterators$1.class
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR has only one value
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR != null
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName() == com.google.common.collect.Iterators$2.class
com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName() != com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName()
===========================================================================
com.google.common.collect.Iterators.emptyModifiableIterator():::ENTER
===========================================================================
com.google.common.collect.Iterators.emptyModifiableIterator():::EXIT
com.google.common.collect.Iterators.EMPTY_ITERATOR == orig(com.google.common.collect.Iterators.EMPTY_ITERATOR)
com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName() == orig(com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName())
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR == return
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR == orig(com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR)
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName() == return.getClass().getName()
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName() == orig(com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName())
===========================================================================
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator):::ENTER
iterator.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator):::EXIT121
===========================================================================
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator):::EXIT
com.google.common.collect.Iterators.EMPTY_ITERATOR == orig(com.google.common.collect.Iterators.EMPTY_ITERATOR)
com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName() == orig(com.google.common.collect.Iterators.EMPTY_ITERATOR.getClass().getName())
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR == orig(com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR)
com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName() == orig(com.google.common.collect.Iterators.EMPTY_MODIFIABLE_ITERATOR.getClass().getName())
return.getClass().getName() == com.google.common.collect.Iterators$3.class
===========================================================================
com.google.common.collect.LinkedHashMultiset:::CLASS
===========================================================================
com.google.common.collect.LinkedHashMultiset:::OBJECT
this.backingMap != null
this.backingMap.getClass().getName() == java.util.LinkedHashMap.class
this.size == 0
this.elementSet == null
this.entrySet != null
this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.backingMap.getClass().getName() != this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.LinkedHashMultiset.LinkedHashMultiset():::EXIT
===========================================================================
com.google.common.collect.LinkedHashMultiset.create():::ENTER
===========================================================================
com.google.common.collect.LinkedHashMultiset.create():::EXIT
return != null
return.backingMap != null
return.backingMap.getClass().getName() == java.util.LinkedHashMap.class
return.size == 0
return.elementSet == null
return.entrySet != null
return.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
return.backingMap.getClass().getName() != return.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.LinkedListMultimap$3:::OBJECT
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName()
com.google.common.collect.LinkedListMultimap.this.head == null
com.google.common.collect.LinkedListMultimap.this.tail == null
com.google.common.collect.LinkedListMultimap.this.keyCount != null
com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead != null
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == java.util.HashMap.class
com.google.common.collect.LinkedListMultimap.this.keyToKeyTail != null
com.google.common.collect.LinkedListMultimap.this.keySet == null
com.google.common.collect.LinkedListMultimap.this.keys == null
com.google.common.collect.LinkedListMultimap.this.valuesList == null
com.google.common.collect.LinkedListMultimap.this.entries == null
com.google.common.collect.LinkedListMultimap.this.map == null
com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() != com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName()
===========================================================================
com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::ENTER
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName()
com.google.common.collect.LinkedListMultimap.this != null
com.google.common.collect.LinkedListMultimap.this.head == null
com.google.common.collect.LinkedListMultimap.this.tail == null
com.google.common.collect.LinkedListMultimap.this.keyCount != null
com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead != null
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == java.util.HashMap.class
com.google.common.collect.LinkedListMultimap.this.keyToKeyTail != null
com.google.common.collect.LinkedListMultimap.this.keySet == null
com.google.common.collect.LinkedListMultimap.this.keys == null
com.google.common.collect.LinkedListMultimap.this.valuesList == null
com.google.common.collect.LinkedListMultimap.this.entries == null
com.google.common.collect.LinkedListMultimap.this.map == null
com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() != com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName()
===========================================================================
com.google.common.collect.LinkedListMultimap$3.(com.google.common.collect.LinkedListMultimap):::EXIT
com.google.common.collect.LinkedListMultimap.this == orig(com.google.common.collect.LinkedListMultimap.this)
com.google.common.collect.LinkedListMultimap.this.head == orig(com.google.common.collect.LinkedListMultimap.this.head)
com.google.common.collect.LinkedListMultimap.this.tail == orig(com.google.common.collect.LinkedListMultimap.this.tail)
com.google.common.collect.LinkedListMultimap.this.keyCount == orig(com.google.common.collect.LinkedListMultimap.this.keyCount)
com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName() == orig(com.google.common.collect.LinkedListMultimap.this.keyCount.getClass().getName())
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead == orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead)
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName())
com.google.common.collect.LinkedListMultimap.this.keyToKeyHead.getClass().getName() == orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail.getClass().getName())
com.google.common.collect.LinkedListMultimap.this.keyToKeyTail == orig(com.google.common.collect.LinkedListMultimap.this.keyToKeyTail)
com.google.common.collect.LinkedListMultimap.this.keySet == orig(com.google.common.collect.LinkedListMultimap.this.keySet)
com.google.common.collect.LinkedListMultimap.this.keys == orig(com.google.common.collect.LinkedListMultimap.this.keys)
com.google.common.collect.LinkedListMultimap.this.valuesList == orig(com.google.common.collect.LinkedListMultimap.this.valuesList)
com.google.common.collect.LinkedListMultimap.this.entries == orig(com.google.common.collect.LinkedListMultimap.this.entries)
com.google.common.collect.LinkedListMultimap.this.map == orig(com.google.common.collect.LinkedListMultimap.this.map)
===========================================================================
com.google.common.collect.LinkedListMultimap$Node:::OBJECT
this.key != null
this.key.getClass().getName() == java.lang.Integer.class
this.value != null
this.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.next == null
this.previous == null
this.nextSibling == null
this.previousSibling == null
===========================================================================
com.google.common.collect.LinkedListMultimap$Node.Node(java.lang.Object, java.lang.Object):::ENTER
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
===========================================================================
com.google.common.collect.LinkedListMultimap$Node.Node(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
com.google.common.collect.LinkedListMultimap:::CLASS
===========================================================================
com.google.common.collect.LinkedListMultimap:::OBJECT
this.head.key != null
this.head.key.getClass().getName() == java.lang.Integer.class
this.head.value != null
this.head.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.head.next.key != null
this.head.next.key.getClass().getName() == java.lang.Integer.class
this.head.next.value != null
this.head.next.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.head.next.previous != null
this.head.next.previousSibling == null
this.head.previous == null
this.head.nextSibling == null
this.head.previousSibling == null
this.tail.key != null
this.tail.key.getClass().getName() == java.lang.Integer.class
this.tail.value != null
this.tail.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.tail.next == null
this.tail.previous.key != null
this.tail.previous.key.getClass().getName() == java.lang.Integer.class
this.tail.previous.value != null
this.tail.previous.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.tail.previous.next != null
this.tail.nextSibling == null
this.tail.previousSibling.key has only one value
this.tail.previousSibling.key.getClass().getName() == java.lang.Integer.class
this.tail.previousSibling.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
this.keyCount != null
this.keyCount.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
this.keyToKeyHead != null
this.keyToKeyHead.getClass().getName() == java.util.HashMap.class
this.keyToKeyTail != null
this.keyToKeyTail.getClass().getName() == java.util.HashMap.class
this.keySet == null
this.keys == null
this.valuesList[] elements != null
this.valuesList[].getClass().getName() elements == ch.thn.util.tree.KeyListTreeNode.class
this.valuesList.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
this.entries == null
this.map == null
===========================================================================
com.google.common.collect.LinkedListMultimap.LinkedListMultimap():::EXIT
this.head == null
this.tail == null
this.valuesList == null
===========================================================================
com.google.common.collect.LinkedListMultimap.addNode(java.lang.Object, java.lang.Object, com.google.common.collect.LinkedListMultimap$Node):::ENTER
this.tail.previous.previousSibling == null
this.tail.previousSibling.value has only one value
this.tail.previousSibling.next has only one value
this.tail.previousSibling.previous has only one value
this.tail.previousSibling.nextSibling has only one value
this.tail.previousSibling.previousSibling == null
this.valuesList != null
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
nextSibling == null
===========================================================================
com.google.common.collect.LinkedListMultimap.addNode(java.lang.Object, java.lang.Object, com.google.common.collect.LinkedListMultimap$Node):::EXIT
this.head.key == orig(this.head.key)
this.head.key.getClass().getName() == orig(this.head.key.getClass().getName())
this.head.value == orig(this.head.value)
this.head.value.getClass().getName() == orig(this.head.value.getClass().getName())
this.head.next.key == orig(this.head.next.key)
this.head.next.key.getClass().getName() == orig(this.head.next.key.getClass().getName())
this.head.next.value == orig(this.head.next.value)
this.head.next.value.getClass().getName() == orig(this.head.next.value.getClass().getName())
this.head.next.previous == orig(this.head.next.previous)
this.head.next.previousSibling == orig(this.head.next.previousSibling)
this.head.previous == orig(this.head.previous)
this.head.nextSibling == orig(this.head.nextSibling)
this.head.previousSibling == orig(this.head.previousSibling)
this.tail.key.getClass().getName() == orig(this.tail.key.getClass().getName())
this.tail.value.getClass().getName() == orig(this.tail.value.getClass().getName())
this.tail.next == orig(this.tail.next)
this.tail.previous.key.getClass().getName() == orig(this.tail.previous.key.getClass().getName())
this.tail.previous.value.getClass().getName() == orig(this.tail.previous.value.getClass().getName())
this.tail.nextSibling == orig(this.tail.nextSibling)
this.tail.previousSibling.key == orig(this.tail.previousSibling.key)
this.tail.previousSibling.key.getClass().getName() == orig(this.tail.previousSibling.key.getClass().getName())
this.tail.previousSibling.value.getClass().getName() == orig(this.tail.previousSibling.value.getClass().getName())
this.keyCount == orig(this.keyCount)
this.keyCount.getClass().getName() == orig(this.keyCount.getClass().getName())
this.keyToKeyHead == orig(this.keyToKeyHead)
this.keyToKeyHead.getClass().getName() == orig(this.keyToKeyHead.getClass().getName())
this.keyToKeyTail == orig(this.keyToKeyTail)
this.keyToKeyTail.getClass().getName() == orig(this.keyToKeyTail.getClass().getName())
this.keySet == orig(this.keySet)
this.keys == orig(this.keys)
this.valuesList == orig(this.valuesList)
this.valuesList.getClass().getName() == orig(this.valuesList.getClass().getName())
this.entries == orig(this.entries)
this.map == orig(this.map)
size(this.valuesList[])-1 == orig(size(this.valuesList[]))
this.head != null
this.tail != null
this.valuesList != null
return != null
return.key != null
return.key.getClass().getName() == java.lang.Integer.class
return.value != null
return.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
return.next == null
return.previous.key.getClass().getName() == java.lang.Integer.class
return.previous.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
return.nextSibling == null
return.previousSibling.key has only one value
return.previousSibling.key.getClass().getName() == java.lang.Integer.class
return.previousSibling.value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
size(this.valuesList[]) >= 1
===========================================================================
com.google.common.collect.LinkedListMultimap.create():::ENTER
===========================================================================
com.google.common.collect.LinkedListMultimap.create():::EXIT
return != null
return.head == null
return.tail == null
return.keyCount != null
return.keyCount.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
return.keyToKeyHead != null
return.keyToKeyHead.getClass().getName() == java.util.HashMap.class
return.keyToKeyTail != null
return.keyToKeyTail.getClass().getName() == java.util.HashMap.class
return.keySet == null
return.keys == null
return.valuesList == null
return.entries == null
return.map == null
===========================================================================
com.google.common.collect.LinkedListMultimap.put(java.lang.Object, java.lang.Object):::ENTER
this.tail.previous.previousSibling == null
this.tail.previousSibling.value has only one value
this.tail.previousSibling.next has only one value
this.tail.previousSibling.previous has only one value
this.tail.previousSibling.nextSibling has only one value
this.tail.previousSibling.previousSibling == null
this.valuesList != null
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeyListTreeNode.class
===========================================================================
com.google.common.collect.LinkedListMultimap.put(java.lang.Object, java.lang.Object):::EXIT
this.head.key == orig(this.head.key)
this.head.key.getClass().getName() == orig(this.head.key.getClass().getName())
this.head.value == orig(this.head.value)
this.head.value.getClass().getName() == orig(this.head.value.getClass().getName())
this.head.next.key == orig(this.head.next.key)
this.head.next.key.getClass().getName() == orig(this.head.next.key.getClass().getName())
this.head.next.value == orig(this.head.next.value)
this.head.next.value.getClass().getName() == orig(this.head.next.value.getClass().getName())
this.head.next.previous == orig(this.head.next.previous)
this.head.next.previousSibling == orig(this.head.next.previousSibling)
this.head.previous == orig(this.head.previous)
this.head.nextSibling == orig(this.head.nextSibling)
this.head.previousSibling == orig(this.head.previousSibling)
this.tail.key.getClass().getName() == orig(this.tail.key.getClass().getName())
this.tail.value.getClass().getName() == orig(this.tail.value.getClass().getName())
this.tail.next == orig(this.tail.next)
this.tail.previous.key.getClass().getName() == orig(this.tail.previous.key.getClass().getName())
this.tail.previous.value.getClass().getName() == orig(this.tail.previous.value.getClass().getName())
this.tail.nextSibling == orig(this.tail.nextSibling)
this.tail.previousSibling.key == orig(this.tail.previousSibling.key)
this.tail.previousSibling.key.getClass().getName() == orig(this.tail.previousSibling.key.getClass().getName())
this.tail.previousSibling.value.getClass().getName() == orig(this.tail.previousSibling.value.getClass().getName())
this.keyCount == orig(this.keyCount)
this.keyCount.getClass().getName() == orig(this.keyCount.getClass().getName())
this.keyToKeyHead == orig(this.keyToKeyHead)
this.keyToKeyHead.getClass().getName() == orig(this.keyToKeyHead.getClass().getName())
this.keyToKeyTail == orig(this.keyToKeyTail)
this.keyToKeyTail.getClass().getName() == orig(this.keyToKeyTail.getClass().getName())
this.keySet == orig(this.keySet)
this.keys == orig(this.keys)
this.valuesList == orig(this.valuesList)
this.valuesList.getClass().getName() == orig(this.valuesList.getClass().getName())
this.entries == orig(this.entries)
this.map == orig(this.map)
size(this.valuesList[])-1 == orig(size(this.valuesList[]))
this.head != null
this.tail != null
this.valuesList != null
return == true
size(this.valuesList[]) >= 1
===========================================================================
com.google.common.collect.LinkedListMultimap.put(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.LinkedListMultimap.values():::ENTER
this.head == null
this.tail == null
this.valuesList == null
===========================================================================
com.google.common.collect.LinkedListMultimap.values():::EXIT
this.head == orig(this.head)
this.tail == orig(this.tail)
this.keyCount == orig(this.keyCount)
this.keyCount.getClass().getName() == orig(this.keyCount.getClass().getName())
this.keyToKeyHead == orig(this.keyToKeyHead)
this.keyToKeyHead.getClass().getName() == orig(this.keyToKeyHead.getClass().getName())
this.keyToKeyTail == orig(this.keyToKeyTail)
this.keyToKeyTail.getClass().getName() == orig(this.keyToKeyTail.getClass().getName())
this.keySet == orig(this.keySet)
this.keys == orig(this.keys)
this.entries == orig(this.entries)
this.map == orig(this.map)
this.head == null
this.tail == null
this.valuesList != null
this.valuesList[] == []
this.valuesList[].getClass().getName() == []
return != null
return[] == []
return[].getClass().getName() == []
return.getClass().getName() == com.google.common.collect.LinkedListMultimap$3.class
===========================================================================
com.google.common.collect.Maps:::CLASS
com.google.common.collect.Maps.STANDARD_JOINER has only one value
com.google.common.collect.Maps.STANDARD_JOINER != null
com.google.common.collect.Maps.STANDARD_JOINER.joiner has only one value
com.google.common.collect.Maps.STANDARD_JOINER.joiner != null
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator has only one value
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator != null
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator.toString == ", "
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator has only one value
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator != null
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator.toString == "="
===========================================================================
com.google.common.collect.Maps.immutableEntry(java.lang.Object, java.lang.Object):::ENTER
key != null
key.getClass().getName() == java.lang.Integer.class
value != null
value.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
key.getClass().getName() != value.getClass().getName()
===========================================================================
com.google.common.collect.Maps.immutableEntry(java.lang.Object, java.lang.Object):::EXIT
com.google.common.collect.Maps.STANDARD_JOINER == orig(com.google.common.collect.Maps.STANDARD_JOINER)
com.google.common.collect.Maps.STANDARD_JOINER.joiner == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner)
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator)
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator.toString == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator.toString)
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator == orig(com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator)
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator.toString == orig(com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator.toString)
return != null
return.getClass().getName() == com.google.common.collect.ImmutableEntry.class
return.getClass().getName() != orig(key.getClass().getName())
return.getClass().getName() != orig(value.getClass().getName())
===========================================================================
com.google.common.collect.Maps.newHashMap():::ENTER
===========================================================================
com.google.common.collect.Maps.newHashMap():::EXIT
com.google.common.collect.Maps.STANDARD_JOINER == orig(com.google.common.collect.Maps.STANDARD_JOINER)
com.google.common.collect.Maps.STANDARD_JOINER.joiner == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner)
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator)
com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator.toString == orig(com.google.common.collect.Maps.STANDARD_JOINER.joiner.separator.toString)
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator == orig(com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator)
com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator.toString == orig(com.google.common.collect.Maps.STANDARD_JOINER.keyValueSeparator.toString)
return != null
===========================================================================
com.google.common.collect.Multimaps$Entries:::OBJECT
this.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
===========================================================================
com.google.common.collect.Multimaps$Entries.Entries():::EXIT
===========================================================================
com.google.common.collect.Multimaps$EntrySet:::OBJECT
this.getClass().getName() == com.google.common.collect.AbstractMultimap$3.class
===========================================================================
com.google.common.collect.Multimaps$EntrySet.EntrySet():::EXIT
===========================================================================
com.google.common.collect.Multimaps$Values$1:::OBJECT
this.val$backingIterator != null
this.val$backingIterator.getClass().getName() == com.google.common.collect.AbstractMultimap$EntryIterator.class
com.google.common.collect.Multimaps$Values.this.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.val$backingIterator.getClass().getName() != com.google.common.collect.Multimaps$Values.this.getClass().getName()
===========================================================================
com.google.common.collect.Multimaps$Values$1.(com.google.common.collect.Multimaps$Values, java.util.Iterator):::ENTER
com.google.common.collect.Multimaps$Values.this != null
com.google.common.collect.Multimaps$Values.this.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
$hidden$2 != null
$hidden$2.getClass().getName() == com.google.common.collect.AbstractMultimap$EntryIterator.class
com.google.common.collect.Multimaps$Values.this.getClass().getName() != $hidden$2.getClass().getName()
===========================================================================
com.google.common.collect.Multimaps$Values$1.(com.google.common.collect.Multimaps$Values, java.util.Iterator):::EXIT
this.val$backingIterator == orig($hidden$2)
this.val$backingIterator.getClass().getName() == orig($hidden$2.getClass().getName())
com.google.common.collect.Multimaps$Values.this == orig(com.google.common.collect.Multimaps$Values.this)
com.google.common.collect.Multimaps$Values.this.getClass().getName() == orig(com.google.common.collect.Multimaps$Values.this.getClass().getName())
===========================================================================
com.google.common.collect.Multimaps$Values$1.hasNext():::ENTER
===========================================================================
com.google.common.collect.Multimaps$Values$1.hasNext():::EXIT
this.val$backingIterator == orig(this.val$backingIterator)
this.val$backingIterator.getClass().getName() == orig(this.val$backingIterator.getClass().getName())
com.google.common.collect.Multimaps$Values.this == orig(com.google.common.collect.Multimaps$Values.this)
com.google.common.collect.Multimaps$Values.this.getClass().getName() == orig(com.google.common.collect.Multimaps$Values.this.getClass().getName())
===========================================================================
com.google.common.collect.Multimaps$Values$1.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
com.google.common.collect.Multimaps$Values$1.hasNext():::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.google.common.collect.Multimaps$Values$1.next():::ENTER
===========================================================================
com.google.common.collect.Multimaps$Values$1.next():::EXIT
this.val$backingIterator == orig(this.val$backingIterator)
this.val$backingIterator.getClass().getName() == orig(this.val$backingIterator.getClass().getName())
com.google.common.collect.Multimaps$Values.this == orig(com.google.common.collect.Multimaps$Values.this)
com.google.common.collect.Multimaps$Values.this.getClass().getName() == orig(com.google.common.collect.Multimaps$Values.this.getClass().getName())
return != null
return.getClass().getName() == ch.thn.util.tree.KeySetTreeNode.class
this.val$backingIterator.getClass().getName() != return.getClass().getName()
com.google.common.collect.Multimaps$Values.this.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.Multimaps$Values:::OBJECT
this.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
===========================================================================
com.google.common.collect.Multimaps$Values.Values():::EXIT
===========================================================================
com.google.common.collect.Multimaps$Values.iterator():::ENTER
===========================================================================
com.google.common.collect.Multimaps$Values.iterator():::EXIT
return != null
return.getClass().getName() == com.google.common.collect.Multimaps$Values$1.class
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
com.google.common.collect.Multimaps$Values.size():::ENTER
===========================================================================
com.google.common.collect.Multimaps$Values.size():::EXIT
return >= 0
===========================================================================
com.google.common.collect.Multisets$2:::CLASS
===========================================================================
com.google.common.collect.Multisets$2:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.Multisets$2.():::EXIT
===========================================================================
com.google.common.collect.Multisets$AbstractEntry:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultiset$LiveEntry.class
===========================================================================
com.google.common.collect.Multisets$AbstractEntry.AbstractEntry():::EXIT
===========================================================================
com.google.common.collect.Multisets$EntrySet:::OBJECT
this.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
===========================================================================
com.google.common.collect.Multisets$EntrySet.EntrySet():::EXIT
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl:::OBJECT
this.multiset != null
this.multiset.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.entryIterator != null
this.entryIterator.getClass().getName() == com.google.common.collect.TreeMultiset$2.class
this.currentEntry.getClass().getName() == com.google.common.collect.TreeMultiset$LiveEntry.class
this.laterCount == 0
this.totalCount one of { 0, 1 }
this.multiset.getClass().getName() != this.entryIterator.getClass().getName()
this.multiset.getClass().getName() != this.currentEntry.getClass().getName()
this.entryIterator.getClass().getName() != this.currentEntry.getClass().getName()
this.laterCount <= this.totalCount
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.MultisetIteratorImpl(com.google.common.collect.Multiset, java.util.Iterator):::ENTER
multiset.getClass().getName() == com.google.common.collect.TreeMultiset.class
entryIterator.getClass().getName() == com.google.common.collect.TreeMultiset$2.class
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.MultisetIteratorImpl(com.google.common.collect.Multiset, java.util.Iterator):::EXIT
this.multiset == orig(multiset)
this.multiset.getClass().getName() == orig(multiset.getClass().getName())
this.entryIterator == orig(entryIterator)
this.entryIterator.getClass().getName() == orig(entryIterator.getClass().getName())
this.laterCount == this.totalCount
this.currentEntry == null
this.canRemove == false
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.hasNext():::ENTER
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.hasNext():::EXIT
this.multiset == orig(this.multiset)
this.multiset.getClass().getName() == orig(this.multiset.getClass().getName())
this.entryIterator == orig(this.entryIterator)
this.entryIterator.getClass().getName() == orig(this.entryIterator.getClass().getName())
this.currentEntry == orig(this.currentEntry)
this.currentEntry.getClass().getName() == orig(this.currentEntry.getClass().getName())
this.laterCount == orig(this.laterCount)
this.totalCount == orig(this.totalCount)
this.canRemove == orig(this.canRemove)
(return == false)  ==>  (this.canRemove == true)
(return == false)  ==>  (this.totalCount == 1)
(return == true)  ==>  (this.totalCount one of { 0, 1 })
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.hasNext():::EXIT;condition="not(return == true)"
this.totalCount == 1
this.canRemove == true
return == false
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.next():::ENTER
===========================================================================
com.google.common.collect.Multisets$MultisetIteratorImpl.next():::EXIT
this.multiset == orig(this.multiset)
this.multiset.getClass().getName() == orig(this.multiset.getClass().getName())
this.entryIterator == orig(this.entryIterator)
this.entryIterator.getClass().getName() == orig(this.entryIterator.getClass().getName())
this.currentEntry.getClass().getName() == orig(this.currentEntry.getClass().getName())
this.laterCount == orig(this.laterCount)
this.totalCount == 1
this.canRemove == true
return.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.multiset.getClass().getName() != return.getClass().getName()
this.entryIterator.getClass().getName() != return.getClass().getName()
this.currentEntry.getClass().getName() != return.getClass().getName()
this.laterCount <= orig(this.totalCount)
this.totalCount >= orig(this.totalCount)
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset:::CLASS
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset:::OBJECT
this.delegate != null
this.delegate.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.elementSet == null
this.entrySet == null
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset.UnmodifiableMultiset(com.google.common.collect.Multiset):::ENTER
delegate.getClass().getName() == com.google.common.collect.TreeMultiset.class
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset.UnmodifiableMultiset(com.google.common.collect.Multiset):::EXIT
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset.iterator():::ENTER
===========================================================================
com.google.common.collect.Multisets$UnmodifiableMultiset.iterator():::EXIT
this.delegate == orig(this.delegate)
this.delegate.getClass().getName() == orig(this.delegate.getClass().getName())
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
return.getClass().getName() == com.google.common.collect.Iterators$3.class
===========================================================================
com.google.common.collect.Multisets$UnmodifiableSortedMultiset:::OBJECT
this.descendingMultiset == null
this.delegate.getClass().getName() == com.google.common.collect.TreeMultiset.class
this.elementSet == null
this.entrySet == null
===========================================================================
com.google.common.collect.Multisets$UnmodifiableSortedMultiset.UnmodifiableSortedMultiset(com.google.common.collect.SortedMultiset):::ENTER
delegate.getClass().getName() == com.google.common.collect.TreeMultiset.class
===========================================================================
com.google.common.collect.Multisets$UnmodifiableSortedMultiset.UnmodifiableSortedMultiset(com.google.common.collect.SortedMultiset):::EXIT
this.delegate.getClass().getName() == orig(delegate.getClass().getName())
===========================================================================
com.google.common.collect.Multisets:::CLASS
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING has only one value
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING != null
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() == com.google.common.collect.Multisets$2.class
===========================================================================
com.google.common.collect.Multisets.iteratorImpl(com.google.common.collect.Multiset):::ENTER
multiset.getClass().getName() == com.google.common.collect.TreeMultiset.class
===========================================================================
com.google.common.collect.Multisets.iteratorImpl(com.google.common.collect.Multiset):::EXIT
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING)
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName())
return.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.Multisets.sizeImpl(com.google.common.collect.Multiset):::ENTER
multiset != null
multiset.getClass().getName() == com.google.common.collect.LinkedHashMultiset.class
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() != multiset.getClass().getName()
===========================================================================
com.google.common.collect.Multisets.sizeImpl(com.google.common.collect.Multiset):::EXIT
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING)
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName())
return == 0
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() != orig(multiset.getClass().getName())
===========================================================================
com.google.common.collect.Multisets.unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset):::ENTER
sortedMultiset.getClass().getName() == com.google.common.collect.TreeMultiset.class
===========================================================================
com.google.common.collect.Multisets.unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset):::EXIT
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING)
com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName() == orig(com.google.common.collect.Multisets.DECREASING_COUNT_ORDERING.getClass().getName())
return.getClass().getName() == com.google.common.collect.Multisets$UnmodifiableSortedMultiset.class
===========================================================================
com.google.common.collect.Ordering:::CLASS
===========================================================================
com.google.common.collect.Ordering:::OBJECT
this has only one value
this.getClass().getName() == com.google.common.collect.Multisets$2.class
===========================================================================
com.google.common.collect.Ordering.Ordering():::EXIT
===========================================================================
com.google.common.collect.TreeMultimap:::CLASS
===========================================================================
com.google.common.collect.TreeMultimap:::OBJECT
this.keyComparator != null
this.valueComparator != null
this.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
this.map != null
this.map.getClass().getName() == java.util.TreeMap.class
this.totalSize one of { 0, 1, 2 }
this.keySet == null
this.multiset == null
this.valuesCollection.getClass().getName() == com.google.common.collect.AbstractMultimap$2.class
this.entries == null
this.asMap == null
this.keyComparator.getClass().getName() != this.valueComparator.getClass().getName()
this.keyComparator.getClass().getName() != this.map.getClass().getName()
this.keyComparator.getClass().getName() != this.valuesCollection.getClass().getName()
this.valueComparator.getClass().getName() != this.map.getClass().getName()
this.valueComparator.getClass().getName() != this.valuesCollection.getClass().getName()
this.map.getClass().getName() != this.valuesCollection.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultimap.TreeMultimap(java.util.Comparator, java.util.Comparator):::ENTER
keyComparator != null
valueComparator != null
valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
keyComparator.getClass().getName() != valueComparator.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultimap.TreeMultimap(java.util.Comparator, java.util.Comparator):::EXIT
this.keyComparator == orig(keyComparator)
this.keyComparator.getClass().getName() == orig(keyComparator.getClass().getName())
this.valueComparator == orig(valueComparator)
this.valueComparator.getClass().getName() == orig(valueComparator.getClass().getName())
this.totalSize == 0
this.valuesCollection == null
===========================================================================
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator):::ENTER
keyComparator != null
valueComparator != null
valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
keyComparator.getClass().getName() != valueComparator.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator):::EXIT
return.keyComparator == orig(keyComparator)
return.keyComparator.getClass().getName() == orig(keyComparator.getClass().getName())
return.valueComparator == orig(valueComparator)
return.valueComparator.getClass().getName() == orig(valueComparator.getClass().getName())
return != null
return.keyComparator != null
return.valueComparator != null
return.valueComparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericKeySetTreeNode$2.class
return.map != null
return.map.getClass().getName() == java.util.TreeMap.class
return.totalSize == 0
return.keySet == null
return.multiset == null
return.valuesCollection == null
return.entries == null
return.asMap == null
return.keyComparator.getClass().getName() != return.valueComparator.getClass().getName()
return.keyComparator.getClass().getName() != return.map.getClass().getName()
return.valueComparator.getClass().getName() != return.map.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultimap.createCollection():::ENTER
this.valuesCollection != null
===========================================================================
com.google.common.collect.TreeMultimap.createCollection():::EXIT
this.keyComparator == orig(this.keyComparator)
this.keyComparator.getClass().getName() == orig(this.keyComparator.getClass().getName())
this.valueComparator == orig(this.valueComparator)
this.valueComparator.getClass().getName() == orig(this.valueComparator.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.totalSize == orig(this.totalSize)
this.keySet == orig(this.keySet)
this.multiset == orig(this.multiset)
this.valuesCollection == orig(this.valuesCollection)
this.valuesCollection.getClass().getName() == orig(this.valuesCollection.getClass().getName())
this.entries == orig(this.entries)
this.asMap == orig(this.asMap)
this.valuesCollection != null
return != null
return.getClass().getName() == java.util.TreeSet.class
this.keyComparator.getClass().getName() != return.getClass().getName()
this.valueComparator.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.valuesCollection.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$1:::OBJECT
this.val$direction has only one value
this.val$direction != null
this.val$direction.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT != null
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT != null
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES != null
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[] elements != null
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
com.google.common.collect.TreeMultiset.this.range != null
com.google.common.collect.TreeMultiset.this.range.comparator != null
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.lowerBoundType != null
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.upperBoundType != null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference != null
com.google.common.collect.TreeMultiset.this.rootReference.value != null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator != null
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet != null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.nextOrNull != null
this.nextOrNull.getClass().getName() == com.google.common.collect.BstInOrderPath.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.TreeMultiset$1.(com.google.common.collect.TreeMultiset, com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::ENTER
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
x0.sideExtension.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
x0.prevInOrder == null
x0.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
x0.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
x0.tip.left == null
x0.tip.right == null
x0.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
x0.prefix.prefix == null
$hidden$3 has only one value
$hidden$3.getClass().getName() == com.google.common.collect.BstSide$2.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.TreeMultiset$1.(com.google.common.collect.TreeMultiset, com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::EXIT
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
x0.sideExtension == orig(x0.sideExtension)
x0.sideExtension.getClass().getName() == orig(x0.sideExtension.getClass().getName())
x0.prevInOrder == orig(x0.prevInOrder)
x0.nextInOrder == orig(x0.nextInOrder)
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
x0.tip == orig(x0.tip)
x0.tip.key == orig(x0.tip.key)
x0.tip.key.getClass().getName() == orig(x0.tip.key.getClass().getName())
x0.tip.left == orig(x0.tip.left)
x0.tip.right == orig(x0.tip.right)
x0.prefix == orig(x0.prefix)
x0.prefix.getClass().getName() == orig(x0.prefix.getClass().getName())
x0.prefix.tip == orig(x0.prefix.tip)
x0.prefix.prefix == orig(x0.prefix.prefix)
x0.sideExtension.getClass().getName() == com.google.common.collect.BstSide$1.class
x0.prevInOrder == null
x0.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
x0.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
x0.tip.left == null
x0.tip.right == null
x0.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
x0.prefix.prefix == null
===========================================================================
com.google.common.collect.TreeMultiset$1.computeNext(com.google.common.collect.BstInOrderPath):::ENTER
previous.prevInOrder == null
previous.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
previous.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
previous.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
previous.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.TreeMultiset$1.computeNext(com.google.common.collect.BstInOrderPath):::EXIT276
previous.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
previous.nextInOrder has only one value
previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class
previous.tip.left == null
previous.tip.right == null
return == null
===========================================================================
com.google.common.collect.TreeMultiset$1.computeNext(com.google.common.collect.BstInOrderPath):::EXIT280
previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class
previous.prefix.prefix == null
===========================================================================
com.google.common.collect.TreeMultiset$1.computeNext(com.google.common.collect.BstInOrderPath):::EXIT
this.val$direction == orig(this.val$direction)
this.val$direction.getClass().getName() == orig(this.val$direction.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
this.nextOrNull == orig(this.nextOrNull)
this.nextOrNull.getClass().getName() == orig(this.nextOrNull.getClass().getName())
previous.sideExtension == orig(previous.sideExtension)
previous.sideExtension.getClass().getName() == orig(previous.sideExtension.getClass().getName())
previous.prevInOrder == orig(previous.prevInOrder)
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
previous.tip == orig(previous.tip)
previous.tip.key == orig(previous.tip.key)
previous.tip.key.getClass().getName() == orig(previous.tip.key.getClass().getName())
previous.tip.left == orig(previous.tip.left)
previous.tip.right == orig(previous.tip.right)
previous.prefix == orig(previous.prefix)
previous.prefix.getClass().getName() == orig(previous.prefix.getClass().getName())
previous.prefix.tip == orig(previous.prefix.tip)
previous.prefix.prefix == orig(previous.prefix.prefix)
previous.prefix.prefix.getClass().getName() == orig(previous.prefix.prefix.getClass().getName())
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  <==>  (return == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (previous.nextInOrder has only one value)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (previous.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (previous.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (previous.tip.left == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Absent.class)  ==>  (previous.tip.right == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  <==>  (previous.prefix.prefix == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.nextInOrder == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.prevInOrder == null)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class)
(previous.nextInOrder.getClass().getName() == com.google.common.base.Optional$Present.class)  ==>  (return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class)
previous.prevInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
previous.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
previous.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
previous.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.sideExtension.getClass().getName() == com.google.common.collect.BstSide$2.class
return.prevInOrder == null
return.nextInOrder == null
return.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
return.prefix.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
===========================================================================
com.google.common.collect.TreeMultiset$2:::OBJECT
com.google.common.collect.TreeMultiset.this.range.comparator == com.google.common.collect.TreeMultiset.this.comparator
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == com.google.common.collect.TreeMultiset.this.range.upperBoundType
this.toRemove.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.val$pathIterator != null
this.val$pathIterator.getClass().getName() == com.google.common.collect.TreeMultiset$1.class
com.google.common.collect.TreeMultiset.this.range != null
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.lowerBoundType != null
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference != null
com.google.common.collect.TreeMultiset.this.rootReference.value != null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator != null
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet != null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.toRemove.getClass().getName() != this.val$pathIterator.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.toRemove.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.val$pathIterator.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$2.(com.google.common.collect.TreeMultiset, java.util.Iterator):::ENTER
com.google.common.collect.TreeMultiset.this.range.comparator == com.google.common.collect.TreeMultiset.this.comparator
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == com.google.common.collect.TreeMultiset.this.range.upperBoundType
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
$hidden$2.getClass().getName() == com.google.common.collect.TreeMultiset$1.class
===========================================================================
com.google.common.collect.TreeMultiset$2.(com.google.common.collect.TreeMultiset, java.util.Iterator):::EXIT
this.val$pathIterator == orig($hidden$2)
this.val$pathIterator.getClass().getName() == orig($hidden$2.getClass().getName())
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
this.toRemove == null
===========================================================================
com.google.common.collect.TreeMultiset$2.hasNext():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$2.hasNext():::EXIT
this.toRemove == orig(this.toRemove)
this.toRemove.getClass().getName() == orig(this.toRemove.getClass().getName())
this.val$pathIterator == orig(this.val$pathIterator)
this.val$pathIterator.getClass().getName() == orig(this.val$pathIterator.getClass().getName())
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
===========================================================================
com.google.common.collect.TreeMultiset$2.hasNext():::EXIT;condition="return == true"
return == true
===========================================================================
com.google.common.collect.TreeMultiset$2.hasNext():::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.google.common.collect.TreeMultiset$2.next():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$2.next():::EXIT
this.toRemove.getClass().getName() == orig(this.toRemove.getClass().getName())
this.val$pathIterator == orig(this.val$pathIterator)
this.val$pathIterator.getClass().getName() == orig(this.val$pathIterator.getClass().getName())
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
return.getClass().getName() == com.google.common.collect.TreeMultiset$LiveEntry.class
this.toRemove.getClass().getName() != return.getClass().getName()
this.val$pathIterator.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$3:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.TreeMultiset$3.():::EXIT
===========================================================================
com.google.common.collect.TreeMultiset$3.treeValue(com.google.common.collect.TreeMultiset$Node):::ENTER
tree.key.getClass().getName() == tree.right.key.getClass().getName()
tree.size one of { 1, 2 }
tree.distinct one of { 1, 2 }
tree.key != null
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left == null
tree.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.right.left == null
tree.right.right == null
===========================================================================
com.google.common.collect.TreeMultiset$3.treeValue(com.google.common.collect.TreeMultiset$Node):::EXIT
tree.size == orig(tree.size)
tree.distinct == return
tree.distinct == orig(tree.distinct)
tree.key == orig(tree.key)
tree.key.getClass().getName() == tree.right.key.getClass().getName()
tree.key.getClass().getName() == orig(tree.key.getClass().getName())
tree.left == orig(tree.left)
tree.right == orig(tree.right)
tree.right.key == orig(tree.right.key)
tree.right.key.getClass().getName() == orig(tree.right.key.getClass().getName())
tree.right.left == orig(tree.right.left)
tree.right.right == orig(tree.right.right)
tree.size one of { 1, 2 }
tree.distinct one of { 1, 2 }
tree.key != null
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left == null
tree.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.right.left == null
tree.right.right == null
return one of { 0, 1, 2 }
===========================================================================
com.google.common.collect.TreeMultiset$4:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.TreeMultiset$4.():::EXIT
===========================================================================
com.google.common.collect.TreeMultiset$4.treeValue(com.google.common.collect.TreeMultiset$Node):::ENTER
tree.key.getClass().getName() == tree.left.key.getClass().getName()
tree.left.key.getClass().getName() == tree.right.key.getClass().getName()
tree.size one of { 1, 4 }
tree.distinct one of { 1, 4 }
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.left == null
tree.left.right == null
tree.right.left == null
===========================================================================
com.google.common.collect.TreeMultiset$4.treeValue(com.google.common.collect.TreeMultiset$Node):::EXIT
tree.size == return
tree.distinct == orig(tree.distinct)
tree.key == orig(tree.key)
tree.key.getClass().getName() == tree.left.key.getClass().getName()
tree.key.getClass().getName() == orig(tree.key.getClass().getName())
tree.left == orig(tree.left)
tree.left.key == orig(tree.left.key)
tree.left.key.getClass().getName() == tree.right.key.getClass().getName()
tree.left.key.getClass().getName() == orig(tree.left.key.getClass().getName())
tree.left.key.getClass().getName() == orig(tree.right.key.getClass().getName())
tree.left.left == orig(tree.left.left)
tree.left.right == orig(tree.left.right)
tree.right == orig(tree.right)
tree.right.key == orig(tree.right.key)
tree.right.left == orig(tree.right.left)
tree.right.right == orig(tree.right.right)
return == orig(tree.size)
tree.distinct one of { 1, 4 }
tree.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
tree.left.left == null
tree.left.right == null
tree.right.left == null
return one of { 1, 4 }
===========================================================================
com.google.common.collect.TreeMultiset$5:::OBJECT
this has only one value
===========================================================================
com.google.common.collect.TreeMultiset$5.():::EXIT
===========================================================================
com.google.common.collect.TreeMultiset$5.createNode(com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node):::ENTER
source.key.getClass().getName() == source.left.key.getClass().getName()
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == left.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.left.key == left.key
source.left.key.getClass().getName() == source.right.key.getClass().getName()
source.left.key.getClass().getName() == left.key.getClass().getName()
source.left.key.getClass().getName() == right.key.getClass().getName()
source.left.key.getClass().getName() == right.right.key.getClass().getName()
source.right.key == right.key
source.right.key.getClass().getName() == left.key.getClass().getName()
source.right.key.getClass().getName() == right.key.getClass().getName()
left.key.getClass().getName() == right.key.getClass().getName()
source != null
source.size one of { 1, 2, 3 }
source.distinct one of { 1, 2, 3 }
source.key != null
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.left == null
source.left.right == null
source.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.right.left == null
source.right.right == null
left.size == 1
left.distinct == 1
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.size one of { 1, 2 }
right.distinct one of { 1, 2 }
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.left == null
right.right.right == null
source.size >= right.size
source.distinct >= right.distinct
===========================================================================
com.google.common.collect.TreeMultiset$5.createNode(com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node):::EXIT
source.size == orig(source.size)
source.distinct == orig(source.distinct)
source.key == return.key
source.key == orig(source.key)
source.key.getClass().getName() == source.left.key.getClass().getName()
source.key.getClass().getName() == source.right.key.getClass().getName()
source.key.getClass().getName() == left.key.getClass().getName()
source.key.getClass().getName() == right.key.getClass().getName()
source.key.getClass().getName() == return.key.getClass().getName()
source.key.getClass().getName() == orig(source.key.getClass().getName())
source.left == orig(source.left)
source.left.key == left.key
source.left.key == orig(source.left.key)
source.left.key.getClass().getName() == source.right.key.getClass().getName()
source.left.key.getClass().getName() == left.key.getClass().getName()
source.left.key.getClass().getName() == right.key.getClass().getName()
source.left.key.getClass().getName() == right.right.key.getClass().getName()
source.left.key.getClass().getName() == orig(source.left.key.getClass().getName())
source.left.key.getClass().getName() == orig(right.right.key.getClass().getName())
source.left.left == orig(source.left.left)
source.left.right == orig(source.left.right)
source.right == orig(source.right)
source.right.key == right.key
source.right.key == orig(source.right.key)
source.right.key.getClass().getName() == left.key.getClass().getName()
source.right.key.getClass().getName() == right.key.getClass().getName()
source.right.key.getClass().getName() == orig(source.right.key.getClass().getName())
source.right.left == orig(source.right.left)
source.right.right == orig(source.right.right)
left.size == orig(left.size)
left.distinct == orig(left.distinct)
left.key == return.left.key
left.key == orig(left.key)
left.key.getClass().getName() == right.key.getClass().getName()
left.key.getClass().getName() == return.left.key.getClass().getName()
left.key.getClass().getName() == orig(left.key.getClass().getName())
left.left == orig(left.left)
left.right == orig(left.right)
right.size == orig(right.size)
right.distinct == orig(right.distinct)
right.key == return.right.key
right.key == orig(right.key)
right.key.getClass().getName() == return.right.key.getClass().getName()
right.key.getClass().getName() == orig(right.key.getClass().getName())
right.left == orig(right.left)
right.right == return.right.right
right.right == orig(right.right)
right.right.key == orig(right.right.key)
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
source.size one of { 1, 2, 3 }
source.distinct one of { 1, 2, 3 }
source.key != null
source.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.left.left == null
source.left.right == null
source.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
source.right.left == null
source.right.right == null
left.size == 1
left.distinct == 1
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.size one of { 1, 2 }
right.distinct one of { 1, 2 }
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.left == null
right.right.right == null
return != null
return.left.left == null
return.left.right == null
return.right.left == null
source.size >= right.size
source.distinct >= right.distinct
return.size % right.size == 0
right.size < return.size
return.distinct % right.distinct == 0
right.distinct < return.distinct
===========================================================================
com.google.common.collect.TreeMultiset$AddModifier:::OBJECT
this.countToAdd == 1
com.google.common.collect.TreeMultiset.this.range != null
com.google.common.collect.TreeMultiset.this.range.comparator != null
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.lowerBoundType != null
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.upperBoundType != null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference != null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator != null
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset$AddModifier.AddModifier(com.google.common.collect.TreeMultiset, int):::ENTER
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
countToAdd == 1
===========================================================================
com.google.common.collect.TreeMultiset$AddModifier.AddModifier(com.google.common.collect.TreeMultiset, int):::EXIT
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
===========================================================================
com.google.common.collect.TreeMultiset$AddModifier.newCount(int):::ENTER
oldCount == 0
===========================================================================
com.google.common.collect.TreeMultiset$AddModifier.newCount(int):::EXIT
this.countToAdd == orig(this.countToAdd)
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
return == 1
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry:::OBJECT
this.expectedRoot == com.google.common.collect.TreeMultiset.this.rootReference.value
this.expectedRoot.key.getClass().getName() == this.element.getClass().getName()
this.expectedRoot.left.key.getClass().getName() == this.expectedRoot.right.key.getClass().getName()
this.expectedRoot.left.key.getClass().getName() == this.element.getClass().getName()
com.google.common.collect.TreeMultiset.this.range.comparator == com.google.common.collect.TreeMultiset.this.comparator
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == com.google.common.collect.TreeMultiset.this.range.upperBoundType
this.expectedRoot != null
this.expectedRoot.size one of { 1, 4 }
this.expectedRoot.distinct one of { 1, 4 }
this.expectedRoot.key != null
this.expectedRoot.left.key != null
this.expectedRoot.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.expectedRoot.left.left == null
this.expectedRoot.left.right == null
this.expectedRoot.right.key != null
this.expectedRoot.right.left == null
this.expectedRoot.right.right != null
this.element != null
this.element.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.count == 1
com.google.common.collect.TreeMultiset.this.range != null
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.lowerBoundType != null
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference != null
com.google.common.collect.TreeMultiset.this.rootReference.value != null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator != null
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet != null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
this.expectedRoot.size >= this.count
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName()
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.expectedRoot.left.key.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.element.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.LiveEntry(com.google.common.collect.TreeMultiset, java.lang.Object, int):::ENTER
com.google.common.collect.TreeMultiset.this.range.comparator == com.google.common.collect.TreeMultiset.this.comparator
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == com.google.common.collect.TreeMultiset.this.range.upperBoundType
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
element.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
count == 1
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() != element.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.LiveEntry(com.google.common.collect.TreeMultiset, java.lang.Object, int):::EXIT
this.element == orig(element)
this.element.getClass().getName() == orig(element.getClass().getName())
this.count == orig(count)
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.getCount():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.getCount():::EXIT326
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.getCount():::EXIT
this.expectedRoot == orig(this.expectedRoot)
this.expectedRoot.size == orig(this.expectedRoot.size)
this.expectedRoot.distinct == orig(this.expectedRoot.distinct)
this.expectedRoot.key == orig(this.expectedRoot.key)
this.expectedRoot.left == orig(this.expectedRoot.left)
this.expectedRoot.left.key == orig(this.expectedRoot.left.key)
this.expectedRoot.left.key.getClass().getName() == orig(this.expectedRoot.left.key.getClass().getName())
this.expectedRoot.left.key.getClass().getName() == orig(this.expectedRoot.right.key.getClass().getName())
this.expectedRoot.left.left == orig(this.expectedRoot.left.left)
this.expectedRoot.left.right == orig(this.expectedRoot.left.right)
this.expectedRoot.right == orig(this.expectedRoot.right)
this.expectedRoot.right.key == orig(this.expectedRoot.right.key)
this.expectedRoot.right.left == orig(this.expectedRoot.right.left)
this.expectedRoot.right.right == orig(this.expectedRoot.right.right)
this.element == orig(this.element)
this.element.getClass().getName() == orig(this.expectedRoot.key.getClass().getName())
this.element.getClass().getName() == orig(this.element.getClass().getName())
this.count == return
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
return == orig(this.count)
return == 1
this.expectedRoot.size >= return
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.getElement():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$LiveEntry.getElement():::EXIT
this.expectedRoot == orig(this.expectedRoot)
this.expectedRoot.size == orig(this.expectedRoot.size)
this.expectedRoot.distinct == orig(this.expectedRoot.distinct)
this.expectedRoot.key == orig(this.expectedRoot.key)
this.expectedRoot.key.getClass().getName() == return.getClass().getName()
this.expectedRoot.left == orig(this.expectedRoot.left)
this.expectedRoot.left.key == orig(this.expectedRoot.left.key)
this.expectedRoot.left.key.getClass().getName() == return.getClass().getName()
this.expectedRoot.left.key.getClass().getName() == orig(this.expectedRoot.left.key.getClass().getName())
this.expectedRoot.left.key.getClass().getName() == orig(this.expectedRoot.right.key.getClass().getName())
this.expectedRoot.left.left == orig(this.expectedRoot.left.left)
this.expectedRoot.left.right == orig(this.expectedRoot.left.right)
this.expectedRoot.right == orig(this.expectedRoot.right)
this.expectedRoot.right.key == orig(this.expectedRoot.right.key)
this.expectedRoot.right.left == orig(this.expectedRoot.right.left)
this.expectedRoot.right.right == orig(this.expectedRoot.right.right)
this.element == return
this.element.getClass().getName() == return.getClass().getName()
this.count == orig(this.count)
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName())
return == orig(this.element)
return.getClass().getName() == orig(this.expectedRoot.key.getClass().getName())
return.getClass().getName() == orig(this.element.getClass().getName())
return.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.this.entrySet.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier:::OBJECT
this.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
com.google.common.collect.TreeMultiset.this.range != null
com.google.common.collect.TreeMultiset.this.range.comparator != null
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.lowerBoundType != null
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.upperBoundType != null
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference != null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator != null
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier.MultisetModifier(com.google.common.collect.TreeMultiset):::ENTER
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == false
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == null
com.google.common.collect.TreeMultiset.this.range.lowerBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == false
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == null
com.google.common.collect.TreeMultiset.this.range.upperBoundType has only one value
com.google.common.collect.TreeMultiset.this.range.reverse == null
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier.MultisetModifier(com.google.common.collect.TreeMultiset):::EXIT
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier.modify(java.lang.Object, com.google.common.collect.TreeMultiset$Node):::ENTER
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
originalEntry == null
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier.modify(java.lang.Object, com.google.common.collect.TreeMultiset$Node):::EXIT470
===========================================================================
com.google.common.collect.TreeMultiset$MultisetModifier.modify(java.lang.Object, com.google.common.collect.TreeMultiset$Node):::EXIT
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.range == orig(com.google.common.collect.TreeMultiset.this.range)
com.google.common.collect.TreeMultiset.this.range.comparator == orig(com.google.common.collect.TreeMultiset.this.range.comparator)
com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.range.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.range.hasLowerBound == orig(com.google.common.collect.TreeMultiset.this.range.hasLowerBound)
com.google.common.collect.TreeMultiset.this.range.lowerEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.lowerEndpoint)
com.google.common.collect.TreeMultiset.this.range.lowerBoundType == orig(com.google.common.collect.TreeMultiset.this.range.lowerBoundType)
com.google.common.collect.TreeMultiset.this.range.hasUpperBound == orig(com.google.common.collect.TreeMultiset.this.range.hasUpperBound)
com.google.common.collect.TreeMultiset.this.range.upperEndpoint == orig(com.google.common.collect.TreeMultiset.this.range.upperEndpoint)
com.google.common.collect.TreeMultiset.this.range.upperBoundType == orig(com.google.common.collect.TreeMultiset.this.range.upperBoundType)
com.google.common.collect.TreeMultiset.this.range.reverse == orig(com.google.common.collect.TreeMultiset.this.range.reverse)
com.google.common.collect.TreeMultiset.this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
com.google.common.collect.TreeMultiset.this.rootReference.value == orig(com.google.common.collect.TreeMultiset.this.rootReference.value)
com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
com.google.common.collect.TreeMultiset.this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
com.google.common.collect.TreeMultiset.this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
return.originalTarget == null
return.changedTarget.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
return.changedTarget.left == null
return.changedTarget.right == null
return.type has only one value
com.google.common.collect.BstModificationResult$ModificationType.IDENTITY has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBUILDING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.REBALANCING_CHANGE has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES has only one value
com.google.common.collect.BstModificationResult$ModificationType.$VALUES.getClass().getName() == com.google.common.collect.BstModificationResult$ModificationType[].class
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[] contains no nulls and has only one value, of length 3
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() == [com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType, com.google.common.collect.BstModificationResult.ModificationType]
com.google.common.collect.BstModificationResult$ModificationType.$VALUES[].getClass().getName() elements == com.google.common.collect.BstModificationResult.ModificationType.class
size(com.google.common.collect.BstModificationResult$ModificationType.$VALUES[]) == 3
===========================================================================
com.google.common.collect.TreeMultiset$Node:::CLASS
===========================================================================
com.google.common.collect.TreeMultiset$Node:::OBJECT
this.key != null
this.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.left.key != null
this.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.left.left == null
this.left.right == null
this.right.key != null
this.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.right.left == null
this.right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
this.right.right.left == null
this.right.right.right == null
===========================================================================
com.google.common.collect.TreeMultiset$Node.Node(java.lang.Object, int):::ENTER
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
elemCount == 1
===========================================================================
com.google.common.collect.TreeMultiset$Node.Node(java.lang.Object, int):::EXIT
this.size == 1
this.distinct == 1
this.left == null
this.right == null
===========================================================================
com.google.common.collect.TreeMultiset$Node.Node(java.lang.Object, int, com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node):::ENTER
key != null
key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
elemCount == 1
left.size == 1
left.distinct == 1
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.size one of { 1, 2 }
right.distinct one of { 1, 2 }
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.TreeMultiset$Node.Node(java.lang.Object, int, com.google.common.collect.TreeMultiset$Node, com.google.common.collect.TreeMultiset$Node):::EXIT
left.size == orig(left.size)
left.distinct == orig(left.distinct)
left.key == orig(left.key)
left.key.getClass().getName() == orig(left.key.getClass().getName())
left.left == orig(left.left)
left.right == orig(left.right)
right.size == orig(right.size)
right.distinct == orig(right.distinct)
right.key == orig(right.key)
right.key.getClass().getName() == orig(right.key.getClass().getName())
right.left == orig(right.left)
right.right == orig(right.right)
right.right.key == orig(right.right.key)
right.right.key.getClass().getName() == orig(right.right.key.getClass().getName())
right.right.left == orig(right.right.left)
right.right.right == orig(right.right.right)
left.size == 1
left.distinct == 1
left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
left.left == null
left.right == null
right.size one of { 1, 2 }
right.distinct one of { 1, 2 }
right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.left == null
right.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
right.right.left == null
right.right.right == null
===========================================================================
com.google.common.collect.TreeMultiset$Node.elemCount():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$Node.elemCount():::EXIT
this.size == orig(this.size)
this.distinct == orig(this.distinct)
this.key == orig(this.key)
this.key.getClass().getName() == orig(this.key.getClass().getName())
this.left == orig(this.left)
this.left.key == orig(this.left.key)
this.left.key.getClass().getName() == orig(this.left.key.getClass().getName())
this.left.left == orig(this.left.left)
this.left.right == orig(this.left.right)
this.right == orig(this.right)
this.right.key == orig(this.right.key)
this.right.key.getClass().getName() == orig(this.right.key.getClass().getName())
this.right.left == orig(this.right.left)
this.right.right == orig(this.right.right)
this.right.right.key == orig(this.right.right.key)
this.right.right.key.getClass().getName() == orig(this.right.right.key.getClass().getName())
this.right.right.left == orig(this.right.right.left)
this.right.right.right == orig(this.right.right.right)
return == 1
===========================================================================
com.google.common.collect.TreeMultiset$Reference:::OBJECT
this.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
===========================================================================
com.google.common.collect.TreeMultiset$Reference.Reference():::EXIT
this.value == null
===========================================================================
com.google.common.collect.TreeMultiset$Reference.compareAndSet(java.lang.Object, java.lang.Object):::ENTER
this.value.getClass().getName() == expected.getClass().getName()
this.value.getClass().getName() == newValue.getClass().getName()
newValue.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
===========================================================================
com.google.common.collect.TreeMultiset$Reference.compareAndSet(java.lang.Object, java.lang.Object):::EXIT159
===========================================================================
com.google.common.collect.TreeMultiset$Reference.compareAndSet(java.lang.Object, java.lang.Object):::EXIT159;condition="return == true"
===========================================================================
com.google.common.collect.TreeMultiset$Reference.compareAndSet(java.lang.Object, java.lang.Object):::EXIT
this.value == orig(newValue)
this.value.getClass().getName() == orig(expected.getClass().getName())
this.value.getClass().getName() == orig(newValue.getClass().getName())
return == true
orig(expected.getClass().getName()) == com.google.common.collect.TreeMultiset$Node.class
===========================================================================
com.google.common.collect.TreeMultiset$Reference.compareAndSet(java.lang.Object, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.google.common.collect.TreeMultiset$Reference.get():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset$Reference.get():::EXIT
this.value == return
this.value.getClass().getName() == return.getClass().getName()
return == orig(this.value)
return.getClass().getName() == orig(this.value.getClass().getName())
return.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
===========================================================================
com.google.common.collect.TreeMultiset:::CLASS
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE != null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$3.class
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE has only one value
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE != null
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == com.google.common.collect.TreeMultiset$4.class
com.google.common.collect.TreeMultiset.NODE_FACTORY has only one value
com.google.common.collect.TreeMultiset.NODE_FACTORY != null
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == com.google.common.collect.TreeMultiset$5.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset:::OBJECT
this.range.comparator == this.comparator
this.range.comparator.getClass().getName() == this.comparator.getClass().getName()
this.range.lowerBoundType == com.google.common.collect.BoundType.OPEN
com.google.common.collect.BoundType.OPEN == this.range.upperBoundType
this.range != null
this.range.hasLowerBound == false
this.range.lowerEndpoint == null
com.google.common.collect.BoundType.OPEN has only one value
com.google.common.collect.BoundType.OPEN != null
com.google.common.collect.BoundType.CLOSED has only one value
com.google.common.collect.BoundType.CLOSED != null
com.google.common.collect.BoundType.$VALUES has only one value
com.google.common.collect.BoundType.$VALUES != null
com.google.common.collect.BoundType.$VALUES.getClass().getName() == com.google.common.collect.BoundType[].class
com.google.common.collect.BoundType.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BoundType.$VALUES[] elements != null
com.google.common.collect.BoundType.$VALUES[].getClass().getName() == [com.google.common.collect.BoundType, com.google.common.collect.BoundType]
com.google.common.collect.BoundType.$VALUES[].getClass().getName() elements == com.google.common.collect.BoundType.class
this.range.hasUpperBound == false
this.range.upperEndpoint == null
this.range.reverse == null
this.rootReference != null
this.rootReference.value.getClass().getName() == com.google.common.collect.TreeMultiset$Node.class
this.comparator != null
this.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
this.descendingMultiset == null
this.elementSet == null
this.entrySet.getClass().getName() == com.google.common.collect.AbstractMultiset$EntrySet.class
size(com.google.common.collect.BoundType.$VALUES[]) == 2
com.google.common.collect.BoundType.$VALUES.getClass().getName() != this.rootReference.value.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != this.comparator.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != this.entrySet.getClass().getName()
this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName()
this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName()
this.rootReference.value.getClass().getName() != com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName()
this.rootReference.value.getClass().getName() != this.comparator.getClass().getName()
this.rootReference.value.getClass().getName() != this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != this.entrySet.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != this.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != this.entrySet.getClass().getName()
this.comparator.getClass().getName() != this.entrySet.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.TreeMultiset(java.util.Comparator):::ENTER
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
===========================================================================
com.google.common.collect.TreeMultiset.TreeMultiset(java.util.Comparator):::EXIT
this.comparator == orig(comparator)
this.comparator.getClass().getName() == orig(comparator.getClass().getName())
this.rootReference.value == null
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.add(java.lang.Object, int):::ENTER
this.entrySet == null
element.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
occurrences == 1
com.google.common.collect.BoundType.$VALUES.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != element.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != element.getClass().getName()
this.comparator.getClass().getName() != element.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.add(java.lang.Object, int):::EXIT216
===========================================================================
com.google.common.collect.TreeMultiset.add(java.lang.Object, int):::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
return == 0
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(element.getClass().getName())
this.rootReference.value.getClass().getName() != orig(element.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != orig(element.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != orig(element.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != orig(element.getClass().getName())
this.comparator.getClass().getName() != orig(element.getClass().getName())
===========================================================================
com.google.common.collect.TreeMultiset.checkElement(java.lang.Object):::ENTER
this.entrySet == null
o.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
com.google.common.collect.BoundType.$VALUES.getClass().getName() != o.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != o.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != o.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != o.getClass().getName()
this.comparator.getClass().getName() != o.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.checkElement(java.lang.Object):::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
return == orig(o)
return.getClass().getName() == orig(o.getClass().getName())
this.entrySet == null
return.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
com.google.common.collect.BoundType.$VALUES.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != return.getClass().getName()
this.comparator.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.comparator():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.comparator():::EXIT
this.range == orig(this.range)
this.range.comparator == return
this.range.comparator.getClass().getName() == return.getClass().getName()
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == return
this.comparator.getClass().getName() == return.getClass().getName()
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
return == orig(this.range.comparator)
return == orig(this.comparator)
return.getClass().getName() == orig(this.range.comparator.getClass().getName())
return.getClass().getName() == orig(this.comparator.getClass().getName())
this.entrySet == null
return.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.BoundType.$VALUES.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != return.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != return.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.countOrZero(com.google.common.collect.TreeMultiset$Node):::ENTER
entry == null
===========================================================================
com.google.common.collect.TreeMultiset.countOrZero(com.google.common.collect.TreeMultiset$Node):::EXIT
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
return == 0
===========================================================================
com.google.common.collect.TreeMultiset.create(java.util.Comparator):::ENTER
comparator != null
comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != comparator.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.create(java.util.Comparator):::EXIT
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
return.range.comparator == return.comparator
return.range.comparator.getClass().getName() == return.comparator.getClass().getName()
return.range.lowerBoundType == return.range.upperBoundType
return.comparator == orig(comparator)
return.comparator.getClass().getName() == orig(comparator.getClass().getName())
return != null
return.range != null
return.range.hasLowerBound == false
return.range.lowerEndpoint == null
return.range.lowerBoundType has only one value
return.range.lowerBoundType != null
return.range.hasUpperBound == false
return.range.upperEndpoint == null
return.range.reverse == null
return.rootReference != null
return.rootReference.value == null
return.comparator != null
return.comparator.getClass().getName() == ch.thn.util.tree.core.AbstractGenericSetTreeNode$1.class
return.descendingMultiset == null
return.elementSet == null
return.entrySet == null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != return.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != return.comparator.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != return.comparator.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.distinctAggregate():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.distinctAggregate():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == return
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == return.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.distinctOrZero(com.google.common.collect.TreeMultiset$Node):::ENTER
node.key.getClass().getName() == node.right.key.getClass().getName()
node.size one of { 1, 2 }
node.distinct one of { 1, 2 }
node.key != null
node.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left == null
node.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.right.left == null
node.right.right == null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != node.key.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.distinctOrZero(com.google.common.collect.TreeMultiset$Node):::EXIT
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
node.size == orig(node.size)
node.distinct == return
node.distinct == orig(node.distinct)
node.key == orig(node.key)
node.key.getClass().getName() == node.right.key.getClass().getName()
node.key.getClass().getName() == orig(node.key.getClass().getName())
node.left == orig(node.left)
node.right == orig(node.right)
node.right.key == orig(node.right.key)
node.right.key.getClass().getName() == orig(node.right.key.getClass().getName())
node.right.left == orig(node.right.left)
node.right.right == orig(node.right.right)
node.size one of { 1, 2 }
node.distinct one of { 1, 2 }
node.key != null
node.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left == null
node.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.right.left == null
node.right.right == null
return one of { 0, 1, 2 }
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != node.key.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.entryIterator():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset.entryIterator():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
return.getClass().getName() == com.google.common.collect.TreeMultiset$2.class
===========================================================================
com.google.common.collect.TreeMultiset.iterator():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.iterator():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
return.getClass().getName() == com.google.common.collect.Multisets$MultisetIteratorImpl.class
===========================================================================
com.google.common.collect.TreeMultiset.iteratorInDirection(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::ENTER
this.rootReference.value == start.prefix.tip
start.sideExtension.getClass().getName() == com.google.common.collect.BstSide.LEFT.getClass().getName()
com.google.common.collect.BstSide.RIGHT == direction
com.google.common.collect.BstSide.RIGHT.getClass().getName() == direction.getClass().getName()
start.sideExtension.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
start.prevInOrder == null
start.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
start.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
start.tip.left == null
start.tip.right == null
start.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
start.prefix.prefix == null
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.TreeMultiset.iteratorInDirection(com.google.common.collect.BstInOrderPath, com.google.common.collect.BstSide):::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == start.prefix.tip
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
start.sideExtension == orig(start.sideExtension)
start.sideExtension.getClass().getName() == com.google.common.collect.BstSide.LEFT.getClass().getName()
start.sideExtension.getClass().getName() == orig(start.sideExtension.getClass().getName())
com.google.common.collect.BstSide.LEFT == orig(com.google.common.collect.BstSide.LEFT)
com.google.common.collect.BstSide.LEFT.getClass().getName() == orig(com.google.common.collect.BstSide.LEFT.getClass().getName())
com.google.common.collect.BstSide.RIGHT == orig(com.google.common.collect.BstSide.RIGHT)
com.google.common.collect.BstSide.RIGHT == orig(direction)
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(com.google.common.collect.BstSide.RIGHT.getClass().getName())
com.google.common.collect.BstSide.RIGHT.getClass().getName() == orig(direction.getClass().getName())
com.google.common.collect.BstSide.$VALUES == orig(com.google.common.collect.BstSide.$VALUES)
com.google.common.collect.BstSide.$VALUES.getClass().getName() == orig(com.google.common.collect.BstSide.$VALUES.getClass().getName())
com.google.common.collect.BstSide.$VALUES[] == orig(com.google.common.collect.BstSide.$VALUES[])
start.prevInOrder == orig(start.prevInOrder)
start.nextInOrder == orig(start.nextInOrder)
com.google.common.collect.BstInOrderPath.$assertionsDisabled == orig(com.google.common.collect.BstInOrderPath.$assertionsDisabled)
start.tip == orig(start.tip)
start.tip.key == orig(start.tip.key)
start.tip.key.getClass().getName() == orig(start.tip.key.getClass().getName())
start.tip.left == orig(start.tip.left)
start.tip.right == orig(start.tip.right)
start.prefix == orig(start.prefix)
start.prefix.getClass().getName() == orig(start.prefix.getClass().getName())
start.prefix.tip == orig(start.prefix.tip)
start.prefix.prefix == orig(start.prefix.prefix)
start.sideExtension.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.LEFT has only one value
com.google.common.collect.BstSide.LEFT.getClass().getName() == com.google.common.collect.BstSide$1.class
com.google.common.collect.BstSide.RIGHT has only one value
com.google.common.collect.BstSide.RIGHT.getClass().getName() == com.google.common.collect.BstSide$2.class
com.google.common.collect.BstSide.$VALUES has only one value
com.google.common.collect.BstSide.$VALUES.getClass().getName() == com.google.common.collect.BstSide[].class
com.google.common.collect.BstSide.$VALUES[] contains no nulls and has only one value, of length 2
com.google.common.collect.BstSide.$VALUES[].getClass().getName() == [null, null]
com.google.common.collect.BstSide.$VALUES[].getClass().getName() elements == null
start.prevInOrder == null
start.nextInOrder == null
com.google.common.collect.BstInOrderPath.$assertionsDisabled == false
start.tip.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
start.tip.left == null
start.tip.right == null
start.prefix.getClass().getName() == com.google.common.collect.BstInOrderPath.class
start.prefix.prefix == null
return.getClass().getName() == com.google.common.collect.TreeMultiset$2.class
size(com.google.common.collect.BstSide.$VALUES[]) == 2
===========================================================================
com.google.common.collect.TreeMultiset.mutate(java.lang.Object, com.google.common.collect.TreeMultiset$MultisetModifier):::ENTER
this == com.google.common.collect.TreeMultiset.this
this.range == com.google.common.collect.TreeMultiset.this.range
this.rootReference == com.google.common.collect.TreeMultiset.this.rootReference
this.comparator == com.google.common.collect.TreeMultiset.this.comparator
this.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.entrySet == null
e.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
modifier.getClass().getName() == com.google.common.collect.TreeMultiset$AddModifier.class
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
com.google.common.collect.BoundType.$VALUES.getClass().getName() != e.getClass().getName()
com.google.common.collect.BoundType.$VALUES.getClass().getName() != modifier.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != e.getClass().getName()
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != modifier.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != e.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != modifier.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != e.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != modifier.getClass().getName()
this.comparator.getClass().getName() != e.getClass().getName()
this.comparator.getClass().getName() != modifier.getClass().getName()
e.getClass().getName() != modifier.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.mutate(java.lang.Object, com.google.common.collect.TreeMultiset$MultisetModifier):::EXIT
this.range == com.google.common.collect.TreeMultiset.this.range
this.range == orig(this.range)
this.range == orig(com.google.common.collect.TreeMultiset.this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == com.google.common.collect.TreeMultiset.this.rootReference
this.rootReference == orig(this.rootReference)
this.rootReference == orig(com.google.common.collect.TreeMultiset.this.rootReference)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == com.google.common.collect.TreeMultiset.this.comparator
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator == orig(com.google.common.collect.TreeMultiset.this.comparator)
this.comparator.getClass().getName() == com.google.common.collect.TreeMultiset.this.comparator.getClass().getName()
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(com.google.common.collect.TreeMultiset.this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
com.google.common.collect.TreeMultiset.this == orig(this)
com.google.common.collect.TreeMultiset.this == orig(com.google.common.collect.TreeMultiset.this)
com.google.common.collect.TreeMultiset.this.descendingMultiset == orig(com.google.common.collect.TreeMultiset.this.descendingMultiset)
com.google.common.collect.TreeMultiset.this.elementSet == orig(com.google.common.collect.TreeMultiset.this.elementSet)
com.google.common.collect.TreeMultiset.this.entrySet == orig(com.google.common.collect.TreeMultiset.this.entrySet)
this.entrySet == null
com.google.common.collect.TreeMultiset.this.descendingMultiset == null
com.google.common.collect.TreeMultiset.this.elementSet == null
com.google.common.collect.TreeMultiset.this.entrySet == null
return == 0
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(e.getClass().getName())
com.google.common.collect.BoundType.$VALUES.getClass().getName() != orig(modifier.getClass().getName())
this.rootReference.value.getClass().getName() != orig(e.getClass().getName())
this.rootReference.value.getClass().getName() != orig(modifier.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != orig(e.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != orig(modifier.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != orig(e.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != orig(modifier.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != orig(e.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != orig(modifier.getClass().getName())
this.comparator.getClass().getName() != orig(e.getClass().getName())
this.comparator.getClass().getName() != orig(modifier.getClass().getName())
===========================================================================
com.google.common.collect.TreeMultiset.nodeFactory():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.nodeFactory():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == return
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == return.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.pathFactory():::ENTER
===========================================================================
com.google.common.collect.TreeMultiset.pathFactory():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet.getClass().getName() == orig(this.entrySet.getClass().getName())
return.getClass().getName() == com.google.common.collect.BstInOrderPath$1.class
===========================================================================
com.google.common.collect.TreeMultiset.size():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.size():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
return one of { 0, 1, 4 }
===========================================================================
com.google.common.collect.TreeMultiset.sizeAggregate():::ENTER
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.sizeAggregate():::EXIT
this.range == orig(this.range)
this.range.hasLowerBound == orig(this.range.hasLowerBound)
this.range.lowerEndpoint == orig(this.range.lowerEndpoint)
com.google.common.collect.BoundType.OPEN == orig(this.range.lowerBoundType)
com.google.common.collect.BoundType.OPEN == orig(com.google.common.collect.BoundType.OPEN)
com.google.common.collect.BoundType.OPEN == orig(this.range.upperBoundType)
com.google.common.collect.BoundType.CLOSED == orig(com.google.common.collect.BoundType.CLOSED)
com.google.common.collect.BoundType.$VALUES == orig(com.google.common.collect.BoundType.$VALUES)
com.google.common.collect.BoundType.$VALUES.getClass().getName() == orig(com.google.common.collect.BoundType.$VALUES.getClass().getName())
com.google.common.collect.BoundType.$VALUES[] == orig(com.google.common.collect.BoundType.$VALUES[])
this.range.hasUpperBound == orig(this.range.hasUpperBound)
this.range.upperEndpoint == orig(this.range.upperEndpoint)
this.range.reverse == orig(this.range.reverse)
this.rootReference == orig(this.rootReference)
this.rootReference.value == orig(this.rootReference.value)
this.rootReference.value.getClass().getName() == orig(this.rootReference.value.getClass().getName())
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == return
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == return.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
this.comparator == orig(this.range.comparator)
this.comparator == orig(this.comparator)
this.comparator.getClass().getName() == orig(this.range.comparator.getClass().getName())
this.comparator.getClass().getName() == orig(this.comparator.getClass().getName())
this.descendingMultiset == orig(this.descendingMultiset)
this.elementSet == orig(this.elementSet)
this.entrySet == orig(this.entrySet)
this.entrySet == null
===========================================================================
com.google.common.collect.TreeMultiset.sizeOrZero(com.google.common.collect.TreeMultiset$Node):::ENTER
node.key.getClass().getName() == node.left.key.getClass().getName()
node.key.getClass().getName() == node.right.key.getClass().getName()
node.left.key.getClass().getName() == node.right.key.getClass().getName()
node.size one of { 1, 2, 4 }
node.distinct one of { 1, 2, 4 }
node.key != null
node.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left.left == null
node.left.right == null
node.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.right.left == null
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != node.key.getClass().getName()
===========================================================================
com.google.common.collect.TreeMultiset.sizeOrZero(com.google.common.collect.TreeMultiset$Node):::EXIT
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE)
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE)
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() == orig(com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName())
com.google.common.collect.TreeMultiset.NODE_FACTORY == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY)
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() == orig(com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName())
node.size == return
node.size == orig(node.size)
node.distinct == orig(node.distinct)
node.key == orig(node.key)
node.key.getClass().getName() == node.left.key.getClass().getName()
node.key.getClass().getName() == node.right.key.getClass().getName()
node.key.getClass().getName() == orig(node.key.getClass().getName())
node.left == orig(node.left)
node.left.key == orig(node.left.key)
node.left.key.getClass().getName() == node.right.key.getClass().getName()
node.left.key.getClass().getName() == orig(node.left.key.getClass().getName())
node.left.left == orig(node.left.left)
node.left.right == orig(node.left.right)
node.right == orig(node.right)
node.right.key == orig(node.right.key)
node.right.key.getClass().getName() == orig(node.right.key.getClass().getName())
node.right.left == orig(node.right.left)
node.right.right == orig(node.right.right)
node.size one of { 1, 2, 4 }
node.distinct one of { 1, 2, 4 }
node.key != null
node.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.left.left == null
node.left.right == null
node.right.key.getClass().getName() == ch.thn.util.tree.SetTreeNode.class
node.right.left == null
return >= 0
com.google.common.collect.TreeMultiset.DISTINCT_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.SIZE_AGGREGATE.getClass().getName() != node.key.getClass().getName()
com.google.common.collect.TreeMultiset.NODE_FACTORY.getClass().getName() != node.key.getClass().getName()
===========================================================================
com.google.common.collect.UnmodifiableIterator:::OBJECT
===========================================================================
com.google.common.collect.UnmodifiableIterator.UnmodifiableIterator():::EXIT
===========================================================================
com.google.common.primitives.Ints:::CLASS
===========================================================================
com.google.common.primitives.Ints.checkedCast(long):::ENTER
value == 1
===========================================================================
com.google.common.primitives.Ints.checkedCast(long):::EXIT
return == orig(value)
return == 1
===========================================================================
com.google.common.primitives.Ints.saturatedCast(long):::ENTER
value one of { 0, 1, 4 }
===========================================================================
com.google.common.primitives.Ints.saturatedCast(long):::EXIT103
===========================================================================
com.google.common.primitives.Ints.saturatedCast(long):::EXIT
return == orig(value)
return one of { 0, 1, 4 }
Exiting Daikon.
