Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 33 times.  Unmatched entries are ignored!
Unterminated calls:
  Networking.Server.main(java.lang.String[]) : 1 invocation
  Networking.Server.Server() : 1 invocation
  Utils.ConsoleWriter$ConsoleWriterThread.run() : 1 invocation
  agent.Agent$AgentThread.run() : 27 invocations
  Utils.ConsoleWriter.sendingMessage() : 1 invocation
  Utils.ConsoleWriter.sendData(java.lang.String) : 1 invocation
  Networking.Server.initStreams() : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

missing variables in newEnterExitRel:
  parent = Networking.Server$1.(Networking.Server):::ENTER
  child = Networking.Server$1.(Networking.Server):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@30c50e6c
parent varinfos missing from parent_to_child_map:
   Networking.Server.this.fcs.queue[Networking.Server.this.numClients]
   Networking.Server.this.fcs.queue[Networking.Server.this.numClients-1]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.numClients]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.numClients-1]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.numClients]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.numClients-1]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.numClients]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.numClients-1]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.numClients]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.numClients-1]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.numClients]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.numClients-1]
   Networking.Server.this.fcs.queue[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcs.queue[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcs.queue[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcs.queue[Networking.Server.this.fcsAgent.partTypeCount-1]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcs.kitConfigs[Networking.Server.this.fcsAgent.partTypeCount-1]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcs.partTypes[Networking.Server.this.fcsAgent.partTypeCount-1]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcsAgent.nests[Networking.Server.this.fcsAgent.partTypeCount-1]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcsAgent.orders[Networking.Server.this.fcsAgent.partTypeCount-1]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.fcsAgent.numOrdersFinished]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.fcsAgent.numOrdersFinished-1]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.fcsAgent.partTypeCount]
   Networking.Server.this.fcsAgent.binsToAdd[Networking.Server.this.fcsAgent.partTypeCount-1]
rel.parent_to_child_map:
    Networking.Server.this => orig(Networking.Server.this)
    Networking.Server.this.ss => orig(Networking.Server.this.ss)
    Networking.Server.this.s => orig(Networking.Server.this.s)
    Networking.Server.this.factProdMngrReader => orig(Networking.Server.this.factProdMngrReader)
    Networking.Server.this.factProdMngrReader.server => orig(Networking.Server.this.factProdMngrReader.server)
    Networking.Server.this.factProdMngrReader.ois => orig(Networking.Server.this.factProdMngrReader.ois)
    Networking.Server.this.factProdMngrWriter => orig(Networking.Server.this.factProdMngrWriter)
    Networking.Server.this.factProdMngrWriter.getClass().getName() => orig(Networking.Server.this.factProdMngrWriter.getClass().getName())
    Networking.Server.this.partsMngrReader => orig(Networking.Server.this.partsMngrReader)
    Networking.Server.this.partsMngrReader.server => orig(Networking.Server.this.partsMngrReader.server)
    Networking.Server.this.partsMngrReader.ois => orig(Networking.Server.this.partsMngrReader.ois)
    Networking.Server.this.partsMngrWriter => orig(Networking.Server.this.partsMngrWriter)
    Networking.Server.this.partsMngrWriter.getClass().getName() => orig(Networking.Server.this.partsMngrWriter.getClass().getName())
    Networking.Server.this.kitMngrReader => orig(Networking.Server.this.kitMngrReader)
    Networking.Server.this.kitMngrReader.server => orig(Networking.Server.this.kitMngrReader.server)
    Networking.Server.this.kitMngrReader.ois => orig(Networking.Server.this.kitMngrReader.ois)
    Networking.Server.this.kitMngrWriter => orig(Networking.Server.this.kitMngrWriter)
    Networking.Server.this.kitMngrWriter.getClass().getName() => orig(Networking.Server.this.kitMngrWriter.getClass().getName())
    Networking.Server.this.gantryRobotMngrReader => orig(Networking.Server.this.gantryRobotMngrReader)
    Networking.Server.this.gantryRobotMngrReader.server => orig(Networking.Server.this.gantryRobotMngrReader.server)
    Networking.Server.this.gantryRobotMngrReader.ois => orig(Networking.Server.this.gantryRobotMngrReader.ois)
    Networking.Server.this.gantryRobotMngrWriter => orig(Networking.Server.this.gantryRobotMngrWriter)
    Networking.Server.this.gantryRobotMngrWriter.getClass().getName() => orig(Networking.Server.this.gantryRobotMngrWriter.getClass().getName())
    Networking.Server.this.kitAssemblyMngrReader => orig(Networking.Server.this.kitAssemblyMngrReader)
    Networking.Server.this.kitAssemblyMngrReader.server => orig(Networking.Server.this.kitAssemblyMngrReader.server)
    Networking.Server.this.kitAssemblyMngrReader.ois => orig(Networking.Server.this.kitAssemblyMngrReader.ois)
    Networking.Server.this.kitAssemblyMngrWriter => orig(Networking.Server.this.kitAssemblyMngrWriter)
    Networking.Server.this.kitAssemblyMngrWriter.getClass().getName() => orig(Networking.Server.this.kitAssemblyMngrWriter.getClass().getName())
    Networking.Server.this.laneMngrReader => orig(Networking.Server.this.laneMngrReader)
    Networking.Server.this.laneMngrReader.server => orig(Networking.Server.this.laneMngrReader.server)
    Networking.Server.this.laneMngrReader.ois => orig(Networking.Server.this.laneMngrReader.ois)
    Networking.Server.this.laneMngrWriter => orig(Networking.Server.this.laneMngrWriter)
    Networking.Server.this.laneMngrWriter.getClass().getName() => orig(Networking.Server.this.laneMngrWriter.getClass().getName())
    Networking.Server.this.kitRobotMngrReader => orig(Networking.Server.this.kitRobotMngrReader)
    Networking.Server.this.kitRobotMngrReader.server => orig(Networking.Server.this.kitRobotMngrReader.server)
    Networking.Server.this.kitRobotMngrReader.ois => orig(Networking.Server.this.kitRobotMngrReader.ois)
    Networking.Server.this.kitRobotMngrWriter => orig(Networking.Server.this.kitRobotMngrWriter)
    Networking.Server.this.kitRobotMngrWriter.getClass().getName() => orig(Networking.Server.this.kitRobotMngrWriter.getClass().getName())
    Networking.Server.this.partsRobotMngrReader => orig(Networking.Server.this.partsRobotMngrReader)
    Networking.Server.this.partsRobotMngrReader.server => orig(Networking.Server.this.partsRobotMngrReader.server)
    Networking.Server.this.partsRobotMngrReader.ois => orig(Networking.Server.this.partsRobotMngrReader.ois)
    Networking.Server.this.partsRobotMngrWriter => orig(Networking.Server.this.partsRobotMngrWriter)
    Networking.Server.this.partsRobotMngrWriter.getClass().getName() => orig(Networking.Server.this.partsRobotMngrWriter.getClass().getName())
    Networking.Server.this.numClients => orig(Networking.Server.this.numClients)
    Networking.Server.this.devices => orig(Networking.Server.this.devices)
    Networking.Server.this.agents => orig(Networking.Server.this.agents)
    Networking.Server.this.fcs => orig(Networking.Server.this.fcs)
    Networking.Server.this.fcs.queue => orig(Networking.Server.this.fcs.queue)
    Networking.Server.this.fcs.queue[..] => orig(Networking.Server.this.fcs.queue[..])
    Networking.Server.this.fcs.queue[..].getClass().getName() => orig(Networking.Server.this.fcs.queue[..].getClass().getName())
    Networking.Server.this.fcs.kitConfigs => orig(Networking.Server.this.fcs.kitConfigs)
    Networking.Server.this.fcs.kitConfigs[..] => orig(Networking.Server.this.fcs.kitConfigs[..])
    Networking.Server.this.fcs.kitConfigs[..].getClass().getName() => orig(Networking.Server.this.fcs.kitConfigs[..].getClass().getName())
    Networking.Server.this.fcs.partTypes => orig(Networking.Server.this.fcs.partTypes)
    Networking.Server.this.fcs.partTypes[..] => orig(Networking.Server.this.fcs.partTypes[..])
    Networking.Server.this.fcs.partTypes[..].getClass().getName() => orig(Networking.Server.this.fcs.partTypes[..].getClass().getName())
    Networking.Server.this.fcs.agent => orig(Networking.Server.this.fcs.agent)
    Networking.Server.this.fcs.server => orig(Networking.Server.this.fcs.server)
    Networking.Server.this.fcs.productionStarted => orig(Networking.Server.this.fcs.productionStarted)
    Networking.Server.this.fcs.completed => orig(Networking.Server.this.fcs.completed)
    Networking.Server.this.fcs.completed.getClass().getName() => orig(Networking.Server.this.fcs.completed.getClass().getName())
    Networking.Server.this.fcsAgent => orig(Networking.Server.this.fcsAgent)
    Networking.Server.this.fcsAgent.stand => orig(Networking.Server.this.fcsAgent.stand)
    Networking.Server.this.fcsAgent.stand.getClass().getName() => orig(Networking.Server.this.fcsAgent.stand.getClass().getName())
    Networking.Server.this.fcsAgent.partsRobot => orig(Networking.Server.this.fcsAgent.partsRobot)
    Networking.Server.this.fcsAgent.partsRobot.getClass().getName() => orig(Networking.Server.this.fcsAgent.partsRobot.getClass().getName())
    Networking.Server.this.fcsAgent.gantry => orig(Networking.Server.this.fcsAgent.gantry)
    Networking.Server.this.fcsAgent.gantry.getClass().getName() => orig(Networking.Server.this.fcsAgent.gantry.getClass().getName())
    Networking.Server.this.fcsAgent.nests => orig(Networking.Server.this.fcsAgent.nests)
    Networking.Server.this.fcsAgent.nests[..] => orig(Networking.Server.this.fcsAgent.nests[..])
    Networking.Server.this.fcsAgent.nests[..].getClass().getName() => orig(Networking.Server.this.fcsAgent.nests[..].getClass().getName())
    Networking.Server.this.fcsAgent.conveyor => orig(Networking.Server.this.fcsAgent.conveyor)
    Networking.Server.this.fcsAgent.conveyor.getClass().getName() => orig(Networking.Server.this.fcsAgent.conveyor.getClass().getName())
    Networking.Server.this.fcsAgent.state => orig(Networking.Server.this.fcsAgent.state)
    Networking.Server.this.fcsAgent.orders => orig(Networking.Server.this.fcsAgent.orders)
    Networking.Server.this.fcsAgent.orders[..] => orig(Networking.Server.this.fcsAgent.orders[..])
    Networking.Server.this.fcsAgent.orders[..].getClass().getName() => orig(Networking.Server.this.fcsAgent.orders[..].getClass().getName())
    Networking.Server.this.fcsAgent.orders.getClass().getName() => orig(Networking.Server.this.fcsAgent.orders.getClass().getName())
    Networking.Server.this.fcsAgent.numOrdersFinished => orig(Networking.Server.this.fcsAgent.numOrdersFinished)
    Networking.Server.this.fcsAgent.camera => orig(Networking.Server.this.fcsAgent.camera)
    Networking.Server.this.fcsAgent.camera.getClass().getName() => orig(Networking.Server.this.fcsAgent.camera.getClass().getName())
    Networking.Server.this.fcsAgent.partTypeCount => orig(Networking.Server.this.fcsAgent.partTypeCount)
    Networking.Server.this.fcsAgent.fcs => orig(Networking.Server.this.fcsAgent.fcs)
    Networking.Server.this.fcsAgent.name => orig(Networking.Server.this.fcsAgent.name)
    Networking.Server.this.fcsAgent.name.toString => orig(Networking.Server.this.fcsAgent.name.toString)
    Networking.Server.this.fcsAgent.binsSet => orig(Networking.Server.this.fcsAgent.binsSet)
    Networking.Server.this.fcsAgent.binsToAdd => orig(Networking.Server.this.fcsAgent.binsToAdd)
    Networking.Server.this.fcsAgent.binsToAdd[..] => orig(Networking.Server.this.fcsAgent.binsToAdd[..])
    Networking.Server.this.fcsAgent.binsToAdd[..].getClass().getName() => orig(Networking.Server.this.fcsAgent.binsToAdd[..].getClass().getName())
    Networking.Server.this.fcsAgent.stateChange => orig(Networking.Server.this.fcsAgent.stateChange)
    Networking.Server.this.fcsAgent.agentThread => orig(Networking.Server.this.fcsAgent.agentThread)
    Networking.Server.this.fcsAgent.console => orig(Networking.Server.this.fcsAgent.console)
    Networking.Server.this.console => orig(Networking.Server.this.console)
    Utils.ConsoleWriter.consoleID => orig(Utils.ConsoleWriter.consoleID)
    Utils.ConsoleWriter.consoleID.toString => orig(Utils.ConsoleWriter.consoleID.toString)
    Networking.Server.this.console.name => orig(Networking.Server.this.console.name)
    Networking.Server.this.console.name.toString => orig(Networking.Server.this.console.name.toString)
    Networking.Server.this.console.stateChange => orig(Networking.Server.this.console.stateChange)
    Networking.Server.this.console.consoleWriterThread => orig(Networking.Server.this.console.consoleWriterThread)
    Networking.Server.this.console.messageQueue => orig(Networking.Server.this.console.messageQueue)
    Networking.Server.this.console.messageQueue.getClass().getName() => orig(Networking.Server.this.console.messageQueue.getClass().getName())
    size(Networking.Server.this.fcs.queue[..]) => orig(size(Networking.Server.this.fcs.queue[..]))
    size(Networking.Server.this.fcs.queue[..])-1 => orig(size(Networking.Server.this.fcs.queue[..]))-1
    size(Networking.Server.this.fcs.kitConfigs[..]) => orig(size(Networking.Server.this.fcs.kitConfigs[..]))
    size(Networking.Server.this.fcs.kitConfigs[..])-1 => orig(size(Networking.Server.this.fcs.kitConfigs[..]))-1
    size(Networking.Server.this.fcs.partTypes[..]) => orig(size(Networking.Server.this.fcs.partTypes[..]))
    size(Networking.Server.this.fcs.partTypes[..])-1 => orig(size(Networking.Server.this.fcs.partTypes[..]))-1
    size(Networking.Server.this.fcsAgent.nests[..]) => orig(size(Networking.Server.this.fcsAgent.nests[..]))
    size(Networking.Server.this.fcsAgent.nests[..])-1 => orig(size(Networking.Server.this.fcsAgent.nests[..]))-1
    size(Networking.Server.this.fcsAgent.orders[..]) => orig(size(Networking.Server.this.fcsAgent.orders[..]))
    size(Networking.Server.this.fcsAgent.orders[..])-1 => orig(size(Networking.Server.this.fcsAgent.orders[..]))-1
    size(Networking.Server.this.fcsAgent.binsToAdd[..]) => orig(size(Networking.Server.this.fcsAgent.binsToAdd[..]))
    size(Networking.Server.this.fcsAgent.binsToAdd[..])-1 => orig(size(Networking.Server.this.fcsAgent.binsToAdd[..]))-1
child.var_infos:
    this
    Networking.Server.this
    Networking.Server.this.ss
    Networking.Server.this.s
    Networking.Server.this.factProdMngrReader
    Networking.Server.this.factProdMngrReader.server
    Networking.Server.this.factProdMngrReader.ois
    Networking.Server.this.factProdMngrWriter
    Networking.Server.this.factProdMngrWriter.getClass().getName()
    Networking.Server.this.partsMngrReader
    Networking.Server.this.partsMngrReader.server
    Networking.Server.this.partsMngrReader.ois
    Networking.Server.this.partsMngrWriter
    Networking.Server.this.partsMngrWriter.getClass().getName()
    Networking.Server.this.kitMngrReader
    Networking.Server.this.kitMngrReader.server
    Networking.Server.this.kitMngrReader.ois
    Networking.Server.this.kitMngrWriter
    Networking.Server.this.kitMngrWriter.getClass().getName()
    Networking.Server.this.gantryRobotMngrReader
    Networking.Server.this.gantryRobotMngrReader.server
    Networking.Server.this.gantryRobotMngrReader.ois
    Networking.Server.this.gantryRobotMngrWriter
    Networking.Server.this.gantryRobotMngrWriter.getClass().getName()
    Networking.Server.this.kitAssemblyMngrReader
    Networking.Server.this.kitAssemblyMngrReader.server
    Networking.Server.this.kitAssemblyMngrReader.ois
    Networking.Server.this.kitAssemblyMngrWriter
    Networking.Server.this.kitAssemblyMngrWriter.getClass().getName()
    Networking.Server.this.laneMngrReader
    Networking.Server.this.laneMngrReader.server
    Networking.Server.this.laneMngrReader.ois
    Networking.Server.this.laneMngrWriter
    Networking.Server.this.laneMngrWriter.getClass().getName()
    Networking.Server.this.kitRobotMngrReader
    Networking.Server.this.kitRobotMngrReader.server
    Networking.Server.this.kitRobotMngrReader.ois
    Networking.Server.this.kitRobotMngrWriter
    Networking.Server.this.kitRobotMngrWriter.getClass().getName()
    Networking.Server.this.partsRobotMngrReader
    Networking.Server.this.partsRobotMngrReader.server
    Networking.Server.this.partsRobotMngrReader.ois
    Networking.Server.this.partsRobotMngrWriter
    Networking.Server.this.partsRobotMngrWriter.getClass().getName()
    Networking.Server.this.numClients
    Networking.Server.this.devices
    Networking.Server.this.agents
    Networking.Server.this.fcs
    Networking.Server.this.fcs.queue
    Networking.Server.this.fcs.queue[..]
    Networking.Server.this.fcs.queue[..].getClass().getName()
    Networking.Server.this.fcs.kitConfigs
    Networking.Server.this.fcs.kitConfigs[..]
    Networking.Server.this.fcs.kitConfigs[..].getClass().getName()
    Networking.Server.this.fcs.partTypes
    Networking.Server.this.fcs.partTypes[..]
    Networking.Server.this.fcs.partTypes[..].getClass().getName()
    Networking.Server.this.fcs.agent
    Networking.Server.this.fcs.server
    Networking.Server.this.fcs.productionStarted
    Networking.Server.this.fcs.completed
    Networking.Server.this.fcs.completed.getClass().getName()
    Networking.Server.this.fcsAgent
    Networking.Server.this.fcsAgent.stand
    Networking.Server.this.fcsAgent.stand.getClass().getName()
    Networking.Server.this.fcsAgent.partsRobot
    Networking.Server.this.fcsAgent.partsRobot.getClass().getName()
    Networking.Server.this.fcsAgent.gantry
    Networking.Server.this.fcsAgent.gantry.getClass().getName()
    Networking.Server.this.fcsAgent.nests
    Networking.Server.this.fcsAgent.nests[..]
    Networking.Server.this.fcsAgent.nests[..].getClass().getName()
    Networking.Server.this.fcsAgent.conveyor
    Networking.Server.this.fcsAgent.conveyor.getClass().getName()
    Networking.Server.this.fcsAgent.state
    Networking.Server.this.fcsAgent.orders
    Networking.Server.this.fcsAgent.orders[..]
    Networking.Server.this.fcsAgent.orders[..].getClass().getName()
    Networking.Server.this.fcsAgent.orders.getClass().getName()
    Networking.Server.this.fcsAgent.numOrdersFinished
    Networking.Server.this.fcsAgent.camera
    Networking.Server.this.fcsAgent.camera.getClass().getName()
    Networking.Server.this.fcsAgent.partTypeCount
    Networking.Server.this.fcsAgent.fcs
    Networking.Server.this.fcsAgent.name
    Networking.Server.this.fcsAgent.name.toString
    Networking.Server.this.fcsAgent.binsSet
    Networking.Server.this.fcsAgent.binsToAdd
    Networking.Server.this.fcsAgent.binsToAdd[..]
    Networking.Server.this.fcsAgent.binsToAdd[..].getClass().getName()
    Networking.Server.this.fcsAgent.stateChange
    Networking.Server.this.fcsAgent.agentThread
    Networking.Server.this.fcsAgent.console
    Networking.Server.this.console
    Utils.ConsoleWriter.consoleID
    Utils.ConsoleWriter.consoleID.toString
    Networking.Server.this.console.name
    Networking.Server.this.console.name.toString
    Networking.Server.this.console.stateChange
    Networking.Server.this.console.consoleWriterThread
    Networking.Server.this.console.messageQueue
    Networking.Server.this.console.messageQueue.getClass().getName()
    orig(Networking.Server.this)
    orig(Networking.Server.this.ss)
    orig(Networking.Server.this.s)
    orig(Networking.Server.this.factProdMngrReader)
    orig(Networking.Server.this.factProdMngrReader.server)
    orig(Networking.Server.this.factProdMngrReader.ois)
    orig(Networking.Server.this.factProdMngrWriter)
    orig(Networking.Server.this.factProdMngrWriter.getClass().getName())
    orig(Networking.Server.this.partsMngrReader)
    orig(Networking.Server.this.partsMngrReader.server)
    orig(Networking.Server.this.partsMngrReader.ois)
    orig(Networking.Server.this.partsMngrWriter)
    orig(Networking.Server.this.partsMngrWriter.getClass().getName())
    orig(Networking.Server.this.kitMngrReader)
    orig(Networking.Server.this.kitMngrReader.server)
    orig(Networking.Server.this.kitMngrReader.ois)
    orig(Networking.Server.this.kitMngrWriter)
    orig(Networking.Server.this.kitMngrWriter.getClass().getName())
    orig(Networking.Server.this.gantryRobotMngrReader)
    orig(Networking.Server.this.gantryRobotMngrReader.server)
    orig(Networking.Server.this.gantryRobotMngrReader.ois)
    orig(Networking.Server.this.gantryRobotMngrWriter)
    orig(Networking.Server.this.gantryRobotMngrWriter.getClass().getName())
    orig(Networking.Server.this.kitAssemblyMngrReader)
    orig(Networking.Server.this.kitAssemblyMngrReader.server)
    orig(Networking.Server.this.kitAssemblyMngrReader.ois)
    orig(Networking.Server.this.kitAssemblyMngrWriter)
    orig(Networking.Server.this.kitAssemblyMngrWriter.getClass().getName())
    orig(Networking.Server.this.laneMngrReader)
    orig(Networking.Server.this.laneMngrReader.server)
    orig(Networking.Server.this.laneMngrReader.ois)
    orig(Networking.Server.this.laneMngrWriter)
    orig(Networking.Server.this.laneMngrWriter.getClass().getName())
    orig(Networking.Server.this.kitRobotMngrReader)
    orig(Networking.Server.this.kitRobotMngrReader.server)
    orig(Networking.Server.this.kitRobotMngrReader.ois)
    orig(Networking.Server.this.kitRobotMngrWriter)
    orig(Networking.Server.this.kitRobotMngrWriter.getClass().getName())
    orig(Networking.Server.this.partsRobotMngrReader)
    orig(Networking.Server.this.partsRobotMngrReader.server)
    orig(Networking.Server.this.partsRobotMngrReader.ois)
    orig(Networking.Server.this.partsRobotMngrWriter)
    orig(Networking.Server.this.partsRobotMngrWriter.getClass().getName())
    orig(Networking.Server.this.numClients)
    orig(Networking.Server.this.devices)
    orig(Networking.Server.this.agents)
    orig(Networking.Server.this.fcs)
    orig(Networking.Server.this.fcs.queue)
    orig(Networking.Server.this.fcs.queue[..])
    orig(Networking.Server.this.fcs.queue[..].getClass().getName())
    orig(Networking.Server.this.fcs.kitConfigs)
    orig(Networking.Server.this.fcs.kitConfigs[..])
    orig(Networking.Server.this.fcs.kitConfigs[..].getClass().getName())
    orig(Networking.Server.this.fcs.partTypes)
    orig(Networking.Server.this.fcs.partTypes[..])
    orig(Networking.Server.this.fcs.partTypes[..].getClass().getName())
    orig(Networking.Server.this.fcs.agent)
    orig(Networking.Server.this.fcs.server)
    orig(Networking.Server.this.fcs.productionStarted)
    orig(Networking.Server.this.fcs.completed)
    orig(Networking.Server.this.fcs.completed.getClass().getName())
    orig(Networking.Server.this.fcsAgent)
    orig(Networking.Server.this.fcsAgent.stand)
    orig(Networking.Server.this.fcsAgent.stand.getClass().getName())
    orig(Networking.Server.this.fcsAgent.partsRobot)
    orig(Networking.Server.this.fcsAgent.partsRobot.getClass().getName())
    orig(Networking.Server.this.fcsAgent.gantry)
    orig(Networking.Server.this.fcsAgent.gantry.getClass().getName())
    orig(Networking.Server.this.fcsAgent.nests)
    orig(Networking.Server.this.fcsAgent.nests[..])
    orig(Networking.Server.this.fcsAgent.nests[..].getClass().getName())
    orig(Networking.Server.this.fcsAgent.conveyor)
    orig(Networking.Server.this.fcsAgent.conveyor.getClass().getName())
    orig(Networking.Server.this.fcsAgent.state)
    orig(Networking.Server.this.fcsAgent.orders)
    orig(Networking.Server.this.fcsAgent.orders[..])
    orig(Networking.Server.this.fcsAgent.orders[..].getClass().getName())
    orig(Networking.Server.this.fcsAgent.orders.getClass().getName())
    orig(Networking.Server.this.fcsAgent.numOrdersFinished)
    orig(Networking.Server.this.fcsAgent.camera)
    orig(Networking.Server.this.fcsAgent.camera.getClass().getName())
    orig(Networking.Server.this.fcsAgent.partTypeCount)
    orig(Networking.Server.this.fcsAgent.fcs)
    orig(Networking.Server.this.fcsAgent.name)
    orig(Networking.Server.this.fcsAgent.name.toString)
    orig(Networking.Server.this.fcsAgent.binsSet)
    orig(Networking.Server.this.fcsAgent.binsToAdd)
    orig(Networking.Server.this.fcsAgent.binsToAdd[..])
    orig(Networking.Server.this.fcsAgent.binsToAdd[..].getClass().getName())
    orig(Networking.Server.this.fcsAgent.stateChange)
    orig(Networking.Server.this.fcsAgent.agentThread)
    orig(Networking.Server.this.fcsAgent.console)
    orig(Networking.Server.this.console)
    orig(Utils.ConsoleWriter.consoleID)
    orig(Utils.ConsoleWriter.consoleID.toString)
    orig(Networking.Server.this.console.name)
    orig(Networking.Server.this.console.name.toString)
    orig(Networking.Server.this.console.stateChange)
    orig(Networking.Server.this.console.consoleWriterThread)
    orig(Networking.Server.this.console.messageQueue)
    orig(Networking.Server.this.console.messageQueue.getClass().getName())
    size(Networking.Server.this.fcs.queue[..])
    size(Networking.Server.this.fcs.queue[..])-1
    size(Networking.Server.this.fcs.kitConfigs[..])
    size(Networking.Server.this.fcs.kitConfigs[..])-1
    size(Networking.Server.this.fcs.partTypes[..])
    size(Networking.Server.this.fcs.partTypes[..])-1
    size(Networking.Server.this.fcsAgent.nests[..])
    size(Networking.Server.this.fcsAgent.nests[..])-1
    size(Networking.Server.this.fcsAgent.orders[..])
    size(Networking.Server.this.fcsAgent.orders[..])-1
    size(Networking.Server.this.fcsAgent.binsToAdd[..])
    size(Networking.Server.this.fcsAgent.binsToAdd[..])-1
    orig(size(Networking.Server.this.fcs.queue[..]))
    orig(size(Networking.Server.this.fcs.queue[..]))-1
    orig(size(Networking.Server.this.fcs.kitConfigs[..]))
    orig(size(Networking.Server.this.fcs.kitConfigs[..]))-1
    orig(size(Networking.Server.this.fcs.partTypes[..]))
    orig(size(Networking.Server.this.fcs.partTypes[..]))-1
    orig(size(Networking.Server.this.fcsAgent.nests[..]))
    orig(size(Networking.Server.this.fcsAgent.nests[..]))-1
    orig(size(Networking.Server.this.fcsAgent.orders[..]))
    orig(size(Networking.Server.this.fcsAgent.orders[..]))-1
    orig(size(Networking.Server.this.fcsAgent.binsToAdd[..]))
    orig(size(Networking.Server.this.fcsAgent.binsToAdd[..]))-1
End of diagnostics for newEnterExitRel(Networking.Server$1.(Networking.Server):::ENTER, Networking.Server$1.(Networking.Server):::EXIT)
missing variables in newEnterExitRel:
  parent = agent.CameraAgent$1.(agent.CameraAgent):::ENTER
  child = agent.CameraAgent$1.(agent.CameraAgent):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@5644801
parent varinfos missing from parent_to_child_map:
   agent.CameraAgent.this.nests[agent.CameraAgent.this.kitRobot.numKitsToMake]
   agent.CameraAgent.this.nests[agent.CameraAgent.this.kitRobot.numKitsToMake-1]
   agent.CameraAgent.this.nests[agent.CameraAgent.this.kitRobot.numKitsRequested]
   agent.CameraAgent.this.nests[agent.CameraAgent.this.kitRobot.numKitsRequested-1]
   agent.CameraAgent.this.nests[agent.CameraAgent.this.partRobot.kitsNum]
   agent.CameraAgent.this.nests[agent.CameraAgent.this.partRobot.kitsNum-1]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.kitRobot.numKitsToMake]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.kitRobot.numKitsToMake-1]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.kitRobot.numKitsRequested]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.kitRobot.numKitsRequested-1]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.partRobot.kitsNum]
   agent.CameraAgent.this.kitRobot.myKits[agent.CameraAgent.this.partRobot.kitsNum-1]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.kitRobot.numKitsToMake]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.kitRobot.numKitsToMake-1]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.kitRobot.numKitsToMake]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.kitRobot.numKitsToMake-1]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.kitRobot.numKitsToMake]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.kitRobot.numKitsToMake-1]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.kitRobot.numKitsRequested]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.kitRobot.numKitsRequested-1]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.kitRobot.numKitsRequested]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.kitRobot.numKitsRequested-1]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.kitRobot.numKitsRequested]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.kitRobot.numKitsRequested-1]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.partRobot.kitsNum]
   agent.CameraAgent.this.partRobot.MyKits[agent.CameraAgent.this.partRobot.kitsNum-1]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.partRobot.kitsNum]
   agent.CameraAgent.this.partRobot.Arms[agent.CameraAgent.this.partRobot.kitsNum-1]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.partRobot.kitsNum]
   agent.CameraAgent.this.partRobot.KitsOnStand[agent.CameraAgent.this.partRobot.kitsNum-1]
rel.parent_to_child_map:
    agent.CameraAgent.this => orig(agent.CameraAgent.this)
    agent.CameraAgent.this.name => orig(agent.CameraAgent.this.name)
    agent.CameraAgent.this.name.toString => orig(agent.CameraAgent.this.name.toString)
    agent.CameraAgent.this.nests => orig(agent.CameraAgent.this.nests)
    agent.CameraAgent.this.nests[..] => orig(agent.CameraAgent.this.nests[..])
    agent.CameraAgent.this.nests[..].getClass().getName() => orig(agent.CameraAgent.this.nests[..].getClass().getName())
    agent.CameraAgent.this.nests.getClass().getName() => orig(agent.CameraAgent.this.nests.getClass().getName())
    agent.CameraAgent.this.mk => orig(agent.CameraAgent.this.mk)
    agent.CameraAgent.this.mk.kit => orig(agent.CameraAgent.this.mk.kit)
    agent.CameraAgent.this.mk.ks => orig(agent.CameraAgent.this.mk.ks)
    agent.CameraAgent.this.mk.kitDone => orig(agent.CameraAgent.this.mk.kitDone)
    agent.CameraAgent.this.guiCamera => orig(agent.CameraAgent.this.guiCamera)
    agent.CameraAgent.this.guiCamera.getClass().getName() => orig(agent.CameraAgent.this.guiCamera.getClass().getName())
    agent.CameraAgent.this.timer => orig(agent.CameraAgent.this.timer)
    agent.CameraAgent.this.kitRobot => orig(agent.CameraAgent.this.kitRobot)
    agent.CameraAgent.this.kitRobot.myKits => orig(agent.CameraAgent.this.kitRobot.myKits)
    agent.CameraAgent.this.kitRobot.myKits[..] => orig(agent.CameraAgent.this.kitRobot.myKits[..])
    agent.CameraAgent.this.kitRobot.myKits[..].getClass().getName() => orig(agent.CameraAgent.this.kitRobot.myKits[..].getClass().getName())
    agent.CameraAgent.this.kitRobot.myKits.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.myKits.getClass().getName())
    agent.CameraAgent.this.kitRobot.standPositions => orig(agent.CameraAgent.this.kitRobot.standPositions)
    agent.CameraAgent.this.kitRobot.standPositions.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.standPositions.getClass().getName())
    agent.CameraAgent.this.kitRobot.kitWaitingOnConveyor => orig(agent.CameraAgent.this.kitRobot.kitWaitingOnConveyor)
    agent.CameraAgent.this.kitRobot.kitRequested => orig(agent.CameraAgent.this.kitRobot.kitRequested)
    agent.CameraAgent.this.kitRobot.numKitsToMake => orig(agent.CameraAgent.this.kitRobot.numKitsToMake)
    agent.CameraAgent.this.kitRobot.numKitsRequested => orig(agent.CameraAgent.this.kitRobot.numKitsRequested)
    agent.CameraAgent.this.kitRobot.animation => orig(agent.CameraAgent.this.kitRobot.animation)
    agent.CameraAgent.this.kitRobot.stand => orig(agent.CameraAgent.this.kitRobot.stand)
    agent.CameraAgent.this.kitRobot.stand.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.stand.getClass().getName())
    agent.CameraAgent.this.kitRobot.conveyor => orig(agent.CameraAgent.this.kitRobot.conveyor)
    agent.CameraAgent.this.kitRobot.conveyor.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.conveyor.getClass().getName())
    agent.CameraAgent.this.kitRobot.camera => orig(agent.CameraAgent.this.kitRobot.camera)
    agent.CameraAgent.this.kitRobot.camera.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.camera.getClass().getName())
    agent.CameraAgent.this.kitRobot.kitrobotGraphics => orig(agent.CameraAgent.this.kitRobot.kitrobotGraphics)
    agent.CameraAgent.this.kitRobot.kitrobotGraphics.getClass().getName() => orig(agent.CameraAgent.this.kitRobot.kitrobotGraphics.getClass().getName())
    agent.CameraAgent.this.kitRobot.mockgraphics => orig(agent.CameraAgent.this.kitRobot.mockgraphics)
    agent.CameraAgent.this.kitRobot.state => orig(agent.CameraAgent.this.kitRobot.state)
    agent.CameraAgent.this.kitRobot.name => orig(agent.CameraAgent.this.kitRobot.name)
    agent.CameraAgent.this.kitRobot.name.toString => orig(agent.CameraAgent.this.kitRobot.name.toString)
    agent.CameraAgent.this.kitRobot.stateChange => orig(agent.CameraAgent.this.kitRobot.stateChange)
    agent.CameraAgent.this.kitRobot.agentThread => orig(agent.CameraAgent.this.kitRobot.agentThread)
    agent.CameraAgent.this.kitRobot.console => orig(agent.CameraAgent.this.kitRobot.console)
    agent.CameraAgent.this.partRobot => orig(agent.CameraAgent.this.partRobot)
    agent.CameraAgent.this.partRobot.name => orig(agent.CameraAgent.this.partRobot.name)
    agent.CameraAgent.this.partRobot.name.toString => orig(agent.CameraAgent.this.partRobot.name.toString)
    agent.CameraAgent.this.partRobot.Kitconfig => orig(agent.CameraAgent.this.partRobot.Kitconfig)
    agent.CameraAgent.this.partRobot.MyKits => orig(agent.CameraAgent.this.partRobot.MyKits)
    agent.CameraAgent.this.partRobot.MyKits[..] => orig(agent.CameraAgent.this.partRobot.MyKits[..])
    agent.CameraAgent.this.partRobot.MyKits[..].getClass().getName() => orig(agent.CameraAgent.this.partRobot.MyKits[..].getClass().getName())
    agent.CameraAgent.this.partRobot.MyKits.getClass().getName() => orig(agent.CameraAgent.this.partRobot.MyKits.getClass().getName())
    agent.CameraAgent.this.partRobot.GoodParts => orig(agent.CameraAgent.this.partRobot.GoodParts)
    agent.CameraAgent.this.partRobot.GoodParts.getClass().getName() => orig(agent.CameraAgent.this.partRobot.GoodParts.getClass().getName())
    agent.CameraAgent.this.partRobot.Arms => orig(agent.CameraAgent.this.partRobot.Arms)
    agent.CameraAgent.this.partRobot.Arms[..] => orig(agent.CameraAgent.this.partRobot.Arms[..])
    agent.CameraAgent.this.partRobot.Arms[..].getClass().getName() => orig(agent.CameraAgent.this.partRobot.Arms[..].getClass().getName())
    agent.CameraAgent.this.partRobot.Arms.getClass().getName() => orig(agent.CameraAgent.this.partRobot.Arms.getClass().getName())
    agent.CameraAgent.this.partRobot.time => orig(agent.CameraAgent.this.partRobot.time)
    agent.CameraAgent.this.partRobot.kitsNum => orig(agent.CameraAgent.this.partRobot.kitsNum)
    agent.CameraAgent.this.partRobot.timer => orig(agent.CameraAgent.this.partRobot.timer)
    agent.CameraAgent.this.partRobot.KitsOnStand => orig(agent.CameraAgent.this.partRobot.KitsOnStand)
    agent.CameraAgent.this.partRobot.KitsOnStand[..] => orig(agent.CameraAgent.this.partRobot.KitsOnStand[..])
    agent.CameraAgent.this.partRobot.KitsOnStand[..].getClass().getName() => orig(agent.CameraAgent.this.partRobot.KitsOnStand[..].getClass().getName())
    agent.CameraAgent.this.partRobot.KitsOnStand.getClass().getName() => orig(agent.CameraAgent.this.partRobot.KitsOnStand.getClass().getName())
    agent.CameraAgent.this.partRobot.stand => orig(agent.CameraAgent.this.partRobot.stand)
    agent.CameraAgent.this.partRobot.stand.getClass().getName() => orig(agent.CameraAgent.this.partRobot.stand.getClass().getName())
    agent.CameraAgent.this.partRobot.partsRobotGraphics => orig(agent.CameraAgent.this.partRobot.partsRobotGraphics)
    agent.CameraAgent.this.partRobot.partsRobotGraphics.getClass().getName() => orig(agent.CameraAgent.this.partRobot.partsRobotGraphics.getClass().getName())
    agent.CameraAgent.this.partRobot.dropChance => orig(agent.CameraAgent.this.partRobot.dropChance)
    agent.CameraAgent.this.partRobot.status => orig(agent.CameraAgent.this.partRobot.status)
    agent.CameraAgent.this.partRobot.animation => orig(agent.CameraAgent.this.partRobot.animation)
    agent.CameraAgent.this.partRobot.stateChange => orig(agent.CameraAgent.this.partRobot.stateChange)
    agent.CameraAgent.this.partRobot.agentThread => orig(agent.CameraAgent.this.partRobot.agentThread)
    agent.CameraAgent.this.partRobot.console => orig(agent.CameraAgent.this.partRobot.console)
    agent.CameraAgent.this.animation => orig(agent.CameraAgent.this.animation)
    agent.CameraAgent.this.stateChange => orig(agent.CameraAgent.this.stateChange)
    agent.CameraAgent.this.agentThread => orig(agent.CameraAgent.this.agentThread)
    agent.CameraAgent.this.agentThread.goOn => orig(agent.CameraAgent.this.agentThread.goOn)
    agent.Agent.this => orig(agent.Agent.this)
    agent.Agent.this.getClass().getName() => orig(agent.Agent.this.getClass().getName())
    agent.CameraAgent.this.console => orig(agent.CameraAgent.this.console)
    Utils.ConsoleWriter.consoleID => orig(Utils.ConsoleWriter.consoleID)
    Utils.ConsoleWriter.consoleID.toString => orig(Utils.ConsoleWriter.consoleID.toString)
    agent.CameraAgent.this.console.name => orig(agent.CameraAgent.this.console.name)
    agent.CameraAgent.this.console.name.toString => orig(agent.CameraAgent.this.console.name.toString)
    agent.CameraAgent.this.console.stateChange => orig(agent.CameraAgent.this.console.stateChange)
    agent.CameraAgent.this.console.consoleWriterThread => orig(agent.CameraAgent.this.console.consoleWriterThread)
    agent.CameraAgent.this.console.messageQueue => orig(agent.CameraAgent.this.console.messageQueue)
    agent.CameraAgent.this.console.messageQueue.getClass().getName() => orig(agent.CameraAgent.this.console.messageQueue.getClass().getName())
    size(agent.CameraAgent.this.nests[..]) => orig(size(agent.CameraAgent.this.nests[..]))
    size(agent.CameraAgent.this.nests[..])-1 => orig(size(agent.CameraAgent.this.nests[..]))-1
    size(agent.CameraAgent.this.kitRobot.myKits[..]) => orig(size(agent.CameraAgent.this.kitRobot.myKits[..]))
    size(agent.CameraAgent.this.kitRobot.myKits[..])-1 => orig(size(agent.CameraAgent.this.kitRobot.myKits[..]))-1
    size(agent.CameraAgent.this.partRobot.MyKits[..]) => orig(size(agent.CameraAgent.this.partRobot.MyKits[..]))
    size(agent.CameraAgent.this.partRobot.MyKits[..])-1 => orig(size(agent.CameraAgent.this.partRobot.MyKits[..]))-1
    size(agent.CameraAgent.this.partRobot.Arms[..]) => orig(size(agent.CameraAgent.this.partRobot.Arms[..]))
    size(agent.CameraAgent.this.partRobot.Arms[..])-1 => orig(size(agent.CameraAgent.this.partRobot.Arms[..]))-1
    size(agent.CameraAgent.this.partRobot.KitsOnStand[..]) => orig(size(agent.CameraAgent.this.partRobot.KitsOnStand[..]))
    size(agent.CameraAgent.this.partRobot.KitsOnStand[..])-1 => orig(size(agent.CameraAgent.this.partRobot.KitsOnStand[..]))-1
child.var_infos:
    this
    agent.CameraAgent.this
    agent.CameraAgent.this.name
    agent.CameraAgent.this.name.toString
    agent.CameraAgent.this.nests
    agent.CameraAgent.this.nests[..]
    agent.CameraAgent.this.nests[..].getClass().getName()
    agent.CameraAgent.this.nests.getClass().getName()
    agent.CameraAgent.this.mk
    agent.CameraAgent.this.mk.kit
    agent.CameraAgent.this.mk.ks
    agent.CameraAgent.this.mk.kitDone
    agent.CameraAgent.this.guiCamera
    agent.CameraAgent.this.guiCamera.getClass().getName()
    agent.CameraAgent.this.timer
    agent.CameraAgent.this.kitRobot
    agent.CameraAgent.this.kitRobot.myKits
    agent.CameraAgent.this.kitRobot.myKits[..]
    agent.CameraAgent.this.kitRobot.myKits[..].getClass().getName()
    agent.CameraAgent.this.kitRobot.myKits.getClass().getName()
    agent.CameraAgent.this.kitRobot.standPositions
    agent.CameraAgent.this.kitRobot.standPositions.getClass().getName()
    agent.CameraAgent.this.kitRobot.kitWaitingOnConveyor
    agent.CameraAgent.this.kitRobot.kitRequested
    agent.CameraAgent.this.kitRobot.numKitsToMake
    agent.CameraAgent.this.kitRobot.numKitsRequested
    agent.CameraAgent.this.kitRobot.animation
    agent.CameraAgent.this.kitRobot.stand
    agent.CameraAgent.this.kitRobot.stand.getClass().getName()
    agent.CameraAgent.this.kitRobot.conveyor
    agent.CameraAgent.this.kitRobot.conveyor.getClass().getName()
    agent.CameraAgent.this.kitRobot.camera
    agent.CameraAgent.this.kitRobot.camera.getClass().getName()
    agent.CameraAgent.this.kitRobot.kitrobotGraphics
    agent.CameraAgent.this.kitRobot.kitrobotGraphics.getClass().getName()
    agent.CameraAgent.this.kitRobot.mockgraphics
    agent.CameraAgent.this.kitRobot.state
    agent.CameraAgent.this.kitRobot.name
    agent.CameraAgent.this.kitRobot.name.toString
    agent.CameraAgent.this.kitRobot.stateChange
    agent.CameraAgent.this.kitRobot.agentThread
    agent.CameraAgent.this.kitRobot.console
    agent.CameraAgent.this.partRobot
    agent.CameraAgent.this.partRobot.name
    agent.CameraAgent.this.partRobot.name.toString
    agent.CameraAgent.this.partRobot.Kitconfig
    agent.CameraAgent.this.partRobot.MyKits
    agent.CameraAgent.this.partRobot.MyKits[..]
    agent.CameraAgent.this.partRobot.MyKits[..].getClass().getName()
    agent.CameraAgent.this.partRobot.MyKits.getClass().getName()
    agent.CameraAgent.this.partRobot.GoodParts
    agent.CameraAgent.this.partRobot.GoodParts.getClass().getName()
    agent.CameraAgent.this.partRobot.Arms
    agent.CameraAgent.this.partRobot.Arms[..]
    agent.CameraAgent.this.partRobot.Arms[..].getClass().getName()
    agent.CameraAgent.this.partRobot.Arms.getClass().getName()
    agent.CameraAgent.this.partRobot.time
    agent.CameraAgent.this.partRobot.kitsNum
    agent.CameraAgent.this.partRobot.timer
    agent.CameraAgent.this.partRobot.KitsOnStand
    agent.CameraAgent.this.partRobot.KitsOnStand[..]
    agent.CameraAgent.this.partRobot.KitsOnStand[..].getClass().getName()
    agent.CameraAgent.this.partRobot.KitsOnStand.getClass().getName()
    agent.CameraAgent.this.partRobot.stand
    agent.CameraAgent.this.partRobot.stand.getClass().getName()
    agent.CameraAgent.this.partRobot.partsRobotGraphics
    agent.CameraAgent.this.partRobot.partsRobotGraphics.getClass().getName()
    agent.CameraAgent.this.partRobot.dropChance
    agent.CameraAgent.this.partRobot.status
    agent.CameraAgent.this.partRobot.animation
    agent.CameraAgent.this.partRobot.stateChange
    agent.CameraAgent.this.partRobot.agentThread
    agent.CameraAgent.this.partRobot.console
    agent.CameraAgent.this.animation
    agent.CameraAgent.this.stateChange
    agent.CameraAgent.this.agentThread
    agent.CameraAgent.this.agentThread.goOn
    agent.Agent.this
    agent.Agent.this.getClass().getName()
    agent.CameraAgent.this.console
    Utils.ConsoleWriter.consoleID
    Utils.ConsoleWriter.consoleID.toString
    agent.CameraAgent.this.console.name
    agent.CameraAgent.this.console.name.toString
    agent.CameraAgent.this.console.stateChange
    agent.CameraAgent.this.console.consoleWriterThread
    agent.CameraAgent.this.console.messageQueue
    agent.CameraAgent.this.console.messageQueue.getClass().getName()
    orig(agent.CameraAgent.this)
    orig(agent.CameraAgent.this.name)
    orig(agent.CameraAgent.this.name.toString)
    orig(agent.CameraAgent.this.nests)
    orig(agent.CameraAgent.this.nests[..])
    orig(agent.CameraAgent.this.nests[..].getClass().getName())
    orig(agent.CameraAgent.this.nests.getClass().getName())
    orig(agent.CameraAgent.this.mk)
    orig(agent.CameraAgent.this.mk.kit)
    orig(agent.CameraAgent.this.mk.ks)
    orig(agent.CameraAgent.this.mk.kitDone)
    orig(agent.CameraAgent.this.guiCamera)
    orig(agent.CameraAgent.this.guiCamera.getClass().getName())
    orig(agent.CameraAgent.this.timer)
    orig(agent.CameraAgent.this.kitRobot)
    orig(agent.CameraAgent.this.kitRobot.myKits)
    orig(agent.CameraAgent.this.kitRobot.myKits[..])
    orig(agent.CameraAgent.this.kitRobot.myKits[..].getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.myKits.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.standPositions)
    orig(agent.CameraAgent.this.kitRobot.standPositions.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.kitWaitingOnConveyor)
    orig(agent.CameraAgent.this.kitRobot.kitRequested)
    orig(agent.CameraAgent.this.kitRobot.numKitsToMake)
    orig(agent.CameraAgent.this.kitRobot.numKitsRequested)
    orig(agent.CameraAgent.this.kitRobot.animation)
    orig(agent.CameraAgent.this.kitRobot.stand)
    orig(agent.CameraAgent.this.kitRobot.stand.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.conveyor)
    orig(agent.CameraAgent.this.kitRobot.conveyor.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.camera)
    orig(agent.CameraAgent.this.kitRobot.camera.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.kitrobotGraphics)
    orig(agent.CameraAgent.this.kitRobot.kitrobotGraphics.getClass().getName())
    orig(agent.CameraAgent.this.kitRobot.mockgraphics)
    orig(agent.CameraAgent.this.kitRobot.state)
    orig(agent.CameraAgent.this.kitRobot.name)
    orig(agent.CameraAgent.this.kitRobot.name.toString)
    orig(agent.CameraAgent.this.kitRobot.stateChange)
    orig(agent.CameraAgent.this.kitRobot.agentThread)
    orig(agent.CameraAgent.this.kitRobot.console)
    orig(agent.CameraAgent.this.partRobot)
    orig(agent.CameraAgent.this.partRobot.name)
    orig(agent.CameraAgent.this.partRobot.name.toString)
    orig(agent.CameraAgent.this.partRobot.Kitconfig)
    orig(agent.CameraAgent.this.partRobot.MyKits)
    orig(agent.CameraAgent.this.partRobot.MyKits[..])
    orig(agent.CameraAgent.this.partRobot.MyKits[..].getClass().getName())
    orig(agent.CameraAgent.this.partRobot.MyKits.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.GoodParts)
    orig(agent.CameraAgent.this.partRobot.GoodParts.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.Arms)
    orig(agent.CameraAgent.this.partRobot.Arms[..])
    orig(agent.CameraAgent.this.partRobot.Arms[..].getClass().getName())
    orig(agent.CameraAgent.this.partRobot.Arms.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.time)
    orig(agent.CameraAgent.this.partRobot.kitsNum)
    orig(agent.CameraAgent.this.partRobot.timer)
    orig(agent.CameraAgent.this.partRobot.KitsOnStand)
    orig(agent.CameraAgent.this.partRobot.KitsOnStand[..])
    orig(agent.CameraAgent.this.partRobot.KitsOnStand[..].getClass().getName())
    orig(agent.CameraAgent.this.partRobot.KitsOnStand.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.stand)
    orig(agent.CameraAgent.this.partRobot.stand.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.partsRobotGraphics)
    orig(agent.CameraAgent.this.partRobot.partsRobotGraphics.getClass().getName())
    orig(agent.CameraAgent.this.partRobot.dropChance)
    orig(agent.CameraAgent.this.partRobot.status)
    orig(agent.CameraAgent.this.partRobot.animation)
    orig(agent.CameraAgent.this.partRobot.stateChange)
    orig(agent.CameraAgent.this.partRobot.agentThread)
    orig(agent.CameraAgent.this.partRobot.console)
    orig(agent.CameraAgent.this.animation)
    orig(agent.CameraAgent.this.stateChange)
    orig(agent.CameraAgent.this.agentThread)
    orig(agent.CameraAgent.this.agentThread.goOn)
    orig(agent.Agent.this)
    orig(agent.Agent.this.getClass().getName())
    orig(agent.CameraAgent.this.console)
    orig(Utils.ConsoleWriter.consoleID)
    orig(Utils.ConsoleWriter.consoleID.toString)
    orig(agent.CameraAgent.this.console.name)
    orig(agent.CameraAgent.this.console.name.toString)
    orig(agent.CameraAgent.this.console.stateChange)
    orig(agent.CameraAgent.this.console.consoleWriterThread)
    orig(agent.CameraAgent.this.console.messageQueue)
    orig(agent.CameraAgent.this.console.messageQueue.getClass().getName())
    size(agent.CameraAgent.this.nests[..])
    size(agent.CameraAgent.this.nests[..])-1
    size(agent.CameraAgent.this.kitRobot.myKits[..])
    size(agent.CameraAgent.this.kitRobot.myKits[..])-1
    size(agent.CameraAgent.this.partRobot.MyKits[..])
    size(agent.CameraAgent.this.partRobot.MyKits[..])-1
    size(agent.CameraAgent.this.partRobot.Arms[..])
    size(agent.CameraAgent.this.partRobot.Arms[..])-1
    size(agent.CameraAgent.this.partRobot.KitsOnStand[..])
    size(agent.CameraAgent.this.partRobot.KitsOnStand[..])-1
    orig(size(agent.CameraAgent.this.nests[..]))
    orig(size(agent.CameraAgent.this.nests[..]))-1
    orig(size(agent.CameraAgent.this.kitRobot.myKits[..]))
    orig(size(agent.CameraAgent.this.kitRobot.myKits[..]))-1
    orig(size(agent.CameraAgent.this.partRobot.MyKits[..]))
    orig(size(agent.CameraAgent.this.partRobot.MyKits[..]))-1
    orig(size(agent.CameraAgent.this.partRobot.Arms[..]))
    orig(size(agent.CameraAgent.this.partRobot.Arms[..]))-1
    orig(size(agent.CameraAgent.this.partRobot.KitsOnStand[..]))
    orig(size(agent.CameraAgent.this.partRobot.KitsOnStand[..]))-1
End of diagnostics for newEnterExitRel(agent.CameraAgent$1.(agent.CameraAgent):::ENTER, agent.CameraAgent$1.(agent.CameraAgent):::EXIT)
missing variables in newEnterExitRel:
  parent = agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::ENTER
  child = agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::EXIT
  parent.var_infos = [Ldaikon.VarInfo;@7767af50
parent varinfos missing from parent_to_child_map:
   agent.PartsRobotAgent.this.MyKits[agent.PartsRobotAgent.this.Kitconfig.standId]
   agent.PartsRobotAgent.this.MyKits[agent.PartsRobotAgent.this.Kitconfig.standId-1]
   agent.PartsRobotAgent.this.Arms[agent.PartsRobotAgent.this.Kitconfig.standId]
   agent.PartsRobotAgent.this.Arms[agent.PartsRobotAgent.this.Kitconfig.standId-1]
   agent.PartsRobotAgent.this.KitsOnStand[agent.PartsRobotAgent.this.Kitconfig.standId]
   agent.PartsRobotAgent.this.KitsOnStand[agent.PartsRobotAgent.this.Kitconfig.standId-1]
   agent.PartsRobotAgent$PartsRobotStatus.$VALUES[agent.PartsRobotAgent.this.Kitconfig.standId]
   agent.PartsRobotAgent$PartsRobotStatus.$VALUES[agent.PartsRobotAgent.this.Kitconfig.standId-1]
   agent.PartsRobotAgent.this.MyKits[agent.PartsRobotAgent.this.kitsNum]
   agent.PartsRobotAgent.this.MyKits[agent.PartsRobotAgent.this.kitsNum-1]
   agent.PartsRobotAgent.this.Arms[agent.PartsRobotAgent.this.kitsNum]
   agent.PartsRobotAgent.this.Arms[agent.PartsRobotAgent.this.kitsNum-1]
   agent.PartsRobotAgent.this.KitsOnStand[agent.PartsRobotAgent.this.kitsNum]
   agent.PartsRobotAgent.this.KitsOnStand[agent.PartsRobotAgent.this.kitsNum-1]
   agent.PartsRobotAgent$PartsRobotStatus.$VALUES[agent.PartsRobotAgent.this.kitsNum]
   agent.PartsRobotAgent$PartsRobotStatus.$VALUES[agent.PartsRobotAgent.this.kitsNum-1]
rel.parent_to_child_map:
    agent.PartsRobotAgent.this => orig(agent.PartsRobotAgent.this)
    agent.PartsRobotAgent.this.name => orig(agent.PartsRobotAgent.this.name)
    agent.PartsRobotAgent.this.name.toString => orig(agent.PartsRobotAgent.this.name.toString)
    agent.PartsRobotAgent.this.Kitconfig => orig(agent.PartsRobotAgent.this.Kitconfig)
    agent.PartsRobotAgent.this.Kitconfig.config => orig(agent.PartsRobotAgent.this.Kitconfig.config)
    agent.PartsRobotAgent.this.Kitconfig.id => orig(agent.PartsRobotAgent.this.Kitconfig.id)
    agent.PartsRobotAgent.this.Kitconfig.id.toString => orig(agent.PartsRobotAgent.this.Kitconfig.id.toString)
    agent.PartsRobotAgent.this.Kitconfig.name => orig(agent.PartsRobotAgent.this.Kitconfig.name)
    agent.PartsRobotAgent.this.Kitconfig.name.toString => orig(agent.PartsRobotAgent.this.Kitconfig.name.toString)
    agent.PartsRobotAgent.this.Kitconfig.location => orig(agent.PartsRobotAgent.this.Kitconfig.location)
    agent.PartsRobotAgent.this.Kitconfig.standId => orig(agent.PartsRobotAgent.this.Kitconfig.standId)
    agent.PartsRobotAgent.this.MyKits => orig(agent.PartsRobotAgent.this.MyKits)
    agent.PartsRobotAgent.this.MyKits[..] => orig(agent.PartsRobotAgent.this.MyKits[..])
    agent.PartsRobotAgent.this.MyKits[..].getClass().getName() => orig(agent.PartsRobotAgent.this.MyKits[..].getClass().getName())
    agent.PartsRobotAgent.this.MyKits.getClass().getName() => orig(agent.PartsRobotAgent.this.MyKits.getClass().getName())
    agent.PartsRobotAgent.this.GoodParts => orig(agent.PartsRobotAgent.this.GoodParts)
    agent.PartsRobotAgent.this.GoodParts.getClass().getName() => orig(agent.PartsRobotAgent.this.GoodParts.getClass().getName())
    agent.PartsRobotAgent.this.Arms => orig(agent.PartsRobotAgent.this.Arms)
    agent.PartsRobotAgent.this.Arms[..] => orig(agent.PartsRobotAgent.this.Arms[..])
    agent.PartsRobotAgent.this.Arms[..].getClass().getName() => orig(agent.PartsRobotAgent.this.Arms[..].getClass().getName())
    agent.PartsRobotAgent.this.Arms.getClass().getName() => orig(agent.PartsRobotAgent.this.Arms.getClass().getName())
    agent.PartsRobotAgent.this.time => orig(agent.PartsRobotAgent.this.time)
    agent.PartsRobotAgent.this.kitsNum => orig(agent.PartsRobotAgent.this.kitsNum)
    agent.PartsRobotAgent.this.timer => orig(agent.PartsRobotAgent.this.timer)
    agent.PartsRobotAgent.this.KitsOnStand => orig(agent.PartsRobotAgent.this.KitsOnStand)
    agent.PartsRobotAgent.this.KitsOnStand[..] => orig(agent.PartsRobotAgent.this.KitsOnStand[..])
    agent.PartsRobotAgent.this.KitsOnStand[..].getClass().getName() => orig(agent.PartsRobotAgent.this.KitsOnStand[..].getClass().getName())
    agent.PartsRobotAgent.this.KitsOnStand.getClass().getName() => orig(agent.PartsRobotAgent.this.KitsOnStand.getClass().getName())
    agent.PartsRobotAgent.this.stand => orig(agent.PartsRobotAgent.this.stand)
    agent.PartsRobotAgent.this.stand.getClass().getName() => orig(agent.PartsRobotAgent.this.stand.getClass().getName())
    agent.PartsRobotAgent.this.partsRobotGraphics => orig(agent.PartsRobotAgent.this.partsRobotGraphics)
    agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName() => orig(agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName())
    agent.PartsRobotAgent.this.dropChance => orig(agent.PartsRobotAgent.this.dropChance)
    agent.PartsRobotAgent.this.status => orig(agent.PartsRobotAgent.this.status)
    agent.PartsRobotAgent$PartsRobotStatus.IDLE => orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
    agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP => orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
    agent.PartsRobotAgent$PartsRobotStatus.PLACING => orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES => orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() => orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..] => orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..])
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..].getClass().getName() => orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..].getClass().getName())
    agent.PartsRobotAgent.this.animation => orig(agent.PartsRobotAgent.this.animation)
    agent.PartsRobotAgent.this.stateChange => orig(agent.PartsRobotAgent.this.stateChange)
    agent.PartsRobotAgent.this.agentThread => orig(agent.PartsRobotAgent.this.agentThread)
    agent.PartsRobotAgent.this.agentThread.goOn => orig(agent.PartsRobotAgent.this.agentThread.goOn)
    agent.Agent.this => orig(agent.Agent.this)
    agent.Agent.this.getClass().getName() => orig(agent.Agent.this.getClass().getName())
    agent.PartsRobotAgent.this.console => orig(agent.PartsRobotAgent.this.console)
    Utils.ConsoleWriter.consoleID => orig(Utils.ConsoleWriter.consoleID)
    Utils.ConsoleWriter.consoleID.toString => orig(Utils.ConsoleWriter.consoleID.toString)
    agent.PartsRobotAgent.this.console.name => orig(agent.PartsRobotAgent.this.console.name)
    agent.PartsRobotAgent.this.console.name.toString => orig(agent.PartsRobotAgent.this.console.name.toString)
    agent.PartsRobotAgent.this.console.stateChange => orig(agent.PartsRobotAgent.this.console.stateChange)
    agent.PartsRobotAgent.this.console.consoleWriterThread => orig(agent.PartsRobotAgent.this.console.consoleWriterThread)
    agent.PartsRobotAgent.this.console.messageQueue => orig(agent.PartsRobotAgent.this.console.messageQueue)
    agent.PartsRobotAgent.this.console.messageQueue.getClass().getName() => orig(agent.PartsRobotAgent.this.console.messageQueue.getClass().getName())
    size(agent.PartsRobotAgent.this.MyKits[..]) => orig(size(agent.PartsRobotAgent.this.MyKits[..]))
    size(agent.PartsRobotAgent.this.MyKits[..])-1 => orig(size(agent.PartsRobotAgent.this.MyKits[..]))-1
    size(agent.PartsRobotAgent.this.Arms[..]) => orig(size(agent.PartsRobotAgent.this.Arms[..]))
    size(agent.PartsRobotAgent.this.Arms[..])-1 => orig(size(agent.PartsRobotAgent.this.Arms[..]))-1
    size(agent.PartsRobotAgent.this.KitsOnStand[..]) => orig(size(agent.PartsRobotAgent.this.KitsOnStand[..]))
    size(agent.PartsRobotAgent.this.KitsOnStand[..])-1 => orig(size(agent.PartsRobotAgent.this.KitsOnStand[..]))-1
    size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]) => orig(size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]))
    size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..])-1 => orig(size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]))-1
child.var_infos:
    this
    this.part
    this.part.partGraphics
    this.part.partGraphics.partType
    this.part.partGraphics.partLocation
    this.part.partGraphics.quality
    this.part.partGraphics.isInvisible
    this.part.type
    factory.PartType.serialVersionUID
    this.part.type.name
    this.part.type.name.toString
    this.part.type.id
    this.part.type.id.toString
    this.part.type.partNum
    this.part.type.badChance
    this.part.type.description
    this.part.type.description.toString
    this.part.type.imagePath
    this.part.type.imagePath.toString
    this.part.type.invisible
    this.part.isGood
    this.part.up
    this.AS
    agent.PartsRobotAgent$ArmStatus.EMPTY
    agent.PartsRobotAgent$ArmStatus.FULL
    agent.PartsRobotAgent$ArmStatus.EMPTYING
    agent.PartsRobotAgent$ArmStatus.$VALUES
    agent.PartsRobotAgent$ArmStatus.$VALUES.getClass().getName()
    agent.PartsRobotAgent$ArmStatus.$VALUES[..]
    agent.PartsRobotAgent$ArmStatus.$VALUES[..].getClass().getName()
    agent.PartsRobotAgent.this
    agent.PartsRobotAgent.this.name
    agent.PartsRobotAgent.this.name.toString
    agent.PartsRobotAgent.this.Kitconfig
    agent.PartsRobotAgent.this.Kitconfig.config
    agent.PartsRobotAgent.this.Kitconfig.id
    agent.PartsRobotAgent.this.Kitconfig.id.toString
    agent.PartsRobotAgent.this.Kitconfig.name
    agent.PartsRobotAgent.this.Kitconfig.name.toString
    agent.PartsRobotAgent.this.Kitconfig.location
    agent.PartsRobotAgent.this.Kitconfig.standId
    agent.PartsRobotAgent.this.MyKits
    agent.PartsRobotAgent.this.MyKits[..]
    agent.PartsRobotAgent.this.MyKits[..].getClass().getName()
    agent.PartsRobotAgent.this.MyKits.getClass().getName()
    agent.PartsRobotAgent.this.GoodParts
    agent.PartsRobotAgent.this.GoodParts.getClass().getName()
    agent.PartsRobotAgent.this.Arms
    agent.PartsRobotAgent.this.Arms[..]
    agent.PartsRobotAgent.this.Arms[..].getClass().getName()
    agent.PartsRobotAgent.this.Arms.getClass().getName()
    agent.PartsRobotAgent.this.time
    agent.PartsRobotAgent.this.kitsNum
    agent.PartsRobotAgent.this.timer
    agent.PartsRobotAgent.this.KitsOnStand
    agent.PartsRobotAgent.this.KitsOnStand[..]
    agent.PartsRobotAgent.this.KitsOnStand[..].getClass().getName()
    agent.PartsRobotAgent.this.KitsOnStand.getClass().getName()
    agent.PartsRobotAgent.this.stand
    agent.PartsRobotAgent.this.stand.getClass().getName()
    agent.PartsRobotAgent.this.partsRobotGraphics
    agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName()
    agent.PartsRobotAgent.this.dropChance
    agent.PartsRobotAgent.this.status
    agent.PartsRobotAgent$PartsRobotStatus.IDLE
    agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP
    agent.PartsRobotAgent$PartsRobotStatus.PLACING
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]
    agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..].getClass().getName()
    agent.PartsRobotAgent.this.animation
    agent.PartsRobotAgent.this.stateChange
    agent.PartsRobotAgent.this.agentThread
    agent.PartsRobotAgent.this.agentThread.goOn
    agent.Agent.this
    agent.Agent.this.getClass().getName()
    agent.PartsRobotAgent.this.console
    Utils.ConsoleWriter.consoleID
    Utils.ConsoleWriter.consoleID.toString
    agent.PartsRobotAgent.this.console.name
    agent.PartsRobotAgent.this.console.name.toString
    agent.PartsRobotAgent.this.console.stateChange
    agent.PartsRobotAgent.this.console.consoleWriterThread
    agent.PartsRobotAgent.this.console.messageQueue
    agent.PartsRobotAgent.this.console.messageQueue.getClass().getName()
    orig(agent.PartsRobotAgent.this)
    orig(agent.PartsRobotAgent.this.name)
    orig(agent.PartsRobotAgent.this.name.toString)
    orig(agent.PartsRobotAgent.this.Kitconfig)
    orig(agent.PartsRobotAgent.this.Kitconfig.config)
    orig(agent.PartsRobotAgent.this.Kitconfig.id)
    orig(agent.PartsRobotAgent.this.Kitconfig.id.toString)
    orig(agent.PartsRobotAgent.this.Kitconfig.name)
    orig(agent.PartsRobotAgent.this.Kitconfig.name.toString)
    orig(agent.PartsRobotAgent.this.Kitconfig.location)
    orig(agent.PartsRobotAgent.this.Kitconfig.standId)
    orig(agent.PartsRobotAgent.this.MyKits)
    orig(agent.PartsRobotAgent.this.MyKits[..])
    orig(agent.PartsRobotAgent.this.MyKits[..].getClass().getName())
    orig(agent.PartsRobotAgent.this.MyKits.getClass().getName())
    orig(agent.PartsRobotAgent.this.GoodParts)
    orig(agent.PartsRobotAgent.this.GoodParts.getClass().getName())
    orig(agent.PartsRobotAgent.this.Arms)
    orig(agent.PartsRobotAgent.this.Arms[..])
    orig(agent.PartsRobotAgent.this.Arms[..].getClass().getName())
    orig(agent.PartsRobotAgent.this.Arms.getClass().getName())
    orig(agent.PartsRobotAgent.this.time)
    orig(agent.PartsRobotAgent.this.kitsNum)
    orig(agent.PartsRobotAgent.this.timer)
    orig(agent.PartsRobotAgent.this.KitsOnStand)
    orig(agent.PartsRobotAgent.this.KitsOnStand[..])
    orig(agent.PartsRobotAgent.this.KitsOnStand[..].getClass().getName())
    orig(agent.PartsRobotAgent.this.KitsOnStand.getClass().getName())
    orig(agent.PartsRobotAgent.this.stand)
    orig(agent.PartsRobotAgent.this.stand.getClass().getName())
    orig(agent.PartsRobotAgent.this.partsRobotGraphics)
    orig(agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName())
    orig(agent.PartsRobotAgent.this.dropChance)
    orig(agent.PartsRobotAgent.this.status)
    orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
    orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
    orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
    orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
    orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
    orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..])
    orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..].getClass().getName())
    orig(agent.PartsRobotAgent.this.animation)
    orig(agent.PartsRobotAgent.this.stateChange)
    orig(agent.PartsRobotAgent.this.agentThread)
    orig(agent.PartsRobotAgent.this.agentThread.goOn)
    orig(agent.Agent.this)
    orig(agent.Agent.this.getClass().getName())
    orig(agent.PartsRobotAgent.this.console)
    orig(Utils.ConsoleWriter.consoleID)
    orig(Utils.ConsoleWriter.consoleID.toString)
    orig(agent.PartsRobotAgent.this.console.name)
    orig(agent.PartsRobotAgent.this.console.name.toString)
    orig(agent.PartsRobotAgent.this.console.stateChange)
    orig(agent.PartsRobotAgent.this.console.consoleWriterThread)
    orig(agent.PartsRobotAgent.this.console.messageQueue)
    orig(agent.PartsRobotAgent.this.console.messageQueue.getClass().getName())
    size(agent.PartsRobotAgent$ArmStatus.$VALUES[..])
    size(agent.PartsRobotAgent$ArmStatus.$VALUES[..])-1
    size(agent.PartsRobotAgent.this.MyKits[..])
    size(agent.PartsRobotAgent.this.MyKits[..])-1
    size(agent.PartsRobotAgent.this.Arms[..])
    size(agent.PartsRobotAgent.this.Arms[..])-1
    size(agent.PartsRobotAgent.this.KitsOnStand[..])
    size(agent.PartsRobotAgent.this.KitsOnStand[..])-1
    size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..])
    size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..])-1
    orig(size(agent.PartsRobotAgent.this.MyKits[..]))
    orig(size(agent.PartsRobotAgent.this.MyKits[..]))-1
    orig(size(agent.PartsRobotAgent.this.Arms[..]))
    orig(size(agent.PartsRobotAgent.this.Arms[..]))-1
    orig(size(agent.PartsRobotAgent.this.KitsOnStand[..]))
    orig(size(agent.PartsRobotAgent.this.KitsOnStand[..]))-1
    orig(size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]))
    orig(size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[..]))-1
End of diagnostics for newEnterExitRel(agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::ENTER, agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::EXIT)
===========================================================================
DeviceGraphics.CameraGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this has only one value
this.location has only one value
this.location.x == 100.0
this.location.y == 100.0
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.agent has only one value
this.agent.name has only one value
this.agent.name.toString == "Camera"
this.agent.nests has only one value
this.agent.nests[] == []
this.agent.nests[].getClass().getName() == []
this.agent.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.agent.mk == null
this.agent.guiCamera == null
this.agent.timer has only one value
this.agent.kitRobot == null
this.agent.partRobot == null
this.agent.animation has only one value
this.agent.stateChange has only one value
this.agent.agentThread == null
this.agent.console == null
this.timer has only one value
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.CameraGraphics.CameraGraphics(Networking.Server, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.CameraAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.CameraGraphics.CameraGraphics(Networking.Server, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.agent.stateChange == arg1.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.ConveyorGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this.conveyorAgent.kitsOnConveyor.getClass().getName() == this.conveyorAgent.kitsOnOutboundConveyor.getClass().getName()
this.conveyorAgent.state == agent.ConveyorAgent$ConveyorState.IDLE
this has only one value
this.kitsOnConveyor has only one value
this.kitsOnConveyor[] == []
this.kitsOnConveyor[].getClass().getName() == []
this.kitsToLeave has only one value
this.kitsToLeave[] == []
this.kitsToLeave[].getClass().getName() == []
this.location has only one value
this.location.x == 0.0
this.location.y == 0.0
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.velocity == 10
this.conveyorAgent has only one value
this.conveyorAgent.kitsOnConveyor has only one value
this.conveyorAgent.kitsOnConveyor[] == []
this.conveyorAgent.kitsOnConveyor[].getClass().getName() == []
this.conveyorAgent.kitsOnConveyor.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.conveyorAgent.kitsOnOutboundConveyor has only one value
this.conveyorAgent.kitsOnOutboundConveyor[] == []
this.conveyorAgent.kitsOnOutboundConveyor[].getClass().getName() == []
this.conveyorAgent.kitConfig == null
this.conveyorAgent.incomingKit == null
this.conveyorAgent.outgoingKit == null
this.conveyorAgent.numKitsToDeliver == 0
agent.ConveyorAgent$ConveyorState.IDLE has only one value
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT has only one value
agent.ConveyorAgent$ConveyorState.$VALUES has only one value
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == agent.ConveyorAgent$ConveyorState[].class
agent.ConveyorAgent$ConveyorState.$VALUES[] contains no nulls and has only one value, of length 2
agent.ConveyorAgent$ConveyorState.$VALUES[].getClass().getName() == [agent.ConveyorAgent.ConveyorState, agent.ConveyorAgent.ConveyorState]
agent.ConveyorAgent$ConveyorState.$VALUES[].getClass().getName() elements == agent.ConveyorAgent.ConveyorState.class
this.conveyorAgent.start == false
this.conveyorAgent.animation has only one value
this.conveyorAgent.kitrobot == null
this.conveyorAgent.fcs == null
this.conveyorAgent.conveyorGraphics == null
this.conveyorAgent.mockgraphics == null
this.conveyorAgent.name has only one value
this.conveyorAgent.name.toString == "Conveyor"
this.conveyorAgent.stateChange has only one value
this.conveyorAgent.agentThread == null
this.conveyorAgent.console == null
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.ConveyorAgent$ConveyorState.$VALUES[]) == 2
===========================================================================
DeviceGraphics.ConveyorGraphics.ConveyorGraphics(Networking.Server, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.ConveyorAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.ConveyorGraphics.ConveyorGraphics(Networking.Server, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.conveyorAgent.stateChange == arg1.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.FeederGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this.feederAgent.state == agent.FeederAgent$FeederStatus.IDLE
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.feederAgent.gantry == null
this.feederAgent.lanes[] == []
this.feederAgent.lanes[].getClass().getName() == []
this.feederAgent.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feederAgent.feederGUI == null
this.feederAgent.currentOrientation == 0
this.feederAgent.bin == null
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
this.feederAgent.agentThread == null
this.feederAgent.console == null
this.diverterTop == true
this.binGraphics == null
this.feederLocation.x == 850.0
this.partType == null
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
===========================================================================
DeviceGraphics.FeederGraphics.FeederGraphics(int, Networking.Server, agent.Agent):::ENTER
arg1 == arg1.fcs.server
arg1.factProdMngrWriter.getClass().getName() == arg1.partsMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.gantryRobotMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitAssemblyMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.laneMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitRobotMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.partsRobotMngrWriter.getClass().getName()
arg1.fcs.agent == arg1.fcsAgent
arg1 has only one value
arg1.ss == null
arg1.s == null
arg1.factProdMngrReader == null
arg1.factProdMngrWriter has only one value
arg1.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg1.partsMngrReader == null
arg1.partsMngrWriter has only one value
arg1.kitMngrReader == null
arg1.kitMngrWriter has only one value
arg1.gantryRobotMngrReader == null
arg1.gantryRobotMngrWriter has only one value
arg1.kitAssemblyMngrReader == null
arg1.kitAssemblyMngrWriter has only one value
arg1.laneMngrReader == null
arg1.laneMngrWriter has only one value
arg1.kitRobotMngrReader == null
arg1.kitRobotMngrWriter has only one value
arg1.partsRobotMngrReader == null
arg1.partsRobotMngrWriter has only one value
arg1.numClients == 0
arg1.devices has only one value
arg1.agents has only one value
arg1.fcs has only one value
arg1.fcs.queue has only one value
arg1.fcs.queue[] == []
arg1.fcs.queue[].getClass().getName() == []
arg1.fcs.kitConfigs has only one value
arg1.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg1.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg1.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg1.fcs.partTypes has only one value
arg1.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg1.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg1.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg1.fcs.productionStarted == false
arg1.fcs.completed == null
arg1.fcsAgent has only one value
arg1.fcsAgent.stand == null
arg1.fcsAgent.partsRobot == null
arg1.fcsAgent.gantry == null
arg1.fcsAgent.nests has only one value
arg1.fcsAgent.nests[] == []
arg1.fcsAgent.nests[].getClass().getName() == []
arg1.fcsAgent.conveyor == null
arg1.fcsAgent.state has only one value
arg1.fcsAgent.orders has only one value
arg1.fcsAgent.orders[] == []
arg1.fcsAgent.orders[].getClass().getName() == []
arg1.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg1.fcsAgent.numOrdersFinished == 0
arg1.fcsAgent.camera == null
arg1.fcsAgent.partTypeCount == 0
arg1.fcsAgent.fcs == null
arg1.fcsAgent.name has only one value
arg1.fcsAgent.name.toString == "FCS"
arg1.fcsAgent.binsSet == false
arg1.fcsAgent.binsToAdd has only one value
arg1.fcsAgent.binsToAdd[] == []
arg1.fcsAgent.binsToAdd[].getClass().getName() == []
arg1.fcsAgent.stateChange has only one value
arg1.fcsAgent.agentThread == null
arg1.fcsAgent.console == null
arg1.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.getClass().getName() == agent.FeederAgent.class
arg2.agentThread == null
arg2.console == null
size(arg1.fcs.kitConfigs[]) == 5
size(arg1.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.FeederGraphics.FeederGraphics(int, Networking.Server, agent.Agent):::EXIT
this.server == arg1.fcs.server
this.server == orig(arg1)
this.server == orig(arg1.fcs.server)
this.server.factProdMngrWriter == arg1.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg1.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg1.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg1.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg1.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg1.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg1.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg1.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg1.factProdMngrWriter.getClass().getName()
this.server.numClients == arg1.numClients
this.server.devices == arg1.devices
this.server.agents == arg1.agents
this.server.fcs == arg1.fcs
this.server.fcs.queue == arg1.fcs.queue
this.server.fcs.kitConfigs == arg1.fcs.kitConfigs
this.server.fcs.partTypes == arg1.fcs.partTypes
this.server.fcs.agent == arg1.fcsAgent
this.server.fcs.productionStarted == arg1.fcs.productionStarted
this.server.fcsAgent == arg1.fcsAgent
this.server.fcsAgent.nests == arg1.fcsAgent.nests
this.server.fcsAgent.state == arg1.fcsAgent.state
this.server.fcsAgent.orders == arg1.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg1.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg1.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg1.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg1.fcsAgent.name
this.server.fcsAgent.binsSet == arg1.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg1.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg1.fcsAgent.stateChange
this.server.console == arg1.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg1.console.name
this.server.console.stateChange == arg1.console.stateChange
this.server.console.consoleWriterThread == arg1.console.consoleWriterThread
this.server.console.messageQueue == arg1.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg1.console.messageQueue.getClass().getName()
this.feederID == orig(arg0)
this.feederAgent.stateChange == arg2.stateChange
arg1.ss == orig(arg1.ss)
arg1.s == orig(arg1.s)
arg1.factProdMngrReader == orig(arg1.factProdMngrReader)
arg1.factProdMngrWriter == orig(arg1.factProdMngrWriter)
arg1.factProdMngrWriter.getClass().getName() == arg1.partsMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.gantryRobotMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitAssemblyMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.laneMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.kitRobotMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == arg1.partsRobotMngrWriter.getClass().getName()
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.factProdMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.partsMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.kitMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.gantryRobotMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.kitAssemblyMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.laneMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.kitRobotMngrWriter.getClass().getName())
arg1.factProdMngrWriter.getClass().getName() == orig(arg1.partsRobotMngrWriter.getClass().getName())
arg1.partsMngrReader == orig(arg1.partsMngrReader)
arg1.partsMngrWriter == orig(arg1.partsMngrWriter)
arg1.kitMngrReader == orig(arg1.kitMngrReader)
arg1.kitMngrWriter == orig(arg1.kitMngrWriter)
arg1.gantryRobotMngrReader == orig(arg1.gantryRobotMngrReader)
arg1.gantryRobotMngrWriter == orig(arg1.gantryRobotMngrWriter)
arg1.kitAssemblyMngrReader == orig(arg1.kitAssemblyMngrReader)
arg1.kitAssemblyMngrWriter == orig(arg1.kitAssemblyMngrWriter)
arg1.laneMngrReader == orig(arg1.laneMngrReader)
arg1.laneMngrWriter == orig(arg1.laneMngrWriter)
arg1.kitRobotMngrReader == orig(arg1.kitRobotMngrReader)
arg1.kitRobotMngrWriter == orig(arg1.kitRobotMngrWriter)
arg1.partsRobotMngrReader == orig(arg1.partsRobotMngrReader)
arg1.partsRobotMngrWriter == orig(arg1.partsRobotMngrWriter)
arg1.numClients == orig(arg1.numClients)
arg1.devices == orig(arg1.devices)
arg1.agents == orig(arg1.agents)
arg1.fcs == orig(arg1.fcs)
arg1.fcs.queue == orig(arg1.fcs.queue)
arg1.fcs.queue[] == orig(arg1.fcs.queue[])
arg1.fcs.kitConfigs == orig(arg1.fcs.kitConfigs)
arg1.fcs.kitConfigs[] == orig(arg1.fcs.kitConfigs[])
arg1.fcs.partTypes == orig(arg1.fcs.partTypes)
arg1.fcs.partTypes[] == orig(arg1.fcs.partTypes[])
arg1.fcs.agent == arg1.fcsAgent
arg1.fcs.productionStarted == orig(arg1.fcs.productionStarted)
arg1.fcs.completed == orig(arg1.fcs.completed)
arg1.fcsAgent == orig(arg1.fcs.agent)
arg1.fcsAgent == orig(arg1.fcsAgent)
arg1.fcsAgent.stand == orig(arg1.fcsAgent.stand)
arg1.fcsAgent.partsRobot == orig(arg1.fcsAgent.partsRobot)
arg1.fcsAgent.gantry == orig(arg1.fcsAgent.gantry)
arg1.fcsAgent.nests == orig(arg1.fcsAgent.nests)
arg1.fcsAgent.nests[] == orig(arg1.fcsAgent.nests[])
arg1.fcsAgent.conveyor == orig(arg1.fcsAgent.conveyor)
arg1.fcsAgent.state == orig(arg1.fcsAgent.state)
arg1.fcsAgent.orders == orig(arg1.fcsAgent.orders)
arg1.fcsAgent.orders[] == orig(arg1.fcsAgent.orders[])
arg1.fcsAgent.orders.getClass().getName() == orig(arg1.fcsAgent.orders.getClass().getName())
arg1.fcsAgent.numOrdersFinished == orig(arg1.fcsAgent.numOrdersFinished)
arg1.fcsAgent.camera == orig(arg1.fcsAgent.camera)
arg1.fcsAgent.partTypeCount == orig(arg1.fcsAgent.partTypeCount)
arg1.fcsAgent.fcs == orig(arg1.fcsAgent.fcs)
arg1.fcsAgent.name == orig(arg1.fcsAgent.name)
arg1.fcsAgent.name.toString == orig(arg1.fcsAgent.name.toString)
arg1.fcsAgent.binsSet == orig(arg1.fcsAgent.binsSet)
arg1.fcsAgent.binsToAdd == orig(arg1.fcsAgent.binsToAdd)
arg1.fcsAgent.binsToAdd[] == orig(arg1.fcsAgent.binsToAdd[])
arg1.fcsAgent.stateChange == orig(arg1.fcsAgent.stateChange)
arg1.fcsAgent.agentThread == orig(arg1.fcsAgent.agentThread)
arg1.fcsAgent.console == orig(arg1.fcsAgent.console)
arg1.console == orig(arg1.console)
arg1.console.name == orig(arg1.console.name)
arg1.console.name.toString == orig(arg1.console.name.toString)
arg1.console.stateChange == orig(arg1.console.stateChange)
arg1.console.consoleWriterThread == orig(arg1.console.consoleWriterThread)
arg1.console.messageQueue == orig(arg1.console.messageQueue)
arg1.console.messageQueue.getClass().getName() == orig(arg1.console.messageQueue.getClass().getName())
arg2.stateChange == orig(arg2.stateChange)
arg2.agentThread == orig(arg2.agentThread)
arg2.console == orig(arg2.console)
arg1.ss == null
arg1.s == null
arg1.factProdMngrReader == null
arg1.factProdMngrWriter has only one value
arg1.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg1.partsMngrReader == null
arg1.partsMngrWriter has only one value
arg1.kitMngrReader == null
arg1.kitMngrWriter has only one value
arg1.gantryRobotMngrReader == null
arg1.gantryRobotMngrWriter has only one value
arg1.kitAssemblyMngrReader == null
arg1.kitAssemblyMngrWriter has only one value
arg1.laneMngrReader == null
arg1.laneMngrWriter has only one value
arg1.kitRobotMngrReader == null
arg1.kitRobotMngrWriter has only one value
arg1.partsRobotMngrReader == null
arg1.partsRobotMngrWriter has only one value
arg1.numClients == 0
arg1.devices has only one value
arg1.agents has only one value
arg1.fcs has only one value
arg1.fcs.queue has only one value
arg1.fcs.queue[] == []
arg1.fcs.queue[].getClass().getName() == []
arg1.fcs.kitConfigs has only one value
arg1.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg1.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg1.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg1.fcs.partTypes has only one value
arg1.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg1.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg1.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg1.fcs.productionStarted == false
arg1.fcs.completed == null
arg1.fcsAgent has only one value
arg1.fcsAgent.stand == null
arg1.fcsAgent.partsRobot == null
arg1.fcsAgent.gantry == null
arg1.fcsAgent.nests has only one value
arg1.fcsAgent.nests[] == []
arg1.fcsAgent.nests[].getClass().getName() == []
arg1.fcsAgent.conveyor == null
arg1.fcsAgent.state has only one value
arg1.fcsAgent.orders has only one value
arg1.fcsAgent.orders[] == []
arg1.fcsAgent.orders[].getClass().getName() == []
arg1.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg1.fcsAgent.numOrdersFinished == 0
arg1.fcsAgent.camera == null
arg1.fcsAgent.partTypeCount == 0
arg1.fcsAgent.fcs == null
arg1.fcsAgent.name has only one value
arg1.fcsAgent.name.toString == "FCS"
arg1.fcsAgent.binsSet == false
arg1.fcsAgent.binsToAdd has only one value
arg1.fcsAgent.binsToAdd[] == []
arg1.fcsAgent.binsToAdd[].getClass().getName() == []
arg1.fcsAgent.stateChange has only one value
arg1.fcsAgent.agentThread == null
arg1.fcsAgent.console == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.agentThread == null
arg2.console == null
size(arg1.fcs.kitConfigs[]) == 5
size(arg1.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.GantryGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.fcs.agent == this.server.fcsAgent
this has only one value
this.heldBin == null
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.binList has only one value
this.binList[] == []
this.binList[].getClass().getName() == []
this.removeState == false
this.removeState2 == false
this.receiveState == false
this.receiveState2 == false
this.gantryAgent has only one value
this.gantryAgent.binList has only one value
this.gantryAgent.binList[] == []
this.gantryAgent.binList[].getClass().getName() == []
this.gantryAgent.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.gantryAgent.feeders has only one value
this.gantryAgent.feeders[] == []
this.gantryAgent.feeders[].getClass().getName() == []
this.gantryAgent.gantryGraphics == null
this.gantryAgent.name has only one value
this.gantryAgent.name.toString == "GantryRobot"
this.gantryAgent.animation has only one value
this.gantryAgent.stateChange has only one value
this.gantryAgent.agentThread == null
this.gantryAgent.console == null
this.newLocation == null
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.GantryGraphics.GantryGraphics(Networking.Server, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.GantryAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.GantryGraphics.GantryGraphics(Networking.Server, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.gantryAgent.stateChange == arg1.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.InspectionStandGraphics:::CLASS
===========================================================================
DeviceGraphics.InspectionStandGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this has only one value
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.standAgent == null
agent.StandAgent$StandStatus.IDLE has only one value
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE has only one value
agent.StandAgent$StandStatus.KIT_REQUESTED has only one value
agent.StandAgent$StandStatus.DONE has only one value
agent.StandAgent$StandStatus.$VALUES has only one value
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == agent.StandAgent$StandStatus[].class
agent.StandAgent$StandStatus.$VALUES[] contains no nulls and has only one value, of length 4
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() == [agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus]
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() elements == agent.StandAgent.StandStatus.class
this.standID == 3
this.location has only one value
this.location.x == 280.0
this.location.y == 400.0
this.kit == null
this.isEmpty == true
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.StandAgent$StandStatus.$VALUES[]) == 4
===========================================================================
DeviceGraphics.InspectionStandGraphics.InspectionStandGraphics(Networking.Server, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.InspectionStandGraphics.InspectionStandGraphics(Networking.Server, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this.parts[] == []
this.parts[].getClass().getName() == []
this.kitConfig == null
this.kitLocation.x == 0.0
this.kitLocation.y == 0.0
this.position == 0
this.isFull == false
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitGraphics.KitGraphics(Networking.Server):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitGraphics.KitGraphics(Networking.Server):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitRobotGraphics:::OBJECT
this.server == this.testKit1.server
this.server.factProdMngrWriter == this.testKit1.server.factProdMngrWriter
this.server.factProdMngrWriter == this.testKit2.server.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.factProdMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit1.server.partsRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.factProdMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.testKit2.server.partsRobotMngrWriter.getClass().getName()
this.server.partsMngrWriter == this.testKit1.server.partsMngrWriter
this.server.partsMngrWriter == this.testKit2.server.partsMngrWriter
this.server.kitMngrWriter == this.testKit1.server.kitMngrWriter
this.server.kitMngrWriter == this.testKit2.server.kitMngrWriter
this.server.gantryRobotMngrWriter == this.testKit1.server.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter == this.testKit2.server.gantryRobotMngrWriter
this.server.kitAssemblyMngrWriter == this.testKit1.server.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter == this.testKit2.server.kitAssemblyMngrWriter
this.server.laneMngrWriter == this.testKit1.server.laneMngrWriter
this.server.laneMngrWriter == this.testKit2.server.laneMngrWriter
this.server.kitRobotMngrWriter == this.testKit1.server.kitRobotMngrWriter
this.server.kitRobotMngrWriter == this.testKit2.server.kitRobotMngrWriter
this.server.partsRobotMngrWriter == this.testKit1.server.partsRobotMngrWriter
this.server.partsRobotMngrWriter == this.testKit2.server.partsRobotMngrWriter
this.server.numClients == this.testKit1.server.numClients
this.server.numClients == this.testKit2.server.numClients
this.server.devices == this.testKit1.server.devices
this.server.devices == this.testKit2.server.devices
this.server.agents == this.testKit1.server.agents
this.server.agents == this.testKit2.server.agents
this.server.fcs == this.testKit1.server.fcs
this.server.fcs == this.testKit2.server.fcs
this.server.fcs.agent == this.server.fcsAgent
this.server.fcs.server == this.testKit1.server
this.server.fcsAgent == this.testKit1.server.fcsAgent
this.server.fcsAgent == this.testKit2.server.fcsAgent
this.server.console == this.testKit1.server.console
this.server.console == this.testKit2.server.console
this.kitRobotAgent.state == agent.KitRobotAgent$KitRobotState.IDLE
this.standAgent.status == agent.StandAgent$StandStatus.IDLE
this.testKit1.server == this.testKit2.server
this has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.kitPositions has only one value
this.kitRobotAgent.myKits has only one value
this.kitRobotAgent.myKits[] == []
this.kitRobotAgent.myKits[].getClass().getName() == []
this.kitRobotAgent.myKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.kitRobotAgent.standPositions has only one value
this.kitRobotAgent.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
this.kitRobotAgent.kitWaitingOnConveyor == false
this.kitRobotAgent.kitRequested == false
this.kitRobotAgent.numKitsToMake == 0
this.kitRobotAgent.numKitsRequested == 0
this.kitRobotAgent.animation has only one value
this.kitRobotAgent.stand == null
this.kitRobotAgent.conveyor == null
this.kitRobotAgent.camera == null
this.kitRobotAgent.kitrobotGraphics == null
this.kitRobotAgent.mockgraphics == null
this.kitRobotAgent.state has only one value
agent.KitRobotAgent$KitRobotState.IDLE has only one value
agent.KitRobotAgent$KitRobotState.HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.$VALUES has only one value
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == agent.KitRobotAgent$KitRobotState[].class
agent.KitRobotAgent$KitRobotState.$VALUES[] contains no nulls and has only one value, of length 3
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() == [agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState]
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() elements == agent.KitRobotAgent.KitRobotState.class
this.kitRobotAgent.name has only one value
this.kitRobotAgent.name.toString == "KitRobot"
this.kitRobotAgent.stateChange has only one value
this.kitRobotAgent.agentThread == null
this.kitRobotAgent.console == null
this.standAgent.kitrobot == null
this.standAgent.partsrobot == null
this.standAgent.fcs == null
this.standAgent.name has only one value
this.standAgent.name.toString == "Stand"
this.standAgent.MyKits has only one value
this.standAgent.MyKits[] contains only nulls and has only one value, of length 3
this.standAgent.MyKits[] elements == null
this.standAgent.MyKits[].getClass().getName() == [null, null, null]
this.standAgent.MyKits[].getClass().getName() elements == null
this.standAgent.numKitsToMake == 0
this.standAgent.numKitsMade == 0
this.standAgent.oldLocForKitBeingInspected == 0
this.standAgent.start == false
this.standAgent.status has only one value
agent.StandAgent$StandStatus.IDLE has only one value
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE has only one value
agent.StandAgent$StandStatus.KIT_REQUESTED has only one value
agent.StandAgent$StandStatus.DONE has only one value
agent.StandAgent$StandStatus.$VALUES has only one value
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == agent.StandAgent$StandStatus[].class
agent.StandAgent$StandStatus.$VALUES[] contains no nulls and has only one value, of length 4
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() == [agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus]
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() elements == agent.StandAgent.StandStatus.class
this.standAgent.stateChange has only one value
this.standAgent.agentThread == null
this.standAgent.console == null
this.testKit1.parts has only one value
this.testKit1.parts[] == []
this.testKit1.parts[].getClass().getName() == []
this.testKit1.kitConfig == null
this.testKit1.kitLocation has only one value
this.testKit1.kitLocation.x == 0.0
this.testKit1.kitLocation.y == 0.0
this.testKit1.position == 0
this.testKit1.isFull == false
this.testKit1.server has only one value
this.testKit1.server.ss == null
this.testKit1.server.s == null
this.testKit1.server.factProdMngrReader == null
this.testKit1.server.partsMngrReader == null
this.testKit1.server.kitMngrReader == null
this.testKit1.server.gantryRobotMngrReader == null
this.testKit1.server.kitAssemblyMngrReader == null
this.testKit1.server.laneMngrReader == null
this.testKit1.server.kitRobotMngrReader == null
this.testKit1.server.partsRobotMngrReader == null
this.testKit2.parts has only one value
this.testKit2.parts[] == []
this.testKit2.parts[].getClass().getName() == []
this.testKit2.kitConfig == null
this.testKit2.kitLocation has only one value
this.testKit2.kitLocation.x == 0.0
this.testKit2.kitLocation.y == 0.0
this.testKit2.position == 0
this.testKit2.isFull == false
this.testKit2.server.ss == null
this.testKit2.server.s == null
this.testKit2.server.factProdMngrReader == null
this.testKit2.server.partsMngrReader == null
this.testKit2.server.kitMngrReader == null
this.testKit2.server.gantryRobotMngrReader == null
this.testKit2.server.kitAssemblyMngrReader == null
this.testKit2.server.laneMngrReader == null
this.testKit2.server.kitRobotMngrReader == null
this.testKit2.server.partsRobotMngrReader == null
this.currentKit == null
this.inspectionLocation.x == 240.0
this.inspectionLocation.y == 100.0
this.location1.x == 280.0
this.location1.y == 200.0
this.location2.x == 280.0
this.location2.y == 300.0
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.KitRobotAgent$KitRobotState.$VALUES[]) == 3
size(this.standAgent.MyKits[]) == 3
size(agent.StandAgent$StandStatus.$VALUES[]) == 4
===========================================================================
DeviceGraphics.KitRobotGraphics.KitRobotGraphics(Networking.Server, agent.Agent, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.KitRobotAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
arg2 has only one value
arg2.getClass().getName() == agent.StandAgent.class
arg2.stateChange has only one value
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitRobotGraphics.KitRobotGraphics(Networking.Server, agent.Agent, agent.Agent):::EXIT
this.server == this.server.fcs.server
this.server == this.testKit2.server
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.kitRobotAgent.stateChange == arg1.stateChange
this.standAgent.stateChange == arg2.stateChange
this.testKit1.server.factProdMngrWriter == arg0.factProdMngrWriter
this.testKit1.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.partsMngrWriter == arg0.partsMngrWriter
this.testKit1.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.kitMngrWriter == arg0.kitMngrWriter
this.testKit1.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.testKit1.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.testKit1.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.laneMngrWriter == arg0.laneMngrWriter
this.testKit1.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.testKit1.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.testKit1.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit1.server.numClients == arg0.numClients
this.testKit1.server.devices == arg0.devices
this.testKit1.server.agents == arg0.agents
this.testKit1.server.fcs == arg0.fcs
this.testKit1.server.fcsAgent == arg0.fcsAgent
this.testKit1.server.console == arg0.console
this.testKit2.server.factProdMngrWriter == arg0.factProdMngrWriter
this.testKit2.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.partsMngrWriter == arg0.partsMngrWriter
this.testKit2.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.kitMngrWriter == arg0.kitMngrWriter
this.testKit2.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.testKit2.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.testKit2.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.laneMngrWriter == arg0.laneMngrWriter
this.testKit2.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.testKit2.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.testKit2.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.testKit2.server.numClients == arg0.numClients
this.testKit2.server.devices == arg0.devices
this.testKit2.server.agents == arg0.agents
this.testKit2.server.fcs == arg0.fcs
this.testKit2.server.fcsAgent == arg0.fcsAgent
this.testKit2.server.console == arg0.console
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg2.stateChange == orig(arg2.stateChange)
arg2.agentThread == orig(arg2.agentThread)
arg2.console == orig(arg2.console)
this.server has only one value
this.kitRobotAgent has only one value
this.standAgent has only one value
this.testKit1 has only one value
this.testKit2 has only one value
this.inspectionLocation has only one value
this.location1 has only one value
this.location2 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
arg2.stateChange has only one value
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.KitRobotGraphics.initKitPositions():::ENTER
this.server == null
this.kitRobotAgent == null
this.standAgent == null
this.testKit1 == null
this.testKit2 == null
this.inspectionLocation == null
this.location1 == null
this.location2 == null
===========================================================================
DeviceGraphics.KitRobotGraphics.initKitPositions():::EXIT
this.server == orig(this.server)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.kitPositions == orig(this.kitPositions)
this.kitRobotAgent == orig(this.kitRobotAgent)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.standAgent == orig(this.standAgent)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.testKit1 == orig(this.testKit1)
this.testKit2 == orig(this.testKit2)
this.currentKit == orig(this.currentKit)
this.inspectionLocation == orig(this.inspectionLocation)
this.location1 == orig(this.location1)
this.location2 == orig(this.location2)
this.server == null
this.kitRobotAgent == null
this.standAgent == null
this.testKit1 == null
this.testKit2 == null
this.inspectionLocation == null
this.location1 == null
this.location2 == null
===========================================================================
DeviceGraphics.LaneGraphics:::CLASS
===========================================================================
DeviceGraphics.LaneGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this.laneAgent.requestList.getClass().getName() == this.laneAgent.currentParts.getClass().getName()
this.laneAgent.state == agent.LaneAgent$LaneStatus.FILLING
this.endY == 0
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.laneAgent.requestList[] == []
this.laneAgent.requestList[].getClass().getName() == []
this.laneAgent.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.laneAgent.currentParts[] == []
this.laneAgent.currentParts[].getClass().getName() == []
this.laneAgent.currentType == null
this.laneAgent.topLimit == 5
this.laneAgent.lowerThreshold == 3
this.laneAgent.extraRequestCount == 0
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
this.laneAgent.feeder == null
this.laneAgent.nest == null
this.laneAgent.laneGUI == null
this.laneAgent.agentThread == null
this.laneAgent.console == null
this.partsOnLane[] == []
this.partsOnLane[].getClass().getName() == []
this.laneOn == true
this.jamLocation == null
this.jammed == false
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
this.server.factProdMngrWriter.getClass().getName() != this.server.fcsAgent.orders.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != this.server.console.messageQueue.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != this.laneAgent.requestList.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != this.server.console.messageQueue.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != this.laneAgent.requestList.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.server.console.messageQueue.getClass().getName() != this.laneAgent.requestList.getClass().getName()
this.server.console.messageQueue.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.laneAgent.requestList.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
===========================================================================
DeviceGraphics.LaneGraphics.LaneGraphics(Networking.Server, int, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.getClass().getName() == agent.LaneAgent.class
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
arg0.factProdMngrWriter.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg2.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != arg2.getClass().getName()
arg0.console.messageQueue.getClass().getName() != arg2.getClass().getName()
===========================================================================
DeviceGraphics.LaneGraphics.LaneGraphics(Networking.Server, int, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.laneID == orig(arg1)
this.laneAgent.stateChange == arg2.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg2.stateChange == orig(arg2.stateChange)
arg2.agentThread == orig(arg2.agentThread)
arg2.console == orig(arg2.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
this.laneAgent.requestList.getClass().getName() != arg0.factProdMngrWriter.getClass().getName()
this.laneAgent.requestList.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
this.laneAgent.requestList.getClass().getName() != arg0.console.messageQueue.getClass().getName()
this.laneAgent.requestList.getClass().getName() != orig(arg2.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != arg0.factProdMngrWriter.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != arg0.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != orig(arg2.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != orig(arg2.getClass().getName())
arg0.fcsAgent.orders.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != orig(arg2.getClass().getName())
arg0.console.messageQueue.getClass().getName() != orig(arg2.getClass().getName())
===========================================================================
DeviceGraphics.NestGraphics:::CLASS
===========================================================================
DeviceGraphics.NestGraphics:::OBJECT
this.server == this.server.fcs.server
this.server.factProdMngrWriter.getClass().getName() == this.server.partsMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.gantryRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitAssemblyMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.laneMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.kitRobotMngrWriter.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() == this.server.partsRobotMngrWriter.getClass().getName()
this.server.fcs.agent == this.server.fcsAgent
this.nestAgent.requestList.getClass().getName() == this.nestAgent.currentParts.getClass().getName()
this.nestAgent.state == agent.NestAgent$NestState.DONE_PURGING
this.nestAgent.laneState == agent.NestAgent$LaneState.READY
this.server has only one value
this.server != null
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter != null
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.partsMngrWriter != null
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.kitMngrWriter != null
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.gantryRobotMngrWriter != null
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.kitAssemblyMngrWriter != null
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.laneMngrWriter != null
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.kitRobotMngrWriter != null
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.partsRobotMngrWriter != null
this.server.numClients == 0
this.server.devices has only one value
this.server.devices != null
this.server.agents has only one value
this.server.agents != null
this.server.fcs has only one value
this.server.fcs != null
this.server.fcs.queue has only one value
this.server.fcs.queue != null
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs != null
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[] elements != null
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes != null
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[] elements != null
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent != null
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests != null
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.state != null
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders != null
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name != null
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd != null
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.stateChange != null
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
this.server.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name != null
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.stateChange != null
this.server.console.consoleWriterThread has only one value
this.server.console.consoleWriterThread != null
this.server.console.messageQueue has only one value
this.server.console.messageQueue != null
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.nestID >= 0
this.nestAgent != null
this.nestAgent.requestList != null
this.nestAgent.requestList[] == []
this.nestAgent.requestList[].getClass().getName() == []
this.nestAgent.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nestAgent.currentPartType == null
this.nestAgent.currentParts != null
this.nestAgent.currentParts[] == []
this.nestAgent.currentParts[].getClass().getName() == []
this.nestAgent.count == 0
this.nestAgent.countRequest == 0
this.nestAgent.full == 8
this.nestAgent.takingParts == false
this.nestAgent.partReady == false
this.nestAgent.partTypeNull == false
this.nestAgent.nestGraphics == null
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PURGING != null
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.PRIORITY_PURGE != null
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE != null
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.DONE_PURGING != null
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.NULL != null
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES != null
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[] elements != null
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
this.nestAgent.animation != null
this.nestAgent.name != null
this.nestAgent.lane == null
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.PURGING != null
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.READY != null
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES != null
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[] elements != null
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
this.nestAgent.camera == null
this.nestAgent.stateChange != null
this.nestAgent.agentThread == null
this.nestAgent.console == null
this.partLocs[] elements != null
this.partLocs[].getClass().getName() == [Utils.Location, Utils.Location, Utils.Location, Utils.Location, Utils.Location, Utils.Location, Utils.Location, Utils.Location]
this.partLocs[].getClass().getName() elements == Utils.Location.class
this.location != null
this.location.x == 565.0
this.partsInNest != null
this.partsInNest[] == []
this.partsInNest[].getClass().getName() == []
this.partsInNestQuality != null
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
size(this.partLocs[]) == 8
this.server.factProdMngrWriter.getClass().getName() != this.server.fcsAgent.orders.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != this.server.console.messageQueue.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != this.nestAgent.requestList.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.server.factProdMngrWriter.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != this.server.console.messageQueue.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != this.nestAgent.requestList.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.server.fcsAgent.orders.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.server.console.messageQueue.getClass().getName() != this.nestAgent.requestList.getClass().getName()
this.server.console.messageQueue.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.server.console.messageQueue.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.nestAgent.requestList.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.nestAgent.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
===========================================================================
DeviceGraphics.NestGraphics.NestGraphics(Networking.Server, int, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.getClass().getName() == agent.NestAgent.class
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
arg0.factProdMngrWriter.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg2.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != arg2.getClass().getName()
arg0.console.messageQueue.getClass().getName() != arg2.getClass().getName()
===========================================================================
DeviceGraphics.NestGraphics.NestGraphics(Networking.Server, int, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.factProdMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.partsMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.kitMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.gantryRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.kitAssemblyMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.laneMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.kitRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.partsRobotMngrWriter.getClass().getName() == arg0.factProdMngrWriter.getClass().getName()
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.orders.getClass().getName() == arg0.fcsAgent.orders.getClass().getName()
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.server.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.nestID == orig(arg1)
this.nestAgent.stateChange == arg2.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == arg0.partsMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.gantryRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitAssemblyMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.laneMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.kitRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == arg0.partsRobotMngrWriter.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg2.stateChange == orig(arg2.stateChange)
arg2.agentThread == orig(arg2.agentThread)
arg2.console == orig(arg2.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg2.agentThread == null
arg2.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
this.nestAgent.requestList.getClass().getName() != arg0.factProdMngrWriter.getClass().getName()
this.nestAgent.requestList.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
this.nestAgent.requestList.getClass().getName() != arg0.console.messageQueue.getClass().getName()
this.nestAgent.requestList.getClass().getName() != orig(arg2.getClass().getName())
agent.NestAgent$NestState.$VALUES.getClass().getName() != arg0.factProdMngrWriter.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != arg0.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != orig(arg2.getClass().getName())
agent.NestAgent$LaneState.$VALUES.getClass().getName() != arg0.factProdMngrWriter.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != arg0.console.messageQueue.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != orig(arg2.getClass().getName())
arg0.factProdMngrWriter.getClass().getName() != arg0.fcsAgent.orders.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.factProdMngrWriter.getClass().getName() != orig(arg2.getClass().getName())
arg0.fcsAgent.orders.getClass().getName() != arg0.console.messageQueue.getClass().getName()
arg0.fcsAgent.orders.getClass().getName() != orig(arg2.getClass().getName())
arg0.console.messageQueue.getClass().getName() != orig(arg2.getClass().getName())
===========================================================================
DeviceGraphics.NestGraphics.generatePartLocations():::ENTER
this.partLocs == null
===========================================================================
DeviceGraphics.NestGraphics.generatePartLocations():::EXIT
this.server == orig(this.server)
this.server == orig(this.server.fcs.server)
this.server.ss == orig(this.server.ss)
this.server.s == orig(this.server.s)
this.server.factProdMngrReader == orig(this.server.factProdMngrReader)
this.server.factProdMngrWriter == orig(this.server.factProdMngrWriter)
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.factProdMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.partsMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.kitMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.gantryRobotMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.kitAssemblyMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.laneMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.kitRobotMngrWriter.getClass().getName())
this.server.factProdMngrWriter.getClass().getName() == orig(this.server.partsRobotMngrWriter.getClass().getName())
this.server.partsMngrReader == orig(this.server.partsMngrReader)
this.server.partsMngrWriter == orig(this.server.partsMngrWriter)
this.server.kitMngrReader == orig(this.server.kitMngrReader)
this.server.kitMngrWriter == orig(this.server.kitMngrWriter)
this.server.gantryRobotMngrReader == orig(this.server.gantryRobotMngrReader)
this.server.gantryRobotMngrWriter == orig(this.server.gantryRobotMngrWriter)
this.server.kitAssemblyMngrReader == orig(this.server.kitAssemblyMngrReader)
this.server.kitAssemblyMngrWriter == orig(this.server.kitAssemblyMngrWriter)
this.server.laneMngrReader == orig(this.server.laneMngrReader)
this.server.laneMngrWriter == orig(this.server.laneMngrWriter)
this.server.kitRobotMngrReader == orig(this.server.kitRobotMngrReader)
this.server.kitRobotMngrWriter == orig(this.server.kitRobotMngrWriter)
this.server.partsRobotMngrReader == orig(this.server.partsRobotMngrReader)
this.server.partsRobotMngrWriter == orig(this.server.partsRobotMngrWriter)
this.server.numClients == orig(this.server.numClients)
this.server.devices == orig(this.server.devices)
this.server.agents == orig(this.server.agents)
this.server.fcs == orig(this.server.fcs)
this.server.fcs.queue == orig(this.server.fcs.queue)
this.server.fcs.queue[] == orig(this.server.fcs.queue[])
this.server.fcs.kitConfigs == orig(this.server.fcs.kitConfigs)
this.server.fcs.kitConfigs[] == orig(this.server.fcs.kitConfigs[])
this.server.fcs.partTypes == orig(this.server.fcs.partTypes)
this.server.fcs.partTypes[] == orig(this.server.fcs.partTypes[])
this.server.fcs.productionStarted == orig(this.server.fcs.productionStarted)
this.server.fcs.completed == orig(this.server.fcs.completed)
this.server.fcsAgent == orig(this.server.fcs.agent)
this.server.fcsAgent == orig(this.server.fcsAgent)
this.server.fcsAgent.stand == orig(this.server.fcsAgent.stand)
this.server.fcsAgent.partsRobot == orig(this.server.fcsAgent.partsRobot)
this.server.fcsAgent.gantry == orig(this.server.fcsAgent.gantry)
this.server.fcsAgent.nests == orig(this.server.fcsAgent.nests)
this.server.fcsAgent.nests[] == orig(this.server.fcsAgent.nests[])
this.server.fcsAgent.conveyor == orig(this.server.fcsAgent.conveyor)
this.server.fcsAgent.state == orig(this.server.fcsAgent.state)
this.server.fcsAgent.orders == orig(this.server.fcsAgent.orders)
this.server.fcsAgent.orders[] == orig(this.server.fcsAgent.orders[])
this.server.fcsAgent.orders.getClass().getName() == orig(this.server.fcsAgent.orders.getClass().getName())
this.server.fcsAgent.numOrdersFinished == orig(this.server.fcsAgent.numOrdersFinished)
this.server.fcsAgent.camera == orig(this.server.fcsAgent.camera)
this.server.fcsAgent.partTypeCount == orig(this.server.fcsAgent.partTypeCount)
this.server.fcsAgent.fcs == orig(this.server.fcsAgent.fcs)
this.server.fcsAgent.name == orig(this.server.fcsAgent.name)
this.server.fcsAgent.name.toString == orig(this.server.fcsAgent.name.toString)
this.server.fcsAgent.binsSet == orig(this.server.fcsAgent.binsSet)
this.server.fcsAgent.binsToAdd == orig(this.server.fcsAgent.binsToAdd)
this.server.fcsAgent.binsToAdd[] == orig(this.server.fcsAgent.binsToAdd[])
this.server.fcsAgent.stateChange == orig(this.server.fcsAgent.stateChange)
this.server.fcsAgent.agentThread == orig(this.server.fcsAgent.agentThread)
this.server.fcsAgent.console == orig(this.server.fcsAgent.console)
this.server.console == orig(this.server.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == orig(this.server.console.name)
this.server.console.name.toString == orig(this.server.console.name.toString)
this.server.console.stateChange == orig(this.server.console.stateChange)
this.server.console.consoleWriterThread == orig(this.server.console.consoleWriterThread)
this.server.console.messageQueue == orig(this.server.console.messageQueue)
this.server.console.messageQueue.getClass().getName() == orig(this.server.console.messageQueue.getClass().getName())
this.nestID == orig(this.nestID)
this.nestAgent == orig(this.nestAgent)
this.nestAgent.requestList == orig(this.nestAgent.requestList)
this.nestAgent.requestList[] == orig(this.nestAgent.requestList[])
this.nestAgent.requestList.getClass().getName() == orig(this.nestAgent.requestList.getClass().getName())
this.nestAgent.requestList.getClass().getName() == orig(this.nestAgent.currentParts.getClass().getName())
this.nestAgent.currentPartType == orig(this.nestAgent.currentPartType)
this.nestAgent.currentParts == orig(this.nestAgent.currentParts)
this.nestAgent.currentParts[] == orig(this.nestAgent.currentParts[])
this.nestAgent.count == orig(this.nestAgent.count)
this.nestAgent.countRequest == orig(this.nestAgent.countRequest)
this.nestAgent.full == orig(this.nestAgent.full)
this.nestAgent.takingParts == orig(this.nestAgent.takingParts)
this.nestAgent.partReady == orig(this.nestAgent.partReady)
this.nestAgent.partTypeNull == orig(this.nestAgent.partTypeNull)
this.nestAgent.nestGraphics == orig(this.nestAgent.nestGraphics)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(this.nestAgent.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.nestAgent.animation == orig(this.nestAgent.animation)
this.nestAgent.name == orig(this.nestAgent.name)
this.nestAgent.name.toString == orig(this.nestAgent.name.toString)
this.nestAgent.lane == orig(this.nestAgent.lane)
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.nestAgent.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.nestAgent.camera == orig(this.nestAgent.camera)
this.nestAgent.stateChange == orig(this.nestAgent.stateChange)
this.nestAgent.agentThread == orig(this.nestAgent.agentThread)
this.nestAgent.console == orig(this.nestAgent.console)
this.location == orig(this.location)
this.location.x == orig(this.location.x)
this.location.y == orig(this.location.y)
this.partsInNest == orig(this.partsInNest)
this.partsInNest[] == orig(this.partsInNest[])
this.partsInNestQuality == orig(this.partsInNestQuality)
===========================================================================
DeviceGraphics.PartsRobotGraphics:::OBJECT
this.initialLocation == this.currentLocation
this.initialLocation.x == this.currentLocation.x
this.initialLocation.y == this.currentLocation.y
this.server == this.server.fcs.server
this.server.fcs.agent == this.server.fcsAgent
this.partsRobotAgent.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this has only one value
this.initialLocation has only one value
this.initialLocation.x == 250.0
this.initialLocation.y == 450.0
this.arm1 == false
this.arm2 == false
this.arm3 == false
this.arm4 == false
this.partArray has only one value
this.partArray[] == []
this.partArray[].getClass().getName() == []
this.kit == null
this.kitPosition == 0
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.partsRobotAgent has only one value
this.partsRobotAgent.name has only one value
this.partsRobotAgent.name.toString == "PartsRobot"
this.partsRobotAgent.Kitconfig == null
this.partsRobotAgent.MyKits has only one value
this.partsRobotAgent.MyKits[] == []
this.partsRobotAgent.MyKits[].getClass().getName() == []
this.partsRobotAgent.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.partsRobotAgent.GoodParts has only one value
this.partsRobotAgent.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.partsRobotAgent.Arms has only one value
this.partsRobotAgent.Arms[] contains no nulls and has only one value, of length 4
this.partsRobotAgent.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
this.partsRobotAgent.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
this.partsRobotAgent.time has only one value
this.partsRobotAgent.kitsNum == 0
this.partsRobotAgent.timer has only one value
this.partsRobotAgent.KitsOnStand == null
this.partsRobotAgent.stand == null
this.partsRobotAgent.partsRobotGraphics == null
this.partsRobotAgent.dropChance == 0.0
agent.PartsRobotAgent$PartsRobotStatus.IDLE has only one value
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP has only one value
agent.PartsRobotAgent$PartsRobotStatus.PLACING has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$PartsRobotStatus[].class
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus]
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.PartsRobotStatus.class
this.partsRobotAgent.animation has only one value
this.partsRobotAgent.stateChange has only one value
this.partsRobotAgent.agentThread == null
this.partsRobotAgent.console == null
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(this.partsRobotAgent.Arms[]) == 4
size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[]) == 3
===========================================================================
DeviceGraphics.PartsRobotGraphics.PartsRobotGraphics(Networking.Server, agent.Agent):::ENTER
arg0 == arg0.fcs.server
arg0.fcs.agent == arg0.fcsAgent
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.PartsRobotAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.PartsRobotGraphics.PartsRobotGraphics(Networking.Server, agent.Agent):::EXIT
this.server == arg0.fcs.server
this.server == orig(arg0)
this.server == orig(arg0.fcs.server)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcs == arg0.fcs
this.server.fcs.queue == arg0.fcs.queue
this.server.fcs.kitConfigs == arg0.fcs.kitConfigs
this.server.fcs.partTypes == arg0.fcs.partTypes
this.server.fcs.agent == arg0.fcsAgent
this.server.fcs.productionStarted == arg0.fcs.productionStarted
this.server.fcsAgent == arg0.fcsAgent
this.server.fcsAgent.nests == arg0.fcsAgent.nests
this.server.fcsAgent.state == arg0.fcsAgent.state
this.server.fcsAgent.orders == arg0.fcsAgent.orders
this.server.fcsAgent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.server.fcsAgent.partTypeCount == arg0.fcsAgent.partTypeCount
this.server.fcsAgent.name == arg0.fcsAgent.name
this.server.fcsAgent.binsSet == arg0.fcsAgent.binsSet
this.server.fcsAgent.binsToAdd == arg0.fcsAgent.binsToAdd
this.server.fcsAgent.stateChange == arg0.fcsAgent.stateChange
this.server.console == arg0.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
this.partsRobotAgent.stateChange == arg1.stateChange
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == arg0.fcsAgent
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcs.agent)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.StandGraphics:::CLASS
===========================================================================
DeviceGraphics.StandGraphics:::OBJECT
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.partsMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.kitMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.gantryRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.kitAssemblyMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.laneMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.kitRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.partsRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs has only one value
this.server.fcs.queue has only one value
this.server.fcs.queue[] == []
this.server.fcs.queue[].getClass().getName() == []
this.server.fcs.kitConfigs has only one value
this.server.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.server.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.server.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.server.fcs.partTypes has only one value
this.server.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.server.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.server.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.server.fcs.agent has only one value
this.server.fcs.server has only one value
this.server.fcs.productionStarted == false
this.server.fcs.completed == null
this.server.fcsAgent has only one value
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests has only one value
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.state has only one value
this.server.fcsAgent.orders has only one value
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.server.fcsAgent.numOrdersFinished == 0
this.server.fcsAgent.camera == null
this.server.fcsAgent.partTypeCount == 0
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name has only one value
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsSet == false
this.server.fcsAgent.binsToAdd has only one value
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.stateChange has only one value
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.standAgent == null
agent.StandAgent$StandStatus.IDLE has only one value
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE has only one value
agent.StandAgent$StandStatus.KIT_REQUESTED has only one value
agent.StandAgent$StandStatus.DONE has only one value
agent.StandAgent$StandStatus.$VALUES has only one value
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == agent.StandAgent$StandStatus[].class
agent.StandAgent$StandStatus.$VALUES[] contains no nulls and has only one value, of length 4
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() == [agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus]
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() elements == agent.StandAgent.StandStatus.class
this.standID one of { 1, 2, 3 }
this.location.x one of { 240.0, 280.0 }
this.location.y one of { 200.0, 300.0, 400.0 }
this.kit == null
this.isEmpty == true
size(this.server.fcs.kitConfigs[]) == 5
size(this.server.fcs.partTypes[]) == 10
size(agent.StandAgent$StandStatus.$VALUES[]) == 4
===========================================================================
DeviceGraphics.StandGraphics.StandGraphics(Networking.Server, agent.Agent, int):::ENTER
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.partsMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.kitMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.gantryRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.kitAssemblyMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.laneMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.kitRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.partsRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.agent has only one value
arg0.fcs.server has only one value
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 == null
arg2 one of { 1, 2, 3 }
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
DeviceGraphics.StandGraphics.StandGraphics(Networking.Server, agent.Agent, int):::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.factProdMngrWriter.getClass().getName() == orig(arg0.factProdMngrWriter.getClass().getName())
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.partsMngrWriter.getClass().getName() == orig(arg0.partsMngrWriter.getClass().getName())
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.kitMngrWriter.getClass().getName() == orig(arg0.kitMngrWriter.getClass().getName())
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.gantryRobotMngrWriter.getClass().getName() == orig(arg0.gantryRobotMngrWriter.getClass().getName())
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.kitAssemblyMngrWriter.getClass().getName() == orig(arg0.kitAssemblyMngrWriter.getClass().getName())
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.laneMngrWriter.getClass().getName() == orig(arg0.laneMngrWriter.getClass().getName())
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.kitRobotMngrWriter.getClass().getName() == orig(arg0.kitRobotMngrWriter.getClass().getName())
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.partsRobotMngrWriter.getClass().getName() == orig(arg0.partsRobotMngrWriter.getClass().getName())
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcs.queue == orig(arg0.fcs.queue)
arg0.fcs.queue[] == orig(arg0.fcs.queue[])
arg0.fcs.kitConfigs == orig(arg0.fcs.kitConfigs)
arg0.fcs.kitConfigs[] == orig(arg0.fcs.kitConfigs[])
arg0.fcs.partTypes == orig(arg0.fcs.partTypes)
arg0.fcs.partTypes[] == orig(arg0.fcs.partTypes[])
arg0.fcs.agent == orig(arg0.fcs.agent)
arg0.fcs.server == orig(arg0.fcs.server)
arg0.fcs.productionStarted == orig(arg0.fcs.productionStarted)
arg0.fcs.completed == orig(arg0.fcs.completed)
arg0.fcsAgent == orig(arg0.fcsAgent)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests == orig(arg0.fcsAgent.nests)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.state == orig(arg0.fcsAgent.state)
arg0.fcsAgent.orders == orig(arg0.fcsAgent.orders)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.orders.getClass().getName() == orig(arg0.fcsAgent.orders.getClass().getName())
arg0.fcsAgent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name == orig(arg0.fcsAgent.name)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsSet == orig(arg0.fcsAgent.binsSet)
arg0.fcsAgent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == orig(arg0.fcsAgent.stateChange)
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg0.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.partsMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.kitMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.gantryRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.kitAssemblyMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.laneMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.kitRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.partsRobotMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs has only one value
arg0.fcs.queue has only one value
arg0.fcs.queue[] == []
arg0.fcs.queue[].getClass().getName() == []
arg0.fcs.kitConfigs has only one value
arg0.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.fcs.partTypes has only one value
arg0.fcs.partTypes[] contains no nulls and has only one value, of length 10
arg0.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.fcs.agent has only one value
arg0.fcs.server has only one value
arg0.fcs.productionStarted == false
arg0.fcs.completed == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.stateChange has only one value
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg0.fcs.kitConfigs[]) == 5
size(arg0.fcs.partTypes[]) == 10
===========================================================================
Networking.DummyWriter:::OBJECT
===========================================================================
Networking.DummyWriter.DummyWriter():::EXIT
===========================================================================
Networking.Server$1:::OBJECT
Networking.Server.this == Networking.Server.this.fcs.server
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.partsMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.gantryRobotMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitAssemblyMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.laneMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitRobotMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.partsRobotMngrWriter.getClass().getName()
Networking.Server.this.fcs == Networking.Server.this.fcsAgent.fcs
Networking.Server.this.fcs.agent == Networking.Server.this.fcsAgent
Networking.Server.this.fcsAgent.console == Networking.Server.this.console
this has only one value
Networking.Server.this has only one value
Networking.Server.this.ss == null
Networking.Server.this.s == null
Networking.Server.this.factProdMngrReader == null
Networking.Server.this.factProdMngrWriter has only one value
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
Networking.Server.this.partsMngrReader == null
Networking.Server.this.partsMngrWriter has only one value
Networking.Server.this.kitMngrReader == null
Networking.Server.this.kitMngrWriter has only one value
Networking.Server.this.gantryRobotMngrReader == null
Networking.Server.this.gantryRobotMngrWriter has only one value
Networking.Server.this.kitAssemblyMngrReader == null
Networking.Server.this.kitAssemblyMngrWriter has only one value
Networking.Server.this.laneMngrReader == null
Networking.Server.this.laneMngrWriter has only one value
Networking.Server.this.kitRobotMngrReader == null
Networking.Server.this.kitRobotMngrWriter has only one value
Networking.Server.this.partsRobotMngrReader == null
Networking.Server.this.partsRobotMngrWriter has only one value
Networking.Server.this.numClients == 0
Networking.Server.this.devices has only one value
Networking.Server.this.agents has only one value
Networking.Server.this.fcs has only one value
Networking.Server.this.fcs.queue has only one value
Networking.Server.this.fcs.queue[] == []
Networking.Server.this.fcs.queue[].getClass().getName() == []
Networking.Server.this.fcs.kitConfigs has only one value
Networking.Server.this.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
Networking.Server.this.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
Networking.Server.this.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
Networking.Server.this.fcs.partTypes has only one value
Networking.Server.this.fcs.partTypes[] contains no nulls and has only one value, of length 10
Networking.Server.this.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
Networking.Server.this.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
Networking.Server.this.fcs.server has only one value
Networking.Server.this.fcs.productionStarted == false
Networking.Server.this.fcs.completed == null
Networking.Server.this.fcsAgent has only one value
Networking.Server.this.fcsAgent.stand has only one value
Networking.Server.this.fcsAgent.stand.getClass().getName() == agent.StandAgent.class
Networking.Server.this.fcsAgent.partsRobot has only one value
Networking.Server.this.fcsAgent.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
Networking.Server.this.fcsAgent.gantry has only one value
Networking.Server.this.fcsAgent.gantry.getClass().getName() == agent.GantryAgent.class
Networking.Server.this.fcsAgent.nests has only one value
Networking.Server.this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
Networking.Server.this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
Networking.Server.this.fcsAgent.nests[].getClass().getName() elements == agent.NestAgent.class
Networking.Server.this.fcsAgent.conveyor has only one value
Networking.Server.this.fcsAgent.conveyor.getClass().getName() == agent.ConveyorAgent.class
Networking.Server.this.fcsAgent.state has only one value
Networking.Server.this.fcsAgent.orders has only one value
Networking.Server.this.fcsAgent.orders[] == []
Networking.Server.this.fcsAgent.orders[].getClass().getName() == []
Networking.Server.this.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
Networking.Server.this.fcsAgent.numOrdersFinished == 0
Networking.Server.this.fcsAgent.camera has only one value
Networking.Server.this.fcsAgent.camera.getClass().getName() == agent.CameraAgent.class
Networking.Server.this.fcsAgent.partTypeCount == 0
Networking.Server.this.fcsAgent.name has only one value
Networking.Server.this.fcsAgent.name.toString == "FCS"
Networking.Server.this.fcsAgent.binsSet == false
Networking.Server.this.fcsAgent.binsToAdd has only one value
Networking.Server.this.fcsAgent.binsToAdd[] == []
Networking.Server.this.fcsAgent.binsToAdd[].getClass().getName() == []
Networking.Server.this.fcsAgent.stateChange has only one value
Networking.Server.this.fcsAgent.agentThread has only one value
Networking.Server.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
Networking.Server.this.console.name has only one value
Networking.Server.this.console.name.toString == "Server"
Networking.Server.this.console.stateChange has only one value
Networking.Server.this.console.consoleWriterThread has only one value
Networking.Server.this.console.messageQueue has only one value
Networking.Server.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(Networking.Server.this.fcs.kitConfigs[]) == 5
size(Networking.Server.this.fcs.partTypes[]) == 10
size(Networking.Server.this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server$1.(Networking.Server):::ENTER
Networking.Server.this == Networking.Server.this.fcs.server
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.partsMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.gantryRobotMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitAssemblyMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.laneMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.kitRobotMngrWriter.getClass().getName()
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.Server.this.partsRobotMngrWriter.getClass().getName()
Networking.Server.this.fcs == Networking.Server.this.fcsAgent.fcs
Networking.Server.this.fcs.agent == Networking.Server.this.fcsAgent
Networking.Server.this.fcsAgent.console == Networking.Server.this.console
Networking.Server.this has only one value
Networking.Server.this.ss == null
Networking.Server.this.s == null
Networking.Server.this.factProdMngrReader == null
Networking.Server.this.factProdMngrWriter has only one value
Networking.Server.this.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
Networking.Server.this.partsMngrReader == null
Networking.Server.this.partsMngrWriter has only one value
Networking.Server.this.kitMngrReader == null
Networking.Server.this.kitMngrWriter has only one value
Networking.Server.this.gantryRobotMngrReader == null
Networking.Server.this.gantryRobotMngrWriter has only one value
Networking.Server.this.kitAssemblyMngrReader == null
Networking.Server.this.kitAssemblyMngrWriter has only one value
Networking.Server.this.laneMngrReader == null
Networking.Server.this.laneMngrWriter has only one value
Networking.Server.this.kitRobotMngrReader == null
Networking.Server.this.kitRobotMngrWriter has only one value
Networking.Server.this.partsRobotMngrReader == null
Networking.Server.this.partsRobotMngrWriter has only one value
Networking.Server.this.numClients == 0
Networking.Server.this.devices has only one value
Networking.Server.this.agents has only one value
Networking.Server.this.fcs has only one value
Networking.Server.this.fcs.queue has only one value
Networking.Server.this.fcs.queue[] == []
Networking.Server.this.fcs.queue[].getClass().getName() == []
Networking.Server.this.fcs.kitConfigs has only one value
Networking.Server.this.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
Networking.Server.this.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
Networking.Server.this.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
Networking.Server.this.fcs.partTypes has only one value
Networking.Server.this.fcs.partTypes[] contains no nulls and has only one value, of length 10
Networking.Server.this.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
Networking.Server.this.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
Networking.Server.this.fcs.productionStarted == false
Networking.Server.this.fcs.completed == null
Networking.Server.this.fcsAgent has only one value
Networking.Server.this.fcsAgent.stand has only one value
Networking.Server.this.fcsAgent.stand.getClass().getName() == agent.StandAgent.class
Networking.Server.this.fcsAgent.partsRobot has only one value
Networking.Server.this.fcsAgent.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
Networking.Server.this.fcsAgent.gantry has only one value
Networking.Server.this.fcsAgent.gantry.getClass().getName() == agent.GantryAgent.class
Networking.Server.this.fcsAgent.nests has only one value
Networking.Server.this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
Networking.Server.this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
Networking.Server.this.fcsAgent.nests[].getClass().getName() elements == agent.NestAgent.class
Networking.Server.this.fcsAgent.conveyor has only one value
Networking.Server.this.fcsAgent.conveyor.getClass().getName() == agent.ConveyorAgent.class
Networking.Server.this.fcsAgent.state has only one value
Networking.Server.this.fcsAgent.orders has only one value
Networking.Server.this.fcsAgent.orders[] == []
Networking.Server.this.fcsAgent.orders[].getClass().getName() == []
Networking.Server.this.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
Networking.Server.this.fcsAgent.numOrdersFinished == 0
Networking.Server.this.fcsAgent.camera has only one value
Networking.Server.this.fcsAgent.camera.getClass().getName() == agent.CameraAgent.class
Networking.Server.this.fcsAgent.partTypeCount == 0
Networking.Server.this.fcsAgent.name has only one value
Networking.Server.this.fcsAgent.name.toString == "FCS"
Networking.Server.this.fcsAgent.binsSet == false
Networking.Server.this.fcsAgent.binsToAdd has only one value
Networking.Server.this.fcsAgent.binsToAdd[] == []
Networking.Server.this.fcsAgent.binsToAdd[].getClass().getName() == []
Networking.Server.this.fcsAgent.stateChange has only one value
Networking.Server.this.fcsAgent.agentThread has only one value
Networking.Server.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
Networking.Server.this.console.name has only one value
Networking.Server.this.console.name.toString == "Server"
Networking.Server.this.console.stateChange has only one value
Networking.Server.this.console.consoleWriterThread has only one value
Networking.Server.this.console.messageQueue has only one value
Networking.Server.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(Networking.Server.this.fcs.kitConfigs[]) == 5
size(Networking.Server.this.fcs.partTypes[]) == 10
size(Networking.Server.this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server$1.(Networking.Server):::EXIT
Networking.Server.this == orig(Networking.Server.this)
Networking.Server.this.ss == orig(Networking.Server.this.ss)
Networking.Server.this.s == orig(Networking.Server.this.s)
Networking.Server.this.factProdMngrReader == orig(Networking.Server.this.factProdMngrReader)
Networking.Server.this.factProdMngrWriter == orig(Networking.Server.this.factProdMngrWriter)
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.factProdMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.partsMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.kitMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.gantryRobotMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.kitAssemblyMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.laneMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.kitRobotMngrWriter.getClass().getName())
Networking.Server.this.factProdMngrWriter.getClass().getName() == orig(Networking.Server.this.partsRobotMngrWriter.getClass().getName())
Networking.Server.this.partsMngrReader == orig(Networking.Server.this.partsMngrReader)
Networking.Server.this.partsMngrWriter == orig(Networking.Server.this.partsMngrWriter)
Networking.Server.this.kitMngrReader == orig(Networking.Server.this.kitMngrReader)
Networking.Server.this.kitMngrWriter == orig(Networking.Server.this.kitMngrWriter)
Networking.Server.this.gantryRobotMngrReader == orig(Networking.Server.this.gantryRobotMngrReader)
Networking.Server.this.gantryRobotMngrWriter == orig(Networking.Server.this.gantryRobotMngrWriter)
Networking.Server.this.kitAssemblyMngrReader == orig(Networking.Server.this.kitAssemblyMngrReader)
Networking.Server.this.kitAssemblyMngrWriter == orig(Networking.Server.this.kitAssemblyMngrWriter)
Networking.Server.this.laneMngrReader == orig(Networking.Server.this.laneMngrReader)
Networking.Server.this.laneMngrWriter == orig(Networking.Server.this.laneMngrWriter)
Networking.Server.this.kitRobotMngrReader == orig(Networking.Server.this.kitRobotMngrReader)
Networking.Server.this.kitRobotMngrWriter == orig(Networking.Server.this.kitRobotMngrWriter)
Networking.Server.this.partsRobotMngrReader == orig(Networking.Server.this.partsRobotMngrReader)
Networking.Server.this.partsRobotMngrWriter == orig(Networking.Server.this.partsRobotMngrWriter)
Networking.Server.this.numClients == orig(Networking.Server.this.numClients)
Networking.Server.this.devices == orig(Networking.Server.this.devices)
Networking.Server.this.agents == orig(Networking.Server.this.agents)
Networking.Server.this.fcs == orig(Networking.Server.this.fcs)
Networking.Server.this.fcs == orig(Networking.Server.this.fcsAgent.fcs)
Networking.Server.this.fcs.queue == orig(Networking.Server.this.fcs.queue)
Networking.Server.this.fcs.queue[] == orig(Networking.Server.this.fcs.queue[])
Networking.Server.this.fcs.kitConfigs == orig(Networking.Server.this.fcs.kitConfigs)
Networking.Server.this.fcs.kitConfigs[] == orig(Networking.Server.this.fcs.kitConfigs[])
Networking.Server.this.fcs.partTypes == orig(Networking.Server.this.fcs.partTypes)
Networking.Server.this.fcs.partTypes[] == orig(Networking.Server.this.fcs.partTypes[])
Networking.Server.this.fcs.server == orig(Networking.Server.this)
Networking.Server.this.fcs.productionStarted == orig(Networking.Server.this.fcs.productionStarted)
Networking.Server.this.fcs.completed == orig(Networking.Server.this.fcs.completed)
Networking.Server.this.fcsAgent == orig(Networking.Server.this.fcs.agent)
Networking.Server.this.fcsAgent == orig(Networking.Server.this.fcsAgent)
Networking.Server.this.fcsAgent.stand == orig(Networking.Server.this.fcsAgent.stand)
Networking.Server.this.fcsAgent.stand.getClass().getName() == orig(Networking.Server.this.fcsAgent.stand.getClass().getName())
Networking.Server.this.fcsAgent.partsRobot == orig(Networking.Server.this.fcsAgent.partsRobot)
Networking.Server.this.fcsAgent.partsRobot.getClass().getName() == orig(Networking.Server.this.fcsAgent.partsRobot.getClass().getName())
Networking.Server.this.fcsAgent.gantry == orig(Networking.Server.this.fcsAgent.gantry)
Networking.Server.this.fcsAgent.gantry.getClass().getName() == orig(Networking.Server.this.fcsAgent.gantry.getClass().getName())
Networking.Server.this.fcsAgent.nests == orig(Networking.Server.this.fcsAgent.nests)
Networking.Server.this.fcsAgent.nests[] == orig(Networking.Server.this.fcsAgent.nests[])
Networking.Server.this.fcsAgent.conveyor == orig(Networking.Server.this.fcsAgent.conveyor)
Networking.Server.this.fcsAgent.conveyor.getClass().getName() == orig(Networking.Server.this.fcsAgent.conveyor.getClass().getName())
Networking.Server.this.fcsAgent.state == orig(Networking.Server.this.fcsAgent.state)
Networking.Server.this.fcsAgent.orders == orig(Networking.Server.this.fcsAgent.orders)
Networking.Server.this.fcsAgent.orders[] == orig(Networking.Server.this.fcsAgent.orders[])
Networking.Server.this.fcsAgent.orders.getClass().getName() == orig(Networking.Server.this.fcsAgent.orders.getClass().getName())
Networking.Server.this.fcsAgent.numOrdersFinished == orig(Networking.Server.this.fcsAgent.numOrdersFinished)
Networking.Server.this.fcsAgent.camera == orig(Networking.Server.this.fcsAgent.camera)
Networking.Server.this.fcsAgent.camera.getClass().getName() == orig(Networking.Server.this.fcsAgent.camera.getClass().getName())
Networking.Server.this.fcsAgent.partTypeCount == orig(Networking.Server.this.fcsAgent.partTypeCount)
Networking.Server.this.fcsAgent.name == orig(Networking.Server.this.fcsAgent.name)
Networking.Server.this.fcsAgent.name.toString == orig(Networking.Server.this.fcsAgent.name.toString)
Networking.Server.this.fcsAgent.binsSet == orig(Networking.Server.this.fcsAgent.binsSet)
Networking.Server.this.fcsAgent.binsToAdd == orig(Networking.Server.this.fcsAgent.binsToAdd)
Networking.Server.this.fcsAgent.binsToAdd[] == orig(Networking.Server.this.fcsAgent.binsToAdd[])
Networking.Server.this.fcsAgent.stateChange == orig(Networking.Server.this.fcsAgent.stateChange)
Networking.Server.this.fcsAgent.agentThread == orig(Networking.Server.this.fcsAgent.agentThread)
Networking.Server.this.console == orig(Networking.Server.this.fcsAgent.console)
Networking.Server.this.console == orig(Networking.Server.this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
Networking.Server.this.console.name == orig(Networking.Server.this.console.name)
Networking.Server.this.console.name.toString == orig(Networking.Server.this.console.name.toString)
Networking.Server.this.console.stateChange == orig(Networking.Server.this.console.stateChange)
Networking.Server.this.console.consoleWriterThread == orig(Networking.Server.this.console.consoleWriterThread)
Networking.Server.this.console.messageQueue == orig(Networking.Server.this.console.messageQueue)
Networking.Server.this.console.messageQueue.getClass().getName() == orig(Networking.Server.this.console.messageQueue.getClass().getName())
===========================================================================
Networking.Server:::OBJECT
this == this.fcs.server
this == this.fcsAgent.fcs.server
this.factProdMngrWriter == this.fcs.server.factProdMngrWriter
this.partsMngrWriter == this.fcs.server.partsMngrWriter
this.kitMngrWriter == this.fcs.server.kitMngrWriter
this.gantryRobotMngrWriter == this.fcs.server.gantryRobotMngrWriter
this.kitAssemblyMngrWriter == this.fcs.server.kitAssemblyMngrWriter
this.laneMngrWriter == this.fcs.server.laneMngrWriter
this.kitRobotMngrWriter == this.fcs.server.kitRobotMngrWriter
this.partsRobotMngrWriter == this.fcs.server.partsRobotMngrWriter
this.numClients == this.fcs.server.numClients
this.devices == this.fcs.server.devices
this.agents == this.fcs.server.agents
this.fcs == this.fcs.server.fcs
this.fcs.queue == this.fcsAgent.fcs.queue
this.fcs.kitConfigs == this.fcsAgent.fcs.kitConfigs
this.fcs.partTypes == this.fcsAgent.fcs.partTypes
this.fcs.agent == this.fcsAgent
this.fcs.agent.stand == this.fcsAgent.stand
this.fcs.agent.partsRobot == this.fcsAgent.partsRobot
this.fcs.agent.gantry == this.fcsAgent.gantry
this.fcs.agent.nests == this.fcsAgent.nests
this.fcs.agent.conveyor == this.fcsAgent.conveyor
this.fcs.agent.state == agent.FCSAgent$myState.PENDING
this.fcs.agent.orders == this.fcsAgent.orders
this.fcs.agent.numOrdersFinished == this.fcsAgent.numOrdersFinished
this.fcs.agent.camera == this.fcsAgent.camera
this.fcs.agent.partTypeCount == this.fcsAgent.partTypeCount
this.fcs.agent.fcs == this.fcsAgent.fcs
this.fcs.agent.name == this.fcsAgent.name
this.fcs.agent.binsSet == this.fcsAgent.binsSet
this.fcs.agent.binsToAdd == this.fcsAgent.binsToAdd
this.fcs.agent.stateChange == this.fcsAgent.stateChange
this.fcs.agent.agentThread == this.fcsAgent.agentThread
this.fcs.agent.console == this.fcsAgent.console
this.fcs.server == this.fcsAgent.fcs.server
this.fcs.server.fcsAgent == this.fcsAgent
this.fcs.server.console == this.console
this.fcs.productionStarted == this.fcsAgent.fcs.productionStarted
this.fcsAgent == this.fcsAgent.fcs.agent
this.fcsAgent.state == agent.FCSAgent$myState.PENDING
this.fcsAgent.console.name == this.console.name
this.fcsAgent.console.stateChange == this.console.stateChange
this.fcsAgent.console.consoleWriterThread == this.console.consoleWriterThread
this.fcsAgent.console.messageQueue == this.console.messageQueue
this.fcsAgent.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.console == Utils.ConsoleWriter.this
this has only one value
this.ss == null
this.s == null
this.factProdMngrReader == null
this.factProdMngrWriter has only one value
this.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.partsMngrReader == null
this.partsMngrWriter has only one value
this.kitMngrReader == null
this.kitMngrWriter has only one value
this.gantryRobotMngrReader == null
this.gantryRobotMngrWriter has only one value
this.kitAssemblyMngrReader == null
this.kitAssemblyMngrWriter has only one value
this.laneMngrReader == null
this.laneMngrWriter has only one value
this.kitRobotMngrReader == null
this.kitRobotMngrWriter has only one value
this.partsRobotMngrReader == null
this.partsRobotMngrWriter has only one value
this.numClients == 0
this.devices has only one value
this.agents has only one value
this.fcs has only one value
this.fcs.queue has only one value
this.fcs.queue[] == []
this.fcs.queue[].getClass().getName() == []
this.fcs.kitConfigs has only one value
this.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.fcs.partTypes has only one value
this.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.fcs.agent.nests[].getClass().getName() elements == agent.NestAgent.class
this.fcs.agent.nests[].getClass().getName() one of { [], [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent] }
this.fcs.agent.orders[] == []
this.fcs.agent.orders[].getClass().getName() == []
this.fcs.agent.name.toString == "FCS"
this.fcs.agent.binsToAdd[] == []
this.fcs.agent.binsToAdd[].getClass().getName() == []
this.fcs.server has only one value
this.fcs.server.ss == null
this.fcs.server.s == null
this.fcs.server.factProdMngrReader == null
this.fcs.server.partsMngrReader == null
this.fcs.server.kitMngrReader == null
this.fcs.server.gantryRobotMngrReader == null
this.fcs.server.kitAssemblyMngrReader == null
this.fcs.server.laneMngrReader == null
this.fcs.server.kitRobotMngrReader == null
this.fcs.server.partsRobotMngrReader == null
this.fcs.productionStarted == false
this.fcs.completed == null
this.fcsAgent has only one value
this.fcsAgent.stand.getClass().getName() == agent.StandAgent.class
this.fcsAgent.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
this.fcsAgent.gantry.getClass().getName() == agent.GantryAgent.class
this.fcsAgent.nests has only one value
this.fcsAgent.nests[].getClass().getName() elements == agent.NestAgent.class
this.fcsAgent.nests[].getClass().getName() one of { [], [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent] }
this.fcsAgent.conveyor.getClass().getName() == agent.ConveyorAgent.class
agent.FCSAgent$myState.PENDING has only one value
agent.FCSAgent$myState.STARTED has only one value
agent.FCSAgent$myState.LOADED has only one value
agent.FCSAgent$myState.$VALUES has only one value
agent.FCSAgent$myState.$VALUES.getClass().getName() == agent.FCSAgent$myState[].class
agent.FCSAgent$myState.$VALUES[] contains no nulls and has only one value, of length 3
agent.FCSAgent$myState.$VALUES[].getClass().getName() == [agent.FCSAgent.myState, agent.FCSAgent.myState, agent.FCSAgent.myState]
agent.FCSAgent$myState.$VALUES[].getClass().getName() elements == agent.FCSAgent.myState.class
this.fcsAgent.orders has only one value
this.fcsAgent.orders[] == []
this.fcsAgent.orders[].getClass().getName() == []
this.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
this.fcsAgent.numOrdersFinished == 0
this.fcsAgent.camera.getClass().getName() == agent.CameraAgent.class
this.fcsAgent.partTypeCount == 0
this.fcsAgent.fcs.queue has only one value
this.fcsAgent.fcs.queue[] == []
this.fcsAgent.fcs.queue[].getClass().getName() == []
this.fcsAgent.fcs.kitConfigs has only one value
this.fcsAgent.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.fcsAgent.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.fcsAgent.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.fcsAgent.fcs.partTypes has only one value
this.fcsAgent.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.fcsAgent.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.fcsAgent.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.fcsAgent.fcs.agent has only one value
this.fcsAgent.fcs.server has only one value
this.fcsAgent.fcs.productionStarted == false
this.fcsAgent.fcs.completed == null
this.fcsAgent.name has only one value
this.fcsAgent.name.toString == "FCS"
this.fcsAgent.binsSet == false
this.fcsAgent.binsToAdd has only one value
this.fcsAgent.binsToAdd[] == []
this.fcsAgent.binsToAdd[].getClass().getName() == []
this.fcsAgent.stateChange has only one value
this.fcsAgent.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.fcsAgent.console.name has only one value
this.fcsAgent.console.name.toString == "Server"
this.fcsAgent.console.stateChange has only one value
this.fcsAgent.console.consoleWriterThread has only one value
this.fcsAgent.console.messageQueue has only one value
this.fcsAgent.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.console has only one value
this.console.name has only one value
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.fcs.kitConfigs[]) == 5
size(this.fcs.partTypes[]) == 10
size(this.fcs.agent.nests[]) one of { 0, 8 }
size(this.fcsAgent.nests[]) one of { 0, 8 }
size(agent.FCSAgent$myState.$VALUES[]) == 3
size(this.fcsAgent.fcs.kitConfigs[]) == 5
size(this.fcsAgent.fcs.partTypes[]) == 10
this.factProdMngrWriter.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.factProdMngrWriter.getClass().getName() != this.fcsAgent.orders.getClass().getName()
this.factProdMngrWriter.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.fcsAgent.orders.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcsAgent.orders.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
Networking.Server.addShutdownHook():::ENTER
this.fcs == this.fcs.agent.fcs
this.fcs == this.fcsAgent.fcs
this.fcs.agent.console == this.console
this.fcsAgent.console == this.console
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.stand has only one value
this.fcsAgent.partsRobot has only one value
this.fcsAgent.gantry has only one value
this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.conveyor has only one value
this.fcsAgent.camera has only one value
this.fcsAgent.agentThread has only one value
size(this.fcs.agent.nests[]) == 8
size(this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server.addShutdownHook():::EXIT
this.ss == orig(this.ss)
this.s == orig(this.s)
this.factProdMngrReader == orig(this.factProdMngrReader)
this.factProdMngrWriter == orig(this.factProdMngrWriter)
this.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.partsMngrReader == orig(this.partsMngrReader)
this.partsMngrWriter == orig(this.partsMngrWriter)
this.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.kitMngrReader == orig(this.kitMngrReader)
this.kitMngrWriter == orig(this.kitMngrWriter)
this.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.gantryRobotMngrReader == orig(this.gantryRobotMngrReader)
this.gantryRobotMngrWriter == orig(this.gantryRobotMngrWriter)
this.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.kitAssemblyMngrReader == orig(this.kitAssemblyMngrReader)
this.kitAssemblyMngrWriter == orig(this.kitAssemblyMngrWriter)
this.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.laneMngrReader == orig(this.laneMngrReader)
this.laneMngrWriter == orig(this.laneMngrWriter)
this.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.kitRobotMngrReader == orig(this.kitRobotMngrReader)
this.kitRobotMngrWriter == orig(this.kitRobotMngrWriter)
this.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.partsRobotMngrReader == orig(this.partsRobotMngrReader)
this.partsRobotMngrWriter == orig(this.partsRobotMngrWriter)
this.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.numClients == orig(this.numClients)
this.numClients == orig(this.fcs.server.numClients)
this.devices == orig(this.devices)
this.devices == orig(this.fcs.server.devices)
this.agents == orig(this.agents)
this.agents == orig(this.fcs.server.agents)
this.fcs == this.fcs.agent.fcs
this.fcs == this.fcsAgent.fcs
this.fcs == orig(this.fcs)
this.fcs == orig(this.fcs.agent.fcs)
this.fcs == orig(this.fcs.server.fcs)
this.fcs == orig(this.fcsAgent.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue == orig(this.fcsAgent.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs == orig(this.fcsAgent.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes == orig(this.fcsAgent.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent.nests[] == orig(this.fcs.agent.nests[])
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.agent.console == this.console
this.fcs.server == orig(this)
this.fcs.server == orig(this.fcs.server)
this.fcs.server == orig(this.fcsAgent.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.productionStarted == orig(this.fcsAgent.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.fcsAgent == orig(this.fcs.agent)
this.fcsAgent == orig(this.fcs.server.fcsAgent)
this.fcsAgent == orig(this.fcsAgent)
this.fcsAgent == orig(this.fcsAgent.fcs.agent)
this.fcsAgent.stand == orig(this.fcs.agent.stand)
this.fcsAgent.stand == orig(this.fcsAgent.stand)
this.fcsAgent.partsRobot == orig(this.fcs.agent.partsRobot)
this.fcsAgent.partsRobot == orig(this.fcsAgent.partsRobot)
this.fcsAgent.gantry == orig(this.fcs.agent.gantry)
this.fcsAgent.gantry == orig(this.fcsAgent.gantry)
this.fcsAgent.nests == orig(this.fcs.agent.nests)
this.fcsAgent.nests == orig(this.fcsAgent.nests)
this.fcsAgent.nests[] == orig(this.fcsAgent.nests[])
this.fcsAgent.conveyor == orig(this.fcs.agent.conveyor)
this.fcsAgent.conveyor == orig(this.fcsAgent.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.fcs.agent.state)
agent.FCSAgent$myState.PENDING == orig(this.fcsAgent.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcsAgent.orders == orig(this.fcs.agent.orders)
this.fcsAgent.orders == orig(this.fcsAgent.orders)
this.fcsAgent.orders[] == orig(this.fcsAgent.orders[])
this.fcsAgent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcsAgent.numOrdersFinished == orig(this.fcsAgent.numOrdersFinished)
this.fcsAgent.camera == orig(this.fcs.agent.camera)
this.fcsAgent.camera == orig(this.fcsAgent.camera)
this.fcsAgent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcsAgent.partTypeCount == orig(this.fcsAgent.partTypeCount)
this.fcsAgent.fcs.queue[] == orig(this.fcsAgent.fcs.queue[])
this.fcsAgent.fcs.kitConfigs[] == orig(this.fcsAgent.fcs.kitConfigs[])
this.fcsAgent.fcs.partTypes[] == orig(this.fcsAgent.fcs.partTypes[])
this.fcsAgent.fcs.completed == orig(this.fcsAgent.fcs.completed)
this.fcsAgent.name == orig(this.fcs.agent.name)
this.fcsAgent.name == orig(this.fcsAgent.name)
this.fcsAgent.name.toString == orig(this.fcsAgent.name.toString)
this.fcsAgent.binsSet == orig(this.fcs.agent.binsSet)
this.fcsAgent.binsSet == orig(this.fcsAgent.binsSet)
this.fcsAgent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcsAgent.binsToAdd == orig(this.fcsAgent.binsToAdd)
this.fcsAgent.binsToAdd[] == orig(this.fcsAgent.binsToAdd[])
this.fcsAgent.stateChange == orig(this.fcs.agent.stateChange)
this.fcsAgent.stateChange == orig(this.fcsAgent.stateChange)
this.fcsAgent.agentThread == orig(this.fcs.agent.agentThread)
this.fcsAgent.agentThread == orig(this.fcsAgent.agentThread)
this.fcsAgent.agentThread.goOn == orig(this.fcsAgent.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
this.fcsAgent.console == this.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.fcsAgent.console.name.toString == orig(this.fcsAgent.console.name.toString)
this.console == orig(this.fcs.agent.console)
this.console == orig(this.fcs.server.console)
this.console == orig(this.fcsAgent.console)
this.console == orig(this.console)
this.console.name == orig(this.fcsAgent.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.fcsAgent.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.fcsAgent.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.fcsAgent.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.stand has only one value
this.fcsAgent.partsRobot has only one value
this.fcsAgent.gantry has only one value
this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.conveyor has only one value
this.fcsAgent.camera has only one value
this.fcsAgent.agentThread has only one value
size(this.fcs.agent.nests[]) == 8
size(this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server.connectAgentsWithDevices():::ENTER
this.fcs.agent.console == this.console
this.fcsAgent.console == this.console
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.stand has only one value
this.fcsAgent.partsRobot has only one value
this.fcsAgent.gantry has only one value
this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.conveyor has only one value
this.fcsAgent.camera has only one value
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
size(this.fcs.agent.nests[]) == 8
size(this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server.connectAgentsWithDevices():::EXIT
this.ss == orig(this.ss)
this.s == orig(this.s)
this.factProdMngrReader == orig(this.factProdMngrReader)
this.factProdMngrWriter == orig(this.factProdMngrWriter)
this.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.partsMngrReader == orig(this.partsMngrReader)
this.partsMngrWriter == orig(this.partsMngrWriter)
this.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.kitMngrReader == orig(this.kitMngrReader)
this.kitMngrWriter == orig(this.kitMngrWriter)
this.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.gantryRobotMngrReader == orig(this.gantryRobotMngrReader)
this.gantryRobotMngrWriter == orig(this.gantryRobotMngrWriter)
this.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.kitAssemblyMngrReader == orig(this.kitAssemblyMngrReader)
this.kitAssemblyMngrWriter == orig(this.kitAssemblyMngrWriter)
this.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.laneMngrReader == orig(this.laneMngrReader)
this.laneMngrWriter == orig(this.laneMngrWriter)
this.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.kitRobotMngrReader == orig(this.kitRobotMngrReader)
this.kitRobotMngrWriter == orig(this.kitRobotMngrWriter)
this.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.partsRobotMngrReader == orig(this.partsRobotMngrReader)
this.partsRobotMngrWriter == orig(this.partsRobotMngrWriter)
this.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.numClients == orig(this.numClients)
this.numClients == orig(this.fcs.server.numClients)
this.devices == orig(this.devices)
this.devices == orig(this.fcs.server.devices)
this.agents == orig(this.agents)
this.agents == orig(this.fcs.server.agents)
this.fcs == this.fcs.agent.fcs
this.fcs == this.fcsAgent.fcs
this.fcs == orig(this.fcs)
this.fcs == orig(this.fcs.server.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent.nests[] == orig(this.fcs.agent.nests[])
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.agent.console == this.console
this.fcs.server == orig(this)
this.fcs.server == orig(this.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.fcsAgent == orig(this.fcs.agent)
this.fcsAgent == orig(this.fcs.server.fcsAgent)
this.fcsAgent == orig(this.fcsAgent)
this.fcsAgent.stand == orig(this.fcs.agent.stand)
this.fcsAgent.stand == orig(this.fcsAgent.stand)
this.fcsAgent.partsRobot == orig(this.fcs.agent.partsRobot)
this.fcsAgent.partsRobot == orig(this.fcsAgent.partsRobot)
this.fcsAgent.gantry == orig(this.fcs.agent.gantry)
this.fcsAgent.gantry == orig(this.fcsAgent.gantry)
this.fcsAgent.nests == orig(this.fcs.agent.nests)
this.fcsAgent.nests == orig(this.fcsAgent.nests)
this.fcsAgent.nests[] == orig(this.fcsAgent.nests[])
this.fcsAgent.conveyor == orig(this.fcs.agent.conveyor)
this.fcsAgent.conveyor == orig(this.fcsAgent.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.fcs.agent.state)
agent.FCSAgent$myState.PENDING == orig(this.fcsAgent.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcsAgent.orders == orig(this.fcs.agent.orders)
this.fcsAgent.orders == orig(this.fcsAgent.orders)
this.fcsAgent.orders[] == orig(this.fcsAgent.orders[])
this.fcsAgent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcsAgent.numOrdersFinished == orig(this.fcsAgent.numOrdersFinished)
this.fcsAgent.camera == orig(this.fcs.agent.camera)
this.fcsAgent.camera == orig(this.fcsAgent.camera)
this.fcsAgent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcsAgent.partTypeCount == orig(this.fcsAgent.partTypeCount)
this.fcsAgent.name == orig(this.fcs.agent.name)
this.fcsAgent.name == orig(this.fcsAgent.name)
this.fcsAgent.name.toString == orig(this.fcsAgent.name.toString)
this.fcsAgent.binsSet == orig(this.fcs.agent.binsSet)
this.fcsAgent.binsSet == orig(this.fcsAgent.binsSet)
this.fcsAgent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcsAgent.binsToAdd == orig(this.fcsAgent.binsToAdd)
this.fcsAgent.binsToAdd[] == orig(this.fcsAgent.binsToAdd[])
this.fcsAgent.stateChange == orig(this.fcs.agent.stateChange)
this.fcsAgent.stateChange == orig(this.fcsAgent.stateChange)
this.fcsAgent.console == this.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.fcsAgent.console.name.toString == orig(this.fcsAgent.console.name.toString)
this.console == orig(this.fcs.agent.console)
this.console == orig(this.fcs.server.console)
this.console == orig(this.fcsAgent.console)
this.console == orig(this.console)
this.console.name == orig(this.fcsAgent.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.fcsAgent.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.fcsAgent.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.fcsAgent.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.stand has only one value
this.fcsAgent.partsRobot has only one value
this.fcsAgent.gantry has only one value
this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.conveyor has only one value
this.fcsAgent.camera has only one value
this.fcsAgent.agentThread has only one value
size(this.fcs.agent.nests[]) == 8
size(this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server.connectAgentsWithEachOther():::ENTER
this.fcs.agent.nests[] == []
this.fcs.agent.nests[].getClass().getName() == []
this.fcsAgent.stand == null
this.fcsAgent.partsRobot == null
this.fcsAgent.gantry == null
this.fcsAgent.nests[] == []
this.fcsAgent.nests[].getClass().getName() == []
this.fcsAgent.conveyor == null
this.fcsAgent.camera == null
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
this.fcsAgent.console == null
===========================================================================
Networking.Server.connectAgentsWithEachOther():::EXIT
this.ss == orig(this.ss)
this.s == orig(this.s)
this.factProdMngrReader == orig(this.factProdMngrReader)
this.factProdMngrWriter == orig(this.factProdMngrWriter)
this.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.partsMngrReader == orig(this.partsMngrReader)
this.partsMngrWriter == orig(this.partsMngrWriter)
this.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.kitMngrReader == orig(this.kitMngrReader)
this.kitMngrWriter == orig(this.kitMngrWriter)
this.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.gantryRobotMngrReader == orig(this.gantryRobotMngrReader)
this.gantryRobotMngrWriter == orig(this.gantryRobotMngrWriter)
this.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.kitAssemblyMngrReader == orig(this.kitAssemblyMngrReader)
this.kitAssemblyMngrWriter == orig(this.kitAssemblyMngrWriter)
this.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.laneMngrReader == orig(this.laneMngrReader)
this.laneMngrWriter == orig(this.laneMngrWriter)
this.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.kitRobotMngrReader == orig(this.kitRobotMngrReader)
this.kitRobotMngrWriter == orig(this.kitRobotMngrWriter)
this.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.partsRobotMngrReader == orig(this.partsRobotMngrReader)
this.partsRobotMngrWriter == orig(this.partsRobotMngrWriter)
this.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.numClients == orig(this.numClients)
this.numClients == orig(this.fcs.server.numClients)
this.devices == orig(this.devices)
this.devices == orig(this.fcs.server.devices)
this.agents == orig(this.agents)
this.agents == orig(this.fcs.server.agents)
this.fcs == orig(this.fcs)
this.fcs == orig(this.fcs.server.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.agent.console == this.console
this.fcs.server == orig(this)
this.fcs.server == orig(this.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.fcsAgent == orig(this.fcs.agent)
this.fcsAgent == orig(this.fcs.server.fcsAgent)
this.fcsAgent == orig(this.fcsAgent)
this.fcsAgent.nests == orig(this.fcs.agent.nests)
this.fcsAgent.nests == orig(this.fcsAgent.nests)
agent.FCSAgent$myState.PENDING == orig(this.fcs.agent.state)
agent.FCSAgent$myState.PENDING == orig(this.fcsAgent.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcsAgent.orders == orig(this.fcs.agent.orders)
this.fcsAgent.orders == orig(this.fcsAgent.orders)
this.fcsAgent.orders[] == orig(this.fcsAgent.orders[])
this.fcsAgent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcsAgent.numOrdersFinished == orig(this.fcsAgent.numOrdersFinished)
this.fcsAgent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcsAgent.partTypeCount == orig(this.fcsAgent.partTypeCount)
this.fcsAgent.fcs == orig(this.fcs.agent.fcs)
this.fcsAgent.fcs == orig(this.fcsAgent.fcs)
this.fcsAgent.name == orig(this.fcs.agent.name)
this.fcsAgent.name == orig(this.fcsAgent.name)
this.fcsAgent.name.toString == orig(this.fcsAgent.name.toString)
this.fcsAgent.binsSet == orig(this.fcs.agent.binsSet)
this.fcsAgent.binsSet == orig(this.fcsAgent.binsSet)
this.fcsAgent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcsAgent.binsToAdd == orig(this.fcsAgent.binsToAdd)
this.fcsAgent.binsToAdd[] == orig(this.fcsAgent.binsToAdd[])
this.fcsAgent.stateChange == orig(this.fcs.agent.stateChange)
this.fcsAgent.stateChange == orig(this.fcsAgent.stateChange)
this.fcsAgent.agentThread == orig(this.fcs.agent.agentThread)
this.fcsAgent.agentThread == orig(this.fcsAgent.agentThread)
this.fcsAgent.console == this.console
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console == orig(this.fcs.server.console)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.stand has only one value
this.fcsAgent.partsRobot has only one value
this.fcsAgent.gantry has only one value
this.fcsAgent.nests[] contains no nulls and has only one value, of length 8
this.fcsAgent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcsAgent.conveyor has only one value
this.fcsAgent.camera has only one value
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
size(this.fcs.agent.nests[]) == 8
size(this.fcsAgent.nests[]) == 8
===========================================================================
Networking.Server.initAgents():::ENTER
this.fcs.agent.nests[] == []
this.fcs.agent.nests[].getClass().getName() == []
this.fcsAgent.stand == null
this.fcsAgent.partsRobot == null
this.fcsAgent.gantry == null
this.fcsAgent.nests[] == []
this.fcsAgent.nests[].getClass().getName() == []
this.fcsAgent.conveyor == null
this.fcsAgent.camera == null
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
this.fcsAgent.console == null
===========================================================================
Networking.Server.initAgents():::EXIT
this.ss == orig(this.ss)
this.s == orig(this.s)
this.factProdMngrReader == orig(this.factProdMngrReader)
this.factProdMngrWriter == orig(this.factProdMngrWriter)
this.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.partsMngrReader == orig(this.partsMngrReader)
this.partsMngrWriter == orig(this.partsMngrWriter)
this.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.kitMngrReader == orig(this.kitMngrReader)
this.kitMngrWriter == orig(this.kitMngrWriter)
this.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.gantryRobotMngrReader == orig(this.gantryRobotMngrReader)
this.gantryRobotMngrWriter == orig(this.gantryRobotMngrWriter)
this.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.kitAssemblyMngrReader == orig(this.kitAssemblyMngrReader)
this.kitAssemblyMngrWriter == orig(this.kitAssemblyMngrWriter)
this.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.laneMngrReader == orig(this.laneMngrReader)
this.laneMngrWriter == orig(this.laneMngrWriter)
this.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.kitRobotMngrReader == orig(this.kitRobotMngrReader)
this.kitRobotMngrWriter == orig(this.kitRobotMngrWriter)
this.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.partsRobotMngrReader == orig(this.partsRobotMngrReader)
this.partsRobotMngrWriter == orig(this.partsRobotMngrWriter)
this.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.numClients == orig(this.numClients)
this.numClients == orig(this.fcs.server.numClients)
this.devices == orig(this.devices)
this.devices == orig(this.fcs.server.devices)
this.agents == orig(this.agents)
this.agents == orig(this.fcs.server.agents)
this.fcs == orig(this.fcs)
this.fcs == orig(this.fcs.server.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent.nests[] == orig(this.fcs.agent.nests[])
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.server == orig(this)
this.fcs.server == orig(this.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.fcsAgent == orig(this.fcs.agent)
this.fcsAgent == orig(this.fcs.server.fcsAgent)
this.fcsAgent == orig(this.fcsAgent)
this.fcsAgent.stand == orig(this.fcs.agent.stand)
this.fcsAgent.stand == orig(this.fcsAgent.stand)
this.fcsAgent.partsRobot == orig(this.fcs.agent.partsRobot)
this.fcsAgent.partsRobot == orig(this.fcsAgent.partsRobot)
this.fcsAgent.gantry == orig(this.fcs.agent.gantry)
this.fcsAgent.gantry == orig(this.fcsAgent.gantry)
this.fcsAgent.nests == orig(this.fcs.agent.nests)
this.fcsAgent.nests == orig(this.fcsAgent.nests)
this.fcsAgent.nests[] == orig(this.fcsAgent.nests[])
this.fcsAgent.conveyor == orig(this.fcs.agent.conveyor)
this.fcsAgent.conveyor == orig(this.fcsAgent.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.fcs.agent.state)
agent.FCSAgent$myState.PENDING == orig(this.fcsAgent.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcsAgent.orders == orig(this.fcs.agent.orders)
this.fcsAgent.orders == orig(this.fcsAgent.orders)
this.fcsAgent.orders[] == orig(this.fcsAgent.orders[])
this.fcsAgent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcsAgent.numOrdersFinished == orig(this.fcsAgent.numOrdersFinished)
this.fcsAgent.camera == orig(this.fcs.agent.camera)
this.fcsAgent.camera == orig(this.fcsAgent.camera)
this.fcsAgent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcsAgent.partTypeCount == orig(this.fcsAgent.partTypeCount)
this.fcsAgent.fcs == orig(this.fcs.agent.fcs)
this.fcsAgent.fcs == orig(this.fcsAgent.fcs)
this.fcsAgent.name == orig(this.fcs.agent.name)
this.fcsAgent.name == orig(this.fcsAgent.name)
this.fcsAgent.name.toString == orig(this.fcsAgent.name.toString)
this.fcsAgent.binsSet == orig(this.fcs.agent.binsSet)
this.fcsAgent.binsSet == orig(this.fcsAgent.binsSet)
this.fcsAgent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcsAgent.binsToAdd == orig(this.fcsAgent.binsToAdd)
this.fcsAgent.binsToAdd[] == orig(this.fcsAgent.binsToAdd[])
this.fcsAgent.stateChange == orig(this.fcs.agent.stateChange)
this.fcsAgent.stateChange == orig(this.fcsAgent.stateChange)
this.fcsAgent.agentThread == orig(this.fcs.agent.agentThread)
this.fcsAgent.agentThread == orig(this.fcsAgent.agentThread)
this.fcsAgent.console == orig(this.fcs.agent.console)
this.fcsAgent.console == orig(this.fcsAgent.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console == orig(this.fcs.server.console)
this.console == orig(this.console)
this.console.name.toString == orig(this.console.name.toString)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.fcs.agent.nests[] == []
this.fcs.agent.nests[].getClass().getName() == []
this.fcsAgent.stand == null
this.fcsAgent.partsRobot == null
this.fcsAgent.gantry == null
this.fcsAgent.nests[] == []
this.fcsAgent.nests[].getClass().getName() == []
this.fcsAgent.conveyor == null
this.fcsAgent.camera == null
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
this.fcsAgent.console == null
===========================================================================
Networking.Server.initDevices():::ENTER
this.fcs.agent.nests[] == []
this.fcs.agent.nests[].getClass().getName() == []
this.fcsAgent.stand == null
this.fcsAgent.partsRobot == null
this.fcsAgent.gantry == null
this.fcsAgent.nests[] == []
this.fcsAgent.nests[].getClass().getName() == []
this.fcsAgent.conveyor == null
this.fcsAgent.camera == null
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
this.fcsAgent.console == null
===========================================================================
Networking.Server.initDevices():::EXIT
this.ss == orig(this.ss)
this.s == orig(this.s)
this.factProdMngrReader == orig(this.factProdMngrReader)
this.factProdMngrWriter == orig(this.factProdMngrWriter)
this.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.partsMngrReader == orig(this.partsMngrReader)
this.partsMngrWriter == orig(this.partsMngrWriter)
this.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.kitMngrReader == orig(this.kitMngrReader)
this.kitMngrWriter == orig(this.kitMngrWriter)
this.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.gantryRobotMngrReader == orig(this.gantryRobotMngrReader)
this.gantryRobotMngrWriter == orig(this.gantryRobotMngrWriter)
this.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.kitAssemblyMngrReader == orig(this.kitAssemblyMngrReader)
this.kitAssemblyMngrWriter == orig(this.kitAssemblyMngrWriter)
this.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.laneMngrReader == orig(this.laneMngrReader)
this.laneMngrWriter == orig(this.laneMngrWriter)
this.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.kitRobotMngrReader == orig(this.kitRobotMngrReader)
this.kitRobotMngrWriter == orig(this.kitRobotMngrWriter)
this.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.partsRobotMngrReader == orig(this.partsRobotMngrReader)
this.partsRobotMngrWriter == orig(this.partsRobotMngrWriter)
this.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.numClients == orig(this.numClients)
this.numClients == orig(this.fcs.server.numClients)
this.devices == orig(this.devices)
this.devices == orig(this.fcs.server.devices)
this.agents == orig(this.agents)
this.agents == orig(this.fcs.server.agents)
this.fcs == orig(this.fcs)
this.fcs == orig(this.fcs.server.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent.nests[] == orig(this.fcs.agent.nests[])
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.server == orig(this)
this.fcs.server == orig(this.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.fcsAgent == orig(this.fcs.agent)
this.fcsAgent == orig(this.fcs.server.fcsAgent)
this.fcsAgent == orig(this.fcsAgent)
this.fcsAgent.stand == orig(this.fcs.agent.stand)
this.fcsAgent.stand == orig(this.fcsAgent.stand)
this.fcsAgent.partsRobot == orig(this.fcs.agent.partsRobot)
this.fcsAgent.partsRobot == orig(this.fcsAgent.partsRobot)
this.fcsAgent.gantry == orig(this.fcs.agent.gantry)
this.fcsAgent.gantry == orig(this.fcsAgent.gantry)
this.fcsAgent.nests == orig(this.fcs.agent.nests)
this.fcsAgent.nests == orig(this.fcsAgent.nests)
this.fcsAgent.nests[] == orig(this.fcsAgent.nests[])
this.fcsAgent.conveyor == orig(this.fcs.agent.conveyor)
this.fcsAgent.conveyor == orig(this.fcsAgent.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.fcs.agent.state)
agent.FCSAgent$myState.PENDING == orig(this.fcsAgent.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcsAgent.orders == orig(this.fcs.agent.orders)
this.fcsAgent.orders == orig(this.fcsAgent.orders)
this.fcsAgent.orders[] == orig(this.fcsAgent.orders[])
this.fcsAgent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcsAgent.numOrdersFinished == orig(this.fcsAgent.numOrdersFinished)
this.fcsAgent.camera == orig(this.fcs.agent.camera)
this.fcsAgent.camera == orig(this.fcsAgent.camera)
this.fcsAgent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcsAgent.partTypeCount == orig(this.fcsAgent.partTypeCount)
this.fcsAgent.fcs == orig(this.fcs.agent.fcs)
this.fcsAgent.fcs == orig(this.fcsAgent.fcs)
this.fcsAgent.name == orig(this.fcs.agent.name)
this.fcsAgent.name == orig(this.fcsAgent.name)
this.fcsAgent.name.toString == orig(this.fcsAgent.name.toString)
this.fcsAgent.binsSet == orig(this.fcs.agent.binsSet)
this.fcsAgent.binsSet == orig(this.fcsAgent.binsSet)
this.fcsAgent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcsAgent.binsToAdd == orig(this.fcsAgent.binsToAdd)
this.fcsAgent.binsToAdd[] == orig(this.fcsAgent.binsToAdd[])
this.fcsAgent.stateChange == orig(this.fcs.agent.stateChange)
this.fcsAgent.stateChange == orig(this.fcsAgent.stateChange)
this.fcsAgent.agentThread == orig(this.fcs.agent.agentThread)
this.fcsAgent.agentThread == orig(this.fcsAgent.agentThread)
this.fcsAgent.console == orig(this.fcs.agent.console)
this.fcsAgent.console == orig(this.fcsAgent.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console == orig(this.fcs.server.console)
this.console == orig(this.console)
this.console.name.toString == orig(this.console.name.toString)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.fcs.agent.nests[] == []
this.fcs.agent.nests[].getClass().getName() == []
this.fcsAgent.stand == null
this.fcsAgent.partsRobot == null
this.fcsAgent.gantry == null
this.fcsAgent.nests[] == []
this.fcsAgent.nests[].getClass().getName() == []
this.fcsAgent.conveyor == null
this.fcsAgent.camera == null
this.fcsAgent.fcs == null
this.fcsAgent.agentThread == null
this.fcsAgent.console == null
===========================================================================
Utils.ConsoleWriter$ConsoleWriterThread:::OBJECT
this has only one value
this.goOn == false
Utils.ConsoleWriter.this has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
Utils.ConsoleWriter.this.name has only one value
Utils.ConsoleWriter.this.name.toString == "Server"
Utils.ConsoleWriter.this.stateChange has only one value
Utils.ConsoleWriter.this.consoleWriterThread == null
Utils.ConsoleWriter.this.messageQueue has only one value
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
===========================================================================
Utils.ConsoleWriter$ConsoleWriterThread.ConsoleWriterThread(Utils.ConsoleWriter, java.lang.String):::ENTER
Utils.ConsoleWriter.this has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
Utils.ConsoleWriter.this.name has only one value
Utils.ConsoleWriter.this.name.toString == "Server"
Utils.ConsoleWriter.this.stateChange has only one value
Utils.ConsoleWriter.this.consoleWriterThread == null
Utils.ConsoleWriter.this.messageQueue has only one value
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.toString == "SERVER"
===========================================================================
Utils.ConsoleWriter$ConsoleWriterThread.ConsoleWriterThread(Utils.ConsoleWriter, java.lang.String):::EXIT
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
Utils.ConsoleWriter.this.name == orig(Utils.ConsoleWriter.this.name)
Utils.ConsoleWriter.this.name.toString == orig(Utils.ConsoleWriter.this.name.toString)
Utils.ConsoleWriter.this.stateChange == orig(Utils.ConsoleWriter.this.stateChange)
Utils.ConsoleWriter.this.consoleWriterThread == orig(Utils.ConsoleWriter.this.consoleWriterThread)
Utils.ConsoleWriter.this.messageQueue == orig(Utils.ConsoleWriter.this.messageQueue)
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == orig(Utils.ConsoleWriter.this.messageQueue.getClass().getName())
arg1.toString == orig(arg1.toString)
arg1.toString == "SERVER"
===========================================================================
Utils.ConsoleWriter:::CLASS
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
===========================================================================
Utils.ConsoleWriter:::OBJECT
this == Utils.ConsoleWriter.this
this.name == Utils.ConsoleWriter.this.name
this.stateChange == Utils.ConsoleWriter.this.stateChange
this.consoleWriterThread == Utils.ConsoleWriter.this.consoleWriterThread
Utils.ConsoleWriter.this.messageQueue == this.messageQueue
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == this.messageQueue.getClass().getName()
this has only one value
this.name has only one value
this.name != null
this.name.toString == "Server"
this.stateChange has only one value
this.stateChange != null
Utils.ConsoleWriter.this has only one value
Utils.ConsoleWriter.this.name has only one value
Utils.ConsoleWriter.this.name != null
Utils.ConsoleWriter.this.name.toString == "Server"
Utils.ConsoleWriter.this.stateChange has only one value
Utils.ConsoleWriter.this.stateChange != null
Utils.ConsoleWriter.this.consoleWriterThread has only one value
Utils.ConsoleWriter.this.consoleWriterThread != null
Utils.ConsoleWriter.this.messageQueue has only one value
Utils.ConsoleWriter.this.messageQueue != null
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.messageQueue has only one value
this.messageQueue != null
this.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
===========================================================================
Utils.ConsoleWriter.ConsoleWriter(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Server"
===========================================================================
Utils.ConsoleWriter.ConsoleWriter(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.consoleWriterThread == null
arg0.toString == "Server"
===========================================================================
Utils.ConsoleWriter.print(java.lang.String):::ENTER
this.consoleWriterThread == null
arg0 has only one value
arg0.toString == "Thread started."
===========================================================================
Utils.ConsoleWriter.print(java.lang.String):::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
arg0.toString == orig(arg0.toString)
this.consoleWriterThread == null
arg0.toString == "Thread started."
===========================================================================
Utils.ConsoleWriter.print(java.lang.String, java.lang.Throwable):::ENTER
this.consoleWriterThread == null
arg0 has only one value
arg0.toString == "Thread started."
arg1 == null
===========================================================================
Utils.ConsoleWriter.print(java.lang.String, java.lang.Throwable):::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
arg0.toString == orig(arg0.toString)
this.consoleWriterThread == null
arg0.toString == "Thread started."
===========================================================================
Utils.ConsoleWriter.sendData(java.lang.String):::ENTER
this.consoleWriterThread.goOn == true
===========================================================================
Utils.ConsoleWriter.sendData(java.lang.String):::EXIT204
===========================================================================
Utils.ConsoleWriter.sendData(java.lang.String):::EXIT
Utils.ConsoleWriter.consoleID == return
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
this.consoleWriterThread.goOn == orig(this.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(this)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
Utils.ConsoleWriter.this.name == orig(Utils.ConsoleWriter.this.name)
Utils.ConsoleWriter.this.name.toString == orig(Utils.ConsoleWriter.this.name.toString)
Utils.ConsoleWriter.this.stateChange == orig(Utils.ConsoleWriter.this.stateChange)
Utils.ConsoleWriter.this.consoleWriterThread == orig(Utils.ConsoleWriter.this.consoleWriterThread)
Utils.ConsoleWriter.this.messageQueue == orig(Utils.ConsoleWriter.this.messageQueue)
Utils.ConsoleWriter.this.messageQueue.getClass().getName() == orig(Utils.ConsoleWriter.this.messageQueue.getClass().getName())
this.messageQueue == orig(this.messageQueue)
this.messageQueue.getClass().getName() == orig(this.messageQueue.getClass().getName())
arg0.toString == orig(arg0.toString)
this.consoleWriterThread.goOn == true
return.toString == ""
===========================================================================
Utils.ConsoleWriter.sendMessage(java.lang.String, java.lang.String):::ENTER
this.consoleWriterThread has only one value
this.consoleWriterThread != null
this.consoleWriterThread.goOn == true
arg0 != null
arg1 has only one value
arg1 != null
arg1.toString == "Thread started."
===========================================================================
Utils.ConsoleWriter.sendMessage(java.lang.String, java.lang.String):::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name == orig(Utils.ConsoleWriter.this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.stateChange == orig(Utils.ConsoleWriter.this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
this.consoleWriterThread == orig(Utils.ConsoleWriter.this.consoleWriterThread)
this.consoleWriterThread.goOn == orig(this.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(this)
Utils.ConsoleWriter.this.name.toString == orig(Utils.ConsoleWriter.this.name.toString)
this.messageQueue == orig(Utils.ConsoleWriter.this.messageQueue)
this.messageQueue == orig(this.messageQueue)
this.messageQueue.getClass().getName() == orig(Utils.ConsoleWriter.this.messageQueue.getClass().getName())
this.messageQueue.getClass().getName() == orig(this.messageQueue.getClass().getName())
arg0.toString == orig(arg0.toString)
this.consoleWriterThread has only one value
this.consoleWriterThread != null
this.consoleWriterThread.goOn == true
orig(this) has only one value
===========================================================================
Utils.ConsoleWriter.sendingMessage():::ENTER
this.consoleWriterThread has only one value
this.consoleWriterThread.goOn == true
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT172
return == true
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT172;condition="return == true"
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT175
return == false
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT175;condition="not(return == true)"
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name == orig(Utils.ConsoleWriter.this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.stateChange == orig(Utils.ConsoleWriter.this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
this.consoleWriterThread == orig(Utils.ConsoleWriter.this.consoleWriterThread)
this.consoleWriterThread.goOn == orig(this.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(this)
Utils.ConsoleWriter.this.name.toString == orig(Utils.ConsoleWriter.this.name.toString)
this.messageQueue == orig(Utils.ConsoleWriter.this.messageQueue)
this.messageQueue == orig(this.messageQueue)
this.messageQueue.getClass().getName() == orig(Utils.ConsoleWriter.this.messageQueue.getClass().getName())
this.messageQueue.getClass().getName() == orig(this.messageQueue.getClass().getName())
this.consoleWriterThread has only one value
this.consoleWriterThread.goOn == true
orig(this) has only one value
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT;condition="return == true"
return == true
===========================================================================
Utils.ConsoleWriter.sendingMessage():::EXIT;condition="not(return == true)"
return == false
===========================================================================
Utils.ConsoleWriter.startConsole():::ENTER
this.consoleWriterThread == null
===========================================================================
Utils.ConsoleWriter.startConsole():::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
this.consoleWriterThread == null
===========================================================================
Utils.ConsoleWriter.startThread():::ENTER
this.consoleWriterThread == null
===========================================================================
Utils.ConsoleWriter.startThread():::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
Utils.ConsoleWriter.this == orig(this)
this.messageQueue == orig(this.messageQueue)
this.messageQueue.getClass().getName() == orig(this.messageQueue.getClass().getName())
this.consoleWriterThread has only one value
this.consoleWriterThread.goOn == false
===========================================================================
Utils.ConsoleWriter.stateChanged():::ENTER
this.consoleWriterThread has only one value
this.consoleWriterThread != null
this.consoleWriterThread.goOn == true
===========================================================================
Utils.ConsoleWriter.stateChanged():::EXIT
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.name == orig(this.name)
this.name == orig(Utils.ConsoleWriter.this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.stateChange == orig(Utils.ConsoleWriter.this.stateChange)
this.consoleWriterThread == orig(this.consoleWriterThread)
this.consoleWriterThread == orig(Utils.ConsoleWriter.this.consoleWriterThread)
this.consoleWriterThread.goOn == orig(this.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(this)
Utils.ConsoleWriter.this.name.toString == orig(Utils.ConsoleWriter.this.name.toString)
this.messageQueue == orig(Utils.ConsoleWriter.this.messageQueue)
this.messageQueue == orig(this.messageQueue)
this.messageQueue.getClass().getName() == orig(Utils.ConsoleWriter.this.messageQueue.getClass().getName())
this.messageQueue.getClass().getName() == orig(this.messageQueue.getClass().getName())
this.consoleWriterThread has only one value
this.consoleWriterThread != null
this.consoleWriterThread.goOn == true
orig(this) has only one value
===========================================================================
Utils.Location:::OBJECT
this.x >= 0.0
this.y >= 0.0
===========================================================================
Utils.Location.Location(Utils.Location):::ENTER
arg0 has only one value
arg0.x == 850.0
arg0.y == 45.0
===========================================================================
Utils.Location.Location(Utils.Location):::EXIT
this.x == arg0.x
this.x == orig(arg0.x)
this.y == arg0.y
this.y == orig(arg0.y)
this.x == 850.0
this.y == 45.0
===========================================================================
Utils.Location.Location(double, double):::ENTER
arg0 >= 0.0
arg1 >= 0.0
===========================================================================
Utils.Location.Location(double, double):::EXIT
this.x == orig(arg0)
this.y == orig(arg1)
===========================================================================
Utils.Location.getX():::ENTER
this.x one of { 565.0, 850.0 }
===========================================================================
Utils.Location.getX():::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.x one of { 565.0, 850.0 }
return one of { 565, 850 }
===========================================================================
Utils.Location.getY():::ENTER
this.x one of { 565.0, 850.0 }
===========================================================================
Utils.Location.getY():::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.x one of { 565.0, 850.0 }
===========================================================================
Utils.Location.incrementY(double):::ENTER
this.x == 850.0
this.y == 45.0
===========================================================================
Utils.Location.incrementY(double):::EXIT
this.x == orig(this.x)
this.y == return
this.x == 850.0
return - orig(arg0) - 45 == 0
===========================================================================
Utils.ReadSaveData.readKitConfig():::EXIT
return == null
===========================================================================
Utils.ReadSaveData.readPartType():::EXIT
return has only one value
return[] contains no nulls and has only one value, of length 10
return[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
return[].getClass().getName() elements == factory.PartType.class
size(return[]) == 10
===========================================================================
Utils.StringUtil$UD:::OBJECT
this.threshold one of { 0, 1, 3 }
this.stop.toString one of { "h", "m" }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long):::ENTER
arg0.toString one of { "h", "m" }
arg1 one of { 60000, 3600000 }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long):::EXIT
this.str == orig(arg0)
this.millis == orig(arg1)
arg0.toString == orig(arg0.toString)
this.str.toString one of { "h", "m" }
this.millis one of { 60000, 3600000 }
this.threshold == 1
this.stop == null
arg0.toString one of { "h", "m" }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long, int):::ENTER
arg0.toString one of { "h", "m", "s" }
arg1 one of { 1000, 60000, 3600000 }
arg2 one of { 0, 1 }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long, int):::EXIT
this.str == orig(arg0)
this.millis == orig(arg1)
this.threshold == orig(arg2)
arg0.toString == orig(arg0.toString)
this.str.toString one of { "h", "m", "s" }
this.millis one of { 1000, 60000, 3600000 }
this.threshold one of { 0, 1 }
this.stop == null
arg0.toString one of { "h", "m", "s" }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long, int, java.lang.String):::ENTER
arg2 one of { 0, 1, 3 }
arg3.toString one of { "h", "m" }
===========================================================================
Utils.StringUtil$UD.UD(java.lang.String, long, int, java.lang.String):::EXIT
this.str == orig(arg0)
this.millis == orig(arg1)
this.threshold == orig(arg2)
this.stop == orig(arg3)
arg0.toString == orig(arg0.toString)
arg3.toString == orig(arg3.toString)
arg3.toString one of { "h", "m" }
===========================================================================
Utils.StringUtil:::CLASS
Utils.StringUtil.gensymCtr == 0
Utils.StringUtil.units has only one value
Utils.StringUtil.units != null
Utils.StringUtil.units.getClass().getName() == Utils.StringUtil$UD[].class
Utils.StringUtil.units[] contains no nulls and has only one value, of length 5
Utils.StringUtil.units[] elements != null
Utils.StringUtil.units[].getClass().getName() == [Utils.StringUtil.UD, Utils.StringUtil.UD, Utils.StringUtil.UD, Utils.StringUtil.UD, Utils.StringUtil.UD]
Utils.StringUtil.units[].getClass().getName() elements == Utils.StringUtil.UD.class
Utils.StringUtil.units[].str contains no nulls and has only one value, of length 5
Utils.StringUtil.units[].str elements != null
Utils.StringUtil.units[].str.toString == [w, d, h, m, s]
Utils.StringUtil.units[].millis == [604800000, 86400000, 3600000, 60000, 1000]
Utils.StringUtil.units[].millis sorted by >
Utils.StringUtil.units[].threshold == [3, 1, 1, 1, 0]
Utils.StringUtil.units[].threshold elements one of { 0, 1, 3 }
Utils.StringUtil.units[].threshold sorted by >=
Utils.StringUtil.units[].stop has only one value, of length 5
Utils.StringUtil.units[].stop.toString == [h, m, null, null, null]
Utils.StringUtil.units[].stop.toString elements one of { null, "h", "m" }
size(Utils.StringUtil.units[]) == 5
===========================================================================
Utils.StringUtil.md5(java.lang.String):::ENTER
arg0 != null
===========================================================================
Utils.StringUtil.md5(java.lang.String):::EXIT625
===========================================================================
Utils.StringUtil.md5(java.lang.String):::EXIT
Utils.StringUtil.gensymCtr == orig(Utils.StringUtil.gensymCtr)
Utils.StringUtil.units == orig(Utils.StringUtil.units)
Utils.StringUtil.units.getClass().getName() == orig(Utils.StringUtil.units.getClass().getName())
Utils.StringUtil.units[] == orig(Utils.StringUtil.units[])
Utils.StringUtil.units[].str == orig(Utils.StringUtil.units[].str)
Utils.StringUtil.units[].millis == orig(Utils.StringUtil.units[].millis)
Utils.StringUtil.units[].threshold == orig(Utils.StringUtil.units[].threshold)
Utils.StringUtil.units[].stop == orig(Utils.StringUtil.units[].stop)
arg0.toString == orig(arg0.toString)
return != null
===========================================================================
agent.Agent$AgentThread:::OBJECT
this.goOn == false
agent.Agent.this.stateChange != null
agent.Agent.this.agentThread == null
agent.Agent.this.console has only one value
agent.Agent.this.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
agent.Agent.this.console.name has only one value
agent.Agent.this.console.name != null
agent.Agent.this.console.name.toString == "Server"
agent.Agent.this.console.stateChange has only one value
agent.Agent.this.console.stateChange != null
agent.Agent.this.console.consoleWriterThread has only one value
agent.Agent.this.console.consoleWriterThread != null
agent.Agent.this.console.messageQueue has only one value
agent.Agent.this.console.messageQueue != null
agent.Agent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
===========================================================================
agent.Agent$AgentThread.AgentThread(agent.Agent, java.lang.String):::ENTER
agent.Agent.this != null
agent.Agent.this.stateChange != null
agent.Agent.this.agentThread == null
agent.Agent.this.console has only one value
agent.Agent.this.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
agent.Agent.this.console.name has only one value
agent.Agent.this.console.name != null
agent.Agent.this.console.name.toString == "Server"
agent.Agent.this.console.stateChange has only one value
agent.Agent.this.console.stateChange != null
agent.Agent.this.console.consoleWriterThread has only one value
agent.Agent.this.console.consoleWriterThread != null
agent.Agent.this.console.messageQueue has only one value
agent.Agent.this.console.messageQueue != null
agent.Agent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 != null
===========================================================================
agent.Agent$AgentThread.AgentThread(agent.Agent, java.lang.String):::EXIT
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.Agent.this.console.name == orig(agent.Agent.this.console.name)
agent.Agent.this.console.name.toString == orig(agent.Agent.this.console.name.toString)
agent.Agent.this.console.stateChange == orig(agent.Agent.this.console.stateChange)
agent.Agent.this.console.consoleWriterThread == orig(agent.Agent.this.console.consoleWriterThread)
agent.Agent.this.console.messageQueue == orig(agent.Agent.this.console.messageQueue)
agent.Agent.this.console.messageQueue.getClass().getName() == orig(agent.Agent.this.console.messageQueue.getClass().getName())
arg1.toString == orig(arg1.toString)
===========================================================================
agent.Agent:::OBJECT
this == agent.Agent.this
this.getClass().getName() == agent.Agent.this.getClass().getName()
this.stateChange == agent.Agent.this.stateChange
this.agentThread == agent.Agent.this.agentThread
agent.Agent.this.console == this.console
agent.Agent.this.console == Utils.ConsoleWriter.this
this.console == Utils.ConsoleWriter.this
this.stateChange != null
agent.Agent.this.stateChange != null
agent.Agent.this.agentThread != null
agent.Agent.this.console has only one value
agent.Agent.this.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.Agent.Agent():::EXIT
this.agentThread == null
this.console == null
===========================================================================
agent.Agent.print(java.lang.String):::ENTER
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
arg0 != null
arg0.toString one of { "I'm working", "Thread started." }
===========================================================================
agent.Agent.print(java.lang.String):::EXIT
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(this)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(this.getClass().getName())
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
arg0.toString == orig(arg0.toString)
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
arg0.toString one of { "I'm working", "Thread started." }
this.console.messageQueue.getClass().getName() != orig(this.getClass().getName())
===========================================================================
agent.Agent.print(java.lang.String, java.lang.Throwable):::ENTER
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
arg0 != null
arg0.toString one of { "I'm working", "Thread started." }
arg1 == null
===========================================================================
agent.Agent.print(java.lang.String, java.lang.Throwable):::EXIT
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(this)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(this.getClass().getName())
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
arg0.toString == orig(arg0.toString)
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
arg0.toString one of { "I'm working", "Thread started." }
this.console.messageQueue.getClass().getName() != orig(this.getClass().getName())
===========================================================================
agent.Agent.setConsoleWriter(Utils.ConsoleWriter):::ENTER
this.agentThread == null
this.console == null
arg0 has only one value
arg0 != null
arg0.name has only one value
arg0.name != null
arg0.name.toString == "Server"
arg0.stateChange has only one value
arg0.stateChange != null
arg0.consoleWriterThread has only one value
arg0.consoleWriterThread != null
arg0.consoleWriterThread.goOn == true
arg0.messageQueue has only one value
arg0.messageQueue != null
arg0.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.getClass().getName() != arg0.messageQueue.getClass().getName()
===========================================================================
agent.Agent.setConsoleWriter(Utils.ConsoleWriter):::EXIT
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(arg0)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == arg0.name
this.console.stateChange == arg0.stateChange
this.console.consoleWriterThread == arg0.consoleWriterThread
this.console.consoleWriterThread.goOn == arg0.consoleWriterThread.goOn
this.console.messageQueue == arg0.messageQueue
this.console.messageQueue.getClass().getName() == arg0.messageQueue.getClass().getName()
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.stateChange == orig(arg0.stateChange)
arg0.consoleWriterThread == orig(arg0.consoleWriterThread)
arg0.consoleWriterThread.goOn == orig(arg0.consoleWriterThread.goOn)
arg0.messageQueue == orig(arg0.messageQueue)
arg0.messageQueue.getClass().getName() == orig(arg0.messageQueue.getClass().getName())
this.agentThread == null
this.console has only one value
this.console != null
arg0.name has only one value
arg0.name != null
arg0.name.toString == "Server"
arg0.stateChange has only one value
arg0.stateChange != null
arg0.consoleWriterThread has only one value
arg0.consoleWriterThread != null
arg0.consoleWriterThread.goOn == true
arg0.messageQueue has only one value
arg0.messageQueue != null
arg0.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg0.messageQueue.getClass().getName() != orig(this.getClass().getName())
===========================================================================
agent.Agent.startThread():::ENTER
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
this.console has only one value
this.console != null
===========================================================================
agent.Agent.startThread():::EXIT
this.stateChange == orig(this.stateChange)
this.stateChange == orig(agent.Agent.this.stateChange)
this.agentThread == orig(agent.Agent.this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(this)
agent.Agent.this.getClass().getName() == orig(this.getClass().getName())
this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(agent.Agent.this.console)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.agentThread != null
this.console has only one value
this.console != null
this.console.messageQueue.getClass().getName() != orig(this.getClass().getName())
===========================================================================
agent.CameraAgent$1:::OBJECT
this has only one value
agent.CameraAgent.this has only one value
agent.CameraAgent.this.name has only one value
agent.CameraAgent.this.name.toString == "Camera"
agent.CameraAgent.this.nests has only one value
agent.CameraAgent.this.nests[] == []
agent.CameraAgent.this.nests[].getClass().getName() == []
agent.CameraAgent.this.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.CameraAgent.this.mk == null
agent.CameraAgent.this.guiCamera == null
agent.CameraAgent.this.timer has only one value
agent.CameraAgent.this.kitRobot == null
agent.CameraAgent.this.partRobot == null
agent.CameraAgent.this.animation has only one value
agent.CameraAgent.this.stateChange has only one value
agent.CameraAgent.this.agentThread == null
agent.CameraAgent.this.console == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
===========================================================================
agent.CameraAgent$1.(agent.CameraAgent):::ENTER
agent.CameraAgent.this has only one value
agent.CameraAgent.this.name has only one value
agent.CameraAgent.this.name.toString == "Camera"
agent.CameraAgent.this.nests has only one value
agent.CameraAgent.this.nests[] == []
agent.CameraAgent.this.nests[].getClass().getName() == []
agent.CameraAgent.this.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.CameraAgent.this.mk == null
agent.CameraAgent.this.guiCamera == null
agent.CameraAgent.this.timer has only one value
agent.CameraAgent.this.kitRobot == null
agent.CameraAgent.this.partRobot == null
agent.CameraAgent.this.animation has only one value
agent.CameraAgent.this.stateChange has only one value
agent.CameraAgent.this.agentThread == null
agent.CameraAgent.this.console == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
===========================================================================
agent.CameraAgent$1.(agent.CameraAgent):::EXIT
agent.CameraAgent.this == orig(agent.CameraAgent.this)
agent.CameraAgent.this.name == orig(agent.CameraAgent.this.name)
agent.CameraAgent.this.name.toString == orig(agent.CameraAgent.this.name.toString)
agent.CameraAgent.this.nests == orig(agent.CameraAgent.this.nests)
agent.CameraAgent.this.nests[] == orig(agent.CameraAgent.this.nests[])
agent.CameraAgent.this.nests.getClass().getName() == orig(agent.CameraAgent.this.nests.getClass().getName())
agent.CameraAgent.this.mk == orig(agent.CameraAgent.this.mk)
agent.CameraAgent.this.guiCamera == orig(agent.CameraAgent.this.guiCamera)
agent.CameraAgent.this.timer == orig(agent.CameraAgent.this.timer)
agent.CameraAgent.this.kitRobot == orig(agent.CameraAgent.this.kitRobot)
agent.CameraAgent.this.partRobot == orig(agent.CameraAgent.this.partRobot)
agent.CameraAgent.this.animation == orig(agent.CameraAgent.this.animation)
agent.CameraAgent.this.stateChange == orig(agent.CameraAgent.this.stateChange)
agent.CameraAgent.this.agentThread == orig(agent.CameraAgent.this.agentThread)
agent.CameraAgent.this.console == orig(agent.CameraAgent.this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
===========================================================================
agent.CameraAgent$MyNest:::OBJECT
this.nest.requestList[] == []
this.nest.requestList[].getClass().getName() == []
this.nest.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.currentPartType == null
this.nest.currentParts[] == []
this.nest.currentParts[].getClass().getName() == []
this.nest.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.count == 0
this.nest.countRequest == 0
this.nest.full == 8
this.nest.takingParts == false
this.nest.partReady == false
this.nest.partTypeNull == false
this.nest.nestGraphics == null
this.nest.state has only one value
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
this.nest.lane.requestList[] == []
this.nest.lane.requestList[].getClass().getName() == []
this.nest.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.lane.currentParts[] == []
this.nest.lane.currentParts[].getClass().getName() == []
this.nest.lane.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.lane.currentType == null
this.nest.lane.topLimit == 5
this.nest.lane.lowerThreshold == 3
this.nest.lane.extraRequestCount == 0
this.nest.lane.state has only one value
this.nest.lane.laneGUI == null
this.nest.lane.agentThread == null
this.nest.lane.console has only one value
this.nest.laneState has only one value
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
this.nest.camera has only one value
this.nest.camera.name has only one value
this.nest.camera.name.toString == "Camera"
this.nest.camera.nests has only one value
this.nest.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
this.nest.camera.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.camera.mk == null
this.nest.camera.guiCamera == null
this.nest.camera.timer has only one value
this.nest.camera.kitRobot == null
this.nest.camera.partRobot == null
this.nest.camera.animation has only one value
this.nest.camera.stateChange has only one value
this.nest.camera.agentThread == null
this.nest.camera.console has only one value
this.nest.agentThread == null
this.nest.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.nest.console.name has only one value
this.nest.console.name.toString == "Server"
this.nest.console.stateChange has only one value
this.nest.console.consoleWriterThread has only one value
this.nest.console.messageQueue has only one value
this.nest.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.state has only one value
agent.CameraAgent$NestStatus.NOT_READY has only one value
agent.CameraAgent$NestStatus.STARTED_TIMER has only one value
agent.CameraAgent$NestStatus.READY has only one value
agent.CameraAgent$NestStatus.PHOTOGRAPHING has only one value
agent.CameraAgent$NestStatus.PHOTOGRAPHED has only one value
agent.CameraAgent$NestStatus.NEEDS_TO_PURGE has only one value
agent.CameraAgent$NestStatus.WAITING_TO_RE_PHOTOGRAPH has only one value
agent.CameraAgent$NestStatus.READY_TO_RE_PHOTOGRAPH has only one value
agent.CameraAgent$NestStatus.RE_PHOTOGRAPHING_ONCE has only one value
agent.CameraAgent$NestStatus.RE_PHOTOGRAPHED_ONCE has only one value
agent.CameraAgent$NestStatus.NEED_TO_RE_PHOTOGRAPH_AGAIN has only one value
agent.CameraAgent$NestStatus.WAITING_TO_RE_PHOTOGRAPH_AGAIN has only one value
agent.CameraAgent$NestStatus.READY_TO_RE_PHOTOGRAPH_AGAIN has only one value
agent.CameraAgent$NestStatus.RE_PHOTOGRAPHING_TWICE has only one value
agent.CameraAgent$NestStatus.RE_PHOTOGRAPHED_TWICE has only one value
agent.CameraAgent$NestStatus.$VALUES has only one value
agent.CameraAgent$NestStatus.$VALUES.getClass().getName() == agent.CameraAgent$NestStatus[].class
agent.CameraAgent$NestStatus.$VALUES[] contains no nulls and has only one value, of length 15
agent.CameraAgent$NestStatus.$VALUES[].getClass().getName() == [agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus, agent.CameraAgent.NestStatus]
agent.CameraAgent$NestStatus.$VALUES[].getClass().getName() elements == agent.CameraAgent.NestStatus.class
this.numFilledSnapshot == 0
agent.CameraAgent.this has only one value
agent.CameraAgent.this.name has only one value
agent.CameraAgent.this.name.toString == "Camera"
agent.CameraAgent.this.nests has only one value
agent.CameraAgent.this.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
agent.CameraAgent.this.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.CameraAgent.this.mk == null
agent.CameraAgent.this.guiCamera == null
agent.CameraAgent.this.timer has only one value
agent.CameraAgent.this.kitRobot == null
agent.CameraAgent.this.partRobot == null
agent.CameraAgent.this.animation has only one value
agent.CameraAgent.this.stateChange has only one value
agent.CameraAgent.this.agentThread == null
agent.CameraAgent.this.console has only one value
agent.CameraAgent.this.console.name has only one value
agent.CameraAgent.this.console.name.toString == "Server"
agent.CameraAgent.this.console.stateChange has only one value
agent.CameraAgent.this.console.consoleWriterThread has only one value
agent.CameraAgent.this.console.messageQueue has only one value
agent.CameraAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
size(agent.CameraAgent$NestStatus.$VALUES[]) == 15
===========================================================================
agent.CameraAgent$MyNest.MyNest(agent.CameraAgent, agent.NestAgent):::ENTER
agent.CameraAgent.this has only one value
agent.CameraAgent.this.name has only one value
agent.CameraAgent.this.name.toString == "Camera"
agent.CameraAgent.this.nests has only one value
agent.CameraAgent.this.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
agent.CameraAgent.this.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.CameraAgent.this.mk == null
agent.CameraAgent.this.guiCamera == null
agent.CameraAgent.this.timer has only one value
agent.CameraAgent.this.kitRobot == null
agent.CameraAgent.this.partRobot == null
agent.CameraAgent.this.animation has only one value
agent.CameraAgent.this.stateChange has only one value
agent.CameraAgent.this.agentThread == null
agent.CameraAgent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
agent.CameraAgent.this.console.name has only one value
agent.CameraAgent.this.console.name.toString == "Server"
agent.CameraAgent.this.console.stateChange has only one value
agent.CameraAgent.this.console.consoleWriterThread has only one value
agent.CameraAgent.this.console.messageQueue has only one value
agent.CameraAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentPartType == null
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.count == 0
arg1.countRequest == 0
arg1.full == 8
arg1.takingParts == false
arg1.partReady == false
arg1.partTypeNull == false
arg1.nestGraphics == null
arg1.state has only one value
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
arg1.lane.requestList[] == []
arg1.lane.requestList[].getClass().getName() == []
arg1.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.lane.currentParts[] == []
arg1.lane.currentParts[].getClass().getName() == []
arg1.lane.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.lane.currentType == null
arg1.lane.topLimit == 5
arg1.lane.lowerThreshold == 3
arg1.lane.extraRequestCount == 0
arg1.lane.state has only one value
arg1.lane.laneGUI == null
arg1.lane.agentThread == null
arg1.lane.console has only one value
arg1.laneState has only one value
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
arg1.camera has only one value
arg1.camera.name has only one value
arg1.camera.name.toString == "Camera"
arg1.camera.nests has only one value
arg1.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg1.camera.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.camera.mk == null
arg1.camera.guiCamera == null
arg1.camera.timer has only one value
arg1.camera.kitRobot == null
arg1.camera.partRobot == null
arg1.camera.animation has only one value
arg1.camera.stateChange has only one value
arg1.camera.agentThread == null
arg1.camera.console has only one value
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
===========================================================================
agent.CameraAgent$MyNest.MyNest(agent.CameraAgent, agent.NestAgent):::EXIT
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.CameraAgent.this == orig(agent.CameraAgent.this)
agent.CameraAgent.this.name == orig(agent.CameraAgent.this.name)
agent.CameraAgent.this.name.toString == orig(agent.CameraAgent.this.name.toString)
agent.CameraAgent.this.nests == orig(agent.CameraAgent.this.nests)
agent.CameraAgent.this.nests[] == orig(agent.CameraAgent.this.nests[])
agent.CameraAgent.this.nests.getClass().getName() == orig(agent.CameraAgent.this.nests.getClass().getName())
agent.CameraAgent.this.mk == orig(agent.CameraAgent.this.mk)
agent.CameraAgent.this.guiCamera == orig(agent.CameraAgent.this.guiCamera)
agent.CameraAgent.this.timer == orig(agent.CameraAgent.this.timer)
agent.CameraAgent.this.kitRobot == orig(agent.CameraAgent.this.kitRobot)
agent.CameraAgent.this.partRobot == orig(agent.CameraAgent.this.partRobot)
agent.CameraAgent.this.animation == orig(agent.CameraAgent.this.animation)
agent.CameraAgent.this.stateChange == orig(agent.CameraAgent.this.stateChange)
agent.CameraAgent.this.agentThread == orig(agent.CameraAgent.this.agentThread)
agent.CameraAgent.this.console == orig(agent.CameraAgent.this.console)
agent.CameraAgent.this.console.name == orig(agent.CameraAgent.this.console.name)
agent.CameraAgent.this.console.name.toString == orig(agent.CameraAgent.this.console.name.toString)
agent.CameraAgent.this.console.stateChange == orig(agent.CameraAgent.this.console.stateChange)
agent.CameraAgent.this.console.consoleWriterThread == orig(agent.CameraAgent.this.console.consoleWriterThread)
agent.CameraAgent.this.console.messageQueue == orig(agent.CameraAgent.this.console.messageQueue)
agent.CameraAgent.this.console.messageQueue.getClass().getName() == orig(agent.CameraAgent.this.console.messageQueue.getClass().getName())
arg1.requestList == orig(arg1.requestList)
arg1.requestList[] == orig(arg1.requestList[])
arg1.requestList.getClass().getName() == orig(arg1.requestList.getClass().getName())
arg1.currentPartType == orig(arg1.currentPartType)
arg1.currentParts == orig(arg1.currentParts)
arg1.currentParts[] == orig(arg1.currentParts[])
arg1.currentParts.getClass().getName() == orig(arg1.currentParts.getClass().getName())
arg1.count == orig(arg1.count)
arg1.countRequest == orig(arg1.countRequest)
arg1.full == orig(arg1.full)
arg1.takingParts == orig(arg1.takingParts)
arg1.partReady == orig(arg1.partReady)
arg1.partTypeNull == orig(arg1.partTypeNull)
arg1.nestGraphics == orig(arg1.nestGraphics)
arg1.state == orig(arg1.state)
arg1.animation == orig(arg1.animation)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.lane == orig(arg1.lane)
arg1.lane.requestList == orig(arg1.lane.requestList)
arg1.lane.requestList[] == orig(arg1.lane.requestList[])
arg1.lane.requestList.getClass().getName() == orig(arg1.lane.requestList.getClass().getName())
arg1.lane.currentParts == orig(arg1.lane.currentParts)
arg1.lane.currentParts[] == orig(arg1.lane.currentParts[])
arg1.lane.currentParts.getClass().getName() == orig(arg1.lane.currentParts.getClass().getName())
arg1.lane.currentType == orig(arg1.lane.currentType)
arg1.lane.topLimit == orig(arg1.lane.topLimit)
arg1.lane.lowerThreshold == orig(arg1.lane.lowerThreshold)
arg1.lane.extraRequestCount == orig(arg1.lane.extraRequestCount)
arg1.lane.state == orig(arg1.lane.state)
arg1.lane.name == orig(arg1.lane.name)
arg1.lane.name.toString == orig(arg1.lane.name.toString)
arg1.lane.animation == orig(arg1.lane.animation)
arg1.lane.feeder == orig(arg1.lane.feeder)
arg1.lane.nest == orig(arg1.lane.nest)
arg1.lane.laneGUI == orig(arg1.lane.laneGUI)
arg1.lane.stateChange == orig(arg1.lane.stateChange)
arg1.lane.agentThread == orig(arg1.lane.agentThread)
arg1.lane.console == orig(arg1.lane.console)
arg1.laneState == orig(arg1.laneState)
arg1.camera == orig(arg1.camera)
arg1.camera.name == orig(arg1.camera.name)
arg1.camera.name.toString == orig(arg1.camera.name.toString)
arg1.camera.nests == orig(arg1.camera.nests)
arg1.camera.nests[] == orig(arg1.camera.nests[])
arg1.camera.nests.getClass().getName() == orig(arg1.camera.nests.getClass().getName())
arg1.camera.mk == orig(arg1.camera.mk)
arg1.camera.guiCamera == orig(arg1.camera.guiCamera)
arg1.camera.timer == orig(arg1.camera.timer)
arg1.camera.kitRobot == orig(arg1.camera.kitRobot)
arg1.camera.partRobot == orig(arg1.camera.partRobot)
arg1.camera.animation == orig(arg1.camera.animation)
arg1.camera.stateChange == orig(arg1.camera.stateChange)
arg1.camera.agentThread == orig(arg1.camera.agentThread)
arg1.camera.console == orig(arg1.camera.console)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg1.console.name == orig(arg1.console.name)
arg1.console.name.toString == orig(arg1.console.name.toString)
arg1.console.stateChange == orig(arg1.console.stateChange)
arg1.console.consoleWriterThread == orig(arg1.console.consoleWriterThread)
arg1.console.messageQueue == orig(arg1.console.messageQueue)
arg1.console.messageQueue.getClass().getName() == orig(arg1.console.messageQueue.getClass().getName())
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentPartType == null
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.count == 0
arg1.countRequest == 0
arg1.full == 8
arg1.takingParts == false
arg1.partReady == false
arg1.partTypeNull == false
arg1.nestGraphics == null
arg1.state has only one value
arg1.lane.requestList[] == []
arg1.lane.requestList[].getClass().getName() == []
arg1.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.lane.currentParts[] == []
arg1.lane.currentParts[].getClass().getName() == []
arg1.lane.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.lane.currentType == null
arg1.lane.topLimit == 5
arg1.lane.lowerThreshold == 3
arg1.lane.extraRequestCount == 0
arg1.lane.state has only one value
arg1.lane.laneGUI == null
arg1.lane.agentThread == null
arg1.lane.console has only one value
arg1.laneState has only one value
arg1.camera has only one value
arg1.camera.name has only one value
arg1.camera.name.toString == "Camera"
arg1.camera.nests has only one value
arg1.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg1.camera.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.camera.mk == null
arg1.camera.guiCamera == null
arg1.camera.timer has only one value
arg1.camera.kitRobot == null
arg1.camera.partRobot == null
arg1.camera.animation has only one value
arg1.camera.stateChange has only one value
arg1.camera.agentThread == null
arg1.camera.console has only one value
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
===========================================================================
agent.CameraAgent$NestStatus:::OBJECT
===========================================================================
agent.CameraAgent$NestStatus.NestStatus(java.lang.String, int):::ENTER
arg0 != null
===========================================================================
agent.CameraAgent$NestStatus.NestStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.CameraAgent:::OBJECT
this.nests.getClass().getName() == this.kitRobot.myKits.getClass().getName()
this.nests.getClass().getName() == this.partRobot.MyKits.getClass().getName()
this.kitRobot.myKits.getClass().getName() == this.partRobot.MyKits.getClass().getName()
this.kitRobot.stand == this.partRobot.stand
this.kitRobot.stand.getClass().getName() == this.partRobot.stand.getClass().getName()
this.kitRobot.state == agent.KitRobotAgent$KitRobotState.IDLE
this.kitRobot.console == this.partRobot.console
this.kitRobot.console == this.console
this.kitRobot.console == Utils.ConsoleWriter.this
this.kitRobot.console.name == this.partRobot.console.name
this.kitRobot.console.name == this.console.name
this.kitRobot.console.stateChange == this.partRobot.console.stateChange
this.kitRobot.console.stateChange == this.console.stateChange
this.kitRobot.console.consoleWriterThread == this.partRobot.console.consoleWriterThread
this.kitRobot.console.consoleWriterThread == this.console.consoleWriterThread
this.kitRobot.console.messageQueue == this.partRobot.console.messageQueue
this.kitRobot.console.messageQueue == this.console.messageQueue
this.kitRobot.console.messageQueue.getClass().getName() == this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.partRobot.MyKits.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.partRobot.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.partRobot.console == this.console
this.partRobot.console == Utils.ConsoleWriter.this
this.partRobot.console.name == this.console.name
this.partRobot.console.stateChange == this.console.stateChange
this.partRobot.console.consoleWriterThread == this.console.consoleWriterThread
this.partRobot.console.messageQueue == this.console.messageQueue
this.partRobot.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.console == Utils.ConsoleWriter.this
this has only one value
this.name has only one value
this.name != null
this.name.toString == "Camera"
this.nests has only one value
this.nests != null
this.nests[] elements != null
this.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
this.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.mk == null
this.guiCamera.getClass().getName() == DeviceGraphics.CameraGraphics.class
this.timer has only one value
this.timer != null
this.kitRobot.myKits has only one value
this.kitRobot.myKits[] == []
this.kitRobot.myKits[].getClass().getName() == []
this.kitRobot.myKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.kitRobot.standPositions has only one value
this.kitRobot.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
this.kitRobot.kitWaitingOnConveyor == false
this.kitRobot.kitRequested == false
this.kitRobot.numKitsToMake == 0
this.kitRobot.numKitsRequested == 0
this.kitRobot.animation has only one value
this.kitRobot.stand has only one value
this.kitRobot.stand.getClass().getName() == agent.StandAgent.class
this.kitRobot.conveyor has only one value
this.kitRobot.conveyor.getClass().getName() == agent.ConveyorAgent.class
this.kitRobot.camera has only one value
this.kitRobot.camera.getClass().getName() == agent.CameraAgent.class
this.kitRobot.kitrobotGraphics == null
this.kitRobot.mockgraphics == null
this.kitRobot.state has only one value
agent.KitRobotAgent$KitRobotState.IDLE has only one value
agent.KitRobotAgent$KitRobotState.IDLE != null
agent.KitRobotAgent$KitRobotState.HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.HOLDING_KIT != null
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT != null
agent.KitRobotAgent$KitRobotState.$VALUES has only one value
agent.KitRobotAgent$KitRobotState.$VALUES != null
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == agent.KitRobotAgent$KitRobotState[].class
agent.KitRobotAgent$KitRobotState.$VALUES[] contains no nulls and has only one value, of length 3
agent.KitRobotAgent$KitRobotState.$VALUES[] elements != null
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() == [agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState]
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() elements == agent.KitRobotAgent.KitRobotState.class
this.kitRobot.name has only one value
this.kitRobot.name.toString == "KitRobot"
this.kitRobot.stateChange has only one value
this.kitRobot.agentThread == null
this.kitRobot.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.kitRobot.console.name has only one value
this.kitRobot.console.name.toString == "Server"
this.kitRobot.console.stateChange has only one value
this.kitRobot.console.consoleWriterThread has only one value
this.kitRobot.console.messageQueue has only one value
this.kitRobot.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.partRobot.name has only one value
this.partRobot.name != null
this.partRobot.name.toString == "PartsRobot"
this.partRobot.Kitconfig == null
this.partRobot.MyKits has only one value
this.partRobot.MyKits != null
this.partRobot.MyKits[] == []
this.partRobot.MyKits[].getClass().getName() == []
this.partRobot.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.partRobot.GoodParts has only one value
this.partRobot.GoodParts != null
this.partRobot.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.partRobot.Arms has only one value
this.partRobot.Arms != null
this.partRobot.Arms[] contains no nulls and has only one value, of length 4
this.partRobot.Arms[] elements != null
this.partRobot.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
this.partRobot.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
this.partRobot.time has only one value
this.partRobot.time != null
this.partRobot.kitsNum == 0
this.partRobot.timer has only one value
this.partRobot.timer != null
this.partRobot.KitsOnStand == null
this.partRobot.stand has only one value
this.partRobot.stand != null
this.partRobot.stand.getClass().getName() == agent.StandAgent.class
this.partRobot.partsRobotGraphics == null
this.partRobot.dropChance == 0.0
this.partRobot.status has only one value
this.partRobot.status != null
agent.PartsRobotAgent$PartsRobotStatus.IDLE has only one value
agent.PartsRobotAgent$PartsRobotStatus.IDLE != null
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP has only one value
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP != null
agent.PartsRobotAgent$PartsRobotStatus.PLACING has only one value
agent.PartsRobotAgent$PartsRobotStatus.PLACING != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$PartsRobotStatus[].class
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] elements != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus]
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.PartsRobotStatus.class
this.partRobot.animation has only one value
this.partRobot.animation != null
this.partRobot.stateChange has only one value
this.partRobot.stateChange != null
this.partRobot.agentThread == null
this.partRobot.console has only one value
this.partRobot.console != null
this.partRobot.console.name has only one value
this.partRobot.console.name != null
this.partRobot.console.name.toString == "Server"
this.partRobot.console.stateChange has only one value
this.partRobot.console.stateChange != null
this.partRobot.console.consoleWriterThread has only one value
this.partRobot.console.consoleWriterThread != null
this.partRobot.console.messageQueue has only one value
this.partRobot.console.messageQueue != null
this.partRobot.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.animation has only one value
this.animation != null
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.KitRobotAgent$KitRobotState.$VALUES[]) == 3
size(this.partRobot.Arms[]) == 4
size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[]) == 3
this.nests.getClass().getName() != this.guiCamera.getClass().getName()
this.nests.getClass().getName() != this.kitRobot.standPositions.getClass().getName()
this.nests.getClass().getName() != this.kitRobot.stand.getClass().getName()
this.nests.getClass().getName() != this.kitRobot.conveyor.getClass().getName()
this.nests.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.nests.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.nests.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.nests.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.nests.getClass().getName() != this.partRobot.stand.getClass().getName()
this.nests.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.nests.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.nests.getClass().getName() != this.console.messageQueue.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.myKits.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.standPositions.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.stand.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.conveyor.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.guiCamera.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.guiCamera.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.guiCamera.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.guiCamera.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.guiCamera.getClass().getName() != this.partRobot.stand.getClass().getName()
this.guiCamera.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.guiCamera.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.guiCamera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.kitRobot.standPositions.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.kitRobot.stand.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.kitRobot.conveyor.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.kitRobot.myKits.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.partRobot.stand.getClass().getName()
this.kitRobot.myKits.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.myKits.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.kitRobot.stand.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.kitRobot.conveyor.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.partRobot.stand.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.standPositions.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.kitRobot.conveyor.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.kitRobot.stand.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.stand.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.kitRobot.camera.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.partRobot.stand.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.conveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.camera.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.partRobot.stand.getClass().getName()
this.kitRobot.camera.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.kitRobot.camera.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.kitRobot.console.messageQueue.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.partRobot.MyKits.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.partRobot.stand.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitRobot.console.messageQueue.getClass().getName() != this.partRobot.MyKits.getClass().getName()
this.kitRobot.console.messageQueue.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.kitRobot.console.messageQueue.getClass().getName() != this.partRobot.stand.getClass().getName()
this.kitRobot.console.messageQueue.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.partRobot.MyKits.getClass().getName() != this.partRobot.GoodParts.getClass().getName()
this.partRobot.MyKits.getClass().getName() != this.partRobot.stand.getClass().getName()
this.partRobot.MyKits.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.partRobot.MyKits.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.partRobot.MyKits.getClass().getName() != this.console.messageQueue.getClass().getName()
this.partRobot.GoodParts.getClass().getName() != this.partRobot.stand.getClass().getName()
this.partRobot.GoodParts.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.partRobot.GoodParts.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.partRobot.GoodParts.getClass().getName() != this.console.messageQueue.getClass().getName()
this.partRobot.stand.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.partRobot.stand.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
this.partRobot.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != this.partRobot.console.messageQueue.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.CameraAgent.CameraAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Camera"
===========================================================================
agent.CameraAgent.CameraAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.nests[] == []
this.nests[].getClass().getName() == []
this.guiCamera == null
this.kitRobot == null
this.partRobot == null
this.agentThread == null
this.console == null
arg0.toString == "Camera"
===========================================================================
agent.CameraAgent.getName():::ENTER
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera has only one value
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(this.kitRobot.myKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.MyKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.Arms.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera == orig(this.guiCamera)
this.guiCamera.getClass().getName() == orig(this.guiCamera.getClass().getName())
this.timer == orig(this.timer)
this.kitRobot == orig(this.kitRobot)
this.kitRobot.myKits == orig(this.kitRobot.myKits)
this.kitRobot.myKits[] == orig(this.kitRobot.myKits[])
this.kitRobot.standPositions == orig(this.kitRobot.standPositions)
this.kitRobot.standPositions.getClass().getName() == orig(this.kitRobot.standPositions.getClass().getName())
this.kitRobot.kitWaitingOnConveyor == orig(this.kitRobot.kitWaitingOnConveyor)
this.kitRobot.kitRequested == orig(this.kitRobot.kitRequested)
this.kitRobot.numKitsToMake == orig(this.kitRobot.numKitsToMake)
this.kitRobot.numKitsRequested == orig(this.kitRobot.numKitsRequested)
this.kitRobot.animation == orig(this.kitRobot.animation)
this.kitRobot.stand == orig(this.kitRobot.stand)
this.kitRobot.stand == orig(this.partRobot.stand)
this.kitRobot.stand.getClass().getName() == orig(this.kitRobot.stand.getClass().getName())
this.kitRobot.stand.getClass().getName() == orig(this.partRobot.stand.getClass().getName())
this.kitRobot.conveyor == orig(this.kitRobot.conveyor)
this.kitRobot.conveyor.getClass().getName() == orig(this.kitRobot.conveyor.getClass().getName())
this.kitRobot.camera == orig(this.kitRobot.camera)
this.kitRobot.camera.getClass().getName() == orig(this.kitRobot.camera.getClass().getName())
this.kitRobot.kitrobotGraphics == orig(this.kitRobot.kitrobotGraphics)
this.kitRobot.mockgraphics == orig(this.kitRobot.mockgraphics)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.kitRobot.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.kitRobot.name == orig(this.kitRobot.name)
this.kitRobot.name.toString == orig(this.kitRobot.name.toString)
this.kitRobot.stateChange == orig(this.kitRobot.stateChange)
this.kitRobot.agentThread == orig(this.kitRobot.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.kitRobot.console.name.toString == orig(this.kitRobot.console.name.toString)
this.partRobot == orig(this.partRobot)
this.partRobot.name == orig(this.partRobot.name)
this.partRobot.name.toString == orig(this.partRobot.name.toString)
this.partRobot.Kitconfig == orig(this.partRobot.Kitconfig)
this.partRobot.MyKits == orig(this.partRobot.MyKits)
this.partRobot.MyKits[] == orig(this.partRobot.MyKits[])
this.partRobot.GoodParts == orig(this.partRobot.GoodParts)
this.partRobot.GoodParts.getClass().getName() == orig(this.partRobot.GoodParts.getClass().getName())
this.partRobot.Arms == orig(this.partRobot.Arms)
this.partRobot.Arms[] == orig(this.partRobot.Arms[])
this.partRobot.time == orig(this.partRobot.time)
this.partRobot.kitsNum == orig(this.partRobot.kitsNum)
this.partRobot.timer == orig(this.partRobot.timer)
this.partRobot.KitsOnStand == orig(this.partRobot.KitsOnStand)
this.partRobot.partsRobotGraphics == orig(this.partRobot.partsRobotGraphics)
this.partRobot.dropChance == orig(this.partRobot.dropChance)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.partRobot.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.partRobot.animation == orig(this.partRobot.animation)
this.partRobot.stateChange == orig(this.partRobot.stateChange)
this.partRobot.agentThread == orig(this.partRobot.agentThread)
this.partRobot.console.name.toString == orig(this.partRobot.console.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.kitRobot.console)
this.console == orig(this.partRobot.console)
this.console == orig(this.console)
this.console.name == orig(this.kitRobot.console.name)
this.console.name == orig(this.partRobot.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.kitRobot.console.stateChange)
this.console.stateChange == orig(this.partRobot.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.kitRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.partRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.kitRobot.console.messageQueue)
this.console.messageQueue == orig(this.partRobot.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.kitRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.partRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera has only one value
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread == null
this.console has only one value
return has only one value
return.toString == "Camera"
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.pickAndExecuteAnAction():::ENTER
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera has only one value
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread has only one value
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.pickAndExecuteAnAction():::EXIT316
===========================================================================
agent.CameraAgent.pickAndExecuteAnAction():::EXIT316;condition="not(return == true)"
===========================================================================
agent.CameraAgent.pickAndExecuteAnAction():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(this.kitRobot.myKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.MyKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.Arms.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera == orig(this.guiCamera)
this.guiCamera.getClass().getName() == orig(this.guiCamera.getClass().getName())
this.timer == orig(this.timer)
this.kitRobot == orig(this.kitRobot)
this.kitRobot.myKits == orig(this.kitRobot.myKits)
this.kitRobot.myKits[] == orig(this.kitRobot.myKits[])
this.kitRobot.standPositions == orig(this.kitRobot.standPositions)
this.kitRobot.standPositions.getClass().getName() == orig(this.kitRobot.standPositions.getClass().getName())
this.kitRobot.kitWaitingOnConveyor == orig(this.kitRobot.kitWaitingOnConveyor)
this.kitRobot.kitRequested == orig(this.kitRobot.kitRequested)
this.kitRobot.numKitsToMake == orig(this.kitRobot.numKitsToMake)
this.kitRobot.numKitsRequested == orig(this.kitRobot.numKitsRequested)
this.kitRobot.animation == orig(this.kitRobot.animation)
this.kitRobot.stand == orig(this.kitRobot.stand)
this.kitRobot.stand == orig(this.partRobot.stand)
this.kitRobot.stand.getClass().getName() == orig(this.kitRobot.stand.getClass().getName())
this.kitRobot.stand.getClass().getName() == orig(this.partRobot.stand.getClass().getName())
this.kitRobot.conveyor == orig(this.kitRobot.conveyor)
this.kitRobot.conveyor.getClass().getName() == orig(this.kitRobot.conveyor.getClass().getName())
this.kitRobot.camera == orig(this.kitRobot.camera)
this.kitRobot.camera.getClass().getName() == orig(this.kitRobot.camera.getClass().getName())
this.kitRobot.kitrobotGraphics == orig(this.kitRobot.kitrobotGraphics)
this.kitRobot.mockgraphics == orig(this.kitRobot.mockgraphics)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.kitRobot.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.kitRobot.name == orig(this.kitRobot.name)
this.kitRobot.name.toString == orig(this.kitRobot.name.toString)
this.kitRobot.stateChange == orig(this.kitRobot.stateChange)
this.kitRobot.agentThread == orig(this.kitRobot.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.kitRobot.console.name.toString == orig(this.kitRobot.console.name.toString)
this.partRobot == orig(this.partRobot)
this.partRobot.name == orig(this.partRobot.name)
this.partRobot.name.toString == orig(this.partRobot.name.toString)
this.partRobot.Kitconfig == orig(this.partRobot.Kitconfig)
this.partRobot.MyKits == orig(this.partRobot.MyKits)
this.partRobot.MyKits[] == orig(this.partRobot.MyKits[])
this.partRobot.GoodParts == orig(this.partRobot.GoodParts)
this.partRobot.GoodParts.getClass().getName() == orig(this.partRobot.GoodParts.getClass().getName())
this.partRobot.Arms == orig(this.partRobot.Arms)
this.partRobot.Arms[] == orig(this.partRobot.Arms[])
this.partRobot.time == orig(this.partRobot.time)
this.partRobot.kitsNum == orig(this.partRobot.kitsNum)
this.partRobot.timer == orig(this.partRobot.timer)
this.partRobot.KitsOnStand == orig(this.partRobot.KitsOnStand)
this.partRobot.partsRobotGraphics == orig(this.partRobot.partsRobotGraphics)
this.partRobot.dropChance == orig(this.partRobot.dropChance)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.partRobot.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.partRobot.animation == orig(this.partRobot.animation)
this.partRobot.stateChange == orig(this.partRobot.stateChange)
this.partRobot.agentThread == orig(this.partRobot.agentThread)
this.partRobot.console.name.toString == orig(this.partRobot.console.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.kitRobot.console)
this.console == orig(this.partRobot.console)
this.console == orig(this.console)
this.console.name == orig(this.kitRobot.console.name)
this.console.name == orig(this.partRobot.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.kitRobot.console.stateChange)
this.console.stateChange == orig(this.partRobot.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.kitRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.partRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.kitRobot.console.messageQueue)
this.console.messageQueue == orig(this.partRobot.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.kitRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.partRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera has only one value
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread has only one value
this.console has only one value
return == false
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.CameraAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera == null
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == DeviceGraphics.CameraGraphics.class
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(this.kitRobot.myKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.MyKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.Arms.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera.getClass().getName() == orig(arg0.getClass().getName())
this.timer == orig(this.timer)
this.kitRobot == orig(this.kitRobot)
this.kitRobot.myKits == orig(this.kitRobot.myKits)
this.kitRobot.myKits[] == orig(this.kitRobot.myKits[])
this.kitRobot.standPositions == orig(this.kitRobot.standPositions)
this.kitRobot.standPositions.getClass().getName() == orig(this.kitRobot.standPositions.getClass().getName())
this.kitRobot.kitWaitingOnConveyor == orig(this.kitRobot.kitWaitingOnConveyor)
this.kitRobot.kitRequested == orig(this.kitRobot.kitRequested)
this.kitRobot.numKitsToMake == orig(this.kitRobot.numKitsToMake)
this.kitRobot.numKitsRequested == orig(this.kitRobot.numKitsRequested)
this.kitRobot.animation == orig(this.kitRobot.animation)
this.kitRobot.stand == orig(this.kitRobot.stand)
this.kitRobot.stand == orig(this.partRobot.stand)
this.kitRobot.stand.getClass().getName() == orig(this.kitRobot.stand.getClass().getName())
this.kitRobot.stand.getClass().getName() == orig(this.partRobot.stand.getClass().getName())
this.kitRobot.conveyor == orig(this.kitRobot.conveyor)
this.kitRobot.conveyor.getClass().getName() == orig(this.kitRobot.conveyor.getClass().getName())
this.kitRobot.camera == orig(this.kitRobot.camera)
this.kitRobot.camera.getClass().getName() == orig(this.kitRobot.camera.getClass().getName())
this.kitRobot.kitrobotGraphics == orig(this.kitRobot.kitrobotGraphics)
this.kitRobot.mockgraphics == orig(this.kitRobot.mockgraphics)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.kitRobot.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.kitRobot.name == orig(this.kitRobot.name)
this.kitRobot.name.toString == orig(this.kitRobot.name.toString)
this.kitRobot.stateChange == orig(this.kitRobot.stateChange)
this.kitRobot.agentThread == orig(this.kitRobot.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.kitRobot.console.name.toString == orig(this.kitRobot.console.name.toString)
this.partRobot == orig(this.partRobot)
this.partRobot.name == orig(this.partRobot.name)
this.partRobot.name.toString == orig(this.partRobot.name.toString)
this.partRobot.Kitconfig == orig(this.partRobot.Kitconfig)
this.partRobot.MyKits == orig(this.partRobot.MyKits)
this.partRobot.MyKits[] == orig(this.partRobot.MyKits[])
this.partRobot.GoodParts == orig(this.partRobot.GoodParts)
this.partRobot.GoodParts.getClass().getName() == orig(this.partRobot.GoodParts.getClass().getName())
this.partRobot.Arms == orig(this.partRobot.Arms)
this.partRobot.Arms[] == orig(this.partRobot.Arms[])
this.partRobot.time == orig(this.partRobot.time)
this.partRobot.kitsNum == orig(this.partRobot.kitsNum)
this.partRobot.timer == orig(this.partRobot.timer)
this.partRobot.KitsOnStand == orig(this.partRobot.KitsOnStand)
this.partRobot.partsRobotGraphics == orig(this.partRobot.partsRobotGraphics)
this.partRobot.dropChance == orig(this.partRobot.dropChance)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.partRobot.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.partRobot.animation == orig(this.partRobot.animation)
this.partRobot.stateChange == orig(this.partRobot.stateChange)
this.partRobot.agentThread == orig(this.partRobot.agentThread)
this.partRobot.console.name.toString == orig(this.partRobot.console.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.kitRobot.console)
this.console == orig(this.partRobot.console)
this.console == orig(this.console)
this.console.name == orig(this.kitRobot.console.name)
this.console.name == orig(this.partRobot.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.kitRobot.console.stateChange)
this.console.stateChange == orig(this.partRobot.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.kitRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.partRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.kitRobot.console.messageQueue)
this.console.messageQueue == orig(this.partRobot.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.kitRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.partRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera has only one value
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.setKitRobot(agent.KitRobotAgent):::ENTER
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == arg0.myKits.getClass().getName()
agent.KitRobotAgent$KitRobotState.IDLE == arg0.state
this.partRobot.stand == arg0.stand
this.partRobot.stand.getClass().getName() == arg0.stand.getClass().getName()
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera == null
this.kitRobot == null
this.partRobot has only one value
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.myKits has only one value
arg0.myKits[] == []
arg0.myKits[].getClass().getName() == []
arg0.standPositions has only one value
arg0.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
arg0.kitWaitingOnConveyor == false
arg0.kitRequested == false
arg0.numKitsToMake == 0
arg0.numKitsRequested == 0
arg0.animation has only one value
arg0.conveyor has only one value
arg0.conveyor.getClass().getName() == agent.ConveyorAgent.class
arg0.camera has only one value
arg0.camera.getClass().getName() == agent.CameraAgent.class
arg0.kitrobotGraphics == null
arg0.mockgraphics == null
arg0.name has only one value
arg0.name.toString == "KitRobot"
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.setKitRobot(agent.KitRobotAgent):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == arg0.myKits.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.MyKits.getClass().getName())
this.nests.getClass().getName() == orig(this.partRobot.Arms.getClass().getName())
this.nests.getClass().getName() == orig(arg0.myKits.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera == orig(this.guiCamera)
this.timer == orig(this.timer)
this.kitRobot == orig(arg0)
this.kitRobot.myKits == arg0.myKits
this.kitRobot.standPositions == arg0.standPositions
this.kitRobot.standPositions.getClass().getName() == arg0.standPositions.getClass().getName()
this.kitRobot.kitWaitingOnConveyor == arg0.kitWaitingOnConveyor
this.kitRobot.kitRequested == arg0.kitRequested
this.kitRobot.numKitsToMake == arg0.numKitsToMake
this.kitRobot.numKitsRequested == arg0.numKitsRequested
this.kitRobot.animation == arg0.animation
this.kitRobot.stand == arg0.stand
this.kitRobot.stand.getClass().getName() == arg0.stand.getClass().getName()
this.kitRobot.conveyor == arg0.conveyor
this.kitRobot.conveyor.getClass().getName() == arg0.conveyor.getClass().getName()
this.kitRobot.camera == arg0.camera
this.kitRobot.camera.getClass().getName() == arg0.camera.getClass().getName()
agent.KitRobotAgent$KitRobotState.IDLE == arg0.state
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.IDLE == orig(arg0.state)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.kitRobot.name == arg0.name
this.kitRobot.stateChange == arg0.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.partRobot == orig(this.partRobot)
this.partRobot.name == orig(this.partRobot.name)
this.partRobot.name.toString == orig(this.partRobot.name.toString)
this.partRobot.Kitconfig == orig(this.partRobot.Kitconfig)
this.partRobot.MyKits == orig(this.partRobot.MyKits)
this.partRobot.MyKits[] == orig(this.partRobot.MyKits[])
this.partRobot.GoodParts == orig(this.partRobot.GoodParts)
this.partRobot.GoodParts.getClass().getName() == orig(this.partRobot.GoodParts.getClass().getName())
this.partRobot.Arms == orig(this.partRobot.Arms)
this.partRobot.Arms[] == orig(this.partRobot.Arms[])
this.partRobot.time == orig(this.partRobot.time)
this.partRobot.kitsNum == orig(this.partRobot.kitsNum)
this.partRobot.timer == orig(this.partRobot.timer)
this.partRobot.KitsOnStand == orig(this.partRobot.KitsOnStand)
this.partRobot.stand == arg0.stand
this.partRobot.stand.getClass().getName() == arg0.stand.getClass().getName()
this.partRobot.partsRobotGraphics == orig(this.partRobot.partsRobotGraphics)
this.partRobot.dropChance == orig(this.partRobot.dropChance)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.partRobot.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.partRobot.animation == orig(this.partRobot.animation)
this.partRobot.stateChange == orig(this.partRobot.stateChange)
this.partRobot.agentThread == orig(this.partRobot.agentThread)
this.partRobot.console.name.toString == orig(this.partRobot.console.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == orig(this.partRobot.console)
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.partRobot.console.name)
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.partRobot.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.partRobot.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.partRobot.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.partRobot.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.myKits == orig(arg0.myKits)
arg0.myKits[] == orig(arg0.myKits[])
arg0.standPositions == orig(arg0.standPositions)
arg0.standPositions.getClass().getName() == orig(arg0.standPositions.getClass().getName())
arg0.kitWaitingOnConveyor == orig(arg0.kitWaitingOnConveyor)
arg0.kitRequested == orig(arg0.kitRequested)
arg0.numKitsToMake == orig(arg0.numKitsToMake)
arg0.numKitsRequested == orig(arg0.numKitsRequested)
arg0.animation == orig(arg0.animation)
arg0.stand == orig(this.partRobot.stand)
arg0.stand == orig(arg0.stand)
arg0.stand.getClass().getName() == orig(this.partRobot.stand.getClass().getName())
arg0.stand.getClass().getName() == orig(arg0.stand.getClass().getName())
arg0.conveyor == orig(arg0.conveyor)
arg0.conveyor.getClass().getName() == orig(arg0.conveyor.getClass().getName())
arg0.camera == orig(arg0.camera)
arg0.camera.getClass().getName() == orig(arg0.camera.getClass().getName())
arg0.kitrobotGraphics == orig(arg0.kitrobotGraphics)
arg0.mockgraphics == orig(arg0.mockgraphics)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera == null
this.kitRobot has only one value
this.partRobot has only one value
this.agentThread == null
this.console has only one value
arg0.myKits has only one value
arg0.myKits[] == []
arg0.myKits[].getClass().getName() == []
arg0.standPositions has only one value
arg0.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
arg0.kitWaitingOnConveyor == false
arg0.kitRequested == false
arg0.numKitsToMake == 0
arg0.numKitsRequested == 0
arg0.animation has only one value
arg0.stand has only one value
arg0.stand.getClass().getName() == agent.StandAgent.class
arg0.conveyor has only one value
arg0.conveyor.getClass().getName() == agent.ConveyorAgent.class
arg0.camera has only one value
arg0.camera.getClass().getName() == agent.CameraAgent.class
arg0.kitrobotGraphics == null
arg0.mockgraphics == null
arg0.name has only one value
arg0.name.toString == "KitRobot"
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.nests[]) == 8
===========================================================================
agent.CameraAgent.setNest(agent.NestAgent):::ENTER
this == arg0.camera
this.name == arg0.camera.name
this.nests == arg0.camera.nests
this.nests.getClass().getName() == arg0.requestList.getClass().getName()
this.nests.getClass().getName() == arg0.currentParts.getClass().getName()
this.nests.getClass().getName() == arg0.lane.requestList.getClass().getName()
this.nests.getClass().getName() == arg0.lane.currentParts.getClass().getName()
this.nests.getClass().getName() == arg0.camera.nests.getClass().getName()
this.timer == arg0.camera.timer
this.animation == arg0.camera.animation
this.stateChange == arg0.camera.stateChange
this.console == arg0.lane.console
this.console == arg0.camera.console
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
arg0 == arg0.lane.nest
arg0.state == agent.NestAgent$NestState.DONE_PURGING
arg0.laneState == agent.NestAgent$LaneState.READY
this.guiCamera == null
this.kitRobot == null
this.partRobot == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentPartType == null
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.count == 0
arg0.countRequest == 0
arg0.full == 8
arg0.takingParts == false
arg0.partReady == false
arg0.partTypeNull == false
arg0.nestGraphics == null
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
arg0.lane.requestList[] == []
arg0.lane.requestList[].getClass().getName() == []
arg0.lane.currentParts[] == []
arg0.lane.currentParts[].getClass().getName() == []
arg0.lane.currentType == null
arg0.lane.topLimit == 5
arg0.lane.lowerThreshold == 3
arg0.lane.extraRequestCount == 0
arg0.lane.state has only one value
arg0.lane.laneGUI == null
arg0.lane.agentThread == null
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
arg0.camera has only one value
arg0.camera.name.toString == "Camera"
arg0.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg0.camera.mk == null
arg0.camera.guiCamera == null
arg0.camera.kitRobot == null
arg0.camera.partRobot == null
arg0.camera.agentThread == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
this.nests.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.nests.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.console.messageQueue.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.console.messageQueue.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
===========================================================================
agent.CameraAgent.setNest(agent.NestAgent):::EXIT
this.name == arg0.camera.name
this.name == orig(this.name)
this.name == orig(arg0.camera.name)
this.name.toString == orig(this.name.toString)
this.nests == arg0.camera.nests
this.nests == orig(this.nests)
this.nests == orig(arg0.camera.nests)
this.nests.getClass().getName() == arg0.requestList.getClass().getName()
this.nests.getClass().getName() == arg0.currentParts.getClass().getName()
this.nests.getClass().getName() == arg0.lane.requestList.getClass().getName()
this.nests.getClass().getName() == arg0.lane.currentParts.getClass().getName()
this.nests.getClass().getName() == arg0.camera.nests.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(arg0.requestList.getClass().getName())
this.nests.getClass().getName() == orig(arg0.currentParts.getClass().getName())
this.nests.getClass().getName() == orig(arg0.lane.requestList.getClass().getName())
this.nests.getClass().getName() == orig(arg0.lane.currentParts.getClass().getName())
this.nests.getClass().getName() == orig(arg0.camera.nests.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera == orig(this.guiCamera)
this.timer == arg0.camera.timer
this.timer == orig(this.timer)
this.timer == orig(arg0.camera.timer)
this.kitRobot == orig(this.kitRobot)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.partRobot == orig(this.partRobot)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == arg0.camera.animation
this.animation == orig(this.animation)
this.animation == orig(arg0.camera.animation)
this.stateChange == arg0.camera.stateChange
this.stateChange == orig(this.stateChange)
this.stateChange == orig(arg0.camera.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.lane.console
this.console == arg0.camera.console
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.lane.console)
this.console == orig(arg0.camera.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.requestList == orig(arg0.requestList)
arg0.requestList[] == orig(arg0.requestList[])
arg0.currentPartType == orig(arg0.currentPartType)
arg0.currentParts == orig(arg0.currentParts)
arg0.currentParts[] == orig(arg0.currentParts[])
arg0.count == orig(arg0.count)
arg0.countRequest == orig(arg0.countRequest)
arg0.full == orig(arg0.full)
arg0.takingParts == orig(arg0.takingParts)
arg0.partReady == orig(arg0.partReady)
arg0.partTypeNull == orig(arg0.partTypeNull)
arg0.nestGraphics == orig(arg0.nestGraphics)
arg0.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(arg0.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
arg0.animation == orig(arg0.animation)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.lane == orig(arg0.lane)
arg0.lane.requestList == orig(arg0.lane.requestList)
arg0.lane.requestList[] == orig(arg0.lane.requestList[])
arg0.lane.currentParts == orig(arg0.lane.currentParts)
arg0.lane.currentParts[] == orig(arg0.lane.currentParts[])
arg0.lane.currentType == orig(arg0.lane.currentType)
arg0.lane.topLimit == orig(arg0.lane.topLimit)
arg0.lane.lowerThreshold == orig(arg0.lane.lowerThreshold)
arg0.lane.extraRequestCount == orig(arg0.lane.extraRequestCount)
arg0.lane.state == orig(arg0.lane.state)
arg0.lane.name == orig(arg0.lane.name)
arg0.lane.name.toString == orig(arg0.lane.name.toString)
arg0.lane.animation == orig(arg0.lane.animation)
arg0.lane.feeder == orig(arg0.lane.feeder)
arg0.lane.nest == orig(arg0)
arg0.lane.laneGUI == orig(arg0.lane.laneGUI)
arg0.lane.stateChange == orig(arg0.lane.stateChange)
arg0.lane.agentThread == orig(arg0.lane.agentThread)
arg0.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(arg0.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
arg0.camera == orig(this)
arg0.camera == orig(arg0.camera)
arg0.camera.name.toString == orig(arg0.camera.name.toString)
arg0.camera.mk == orig(arg0.camera.mk)
arg0.camera.guiCamera == orig(arg0.camera.guiCamera)
arg0.camera.kitRobot == orig(arg0.camera.kitRobot)
arg0.camera.partRobot == orig(arg0.camera.partRobot)
arg0.camera.agentThread == orig(arg0.camera.agentThread)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
size(this.nests[])-1 == orig(size(this.nests[]))
size(arg0.camera.nests[])-1 == orig(size(arg0.camera.nests[]))
this.guiCamera == null
this.kitRobot == null
this.partRobot == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentPartType == null
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.count == 0
arg0.countRequest == 0
arg0.full == 8
arg0.takingParts == false
arg0.partReady == false
arg0.partTypeNull == false
arg0.nestGraphics == null
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
arg0.lane.requestList[] == []
arg0.lane.requestList[].getClass().getName() == []
arg0.lane.currentParts[] == []
arg0.lane.currentParts[].getClass().getName() == []
arg0.lane.currentType == null
arg0.lane.topLimit == 5
arg0.lane.lowerThreshold == 3
arg0.lane.extraRequestCount == 0
arg0.lane.state has only one value
arg0.lane.laneGUI == null
arg0.lane.agentThread == null
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
arg0.camera has only one value
arg0.camera.name.toString == "Camera"
arg0.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg0.camera.mk == null
arg0.camera.guiCamera == null
arg0.camera.kitRobot == null
arg0.camera.partRobot == null
arg0.camera.agentThread == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
this.nests.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.nests.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.console.messageQueue.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.console.messageQueue.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
===========================================================================
agent.CameraAgent.setPartsRobot(agent.PartsRobotAgent):::ENTER
this.nests.getClass().getName() == arg0.MyKits.getClass().getName()
this.nests.getClass().getName() == arg0.Arms.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.IDLE == arg0.status
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera == null
this.kitRobot == null
this.partRobot == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "PartsRobot"
arg0.Kitconfig == null
arg0.MyKits has only one value
arg0.MyKits[] == []
arg0.MyKits[].getClass().getName() == []
arg0.GoodParts has only one value
arg0.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.Arms has only one value
arg0.Arms[] contains no nulls and has only one value, of length 4
arg0.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
arg0.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
arg0.time has only one value
arg0.kitsNum == 0
arg0.timer has only one value
arg0.KitsOnStand == null
arg0.stand has only one value
arg0.stand.getClass().getName() == agent.StandAgent.class
arg0.partsRobotGraphics == null
arg0.dropChance == 0.0
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.nests[]) == 8
size(arg0.Arms[]) == 4
===========================================================================
agent.CameraAgent.setPartsRobot(agent.PartsRobotAgent):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.nests.getClass().getName() == this.partRobot.Arms.getClass().getName()
this.nests.getClass().getName() == arg0.MyKits.getClass().getName()
this.nests.getClass().getName() == arg0.Arms.getClass().getName()
this.nests.getClass().getName() == orig(this.nests.getClass().getName())
this.nests.getClass().getName() == orig(arg0.MyKits.getClass().getName())
this.nests.getClass().getName() == orig(arg0.Arms.getClass().getName())
this.mk == orig(this.mk)
this.guiCamera == orig(this.guiCamera)
this.timer == orig(this.timer)
this.kitRobot == orig(this.kitRobot)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.partRobot == orig(arg0)
this.partRobot.name == arg0.name
this.partRobot.MyKits == arg0.MyKits
this.partRobot.GoodParts == arg0.GoodParts
this.partRobot.GoodParts.getClass().getName() == arg0.GoodParts.getClass().getName()
this.partRobot.Arms == arg0.Arms
this.partRobot.time == arg0.time
this.partRobot.kitsNum == arg0.kitsNum
this.partRobot.timer == arg0.timer
this.partRobot.stand.getClass().getName() == arg0.stand.getClass().getName()
this.partRobot.dropChance == arg0.dropChance
agent.PartsRobotAgent$PartsRobotStatus.IDLE == arg0.status
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(arg0.status)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.partRobot.animation == arg0.animation
this.partRobot.stateChange == arg0.stateChange
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console.name.toString == orig(this.console.name.toString)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.Kitconfig == orig(arg0.Kitconfig)
arg0.MyKits == orig(arg0.MyKits)
arg0.MyKits[] == orig(arg0.MyKits[])
arg0.GoodParts == orig(arg0.GoodParts)
arg0.GoodParts.getClass().getName() == orig(arg0.GoodParts.getClass().getName())
arg0.Arms == orig(arg0.Arms)
arg0.Arms[] == orig(arg0.Arms[])
arg0.time == orig(arg0.time)
arg0.kitsNum == orig(arg0.kitsNum)
arg0.timer == orig(arg0.timer)
arg0.KitsOnStand == orig(arg0.KitsOnStand)
arg0.stand.getClass().getName() == orig(arg0.stand.getClass().getName())
arg0.partsRobotGraphics == orig(arg0.partsRobotGraphics)
arg0.dropChance == orig(arg0.dropChance)
arg0.animation == orig(arg0.animation)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.guiCamera == null
this.kitRobot == null
this.partRobot has only one value
this.agentThread == null
this.console has only one value
arg0.name has only one value
arg0.name.toString == "PartsRobot"
arg0.Kitconfig == null
arg0.MyKits has only one value
arg0.MyKits[] == []
arg0.MyKits[].getClass().getName() == []
arg0.GoodParts has only one value
arg0.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
arg0.Arms has only one value
arg0.Arms[] contains no nulls and has only one value, of length 4
arg0.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
arg0.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
arg0.time has only one value
arg0.kitsNum == 0
arg0.timer has only one value
arg0.KitsOnStand == null
arg0.stand has only one value
arg0.stand.getClass().getName() == agent.StandAgent.class
arg0.partsRobotGraphics == null
arg0.dropChance == 0.0
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.nests[]) == 8
size(arg0.Arms[]) == 4
===========================================================================
agent.ConveyorAgent$ConveyorState:::OBJECT
===========================================================================
agent.ConveyorAgent$ConveyorState.ConveyorState(java.lang.String, int):::ENTER
arg0.toString one of { "IDLE", "TRANSFERRING_KIT" }
arg1 one of { 0, 1 }
===========================================================================
agent.ConveyorAgent$ConveyorState.ConveyorState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "IDLE", "TRANSFERRING_KIT" }
===========================================================================
agent.ConveyorAgent:::OBJECT
this.kitsOnConveyor.getClass().getName() == this.kitsOnOutboundConveyor.getClass().getName()
this.state == agent.ConveyorAgent$ConveyorState.IDLE
this.fcs.state == agent.FCSAgent$myState.PENDING
this.fcs.console == this.console
this.fcs.console == Utils.ConsoleWriter.this
this.fcs.console.name == this.console.name
this.fcs.console.stateChange == this.console.stateChange
this.fcs.console.consoleWriterThread == this.console.consoleWriterThread
this.fcs.console.messageQueue == this.console.messageQueue
this.fcs.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.console == Utils.ConsoleWriter.this
this has only one value
this.kitsOnConveyor has only one value
this.kitsOnConveyor != null
this.kitsOnConveyor[] == []
this.kitsOnConveyor[].getClass().getName() == []
this.kitsOnConveyor.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.kitsOnOutboundConveyor has only one value
this.kitsOnOutboundConveyor != null
this.kitsOnOutboundConveyor[] == []
this.kitsOnOutboundConveyor[].getClass().getName() == []
this.kitConfig == null
this.incomingKit == null
this.outgoingKit == null
this.numKitsToDeliver == 0
agent.ConveyorAgent$ConveyorState.IDLE has only one value
agent.ConveyorAgent$ConveyorState.IDLE != null
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT has only one value
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT != null
agent.ConveyorAgent$ConveyorState.$VALUES has only one value
agent.ConveyorAgent$ConveyorState.$VALUES != null
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == agent.ConveyorAgent$ConveyorState[].class
agent.ConveyorAgent$ConveyorState.$VALUES[] contains no nulls and has only one value, of length 2
agent.ConveyorAgent$ConveyorState.$VALUES[] elements != null
agent.ConveyorAgent$ConveyorState.$VALUES[].getClass().getName() == [agent.ConveyorAgent.ConveyorState, agent.ConveyorAgent.ConveyorState]
agent.ConveyorAgent$ConveyorState.$VALUES[].getClass().getName() elements == agent.ConveyorAgent.ConveyorState.class
this.start == false
this.animation has only one value
this.animation != null
this.kitrobot.getClass().getName() == agent.KitRobotAgent.class
this.fcs.stand.getClass().getName() == agent.StandAgent.class
this.fcs.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
this.fcs.gantry.getClass().getName() == agent.GantryAgent.class
this.fcs.nests has only one value
this.fcs.nests[] contains no nulls and has only one value, of length 8
this.fcs.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcs.nests[].getClass().getName() elements == agent.NestAgent.class
this.fcs.conveyor.getClass().getName() == agent.ConveyorAgent.class
this.fcs.state has only one value
agent.FCSAgent$myState.PENDING has only one value
agent.FCSAgent$myState.PENDING != null
agent.FCSAgent$myState.STARTED has only one value
agent.FCSAgent$myState.STARTED != null
agent.FCSAgent$myState.LOADED has only one value
agent.FCSAgent$myState.LOADED != null
agent.FCSAgent$myState.$VALUES has only one value
agent.FCSAgent$myState.$VALUES != null
agent.FCSAgent$myState.$VALUES.getClass().getName() == agent.FCSAgent$myState[].class
agent.FCSAgent$myState.$VALUES[] contains no nulls and has only one value, of length 3
agent.FCSAgent$myState.$VALUES[] elements != null
agent.FCSAgent$myState.$VALUES[].getClass().getName() == [agent.FCSAgent.myState, agent.FCSAgent.myState, agent.FCSAgent.myState]
agent.FCSAgent$myState.$VALUES[].getClass().getName() elements == agent.FCSAgent.myState.class
this.fcs.orders has only one value
this.fcs.orders[] == []
this.fcs.orders[].getClass().getName() == []
this.fcs.orders.getClass().getName() == java.util.ArrayList.class
this.fcs.numOrdersFinished == 0
this.fcs.camera.getClass().getName() == agent.CameraAgent.class
this.fcs.partTypeCount == 0
this.fcs.fcs == null
this.fcs.name has only one value
this.fcs.name.toString == "FCS"
this.fcs.binsSet == false
this.fcs.binsToAdd has only one value
this.fcs.binsToAdd[] == []
this.fcs.binsToAdd[].getClass().getName() == []
this.fcs.stateChange has only one value
this.fcs.agentThread == null
this.fcs.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.fcs.console.name has only one value
this.fcs.console.name.toString == "Server"
this.fcs.console.stateChange has only one value
this.fcs.console.consoleWriterThread has only one value
this.fcs.console.messageQueue has only one value
this.fcs.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.conveyorGraphics.getClass().getName() == DeviceGraphics.ConveyorGraphics.class
this.mockgraphics == null
this.name has only one value
this.name != null
this.name.toString == "Conveyor"
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.ConveyorAgent$ConveyorState.$VALUES[]) == 2
size(this.fcs.nests[]) == 8
size(agent.FCSAgent$myState.$VALUES[]) == 3
this.kitsOnConveyor.getClass().getName() != agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.kitrobot.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.stand.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.partsRobot.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.gantry.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.conveyor.getClass().getName()
this.kitsOnConveyor.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.orders.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.camera.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.kitsOnConveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.kitrobot.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.stand.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.partsRobot.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.gantry.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.conveyor.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.orders.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.camera.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.conveyorGraphics.getClass().getName()
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.stand.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.partsRobot.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.gantry.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.conveyor.getClass().getName()
this.kitrobot.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.orders.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.camera.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.kitrobot.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.kitrobot.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.partsRobot.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.gantry.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.conveyor.getClass().getName()
this.fcs.stand.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.orders.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.camera.getClass().getName()
this.fcs.stand.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.stand.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.fcs.gantry.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.fcs.conveyor.getClass().getName()
this.fcs.partsRobot.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.fcs.orders.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.fcs.camera.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.partsRobot.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.gantry.getClass().getName() != this.fcs.conveyor.getClass().getName()
this.fcs.gantry.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.fcs.gantry.getClass().getName() != this.fcs.orders.getClass().getName()
this.fcs.gantry.getClass().getName() != this.fcs.camera.getClass().getName()
this.fcs.gantry.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.gantry.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.gantry.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.conveyor.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.fcs.conveyor.getClass().getName() != this.fcs.orders.getClass().getName()
this.fcs.conveyor.getClass().getName() != this.fcs.camera.getClass().getName()
this.fcs.conveyor.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.conveyor.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.conveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.fcs.orders.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.fcs.camera.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.conveyorGraphics.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.orders.getClass().getName() != this.fcs.camera.getClass().getName()
this.fcs.orders.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.orders.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.orders.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.camera.getClass().getName() != this.fcs.console.messageQueue.getClass().getName()
this.fcs.camera.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.fcs.camera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.console.messageQueue.getClass().getName() != this.conveyorGraphics.getClass().getName()
this.conveyorGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.ConveyorAgent.ConveyorAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Conveyor"
===========================================================================
agent.ConveyorAgent.ConveyorAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.kitrobot == null
this.fcs == null
this.conveyorGraphics == null
this.agentThread == null
this.console == null
arg0.toString == "Conveyor"
===========================================================================
agent.ConveyorAgent.getName():::ENTER
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.ConveyorAgent.getName():::EXIT
this.kitsOnConveyor == orig(this.kitsOnConveyor)
this.kitsOnConveyor[] == orig(this.kitsOnConveyor[])
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnConveyor.getClass().getName())
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnOutboundConveyor.getClass().getName())
this.kitsOnOutboundConveyor == orig(this.kitsOnOutboundConveyor)
this.kitsOnOutboundConveyor[] == orig(this.kitsOnOutboundConveyor[])
this.kitConfig == orig(this.kitConfig)
this.incomingKit == orig(this.incomingKit)
this.outgoingKit == orig(this.outgoingKit)
this.numKitsToDeliver == orig(this.numKitsToDeliver)
agent.ConveyorAgent$ConveyorState.IDLE == orig(this.state)
agent.ConveyorAgent$ConveyorState.IDLE == orig(agent.ConveyorAgent$ConveyorState.IDLE)
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT == orig(agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT)
agent.ConveyorAgent$ConveyorState.$VALUES == orig(agent.ConveyorAgent$ConveyorState.$VALUES)
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == orig(agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName())
agent.ConveyorAgent$ConveyorState.$VALUES[] == orig(agent.ConveyorAgent$ConveyorState.$VALUES[])
this.start == orig(this.start)
this.animation == orig(this.animation)
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.stand == orig(this.fcs.stand)
this.fcs.stand.getClass().getName() == orig(this.fcs.stand.getClass().getName())
this.fcs.partsRobot == orig(this.fcs.partsRobot)
this.fcs.partsRobot.getClass().getName() == orig(this.fcs.partsRobot.getClass().getName())
this.fcs.gantry == orig(this.fcs.gantry)
this.fcs.gantry.getClass().getName() == orig(this.fcs.gantry.getClass().getName())
this.fcs.nests == orig(this.fcs.nests)
this.fcs.nests[] == orig(this.fcs.nests[])
this.fcs.conveyor == orig(this.fcs.conveyor)
this.fcs.conveyor.getClass().getName() == orig(this.fcs.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.fcs.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcs.orders == orig(this.fcs.orders)
this.fcs.orders[] == orig(this.fcs.orders[])
this.fcs.orders.getClass().getName() == orig(this.fcs.orders.getClass().getName())
this.fcs.numOrdersFinished == orig(this.fcs.numOrdersFinished)
this.fcs.camera == orig(this.fcs.camera)
this.fcs.camera.getClass().getName() == orig(this.fcs.camera.getClass().getName())
this.fcs.partTypeCount == orig(this.fcs.partTypeCount)
this.fcs.fcs == orig(this.fcs.fcs)
this.fcs.name == orig(this.fcs.name)
this.fcs.name.toString == orig(this.fcs.name.toString)
this.fcs.binsSet == orig(this.fcs.binsSet)
this.fcs.binsToAdd == orig(this.fcs.binsToAdd)
this.fcs.binsToAdd[] == orig(this.fcs.binsToAdd[])
this.fcs.stateChange == orig(this.fcs.stateChange)
this.fcs.agentThread == orig(this.fcs.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.fcs.console.name.toString == orig(this.fcs.console.name.toString)
this.conveyorGraphics == orig(this.conveyorGraphics)
this.conveyorGraphics.getClass().getName() == orig(this.conveyorGraphics.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
this.name == return
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.fcs.console)
this.console == orig(this.console)
this.console.name == orig(this.fcs.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.fcs.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.fcs.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.fcs.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.fcs.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics has only one value
this.agentThread == null
this.console has only one value
return has only one value
return.toString == "Conveyor"
===========================================================================
agent.ConveyorAgent.pickAndExecuteAnAction():::ENTER
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics has only one value
this.agentThread has only one value
this.console has only one value
===========================================================================
agent.ConveyorAgent.pickAndExecuteAnAction():::EXIT231
===========================================================================
agent.ConveyorAgent.pickAndExecuteAnAction():::EXIT231;condition="not(return == true)"
===========================================================================
agent.ConveyorAgent.pickAndExecuteAnAction():::EXIT
this.kitsOnConveyor == orig(this.kitsOnConveyor)
this.kitsOnConveyor[] == orig(this.kitsOnConveyor[])
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnConveyor.getClass().getName())
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnOutboundConveyor.getClass().getName())
this.kitsOnOutboundConveyor == orig(this.kitsOnOutboundConveyor)
this.kitsOnOutboundConveyor[] == orig(this.kitsOnOutboundConveyor[])
this.kitConfig == orig(this.kitConfig)
this.incomingKit == orig(this.incomingKit)
this.outgoingKit == orig(this.outgoingKit)
this.numKitsToDeliver == orig(this.numKitsToDeliver)
agent.ConveyorAgent$ConveyorState.IDLE == orig(this.state)
agent.ConveyorAgent$ConveyorState.IDLE == orig(agent.ConveyorAgent$ConveyorState.IDLE)
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT == orig(agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT)
agent.ConveyorAgent$ConveyorState.$VALUES == orig(agent.ConveyorAgent$ConveyorState.$VALUES)
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == orig(agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName())
agent.ConveyorAgent$ConveyorState.$VALUES[] == orig(agent.ConveyorAgent$ConveyorState.$VALUES[])
this.start == orig(this.start)
this.animation == orig(this.animation)
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.stand == orig(this.fcs.stand)
this.fcs.stand.getClass().getName() == orig(this.fcs.stand.getClass().getName())
this.fcs.partsRobot == orig(this.fcs.partsRobot)
this.fcs.partsRobot.getClass().getName() == orig(this.fcs.partsRobot.getClass().getName())
this.fcs.gantry == orig(this.fcs.gantry)
this.fcs.gantry.getClass().getName() == orig(this.fcs.gantry.getClass().getName())
this.fcs.nests == orig(this.fcs.nests)
this.fcs.nests[] == orig(this.fcs.nests[])
this.fcs.conveyor == orig(this.fcs.conveyor)
this.fcs.conveyor.getClass().getName() == orig(this.fcs.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.fcs.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcs.orders == orig(this.fcs.orders)
this.fcs.orders[] == orig(this.fcs.orders[])
this.fcs.orders.getClass().getName() == orig(this.fcs.orders.getClass().getName())
this.fcs.numOrdersFinished == orig(this.fcs.numOrdersFinished)
this.fcs.camera == orig(this.fcs.camera)
this.fcs.camera.getClass().getName() == orig(this.fcs.camera.getClass().getName())
this.fcs.partTypeCount == orig(this.fcs.partTypeCount)
this.fcs.fcs == orig(this.fcs.fcs)
this.fcs.name == orig(this.fcs.name)
this.fcs.name.toString == orig(this.fcs.name.toString)
this.fcs.binsSet == orig(this.fcs.binsSet)
this.fcs.binsToAdd == orig(this.fcs.binsToAdd)
this.fcs.binsToAdd[] == orig(this.fcs.binsToAdd[])
this.fcs.stateChange == orig(this.fcs.stateChange)
this.fcs.agentThread == orig(this.fcs.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.fcs.console.name.toString == orig(this.fcs.console.name.toString)
this.conveyorGraphics == orig(this.conveyorGraphics)
this.conveyorGraphics.getClass().getName() == orig(this.conveyorGraphics.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.fcs.console)
this.console == orig(this.console)
this.console.name == orig(this.fcs.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.fcs.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.fcs.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.fcs.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.fcs.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics has only one value
this.agentThread has only one value
this.console has only one value
return == false
===========================================================================
agent.ConveyorAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.ConveyorAgent.setFCS(agent.FCSAgent):::ENTER
agent.FCSAgent$myState.PENDING == arg0.state
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.kitrobot has only one value
this.fcs == null
this.conveyorGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.stand == null
arg0.partsRobot == null
arg0.gantry == null
arg0.nests has only one value
arg0.nests[] contains no nulls and has only one value, of length 8
arg0.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
arg0.nests[].getClass().getName() elements == agent.NestAgent.class
arg0.conveyor == null
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.orders.getClass().getName() == java.util.ArrayList.class
arg0.numOrdersFinished == 0
arg0.camera == null
arg0.partTypeCount == 0
arg0.fcs == null
arg0.name has only one value
arg0.name.toString == "FCS"
arg0.binsSet == false
arg0.binsToAdd has only one value
arg0.binsToAdd[] == []
arg0.binsToAdd[].getClass().getName() == []
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.nests[]) == 8
===========================================================================
agent.ConveyorAgent.setFCS(agent.FCSAgent):::EXIT
this.kitsOnConveyor == orig(this.kitsOnConveyor)
this.kitsOnConveyor[] == orig(this.kitsOnConveyor[])
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnConveyor.getClass().getName())
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnOutboundConveyor.getClass().getName())
this.kitsOnOutboundConveyor == orig(this.kitsOnOutboundConveyor)
this.kitsOnOutboundConveyor[] == orig(this.kitsOnOutboundConveyor[])
this.kitConfig == orig(this.kitConfig)
this.incomingKit == orig(this.incomingKit)
this.outgoingKit == orig(this.outgoingKit)
this.numKitsToDeliver == orig(this.numKitsToDeliver)
agent.ConveyorAgent$ConveyorState.IDLE == orig(this.state)
agent.ConveyorAgent$ConveyorState.IDLE == orig(agent.ConveyorAgent$ConveyorState.IDLE)
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT == orig(agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT)
agent.ConveyorAgent$ConveyorState.$VALUES == orig(agent.ConveyorAgent$ConveyorState.$VALUES)
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == orig(agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName())
agent.ConveyorAgent$ConveyorState.$VALUES[] == orig(agent.ConveyorAgent$ConveyorState.$VALUES[])
this.start == orig(this.start)
this.animation == orig(this.animation)
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.fcs == orig(arg0)
this.fcs.nests == arg0.nests
agent.FCSAgent$myState.PENDING == arg0.state
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.PENDING == orig(arg0.state)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcs.orders == arg0.orders
this.fcs.orders.getClass().getName() == arg0.orders.getClass().getName()
this.fcs.numOrdersFinished == arg0.numOrdersFinished
this.fcs.partTypeCount == arg0.partTypeCount
this.fcs.name == arg0.name
this.fcs.binsSet == arg0.binsSet
this.fcs.binsToAdd == arg0.binsToAdd
this.fcs.stateChange == arg0.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.conveyorGraphics == orig(this.conveyorGraphics)
this.mockgraphics == orig(this.mockgraphics)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.stand == orig(arg0.stand)
arg0.partsRobot == orig(arg0.partsRobot)
arg0.gantry == orig(arg0.gantry)
arg0.nests == orig(arg0.nests)
arg0.nests[] == orig(arg0.nests[])
arg0.conveyor == orig(arg0.conveyor)
arg0.orders == orig(arg0.orders)
arg0.orders[] == orig(arg0.orders[])
arg0.orders.getClass().getName() == orig(arg0.orders.getClass().getName())
arg0.numOrdersFinished == orig(arg0.numOrdersFinished)
arg0.camera == orig(arg0.camera)
arg0.partTypeCount == orig(arg0.partTypeCount)
arg0.fcs == orig(arg0.fcs)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.binsSet == orig(arg0.binsSet)
arg0.binsToAdd == orig(arg0.binsToAdd)
arg0.binsToAdd[] == orig(arg0.binsToAdd[])
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand == null
this.fcs.partsRobot == null
this.fcs.gantry == null
this.fcs.conveyor == null
this.fcs.camera == null
this.conveyorGraphics == null
this.agentThread == null
this.console has only one value
arg0.stand == null
arg0.partsRobot == null
arg0.gantry == null
arg0.nests has only one value
arg0.nests[] contains no nulls and has only one value, of length 8
arg0.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
arg0.nests[].getClass().getName() elements == agent.NestAgent.class
arg0.conveyor == null
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.orders.getClass().getName() == java.util.ArrayList.class
arg0.numOrdersFinished == 0
arg0.camera == null
arg0.partTypeCount == 0
arg0.fcs == null
arg0.name has only one value
arg0.name.toString == "FCS"
arg0.binsSet == false
arg0.binsToAdd has only one value
arg0.binsToAdd[] == []
arg0.binsToAdd[].getClass().getName() == []
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.nests[]) == 8
===========================================================================
agent.ConveyorAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == DeviceGraphics.ConveyorGraphics.class
===========================================================================
agent.ConveyorAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.kitsOnConveyor == orig(this.kitsOnConveyor)
this.kitsOnConveyor[] == orig(this.kitsOnConveyor[])
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnConveyor.getClass().getName())
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnOutboundConveyor.getClass().getName())
this.kitsOnOutboundConveyor == orig(this.kitsOnOutboundConveyor)
this.kitsOnOutboundConveyor[] == orig(this.kitsOnOutboundConveyor[])
this.kitConfig == orig(this.kitConfig)
this.incomingKit == orig(this.incomingKit)
this.outgoingKit == orig(this.outgoingKit)
this.numKitsToDeliver == orig(this.numKitsToDeliver)
agent.ConveyorAgent$ConveyorState.IDLE == orig(this.state)
agent.ConveyorAgent$ConveyorState.IDLE == orig(agent.ConveyorAgent$ConveyorState.IDLE)
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT == orig(agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT)
agent.ConveyorAgent$ConveyorState.$VALUES == orig(agent.ConveyorAgent$ConveyorState.$VALUES)
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == orig(agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName())
agent.ConveyorAgent$ConveyorState.$VALUES[] == orig(agent.ConveyorAgent$ConveyorState.$VALUES[])
this.start == orig(this.start)
this.animation == orig(this.animation)
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.stand == orig(this.fcs.stand)
this.fcs.stand.getClass().getName() == orig(this.fcs.stand.getClass().getName())
this.fcs.partsRobot == orig(this.fcs.partsRobot)
this.fcs.partsRobot.getClass().getName() == orig(this.fcs.partsRobot.getClass().getName())
this.fcs.gantry == orig(this.fcs.gantry)
this.fcs.gantry.getClass().getName() == orig(this.fcs.gantry.getClass().getName())
this.fcs.nests == orig(this.fcs.nests)
this.fcs.nests[] == orig(this.fcs.nests[])
this.fcs.conveyor == orig(this.fcs.conveyor)
this.fcs.conveyor.getClass().getName() == orig(this.fcs.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.fcs.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.fcs.orders == orig(this.fcs.orders)
this.fcs.orders[] == orig(this.fcs.orders[])
this.fcs.orders.getClass().getName() == orig(this.fcs.orders.getClass().getName())
this.fcs.numOrdersFinished == orig(this.fcs.numOrdersFinished)
this.fcs.camera == orig(this.fcs.camera)
this.fcs.camera.getClass().getName() == orig(this.fcs.camera.getClass().getName())
this.fcs.partTypeCount == orig(this.fcs.partTypeCount)
this.fcs.fcs == orig(this.fcs.fcs)
this.fcs.name == orig(this.fcs.name)
this.fcs.name.toString == orig(this.fcs.name.toString)
this.fcs.binsSet == orig(this.fcs.binsSet)
this.fcs.binsToAdd == orig(this.fcs.binsToAdd)
this.fcs.binsToAdd[] == orig(this.fcs.binsToAdd[])
this.fcs.stateChange == orig(this.fcs.stateChange)
this.fcs.agentThread == orig(this.fcs.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.fcs.console.name.toString == orig(this.fcs.console.name.toString)
this.conveyorGraphics.getClass().getName() == orig(arg0.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.fcs.console)
this.console == orig(this.console)
this.console.name == orig(this.fcs.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.fcs.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.fcs.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.fcs.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.fcs.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.fcs has only one value
this.fcs.stand has only one value
this.fcs.partsRobot has only one value
this.fcs.gantry has only one value
this.fcs.conveyor has only one value
this.fcs.camera has only one value
this.conveyorGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.ConveyorAgent.setKitrobot(agent.interfaces.KitRobot):::ENTER
this.kitrobot == null
this.fcs == null
this.conveyorGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.KitRobotAgent.class
===========================================================================
agent.ConveyorAgent.setKitrobot(agent.interfaces.KitRobot):::EXIT
this.kitsOnConveyor == orig(this.kitsOnConveyor)
this.kitsOnConveyor[] == orig(this.kitsOnConveyor[])
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnConveyor.getClass().getName())
this.kitsOnConveyor.getClass().getName() == orig(this.kitsOnOutboundConveyor.getClass().getName())
this.kitsOnOutboundConveyor == orig(this.kitsOnOutboundConveyor)
this.kitsOnOutboundConveyor[] == orig(this.kitsOnOutboundConveyor[])
this.kitConfig == orig(this.kitConfig)
this.incomingKit == orig(this.incomingKit)
this.outgoingKit == orig(this.outgoingKit)
this.numKitsToDeliver == orig(this.numKitsToDeliver)
agent.ConveyorAgent$ConveyorState.IDLE == orig(this.state)
agent.ConveyorAgent$ConveyorState.IDLE == orig(agent.ConveyorAgent$ConveyorState.IDLE)
agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT == orig(agent.ConveyorAgent$ConveyorState.TRANSFERRING_KIT)
agent.ConveyorAgent$ConveyorState.$VALUES == orig(agent.ConveyorAgent$ConveyorState.$VALUES)
agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName() == orig(agent.ConveyorAgent$ConveyorState.$VALUES.getClass().getName())
agent.ConveyorAgent$ConveyorState.$VALUES[] == orig(agent.ConveyorAgent$ConveyorState.$VALUES[])
this.start == orig(this.start)
this.animation == orig(this.animation)
this.kitrobot == orig(arg0)
this.kitrobot.getClass().getName() == orig(arg0.getClass().getName())
this.fcs == orig(this.fcs)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.conveyorGraphics == orig(this.conveyorGraphics)
this.mockgraphics == orig(this.mockgraphics)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console.name.toString == orig(this.console.name.toString)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.fcs == null
this.conveyorGraphics == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.FCSAgent$myState:::OBJECT
===========================================================================
agent.FCSAgent$myState.myState(java.lang.String, int):::ENTER
arg0.toString one of { "LOADED", "PENDING", "STARTED" }
arg1 one of { 0, 1, 2 }
===========================================================================
agent.FCSAgent$myState.myState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "LOADED", "PENDING", "STARTED" }
===========================================================================
agent.FCSAgent:::OBJECT
this == this.fcs.agent
this.stand == this.fcs.agent.stand
this.stand.getClass().getName() == this.fcs.agent.stand.getClass().getName()
this.partsRobot == this.fcs.agent.partsRobot
this.partsRobot.getClass().getName() == this.fcs.agent.partsRobot.getClass().getName()
this.gantry == this.fcs.agent.gantry
this.gantry.getClass().getName() == this.fcs.agent.gantry.getClass().getName()
this.nests == this.fcs.agent.nests
this.conveyor == this.fcs.agent.conveyor
this.conveyor.getClass().getName() == this.fcs.agent.conveyor.getClass().getName()
this.state == agent.FCSAgent$myState.PENDING
agent.FCSAgent$myState.PENDING == this.fcs.agent.state
this.orders == this.fcs.agent.orders
this.orders.getClass().getName() == this.fcs.agent.orders.getClass().getName()
this.numOrdersFinished == this.fcs.agent.numOrdersFinished
this.camera == this.fcs.agent.camera
this.camera.getClass().getName() == this.fcs.agent.camera.getClass().getName()
this.partTypeCount == this.fcs.agent.partTypeCount
this.fcs == this.fcs.agent.fcs
this.fcs.agent == this.fcs.server.fcsAgent
this.fcs.agent.fcs == this.fcs.server.fcs
this.fcs.agent.name == this.name
this.fcs.agent.binsSet == this.binsSet
this.fcs.agent.binsToAdd == this.binsToAdd
this.fcs.agent.stateChange == this.stateChange
this.fcs.agent.stateChange == agent.Agent.this.stateChange
this.fcs.agent.agentThread == this.agentThread
this.fcs.agent.agentThread == agent.Agent.this.agentThread
this.fcs.agent.console == this.fcs.server.console
this.fcs.agent.console == agent.Agent.this.console
this.fcs.agent.console == this.console
this.fcs.agent.console == Utils.ConsoleWriter.this
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.partsMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.kitMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.gantryRobotMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.kitAssemblyMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.laneMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.kitRobotMngrWriter.getClass().getName()
this.fcs.server.factProdMngrWriter.getClass().getName() == this.fcs.server.partsRobotMngrWriter.getClass().getName()
this.stateChange == agent.Agent.this.stateChange
this.agentThread == agent.Agent.this.agentThread
agent.Agent.this.console == this.console
agent.Agent.this.console == Utils.ConsoleWriter.this
this.console == Utils.ConsoleWriter.this
this has only one value
this.stand.getClass().getName() == agent.StandAgent.class
this.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
this.gantry.getClass().getName() == agent.GantryAgent.class
this.nests has only one value
this.nests != null
this.nests[] elements != null
this.nests[].getClass().getName() elements == agent.NestAgent.class
this.conveyor.getClass().getName() == agent.ConveyorAgent.class
agent.FCSAgent$myState.PENDING has only one value
agent.FCSAgent$myState.PENDING != null
agent.FCSAgent$myState.STARTED has only one value
agent.FCSAgent$myState.STARTED != null
agent.FCSAgent$myState.LOADED has only one value
agent.FCSAgent$myState.LOADED != null
agent.FCSAgent$myState.$VALUES has only one value
agent.FCSAgent$myState.$VALUES != null
agent.FCSAgent$myState.$VALUES.getClass().getName() == agent.FCSAgent$myState[].class
agent.FCSAgent$myState.$VALUES[] contains no nulls and has only one value, of length 3
agent.FCSAgent$myState.$VALUES[] elements != null
agent.FCSAgent$myState.$VALUES[].getClass().getName() == [agent.FCSAgent.myState, agent.FCSAgent.myState, agent.FCSAgent.myState]
agent.FCSAgent$myState.$VALUES[].getClass().getName() elements == agent.FCSAgent.myState.class
this.orders has only one value
this.orders != null
this.orders[] == []
this.orders[].getClass().getName() == []
this.orders.getClass().getName() == java.util.ArrayList.class
this.numOrdersFinished == 0
this.camera.getClass().getName() == agent.CameraAgent.class
this.partTypeCount == 0
this.fcs.queue has only one value
this.fcs.queue[] == []
this.fcs.queue[].getClass().getName() == []
this.fcs.kitConfigs has only one value
this.fcs.kitConfigs[] contains no nulls and has only one value, of length 5
this.fcs.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.fcs.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.fcs.partTypes has only one value
this.fcs.partTypes[] contains no nulls and has only one value, of length 10
this.fcs.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.fcs.partTypes[].getClass().getName() elements == factory.PartType.class
this.fcs.agent has only one value
this.fcs.agent.stand has only one value
this.fcs.agent.stand.getClass().getName() == agent.StandAgent.class
this.fcs.agent.partsRobot has only one value
this.fcs.agent.partsRobot.getClass().getName() == agent.PartsRobotAgent.class
this.fcs.agent.gantry has only one value
this.fcs.agent.gantry.getClass().getName() == agent.GantryAgent.class
this.fcs.agent.nests has only one value
this.fcs.agent.nests[] contains no nulls and has only one value, of length 8
this.fcs.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.fcs.agent.nests[].getClass().getName() elements == agent.NestAgent.class
this.fcs.agent.conveyor has only one value
this.fcs.agent.conveyor.getClass().getName() == agent.ConveyorAgent.class
this.fcs.agent.state has only one value
this.fcs.agent.orders has only one value
this.fcs.agent.orders[] == []
this.fcs.agent.orders[].getClass().getName() == []
this.fcs.agent.orders.getClass().getName() == java.util.ArrayList.class
this.fcs.agent.numOrdersFinished == 0
this.fcs.agent.camera has only one value
this.fcs.agent.camera.getClass().getName() == agent.CameraAgent.class
this.fcs.agent.partTypeCount == 0
this.fcs.agent.fcs has only one value
this.fcs.agent.name has only one value
this.fcs.agent.name.toString == "FCS"
this.fcs.agent.binsSet == false
this.fcs.agent.binsToAdd has only one value
this.fcs.agent.binsToAdd[] == []
this.fcs.agent.binsToAdd[].getClass().getName() == []
this.fcs.agent.stateChange has only one value
this.fcs.agent.agentThread has only one value
this.fcs.agent.console has only one value
this.fcs.server has only one value
this.fcs.server.ss == null
this.fcs.server.s == null
this.fcs.server.factProdMngrReader == null
this.fcs.server.factProdMngrWriter has only one value
this.fcs.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.fcs.server.partsMngrReader == null
this.fcs.server.partsMngrWriter has only one value
this.fcs.server.kitMngrReader == null
this.fcs.server.kitMngrWriter has only one value
this.fcs.server.gantryRobotMngrReader == null
this.fcs.server.gantryRobotMngrWriter has only one value
this.fcs.server.kitAssemblyMngrReader == null
this.fcs.server.kitAssemblyMngrWriter has only one value
this.fcs.server.laneMngrReader == null
this.fcs.server.laneMngrWriter has only one value
this.fcs.server.kitRobotMngrReader == null
this.fcs.server.kitRobotMngrWriter has only one value
this.fcs.server.partsRobotMngrReader == null
this.fcs.server.partsRobotMngrWriter has only one value
this.fcs.server.numClients == 0
this.fcs.server.devices has only one value
this.fcs.server.agents has only one value
this.fcs.productionStarted == false
this.fcs.completed == null
this.name has only one value
this.name != null
this.name.toString == "FCS"
this.binsSet == false
this.binsToAdd has only one value
this.binsToAdd != null
this.binsToAdd[] == []
this.binsToAdd[].getClass().getName() == []
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.FCSAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.FCSAgent$myState.$VALUES[]) == 3
size(this.fcs.kitConfigs[]) == 5
size(this.fcs.partTypes[]) == 10
size(this.fcs.agent.nests[]) == 8
this.stand.getClass().getName() != this.partsRobot.getClass().getName()
this.stand.getClass().getName() != this.gantry.getClass().getName()
this.stand.getClass().getName() != this.conveyor.getClass().getName()
this.stand.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.stand.getClass().getName() != this.orders.getClass().getName()
this.stand.getClass().getName() != this.camera.getClass().getName()
this.stand.getClass().getName() != agent.Agent.this.getClass().getName()
this.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.partsRobot.getClass().getName() != this.gantry.getClass().getName()
this.partsRobot.getClass().getName() != this.conveyor.getClass().getName()
this.partsRobot.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.partsRobot.getClass().getName() != this.orders.getClass().getName()
this.partsRobot.getClass().getName() != this.camera.getClass().getName()
this.partsRobot.getClass().getName() != agent.Agent.this.getClass().getName()
this.partsRobot.getClass().getName() != this.console.messageQueue.getClass().getName()
this.gantry.getClass().getName() != this.conveyor.getClass().getName()
this.gantry.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.gantry.getClass().getName() != this.orders.getClass().getName()
this.gantry.getClass().getName() != this.camera.getClass().getName()
this.gantry.getClass().getName() != agent.Agent.this.getClass().getName()
this.gantry.getClass().getName() != this.console.messageQueue.getClass().getName()
this.conveyor.getClass().getName() != agent.FCSAgent$myState.$VALUES.getClass().getName()
this.conveyor.getClass().getName() != this.orders.getClass().getName()
this.conveyor.getClass().getName() != this.camera.getClass().getName()
this.conveyor.getClass().getName() != agent.Agent.this.getClass().getName()
this.conveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.orders.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.camera.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != agent.Agent.this.getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.orders.getClass().getName() != this.camera.getClass().getName()
this.orders.getClass().getName() != agent.Agent.this.getClass().getName()
this.orders.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.getClass().getName() != agent.Agent.this.getClass().getName()
this.camera.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.FCSAgent.FCSAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "FCS"
===========================================================================
agent.FCSAgent.FCSAgent(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.stand == null
this.partsRobot == null
this.gantry == null
this.nests[] == []
this.nests[].getClass().getName() == []
this.conveyor == null
this.camera == null
this.fcs == null
this.agentThread == null
this.console == null
arg0.toString == "FCS"
===========================================================================
agent.FCSAgent.getName():::ENTER
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.getName():::EXIT
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobot == orig(this.partsRobot)
this.partsRobot.getClass().getName() == orig(this.partsRobot.getClass().getName())
this.gantry == orig(this.gantry)
this.gantry.getClass().getName() == orig(this.gantry.getClass().getName())
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.fcs.queue == orig(this.fcs.queue)
this.fcs.queue[] == orig(this.fcs.queue[])
this.fcs.kitConfigs == orig(this.fcs.kitConfigs)
this.fcs.kitConfigs[] == orig(this.fcs.kitConfigs[])
this.fcs.partTypes == orig(this.fcs.partTypes)
this.fcs.partTypes[] == orig(this.fcs.partTypes[])
this.fcs.agent == orig(this)
this.fcs.agent == orig(this.fcs.agent)
this.fcs.agent == orig(this.fcs.server.fcsAgent)
this.fcs.agent.stand == orig(this.fcs.agent.stand)
this.fcs.agent.stand.getClass().getName() == orig(this.fcs.agent.stand.getClass().getName())
this.fcs.agent.partsRobot == orig(this.fcs.agent.partsRobot)
this.fcs.agent.partsRobot.getClass().getName() == orig(this.fcs.agent.partsRobot.getClass().getName())
this.fcs.agent.gantry == orig(this.fcs.agent.gantry)
this.fcs.agent.gantry.getClass().getName() == orig(this.fcs.agent.gantry.getClass().getName())
this.fcs.agent.nests == orig(this.fcs.agent.nests)
this.fcs.agent.nests[] == orig(this.fcs.agent.nests[])
this.fcs.agent.conveyor == orig(this.fcs.agent.conveyor)
this.fcs.agent.conveyor.getClass().getName() == orig(this.fcs.agent.conveyor.getClass().getName())
this.fcs.agent.state == orig(this.fcs.agent.state)
this.fcs.agent.orders == orig(this.fcs.agent.orders)
this.fcs.agent.orders[] == orig(this.fcs.agent.orders[])
this.fcs.agent.orders.getClass().getName() == orig(this.fcs.agent.orders.getClass().getName())
this.fcs.agent.numOrdersFinished == orig(this.fcs.agent.numOrdersFinished)
this.fcs.agent.camera == orig(this.fcs.agent.camera)
this.fcs.agent.camera.getClass().getName() == orig(this.fcs.agent.camera.getClass().getName())
this.fcs.agent.partTypeCount == orig(this.fcs.agent.partTypeCount)
this.fcs.agent.fcs == orig(this.fcs.agent.fcs)
this.fcs.agent.fcs == orig(this.fcs.server.fcs)
this.fcs.agent.name == return
this.fcs.agent.name == orig(this.fcs.agent.name)
this.fcs.agent.name.toString == orig(this.fcs.agent.name.toString)
this.fcs.agent.binsSet == orig(this.fcs.agent.binsSet)
this.fcs.agent.binsToAdd == orig(this.fcs.agent.binsToAdd)
this.fcs.agent.binsToAdd[] == orig(this.fcs.agent.binsToAdd[])
this.fcs.agent.stateChange == orig(this.fcs.agent.stateChange)
this.fcs.agent.stateChange == orig(agent.Agent.this.stateChange)
this.fcs.agent.agentThread == orig(this.fcs.agent.agentThread)
this.fcs.agent.agentThread == orig(agent.Agent.this.agentThread)
this.fcs.agent.console == orig(this.fcs.agent.console)
this.fcs.agent.console == orig(this.fcs.server.console)
this.fcs.agent.console == orig(agent.Agent.this.console)
this.fcs.server == orig(this.fcs.server)
this.fcs.server.ss == orig(this.fcs.server.ss)
this.fcs.server.s == orig(this.fcs.server.s)
this.fcs.server.factProdMngrReader == orig(this.fcs.server.factProdMngrReader)
this.fcs.server.factProdMngrWriter == orig(this.fcs.server.factProdMngrWriter)
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.factProdMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.partsMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.kitMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.gantryRobotMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.kitAssemblyMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.laneMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.kitRobotMngrWriter.getClass().getName())
this.fcs.server.factProdMngrWriter.getClass().getName() == orig(this.fcs.server.partsRobotMngrWriter.getClass().getName())
this.fcs.server.partsMngrReader == orig(this.fcs.server.partsMngrReader)
this.fcs.server.partsMngrWriter == orig(this.fcs.server.partsMngrWriter)
this.fcs.server.kitMngrReader == orig(this.fcs.server.kitMngrReader)
this.fcs.server.kitMngrWriter == orig(this.fcs.server.kitMngrWriter)
this.fcs.server.gantryRobotMngrReader == orig(this.fcs.server.gantryRobotMngrReader)
this.fcs.server.gantryRobotMngrWriter == orig(this.fcs.server.gantryRobotMngrWriter)
this.fcs.server.kitAssemblyMngrReader == orig(this.fcs.server.kitAssemblyMngrReader)
this.fcs.server.kitAssemblyMngrWriter == orig(this.fcs.server.kitAssemblyMngrWriter)
this.fcs.server.laneMngrReader == orig(this.fcs.server.laneMngrReader)
this.fcs.server.laneMngrWriter == orig(this.fcs.server.laneMngrWriter)
this.fcs.server.kitRobotMngrReader == orig(this.fcs.server.kitRobotMngrReader)
this.fcs.server.kitRobotMngrWriter == orig(this.fcs.server.kitRobotMngrWriter)
this.fcs.server.partsRobotMngrReader == orig(this.fcs.server.partsRobotMngrReader)
this.fcs.server.partsRobotMngrWriter == orig(this.fcs.server.partsRobotMngrWriter)
this.fcs.server.numClients == orig(this.fcs.server.numClients)
this.fcs.server.devices == orig(this.fcs.server.devices)
this.fcs.server.agents == orig(this.fcs.server.agents)
this.fcs.productionStarted == orig(this.fcs.productionStarted)
this.fcs.completed == orig(this.fcs.completed)
this.name == return
this.name.toString == orig(this.name.toString)
this.binsSet == orig(this.binsSet)
this.binsToAdd == orig(this.binsToAdd)
this.binsToAdd[] == orig(this.binsToAdd[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.console has only one value
return has only one value
return.toString == "FCS"
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.pickAndExecuteAnAction():::ENTER
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.fcs == null
this.agentThread has only one value
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.pickAndExecuteAnAction():::EXIT182
===========================================================================
agent.FCSAgent.pickAndExecuteAnAction():::EXIT182;condition="not(return == true)"
===========================================================================
agent.FCSAgent.pickAndExecuteAnAction():::EXIT
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobot == orig(this.partsRobot)
this.partsRobot.getClass().getName() == orig(this.partsRobot.getClass().getName())
this.gantry == orig(this.gantry)
this.gantry.getClass().getName() == orig(this.gantry.getClass().getName())
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.fcs == null
this.agentThread has only one value
this.console has only one value
return == false
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.FCSAgent.setCamera(agent.interfaces.Camera):::ENTER
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.CameraAgent.class
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setCamera(agent.interfaces.Camera):::EXIT
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobot == orig(this.partsRobot)
this.partsRobot.getClass().getName() == orig(this.partsRobot.getClass().getName())
this.gantry == orig(this.gantry)
this.gantry.getClass().getName() == orig(this.gantry.getClass().getName())
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(arg0)
this.camera.getClass().getName() == orig(arg0.getClass().getName())
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.fcs == null
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setConveyor(agent.interfaces.Conveyor):::ENTER
this.stand == null
this.partsRobot == null
this.gantry == null
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor == null
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.ConveyorAgent.class
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setConveyor(agent.interfaces.Conveyor):::EXIT
this.stand == orig(this.stand)
this.partsRobot == orig(this.partsRobot)
this.gantry == orig(this.gantry)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(arg0)
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.stand == null
this.partsRobot == null
this.gantry == null
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setFCS(factory.FCS):::ENTER
this == arg0.agent
this.stand == arg0.agent.stand
this.stand.getClass().getName() == arg0.agent.stand.getClass().getName()
this.partsRobot == arg0.agent.partsRobot
this.partsRobot.getClass().getName() == arg0.agent.partsRobot.getClass().getName()
this.gantry == arg0.agent.gantry
this.gantry.getClass().getName() == arg0.agent.gantry.getClass().getName()
this.nests == arg0.agent.nests
this.conveyor == arg0.agent.conveyor
this.conveyor.getClass().getName() == arg0.agent.conveyor.getClass().getName()
agent.FCSAgent$myState.PENDING == arg0.agent.state
this.orders == arg0.agent.orders
this.orders.getClass().getName() == arg0.agent.orders.getClass().getName()
this.numOrdersFinished == arg0.agent.numOrdersFinished
this.camera == arg0.agent.camera
this.camera.getClass().getName() == arg0.agent.camera.getClass().getName()
this.partTypeCount == arg0.agent.partTypeCount
this.fcs == arg0.agent.fcs
this.name == arg0.agent.name
this.binsSet == arg0.agent.binsSet
this.binsToAdd == arg0.agent.binsToAdd
this.stateChange == arg0.agent.stateChange
this.agentThread == arg0.agent.agentThread
this.console == arg0.agent.console
this.console == arg0.server.console
arg0 == arg0.server.fcs
arg0.agent == arg0.server.fcsAgent
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.partsMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.gantryRobotMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitAssemblyMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.laneMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitRobotMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.partsRobotMngrWriter.getClass().getName()
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.fcs == null
this.agentThread has only one value
this.console has only one value
arg0 has only one value
arg0.queue has only one value
arg0.queue[] == []
arg0.queue[].getClass().getName() == []
arg0.kitConfigs has only one value
arg0.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.partTypes has only one value
arg0.partTypes[] contains no nulls and has only one value, of length 10
arg0.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.agent has only one value
arg0.agent.nests[] contains no nulls and has only one value, of length 8
arg0.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
arg0.agent.nests[].getClass().getName() elements == agent.NestAgent.class
arg0.agent.orders[] == []
arg0.agent.orders[].getClass().getName() == []
arg0.agent.name.toString == "FCS"
arg0.agent.binsToAdd[] == []
arg0.agent.binsToAdd[].getClass().getName() == []
arg0.server has only one value
arg0.server.ss == null
arg0.server.s == null
arg0.server.factProdMngrReader == null
arg0.server.factProdMngrWriter has only one value
arg0.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.server.partsMngrReader == null
arg0.server.partsMngrWriter has only one value
arg0.server.kitMngrReader == null
arg0.server.kitMngrWriter has only one value
arg0.server.gantryRobotMngrReader == null
arg0.server.gantryRobotMngrWriter has only one value
arg0.server.kitAssemblyMngrReader == null
arg0.server.kitAssemblyMngrWriter has only one value
arg0.server.laneMngrReader == null
arg0.server.laneMngrWriter has only one value
arg0.server.kitRobotMngrReader == null
arg0.server.kitRobotMngrWriter has only one value
arg0.server.partsRobotMngrReader == null
arg0.server.partsRobotMngrWriter has only one value
arg0.server.numClients == 0
arg0.server.devices has only one value
arg0.server.agents has only one value
arg0.productionStarted == false
arg0.completed == null
size(this.nests[]) == 8
size(arg0.kitConfigs[]) == 5
size(arg0.partTypes[]) == 10
size(arg0.agent.nests[]) == 8
===========================================================================
agent.FCSAgent.setFCS(factory.FCS):::EXIT
this.stand == arg0.agent.stand
this.stand == orig(this.stand)
this.stand == orig(arg0.agent.stand)
this.stand.getClass().getName() == arg0.agent.stand.getClass().getName()
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.stand.getClass().getName() == orig(arg0.agent.stand.getClass().getName())
this.partsRobot == arg0.agent.partsRobot
this.partsRobot == orig(this.partsRobot)
this.partsRobot == orig(arg0.agent.partsRobot)
this.partsRobot.getClass().getName() == arg0.agent.partsRobot.getClass().getName()
this.partsRobot.getClass().getName() == orig(this.partsRobot.getClass().getName())
this.partsRobot.getClass().getName() == orig(arg0.agent.partsRobot.getClass().getName())
this.gantry == arg0.agent.gantry
this.gantry == orig(this.gantry)
this.gantry == orig(arg0.agent.gantry)
this.gantry.getClass().getName() == arg0.agent.gantry.getClass().getName()
this.gantry.getClass().getName() == orig(this.gantry.getClass().getName())
this.gantry.getClass().getName() == orig(arg0.agent.gantry.getClass().getName())
this.nests == arg0.agent.nests
this.nests == orig(this.nests)
this.nests == orig(arg0.agent.nests)
this.nests[] == orig(this.nests[])
this.conveyor == arg0.agent.conveyor
this.conveyor == orig(this.conveyor)
this.conveyor == orig(arg0.agent.conveyor)
this.conveyor.getClass().getName() == arg0.agent.conveyor.getClass().getName()
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
this.conveyor.getClass().getName() == orig(arg0.agent.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == arg0.agent.state
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.PENDING == orig(arg0.agent.state)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == arg0.agent.orders
this.orders == orig(this.orders)
this.orders == orig(arg0.agent.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == arg0.agent.orders.getClass().getName()
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.orders.getClass().getName() == orig(arg0.agent.orders.getClass().getName())
this.numOrdersFinished == arg0.agent.numOrdersFinished
this.numOrdersFinished == orig(this.numOrdersFinished)
this.numOrdersFinished == orig(arg0.agent.numOrdersFinished)
this.camera == arg0.agent.camera
this.camera == orig(this.camera)
this.camera == orig(arg0.agent.camera)
this.camera.getClass().getName() == arg0.agent.camera.getClass().getName()
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.camera.getClass().getName() == orig(arg0.agent.camera.getClass().getName())
this.partTypeCount == arg0.agent.partTypeCount
this.partTypeCount == orig(this.partTypeCount)
this.partTypeCount == orig(arg0.agent.partTypeCount)
this.fcs == this.fcs.server.fcs
this.fcs == arg0.agent.fcs
this.fcs == arg0.server.fcs
this.fcs == orig(arg0)
this.fcs == orig(arg0.server.fcs)
this.fcs.queue == arg0.queue
this.fcs.kitConfigs == arg0.kitConfigs
this.fcs.partTypes == arg0.partTypes
this.fcs.agent == arg0.agent
this.fcs.server == arg0.server
this.fcs.server.factProdMngrWriter == arg0.server.factProdMngrWriter
this.fcs.server.factProdMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.partsMngrWriter == arg0.server.partsMngrWriter
this.fcs.server.partsMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.kitMngrWriter == arg0.server.kitMngrWriter
this.fcs.server.kitMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.gantryRobotMngrWriter == arg0.server.gantryRobotMngrWriter
this.fcs.server.gantryRobotMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.kitAssemblyMngrWriter == arg0.server.kitAssemblyMngrWriter
this.fcs.server.kitAssemblyMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.laneMngrWriter == arg0.server.laneMngrWriter
this.fcs.server.laneMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.kitRobotMngrWriter == arg0.server.kitRobotMngrWriter
this.fcs.server.kitRobotMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.partsRobotMngrWriter == arg0.server.partsRobotMngrWriter
this.fcs.server.partsRobotMngrWriter.getClass().getName() == arg0.server.factProdMngrWriter.getClass().getName()
this.fcs.server.numClients == arg0.server.numClients
this.fcs.server.devices == arg0.server.devices
this.fcs.server.agents == arg0.server.agents
this.fcs.server.fcsAgent == arg0.agent
this.fcs.server.console == this.console
this.fcs.productionStarted == arg0.productionStarted
this.name == arg0.agent.name
this.name == orig(this.name)
this.name == orig(arg0.agent.name)
this.name.toString == orig(this.name.toString)
this.binsSet == arg0.agent.binsSet
this.binsSet == orig(this.binsSet)
this.binsSet == orig(arg0.agent.binsSet)
this.binsToAdd == arg0.agent.binsToAdd
this.binsToAdd == orig(this.binsToAdd)
this.binsToAdd == orig(arg0.agent.binsToAdd)
this.binsToAdd[] == orig(this.binsToAdd[])
this.stateChange == arg0.agent.stateChange
this.stateChange == orig(this.stateChange)
this.stateChange == orig(agent.Agent.this.stateChange)
this.stateChange == orig(arg0.agent.stateChange)
this.agentThread == arg0.agent.agentThread
this.agentThread == orig(this.agentThread)
this.agentThread == orig(agent.Agent.this.agentThread)
this.agentThread == orig(arg0.agent.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
this.console == arg0.agent.console
this.console == arg0.server.console
this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
this.console == orig(arg0.agent.console)
this.console == orig(arg0.server.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
arg0.queue == orig(arg0.queue)
arg0.queue[] == orig(arg0.queue[])
arg0.kitConfigs == orig(arg0.kitConfigs)
arg0.kitConfigs[] == orig(arg0.kitConfigs[])
arg0.partTypes == orig(arg0.partTypes)
arg0.partTypes[] == orig(arg0.partTypes[])
arg0.agent == arg0.server.fcsAgent
arg0.agent == orig(this)
arg0.agent == orig(arg0.agent)
arg0.agent == orig(arg0.server.fcsAgent)
arg0.agent.nests[] == orig(arg0.agent.nests[])
arg0.agent.orders[] == orig(arg0.agent.orders[])
arg0.agent.name.toString == orig(arg0.agent.name.toString)
arg0.agent.binsToAdd[] == orig(arg0.agent.binsToAdd[])
arg0.server == orig(arg0.server)
arg0.server.ss == orig(arg0.server.ss)
arg0.server.s == orig(arg0.server.s)
arg0.server.factProdMngrReader == orig(arg0.server.factProdMngrReader)
arg0.server.factProdMngrWriter == orig(arg0.server.factProdMngrWriter)
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.partsMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.gantryRobotMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitAssemblyMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.laneMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.kitRobotMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == arg0.server.partsRobotMngrWriter.getClass().getName()
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.factProdMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.partsMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.kitMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.gantryRobotMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.kitAssemblyMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.laneMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.kitRobotMngrWriter.getClass().getName())
arg0.server.factProdMngrWriter.getClass().getName() == orig(arg0.server.partsRobotMngrWriter.getClass().getName())
arg0.server.partsMngrReader == orig(arg0.server.partsMngrReader)
arg0.server.partsMngrWriter == orig(arg0.server.partsMngrWriter)
arg0.server.kitMngrReader == orig(arg0.server.kitMngrReader)
arg0.server.kitMngrWriter == orig(arg0.server.kitMngrWriter)
arg0.server.gantryRobotMngrReader == orig(arg0.server.gantryRobotMngrReader)
arg0.server.gantryRobotMngrWriter == orig(arg0.server.gantryRobotMngrWriter)
arg0.server.kitAssemblyMngrReader == orig(arg0.server.kitAssemblyMngrReader)
arg0.server.kitAssemblyMngrWriter == orig(arg0.server.kitAssemblyMngrWriter)
arg0.server.laneMngrReader == orig(arg0.server.laneMngrReader)
arg0.server.laneMngrWriter == orig(arg0.server.laneMngrWriter)
arg0.server.kitRobotMngrReader == orig(arg0.server.kitRobotMngrReader)
arg0.server.kitRobotMngrWriter == orig(arg0.server.kitRobotMngrWriter)
arg0.server.partsRobotMngrReader == orig(arg0.server.partsRobotMngrReader)
arg0.server.partsRobotMngrWriter == orig(arg0.server.partsRobotMngrWriter)
arg0.server.numClients == orig(arg0.server.numClients)
arg0.server.devices == orig(arg0.server.devices)
arg0.server.agents == orig(arg0.server.agents)
arg0.productionStarted == orig(arg0.productionStarted)
arg0.completed == orig(arg0.completed)
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera has only one value
this.fcs has only one value
this.agentThread has only one value
this.console has only one value
arg0.queue has only one value
arg0.queue[] == []
arg0.queue[].getClass().getName() == []
arg0.kitConfigs has only one value
arg0.kitConfigs[] contains no nulls and has only one value, of length 5
arg0.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
arg0.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
arg0.partTypes has only one value
arg0.partTypes[] contains no nulls and has only one value, of length 10
arg0.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
arg0.partTypes[].getClass().getName() elements == factory.PartType.class
arg0.agent has only one value
arg0.agent.nests[] contains no nulls and has only one value, of length 8
arg0.agent.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
arg0.agent.nests[].getClass().getName() elements == agent.NestAgent.class
arg0.agent.orders[] == []
arg0.agent.orders[].getClass().getName() == []
arg0.agent.name.toString == "FCS"
arg0.agent.binsToAdd[] == []
arg0.agent.binsToAdd[].getClass().getName() == []
arg0.server has only one value
arg0.server.ss == null
arg0.server.s == null
arg0.server.factProdMngrReader == null
arg0.server.factProdMngrWriter has only one value
arg0.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.server.partsMngrReader == null
arg0.server.partsMngrWriter has only one value
arg0.server.kitMngrReader == null
arg0.server.kitMngrWriter has only one value
arg0.server.gantryRobotMngrReader == null
arg0.server.gantryRobotMngrWriter has only one value
arg0.server.kitAssemblyMngrReader == null
arg0.server.kitAssemblyMngrWriter has only one value
arg0.server.laneMngrReader == null
arg0.server.laneMngrWriter has only one value
arg0.server.kitRobotMngrReader == null
arg0.server.kitRobotMngrWriter has only one value
arg0.server.partsRobotMngrReader == null
arg0.server.partsRobotMngrWriter has only one value
arg0.server.numClients == 0
arg0.server.devices has only one value
arg0.server.agents has only one value
arg0.productionStarted == false
arg0.completed == null
size(this.nests[]) == 8
size(arg0.kitConfigs[]) == 5
size(arg0.partTypes[]) == 10
size(arg0.agent.nests[]) == 8
===========================================================================
agent.FCSAgent.setGantry(agent.interfaces.Gantry):::ENTER
this.stand == null
this.partsRobot == null
this.gantry == null
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.GantryAgent.class
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setGantry(agent.interfaces.Gantry):::EXIT
this.stand == orig(this.stand)
this.partsRobot == orig(this.partsRobot)
this.gantry == orig(arg0)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.stand == null
this.partsRobot == null
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setNest(agent.interfaces.Nest):::ENTER
this.stand == null
this.partsRobot == null
this.gantry == null
this.conveyor == null
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0.getClass().getName() == agent.NestAgent.class
agent.FCSAgent$myState.$VALUES.getClass().getName() != arg0.getClass().getName()
this.orders.getClass().getName() != arg0.getClass().getName()
this.console.messageQueue.getClass().getName() != arg0.getClass().getName()
===========================================================================
agent.FCSAgent.setNest(agent.interfaces.Nest):::EXIT
this.stand == orig(this.stand)
this.partsRobot == orig(this.partsRobot)
this.gantry == orig(this.gantry)
this.nests == orig(this.nests)
this.conveyor == orig(this.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.binsSet == orig(this.binsSet)
this.binsToAdd == orig(this.binsToAdd)
this.binsToAdd[] == orig(this.binsToAdd[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
size(this.nests[])-1 == orig(size(this.nests[]))
this.stand == null
this.partsRobot == null
this.gantry == null
this.conveyor == null
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
orig(arg0.getClass().getName()) in this.nests[].getClass().getName()
agent.FCSAgent$myState.$VALUES.getClass().getName() != orig(arg0.getClass().getName())
this.orders.getClass().getName() != orig(arg0.getClass().getName())
this.console.messageQueue.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
agent.FCSAgent.setPartsRobot(agent.interfaces.PartsRobot):::ENTER
this.stand == null
this.partsRobot == null
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.PartsRobotAgent.class
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setPartsRobot(agent.interfaces.PartsRobot):::EXIT
this.stand == orig(this.stand)
this.partsRobot == orig(arg0)
this.gantry == orig(this.gantry)
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.stand == null
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setStand(agent.interfaces.Stand):::ENTER
this.stand == null
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.StandAgent.class
size(this.nests[]) == 8
===========================================================================
agent.FCSAgent.setStand(agent.interfaces.Stand):::EXIT
this.stand == orig(arg0)
this.stand.getClass().getName() == orig(arg0.getClass().getName())
this.partsRobot == orig(this.partsRobot)
this.partsRobot.getClass().getName() == orig(this.partsRobot.getClass().getName())
this.gantry == orig(this.gantry)
this.gantry.getClass().getName() == orig(this.gantry.getClass().getName())
this.nests == orig(this.nests)
this.nests[] == orig(this.nests[])
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
agent.FCSAgent$myState.PENDING == orig(this.state)
agent.FCSAgent$myState.PENDING == orig(agent.FCSAgent$myState.PENDING)
agent.FCSAgent$myState.STARTED == orig(agent.FCSAgent$myState.STARTED)
agent.FCSAgent$myState.LOADED == orig(agent.FCSAgent$myState.LOADED)
agent.FCSAgent$myState.$VALUES == orig(agent.FCSAgent$myState.$VALUES)
agent.FCSAgent$myState.$VALUES.getClass().getName() == orig(agent.FCSAgent$myState.$VALUES.getClass().getName())
agent.FCSAgent$myState.$VALUES[] == orig(agent.FCSAgent$myState.$VALUES[])
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.orders.getClass().getName() == orig(this.orders.getClass().getName())
this.numOrdersFinished == orig(this.numOrdersFinished)
this.camera == orig(this.camera)
this.partTypeCount == orig(this.partTypeCount)
this.fcs == orig(this.fcs)
this.name.toString == orig(this.name.toString)
this.binsToAdd[] == orig(this.binsToAdd[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobot has only one value
this.gantry has only one value
this.nests[] contains no nulls and has only one value, of length 8
this.nests[].getClass().getName() == [agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent, agent.NestAgent]
this.conveyor has only one value
this.camera == null
this.fcs == null
this.agentThread == null
this.console has only one value
size(this.nests[]) == 8
===========================================================================
agent.FeederAgent$FeederStatus:::OBJECT
===========================================================================
agent.FeederAgent$FeederStatus.FeederStatus(java.lang.String, int):::ENTER
===========================================================================
agent.FeederAgent$FeederStatus.FeederStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.FeederAgent$LaneStatus:::OBJECT
===========================================================================
agent.FeederAgent$LaneStatus.LaneStatus(java.lang.String, int):::ENTER
arg0.toString one of { "DOES_NOT_NEED_PARTS", "GIVING_PARTS", "NEEDS_PARTS" }
arg1 one of { 0, 1, 2 }
===========================================================================
agent.FeederAgent$LaneStatus.LaneStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "DOES_NOT_NEED_PARTS", "GIVING_PARTS", "NEEDS_PARTS" }
===========================================================================
agent.FeederAgent$MyLane:::OBJECT
this.lane.requestList[] == []
this.lane.requestList[].getClass().getName() == []
this.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.lane.currentParts[] == []
this.lane.currentParts[].getClass().getName() == []
this.lane.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.lane.currentType == null
this.lane.topLimit == 5
this.lane.lowerThreshold == 3
this.lane.extraRequestCount == 0
this.lane.state has only one value
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
this.lane.feeder == null
this.lane.nest == null
this.lane.laneGUI == null
this.lane.agentThread == null
this.lane.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.lane.console.name has only one value
this.lane.console.name.toString == "Server"
this.lane.console.stateChange has only one value
this.lane.console.consoleWriterThread has only one value
this.lane.console.messageQueue has only one value
this.lane.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.state has only one value
agent.FeederAgent$LaneStatus.DOES_NOT_NEED_PARTS has only one value
agent.FeederAgent$LaneStatus.NEEDS_PARTS has only one value
agent.FeederAgent$LaneStatus.GIVING_PARTS has only one value
agent.FeederAgent$LaneStatus.$VALUES has only one value
agent.FeederAgent$LaneStatus.$VALUES.getClass().getName() == agent.FeederAgent$LaneStatus[].class
agent.FeederAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.FeederAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.LaneStatus, agent.FeederAgent.LaneStatus, agent.FeederAgent.LaneStatus]
agent.FeederAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.LaneStatus.class
this.type == null
this.numPartsNeeded == 0
agent.FeederAgent.this.gantry == null
agent.FeederAgent.this.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
agent.FeederAgent.this.lanes[].getClass().getName() one of { [], [agent.FeederAgent.MyLane] }
agent.FeederAgent.this.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.FeederAgent.this.feederGUI == null
agent.FeederAgent.this.currentOrientation == 0
agent.FeederAgent.this.bin == null
agent.FeederAgent.this.state has only one value
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
agent.FeederAgent.this.agentThread == null
agent.FeederAgent.this.console has only one value
agent.FeederAgent.this.console.name has only one value
agent.FeederAgent.this.console.name.toString == "Server"
agent.FeederAgent.this.console.stateChange has only one value
agent.FeederAgent.this.console.consoleWriterThread has only one value
agent.FeederAgent.this.console.messageQueue has only one value
agent.FeederAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
size(agent.FeederAgent$LaneStatus.$VALUES[]) == 3
size(agent.FeederAgent.this.lanes[]) one of { 0, 1 }
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
===========================================================================
agent.FeederAgent$MyLane.MyLane(agent.FeederAgent, agent.LaneAgent):::ENTER
agent.FeederAgent.this.gantry == null
agent.FeederAgent.this.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
agent.FeederAgent.this.lanes[].getClass().getName() one of { [], [agent.FeederAgent.MyLane] }
agent.FeederAgent.this.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.FeederAgent.this.feederGUI == null
agent.FeederAgent.this.currentOrientation == 0
agent.FeederAgent.this.bin == null
agent.FeederAgent.this.state has only one value
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
agent.FeederAgent.this.agentThread == null
agent.FeederAgent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
agent.FeederAgent.this.console.name has only one value
agent.FeederAgent.this.console.name.toString == "Server"
agent.FeederAgent.this.console.stateChange has only one value
agent.FeederAgent.this.console.consoleWriterThread has only one value
agent.FeederAgent.this.console.messageQueue has only one value
agent.FeederAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentType == null
arg1.topLimit == 5
arg1.lowerThreshold == 3
arg1.extraRequestCount == 0
arg1.state has only one value
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
arg1.feeder == null
arg1.nest == null
arg1.laneGUI == null
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.FeederAgent.this.lanes[]) one of { 0, 1 }
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
===========================================================================
agent.FeederAgent$MyLane.MyLane(agent.FeederAgent, agent.LaneAgent):::EXIT
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.FeederAgent.this == orig(agent.FeederAgent.this)
agent.FeederAgent.this.gantry == orig(agent.FeederAgent.this.gantry)
agent.FeederAgent.this.lanes == orig(agent.FeederAgent.this.lanes)
agent.FeederAgent.this.lanes[] == orig(agent.FeederAgent.this.lanes[])
agent.FeederAgent.this.lanes.getClass().getName() == orig(agent.FeederAgent.this.lanes.getClass().getName())
agent.FeederAgent.this.feederGUI == orig(agent.FeederAgent.this.feederGUI)
agent.FeederAgent.this.currentOrientation == orig(agent.FeederAgent.this.currentOrientation)
agent.FeederAgent.this.bin == orig(agent.FeederAgent.this.bin)
agent.FeederAgent.this.state == orig(agent.FeederAgent.this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
agent.FeederAgent.this.name == orig(agent.FeederAgent.this.name)
agent.FeederAgent.this.name.toString == orig(agent.FeederAgent.this.name.toString)
agent.FeederAgent.this.animation == orig(agent.FeederAgent.this.animation)
agent.FeederAgent.this.stateChange == orig(agent.FeederAgent.this.stateChange)
agent.FeederAgent.this.agentThread == orig(agent.FeederAgent.this.agentThread)
agent.FeederAgent.this.console == orig(agent.FeederAgent.this.console)
agent.FeederAgent.this.console.name == orig(agent.FeederAgent.this.console.name)
agent.FeederAgent.this.console.name.toString == orig(agent.FeederAgent.this.console.name.toString)
agent.FeederAgent.this.console.stateChange == orig(agent.FeederAgent.this.console.stateChange)
agent.FeederAgent.this.console.consoleWriterThread == orig(agent.FeederAgent.this.console.consoleWriterThread)
agent.FeederAgent.this.console.messageQueue == orig(agent.FeederAgent.this.console.messageQueue)
agent.FeederAgent.this.console.messageQueue.getClass().getName() == orig(agent.FeederAgent.this.console.messageQueue.getClass().getName())
arg1.requestList == orig(arg1.requestList)
arg1.requestList[] == orig(arg1.requestList[])
arg1.requestList.getClass().getName() == orig(arg1.requestList.getClass().getName())
arg1.currentParts == orig(arg1.currentParts)
arg1.currentParts[] == orig(arg1.currentParts[])
arg1.currentParts.getClass().getName() == orig(arg1.currentParts.getClass().getName())
arg1.currentType == orig(arg1.currentType)
arg1.topLimit == orig(arg1.topLimit)
arg1.lowerThreshold == orig(arg1.lowerThreshold)
arg1.extraRequestCount == orig(arg1.extraRequestCount)
arg1.state == orig(arg1.state)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.animation == orig(arg1.animation)
arg1.feeder == orig(arg1.feeder)
arg1.nest == orig(arg1.nest)
arg1.laneGUI == orig(arg1.laneGUI)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg1.console.name == orig(arg1.console.name)
arg1.console.name.toString == orig(arg1.console.name.toString)
arg1.console.stateChange == orig(arg1.console.stateChange)
arg1.console.consoleWriterThread == orig(arg1.console.consoleWriterThread)
arg1.console.messageQueue == orig(arg1.console.messageQueue)
arg1.console.messageQueue.getClass().getName() == orig(arg1.console.messageQueue.getClass().getName())
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentParts.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.currentType == null
arg1.topLimit == 5
arg1.lowerThreshold == 3
arg1.extraRequestCount == 0
arg1.state has only one value
arg1.feeder == null
arg1.nest == null
arg1.laneGUI == null
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
===========================================================================
agent.FeederAgent:::OBJECT
this.gantry.binList.getClass().getName() == this.gantry.feeders.getClass().getName()
this.gantry.binList.getClass().getName() == this.lanes.getClass().getName()
this.gantry.console == this.console
this.gantry.console == Utils.ConsoleWriter.this
this.gantry.console.name == this.console.name
this.gantry.console.stateChange == this.console.stateChange
this.gantry.console.consoleWriterThread == this.console.consoleWriterThread
this.gantry.console.messageQueue == this.console.messageQueue
this.gantry.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.state == agent.FeederAgent$FeederStatus.IDLE
this.console == Utils.ConsoleWriter.this
this.gantry.binList has only one value
this.gantry.binList != null
this.gantry.binList[] == []
this.gantry.binList[].getClass().getName() == []
this.gantry.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.gantry.feeders has only one value
this.gantry.feeders != null
this.gantry.feeders[] elements != null
this.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
this.gantry.gantryGraphics.getClass().getName() == DeviceGraphics.GantryGraphics.class
this.gantry.name has only one value
this.gantry.name != null
this.gantry.name.toString == "GantryRobot"
this.gantry.animation has only one value
this.gantry.animation != null
this.gantry.stateChange has only one value
this.gantry.stateChange != null
this.gantry.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.GantryAgent.class
this.gantry.console has only one value
this.gantry.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.gantry.console.name has only one value
this.gantry.console.name != null
this.gantry.console.name.toString == "Server"
this.gantry.console.stateChange has only one value
this.gantry.console.stateChange != null
this.gantry.console.consoleWriterThread has only one value
this.gantry.console.consoleWriterThread != null
this.gantry.console.messageQueue has only one value
this.gantry.console.messageQueue != null
this.gantry.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.lanes != null
this.lanes[] elements != null
this.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
this.lanes[].getClass().getName() one of { [], [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane] }
this.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feederGUI.getClass().getName() == DeviceGraphics.FeederGraphics.class
this.currentOrientation == 0
this.bin == null
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.IDLE != null
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS != null
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS != null
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.PURGING != null
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN != null
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN != null
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES != null
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[] elements != null
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
this.name != null
this.animation != null
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.console has only one value
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.lanes[]) one of { 0, 2 }
size(this.lanes[])-1 != 0
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
this.gantry.binList.getClass().getName() != this.gantry.gantryGraphics.getClass().getName()
this.gantry.binList.getClass().getName() != agent.Agent.this.getClass().getName()
this.gantry.binList.getClass().getName() != this.gantry.console.messageQueue.getClass().getName()
this.gantry.binList.getClass().getName() != this.feederGUI.getClass().getName()
this.gantry.binList.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.gantry.binList.getClass().getName() != this.console.messageQueue.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != agent.Agent.this.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != this.gantry.console.messageQueue.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != this.lanes.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != this.feederGUI.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.gantry.gantryGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.gantry.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.lanes.getClass().getName()
agent.Agent.this.getClass().getName() != this.feederGUI.getClass().getName()
agent.Agent.this.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
agent.Agent.this.getClass().getName() != this.console.messageQueue.getClass().getName()
this.gantry.console.messageQueue.getClass().getName() != this.lanes.getClass().getName()
this.gantry.console.messageQueue.getClass().getName() != this.feederGUI.getClass().getName()
this.gantry.console.messageQueue.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.lanes.getClass().getName() != this.feederGUI.getClass().getName()
this.lanes.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.lanes.getClass().getName() != this.console.messageQueue.getClass().getName()
this.feederGUI.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.feederGUI.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.FeederAgent.FeederAgent(java.lang.String):::ENTER
===========================================================================
agent.FeederAgent.FeederAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.gantry == null
this.lanes[] == []
this.lanes[].getClass().getName() == []
this.feederGUI == null
this.agentThread == null
this.console == null
===========================================================================
agent.FeederAgent.getName():::ENTER
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry has only one value
this.gantry != null
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.gantryGraphics != null
this.gantry.agentThread has only one value
this.gantry.agentThread != null
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI != null
this.agentThread == null
this.console has only one value
this.console != null
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.getName():::EXIT
this.gantry == orig(this.gantry)
this.gantry.binList == orig(this.gantry.binList)
this.gantry.binList[] == orig(this.gantry.binList[])
this.gantry.feeders == orig(this.gantry.feeders)
this.gantry.feeders[] == orig(this.gantry.feeders[])
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry.gantryGraphics == orig(this.gantry.gantryGraphics)
this.gantry.gantryGraphics.getClass().getName() == orig(this.gantry.gantryGraphics.getClass().getName())
this.gantry.name == orig(this.gantry.name)
this.gantry.name.toString == orig(this.gantry.name.toString)
this.gantry.animation == orig(this.gantry.animation)
this.gantry.stateChange == orig(this.gantry.stateChange)
this.gantry.agentThread == orig(this.gantry.agentThread)
this.gantry.agentThread.goOn == orig(this.gantry.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.gantry.console.name.toString == orig(this.gantry.console.name.toString)
this.lanes == orig(this.lanes)
this.lanes[] == orig(this.lanes[])
this.lanes.getClass().getName() == orig(this.gantry.binList.getClass().getName())
this.lanes.getClass().getName() == orig(this.gantry.feeders.getClass().getName())
this.lanes.getClass().getName() == orig(this.lanes.getClass().getName())
this.feederGUI == orig(this.feederGUI)
this.feederGUI.getClass().getName() == orig(this.feederGUI.getClass().getName())
this.currentOrientation == orig(this.currentOrientation)
this.bin == orig(this.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.name == return
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.gantry.console)
this.console == orig(this.console)
this.console.name == orig(this.gantry.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.gantry.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.gantry.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.gantry.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.gantry.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.gantry has only one value
this.gantry != null
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.gantryGraphics != null
this.gantry.agentThread has only one value
this.gantry.agentThread != null
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI != null
this.agentThread == null
this.console has only one value
this.console != null
return != null
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.pickAndExecuteAnAction():::ENTER
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry has only one value
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.agentThread has only one value
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.console has only one value
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.pickAndExecuteAnAction():::EXIT195
===========================================================================
agent.FeederAgent.pickAndExecuteAnAction():::EXIT195;condition="not(return == true)"
===========================================================================
agent.FeederAgent.pickAndExecuteAnAction():::EXIT
this.gantry == orig(this.gantry)
this.gantry.binList == orig(this.gantry.binList)
this.gantry.binList[] == orig(this.gantry.binList[])
this.gantry.feeders == orig(this.gantry.feeders)
this.gantry.feeders[] == orig(this.gantry.feeders[])
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry.gantryGraphics == orig(this.gantry.gantryGraphics)
this.gantry.gantryGraphics.getClass().getName() == orig(this.gantry.gantryGraphics.getClass().getName())
this.gantry.name == orig(this.gantry.name)
this.gantry.name.toString == orig(this.gantry.name.toString)
this.gantry.animation == orig(this.gantry.animation)
this.gantry.stateChange == orig(this.gantry.stateChange)
this.gantry.agentThread == orig(this.gantry.agentThread)
this.gantry.agentThread.goOn == orig(this.gantry.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.gantry.console.name.toString == orig(this.gantry.console.name.toString)
this.lanes == orig(this.lanes)
this.lanes[] == orig(this.lanes[])
this.lanes.getClass().getName() == orig(this.gantry.binList.getClass().getName())
this.lanes.getClass().getName() == orig(this.gantry.feeders.getClass().getName())
this.lanes.getClass().getName() == orig(this.lanes.getClass().getName())
this.feederGUI == orig(this.feederGUI)
this.feederGUI.getClass().getName() == orig(this.feederGUI.getClass().getName())
this.currentOrientation == orig(this.currentOrientation)
this.bin == orig(this.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.gantry.console)
this.console == orig(this.console)
this.console.name == orig(this.gantry.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.gantry.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.gantry.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.gantry.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.gantry.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.gantry has only one value
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.agentThread has only one value
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.console has only one value
return == false
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.FeederAgent.setGantry(agent.GantryAgent):::ENTER
this.lanes.getClass().getName() == arg0.binList.getClass().getName()
this.lanes.getClass().getName() == arg0.feeders.getClass().getName()
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.gantry == null
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.binList has only one value
arg0.binList[] == []
arg0.binList[].getClass().getName() == []
arg0.feeders has only one value
arg0.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantryGraphics == null
arg0.name has only one value
arg0.name.toString == "GantryRobot"
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.setGantry(agent.GantryAgent):::EXIT
this.gantry == orig(arg0)
this.gantry.binList == arg0.binList
this.gantry.feeders == arg0.feeders
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry.name == arg0.name
this.gantry.animation == arg0.animation
this.gantry.stateChange == arg0.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lanes == orig(this.lanes)
this.lanes[] == orig(this.lanes[])
this.lanes.getClass().getName() == arg0.binList.getClass().getName()
this.lanes.getClass().getName() == arg0.feeders.getClass().getName()
this.lanes.getClass().getName() == orig(this.lanes.getClass().getName())
this.lanes.getClass().getName() == orig(arg0.binList.getClass().getName())
this.lanes.getClass().getName() == orig(arg0.feeders.getClass().getName())
this.feederGUI == orig(this.feederGUI)
this.currentOrientation == orig(this.currentOrientation)
this.bin == orig(this.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.binList == orig(arg0.binList)
arg0.binList[] == orig(arg0.binList[])
arg0.feeders == orig(arg0.feeders)
arg0.feeders[] == orig(arg0.feeders[])
arg0.gantryGraphics == orig(arg0.gantryGraphics)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.animation == orig(arg0.animation)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.gantry has only one value
this.gantry.gantryGraphics == null
this.gantry.agentThread == null
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI == null
this.agentThread == null
this.console has only one value
arg0.binList has only one value
arg0.binList[] == []
arg0.binList[].getClass().getName() == []
arg0.feeders has only one value
arg0.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantryGraphics == null
arg0.name has only one value
arg0.name.toString == "GantryRobot"
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry has only one value
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.agentThread has only one value
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI == null
this.agentThread == null
this.console has only one value
arg0.getClass().getName() == DeviceGraphics.FeederGraphics.class
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.gantry == orig(this.gantry)
this.gantry.binList == orig(this.gantry.binList)
this.gantry.binList[] == orig(this.gantry.binList[])
this.gantry.feeders == orig(this.gantry.feeders)
this.gantry.feeders[] == orig(this.gantry.feeders[])
this.gantry.feeders.getClass().getName() == this.lanes.getClass().getName()
this.gantry.gantryGraphics == orig(this.gantry.gantryGraphics)
this.gantry.gantryGraphics.getClass().getName() == orig(this.gantry.gantryGraphics.getClass().getName())
this.gantry.name == orig(this.gantry.name)
this.gantry.name.toString == orig(this.gantry.name.toString)
this.gantry.animation == orig(this.gantry.animation)
this.gantry.stateChange == orig(this.gantry.stateChange)
this.gantry.agentThread == orig(this.gantry.agentThread)
this.gantry.agentThread.goOn == orig(this.gantry.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.gantry.console.name.toString == orig(this.gantry.console.name.toString)
this.lanes == orig(this.lanes)
this.lanes[] == orig(this.lanes[])
this.lanes.getClass().getName() == orig(this.gantry.binList.getClass().getName())
this.lanes.getClass().getName() == orig(this.gantry.feeders.getClass().getName())
this.lanes.getClass().getName() == orig(this.lanes.getClass().getName())
this.feederGUI.getClass().getName() == orig(arg0.getClass().getName())
this.currentOrientation == orig(this.currentOrientation)
this.bin == orig(this.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.gantry.console)
this.console == orig(this.console)
this.console.name == orig(this.gantry.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.gantry.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.gantry.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.gantry.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.gantry.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.gantry has only one value
this.gantry.feeders[] contains no nulls and has only one value, of length 4
this.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantry.gantryGraphics has only one value
this.gantry.agentThread has only one value
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.agentThread == null
this.console has only one value
size(this.gantry.feeders[]) == 4
size(this.lanes[]) == 2
===========================================================================
agent.FeederAgent.setLanes(agent.LaneAgent, agent.LaneAgent):::ENTER
this.lanes.getClass().getName() == arg0.requestList.getClass().getName()
this.lanes.getClass().getName() == arg0.currentParts.getClass().getName()
this.lanes.getClass().getName() == arg1.requestList.getClass().getName()
this.lanes.getClass().getName() == arg1.currentParts.getClass().getName()
this.console == arg0.console
this.console == arg1.console
this.console.name == arg0.console.name
this.console.name == arg1.console.name
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == arg1.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == arg1.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == arg1.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == arg1.console.messageQueue.getClass().getName()
arg0.state == agent.LaneAgent$LaneStatus.FILLING
agent.LaneAgent$LaneStatus.FILLING == arg1.state
this.gantry == null
this.lanes[] == []
this.lanes[].getClass().getName() == []
this.feederGUI == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.currentType == null
arg0.topLimit == 5
arg0.lowerThreshold == 3
arg0.extraRequestCount == 0
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
arg0.feeder == null
arg0.nest == null
arg0.laneGUI == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentType == null
arg1.topLimit == 5
arg1.lowerThreshold == 3
arg1.extraRequestCount == 0
arg1.feeder == null
arg1.nest == null
arg1.laneGUI == null
arg1.agentThread == null
arg1.console.name.toString == "Server"
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
===========================================================================
agent.FeederAgent.setLanes(agent.LaneAgent, agent.LaneAgent):::EXIT
this.gantry == orig(this.gantry)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lanes == orig(this.lanes)
this.lanes.getClass().getName() == arg0.requestList.getClass().getName()
this.lanes.getClass().getName() == arg0.currentParts.getClass().getName()
this.lanes.getClass().getName() == arg1.requestList.getClass().getName()
this.lanes.getClass().getName() == arg1.currentParts.getClass().getName()
this.lanes.getClass().getName() == orig(this.lanes.getClass().getName())
this.lanes.getClass().getName() == orig(arg0.requestList.getClass().getName())
this.lanes.getClass().getName() == orig(arg0.currentParts.getClass().getName())
this.lanes.getClass().getName() == orig(arg1.requestList.getClass().getName())
this.lanes.getClass().getName() == orig(arg1.currentParts.getClass().getName())
this.feederGUI == orig(this.feederGUI)
this.currentOrientation == orig(this.currentOrientation)
this.bin == orig(this.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == arg1.console
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console == orig(arg1.console)
this.console.name == arg0.console.name
this.console.name == arg1.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name == orig(arg1.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == arg1.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.stateChange == orig(arg1.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == arg1.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg1.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == arg1.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue == orig(arg1.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == arg1.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg1.console.messageQueue.getClass().getName())
arg0.requestList == orig(arg0.requestList)
arg0.requestList[] == orig(arg0.requestList[])
arg0.currentParts == orig(arg0.currentParts)
arg0.currentParts[] == orig(arg0.currentParts[])
arg0.currentType == orig(arg0.currentType)
arg0.topLimit == orig(arg0.topLimit)
arg0.lowerThreshold == orig(arg0.lowerThreshold)
arg0.extraRequestCount == orig(arg0.extraRequestCount)
arg0.state == agent.LaneAgent$LaneStatus.FILLING
agent.LaneAgent$LaneStatus.FILLING == arg1.state
agent.LaneAgent$LaneStatus.FILLING == orig(arg0.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.FILLING == orig(arg1.state)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.animation == orig(arg0.animation)
arg0.feeder == orig(arg0.feeder)
arg0.nest == orig(arg0.nest)
arg0.laneGUI == orig(arg0.laneGUI)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg1.requestList == orig(arg1.requestList)
arg1.requestList[] == orig(arg1.requestList[])
arg1.currentParts == orig(arg1.currentParts)
arg1.currentParts[] == orig(arg1.currentParts[])
arg1.currentType == orig(arg1.currentType)
arg1.topLimit == orig(arg1.topLimit)
arg1.lowerThreshold == orig(arg1.lowerThreshold)
arg1.extraRequestCount == orig(arg1.extraRequestCount)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.animation == orig(arg1.animation)
arg1.feeder == orig(arg1.feeder)
arg1.nest == orig(arg1.nest)
arg1.laneGUI == orig(arg1.laneGUI)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console.name.toString == orig(arg1.console.name.toString)
this.gantry == null
this.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feederGUI == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.currentType == null
arg0.topLimit == 5
arg0.lowerThreshold == 3
arg0.extraRequestCount == 0
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
arg0.feeder == null
arg0.nest == null
arg0.laneGUI == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
arg1.requestList[] == []
arg1.requestList[].getClass().getName() == []
arg1.currentParts[] == []
arg1.currentParts[].getClass().getName() == []
arg1.currentType == null
arg1.topLimit == 5
arg1.lowerThreshold == 3
arg1.extraRequestCount == 0
arg1.feeder == null
arg1.nest == null
arg1.laneGUI == null
arg1.agentThread == null
arg1.console.name.toString == "Server"
size(this.lanes[]) == 2
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
===========================================================================
agent.GantryAgent$FeederStatus:::OBJECT
===========================================================================
agent.GantryAgent$FeederStatus.FeederStatus(java.lang.String, int):::ENTER
===========================================================================
agent.GantryAgent$FeederStatus.FeederStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.GantryAgent$MyFeeder:::OBJECT
this.feeder.gantry has only one value
this.feeder.gantry.binList has only one value
this.feeder.gantry.binList[] == []
this.feeder.gantry.binList[].getClass().getName() == []
this.feeder.gantry.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feeder.gantry.feeders has only one value
this.feeder.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
this.feeder.gantry.feeders.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feeder.gantry.gantryGraphics == null
this.feeder.gantry.name has only one value
this.feeder.gantry.name.toString == "GantryRobot"
this.feeder.gantry.animation has only one value
this.feeder.gantry.stateChange has only one value
this.feeder.gantry.agentThread == null
this.feeder.gantry.console has only one value
this.feeder.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feeder.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
this.feeder.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feeder.feederGUI == null
this.feeder.currentOrientation == 0
this.feeder.bin == null
this.feeder.state has only one value
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
this.feeder.agentThread == null
this.feeder.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.feeder.console.name has only one value
this.feeder.console.name.toString == "Server"
this.feeder.console.stateChange has only one value
this.feeder.console.consoleWriterThread has only one value
this.feeder.console.messageQueue has only one value
this.feeder.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.requestedType == null
this.state has only one value
agent.GantryAgent$FeederStatus.PENDING has only one value
agent.GantryAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.GantryAgent$FeederStatus.BEING_MOVED_TO has only one value
agent.GantryAgent$FeederStatus.FULL has only one value
agent.GantryAgent$FeederStatus.PURGING has only one value
agent.GantryAgent$FeederStatus.$VALUES has only one value
agent.GantryAgent$FeederStatus.$VALUES.getClass().getName() == agent.GantryAgent$FeederStatus[].class
agent.GantryAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.GantryAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.GantryAgent.FeederStatus, agent.GantryAgent.FeederStatus, agent.GantryAgent.FeederStatus, agent.GantryAgent.FeederStatus, agent.GantryAgent.FeederStatus]
agent.GantryAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.GantryAgent.FeederStatus.class
agent.GantryAgent.this has only one value
agent.GantryAgent.this.binList has only one value
agent.GantryAgent.this.binList[] == []
agent.GantryAgent.this.binList[].getClass().getName() == []
agent.GantryAgent.this.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.GantryAgent.this.feeders has only one value
agent.GantryAgent.this.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
agent.GantryAgent.this.feeders.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.GantryAgent.this.gantryGraphics == null
agent.GantryAgent.this.name has only one value
agent.GantryAgent.this.name.toString == "GantryRobot"
agent.GantryAgent.this.animation has only one value
agent.GantryAgent.this.stateChange has only one value
agent.GantryAgent.this.agentThread == null
agent.GantryAgent.this.console has only one value
agent.GantryAgent.this.console.name has only one value
agent.GantryAgent.this.console.name.toString == "Server"
agent.GantryAgent.this.console.stateChange has only one value
agent.GantryAgent.this.console.consoleWriterThread has only one value
agent.GantryAgent.this.console.messageQueue has only one value
agent.GantryAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.feeder.lanes[]) == 2
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
size(agent.GantryAgent$FeederStatus.$VALUES[]) == 5
===========================================================================
agent.GantryAgent$MyFeeder.MyFeeder(agent.GantryAgent, agent.FeederAgent):::ENTER
agent.GantryAgent.this has only one value
agent.GantryAgent.this.binList has only one value
agent.GantryAgent.this.binList[] == []
agent.GantryAgent.this.binList[].getClass().getName() == []
agent.GantryAgent.this.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.GantryAgent.this.feeders has only one value
agent.GantryAgent.this.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
agent.GantryAgent.this.feeders.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.GantryAgent.this.gantryGraphics == null
agent.GantryAgent.this.name has only one value
agent.GantryAgent.this.name.toString == "GantryRobot"
agent.GantryAgent.this.animation has only one value
agent.GantryAgent.this.stateChange has only one value
agent.GantryAgent.this.agentThread == null
agent.GantryAgent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
agent.GantryAgent.this.console.name has only one value
agent.GantryAgent.this.console.name.toString == "Server"
agent.GantryAgent.this.console.stateChange has only one value
agent.GantryAgent.this.console.consoleWriterThread has only one value
agent.GantryAgent.this.console.messageQueue has only one value
agent.GantryAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.gantry has only one value
arg1.gantry.binList has only one value
arg1.gantry.binList[] == []
arg1.gantry.binList[].getClass().getName() == []
arg1.gantry.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.gantry.feeders has only one value
arg1.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg1.gantry.feeders.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.gantry.gantryGraphics == null
arg1.gantry.name has only one value
arg1.gantry.name.toString == "GantryRobot"
arg1.gantry.animation has only one value
arg1.gantry.stateChange has only one value
arg1.gantry.agentThread == null
arg1.gantry.console has only one value
arg1.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg1.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg1.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.feederGUI == null
arg1.currentOrientation == 0
arg1.bin == null
arg1.state has only one value
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg1.lanes[]) == 2
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
===========================================================================
agent.GantryAgent$MyFeeder.MyFeeder(agent.GantryAgent, agent.FeederAgent):::EXIT
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.GantryAgent.this == orig(agent.GantryAgent.this)
agent.GantryAgent.this.binList == orig(agent.GantryAgent.this.binList)
agent.GantryAgent.this.binList[] == orig(agent.GantryAgent.this.binList[])
agent.GantryAgent.this.binList.getClass().getName() == orig(agent.GantryAgent.this.binList.getClass().getName())
agent.GantryAgent.this.feeders == orig(agent.GantryAgent.this.feeders)
agent.GantryAgent.this.feeders[] == orig(agent.GantryAgent.this.feeders[])
agent.GantryAgent.this.feeders.getClass().getName() == orig(agent.GantryAgent.this.feeders.getClass().getName())
agent.GantryAgent.this.gantryGraphics == orig(agent.GantryAgent.this.gantryGraphics)
agent.GantryAgent.this.name == orig(agent.GantryAgent.this.name)
agent.GantryAgent.this.name.toString == orig(agent.GantryAgent.this.name.toString)
agent.GantryAgent.this.animation == orig(agent.GantryAgent.this.animation)
agent.GantryAgent.this.stateChange == orig(agent.GantryAgent.this.stateChange)
agent.GantryAgent.this.agentThread == orig(agent.GantryAgent.this.agentThread)
agent.GantryAgent.this.console == orig(agent.GantryAgent.this.console)
agent.GantryAgent.this.console.name == orig(agent.GantryAgent.this.console.name)
agent.GantryAgent.this.console.name.toString == orig(agent.GantryAgent.this.console.name.toString)
agent.GantryAgent.this.console.stateChange == orig(agent.GantryAgent.this.console.stateChange)
agent.GantryAgent.this.console.consoleWriterThread == orig(agent.GantryAgent.this.console.consoleWriterThread)
agent.GantryAgent.this.console.messageQueue == orig(agent.GantryAgent.this.console.messageQueue)
agent.GantryAgent.this.console.messageQueue.getClass().getName() == orig(agent.GantryAgent.this.console.messageQueue.getClass().getName())
arg1.gantry == orig(arg1.gantry)
arg1.gantry.binList == orig(arg1.gantry.binList)
arg1.gantry.binList[] == orig(arg1.gantry.binList[])
arg1.gantry.binList.getClass().getName() == orig(arg1.gantry.binList.getClass().getName())
arg1.gantry.feeders == orig(arg1.gantry.feeders)
arg1.gantry.feeders[] == orig(arg1.gantry.feeders[])
arg1.gantry.feeders.getClass().getName() == orig(arg1.gantry.feeders.getClass().getName())
arg1.gantry.gantryGraphics == orig(arg1.gantry.gantryGraphics)
arg1.gantry.name == orig(arg1.gantry.name)
arg1.gantry.name.toString == orig(arg1.gantry.name.toString)
arg1.gantry.animation == orig(arg1.gantry.animation)
arg1.gantry.stateChange == orig(arg1.gantry.stateChange)
arg1.gantry.agentThread == orig(arg1.gantry.agentThread)
arg1.gantry.console == orig(arg1.gantry.console)
arg1.lanes == orig(arg1.lanes)
arg1.lanes[] == orig(arg1.lanes[])
arg1.lanes.getClass().getName() == orig(arg1.lanes.getClass().getName())
arg1.feederGUI == orig(arg1.feederGUI)
arg1.currentOrientation == orig(arg1.currentOrientation)
arg1.bin == orig(arg1.bin)
arg1.state == orig(arg1.state)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.animation == orig(arg1.animation)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg1.console.name == orig(arg1.console.name)
arg1.console.name.toString == orig(arg1.console.name.toString)
arg1.console.stateChange == orig(arg1.console.stateChange)
arg1.console.consoleWriterThread == orig(arg1.console.consoleWriterThread)
arg1.console.messageQueue == orig(arg1.console.messageQueue)
arg1.console.messageQueue.getClass().getName() == orig(arg1.console.messageQueue.getClass().getName())
arg1.gantry has only one value
arg1.gantry.binList has only one value
arg1.gantry.binList[] == []
arg1.gantry.binList[].getClass().getName() == []
arg1.gantry.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.gantry.feeders has only one value
arg1.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg1.gantry.feeders.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.gantry.gantryGraphics == null
arg1.gantry.name has only one value
arg1.gantry.name.toString == "GantryRobot"
arg1.gantry.animation has only one value
arg1.gantry.stateChange has only one value
arg1.gantry.agentThread == null
arg1.gantry.console has only one value
arg1.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg1.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg1.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
arg1.feederGUI == null
arg1.currentOrientation == 0
arg1.bin == null
arg1.state has only one value
arg1.agentThread == null
arg1.console has only one value
arg1.console.name has only one value
arg1.console.name.toString == "Server"
arg1.console.stateChange has only one value
arg1.console.consoleWriterThread has only one value
arg1.console.messageQueue has only one value
arg1.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(arg1.lanes[]) == 2
===========================================================================
agent.GantryAgent:::OBJECT
this.binList.getClass().getName() == this.feeders.getClass().getName()
this.console == Utils.ConsoleWriter.this
this has only one value
this.binList has only one value
this.binList != null
this.binList[] == []
this.binList[].getClass().getName() == []
this.binList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feeders has only one value
this.feeders != null
this.feeders[] elements != null
this.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
this.gantryGraphics.getClass().getName() == DeviceGraphics.GantryGraphics.class
this.name has only one value
this.name != null
this.name.toString == "GantryRobot"
this.animation has only one value
this.animation != null
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.GantryAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.binList.getClass().getName() != this.gantryGraphics.getClass().getName()
this.binList.getClass().getName() != this.console.messageQueue.getClass().getName()
this.gantryGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.GantryAgent.GantryAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "GantryRobot"
===========================================================================
agent.GantryAgent.GantryAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.feeders[] == []
this.feeders[].getClass().getName() == []
this.gantryGraphics == null
this.agentThread == null
this.console == null
arg0.toString == "GantryRobot"
===========================================================================
agent.GantryAgent.getName():::ENTER
this.feeders[].getClass().getName() one of { [], [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder] }
this.agentThread == null
size(this.feeders[]) one of { 0, 4 }
===========================================================================
agent.GantryAgent.getName():::EXIT
this.binList == orig(this.binList)
this.binList[] == orig(this.binList[])
this.binList.getClass().getName() == orig(this.binList.getClass().getName())
this.binList.getClass().getName() == orig(this.feeders.getClass().getName())
this.feeders == orig(this.feeders)
this.feeders[] == orig(this.feeders[])
this.gantryGraphics == orig(this.gantryGraphics)
this.gantryGraphics.getClass().getName() == orig(this.gantryGraphics.getClass().getName())
this.name == return
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.feeders[].getClass().getName() one of { [], [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder] }
this.agentThread == null
return has only one value
return.toString == "GantryRobot"
size(this.feeders[]) one of { 0, 4 }
===========================================================================
agent.GantryAgent.pickAndExecuteAnAction():::ENTER
this.feeders[] contains no nulls and has only one value, of length 4
this.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantryGraphics has only one value
this.agentThread has only one value
this.console has only one value
size(this.feeders[]) == 4
===========================================================================
agent.GantryAgent.pickAndExecuteAnAction():::EXIT165
===========================================================================
agent.GantryAgent.pickAndExecuteAnAction():::EXIT165;condition="not(return == true)"
===========================================================================
agent.GantryAgent.pickAndExecuteAnAction():::EXIT
this.binList == orig(this.binList)
this.binList[] == orig(this.binList[])
this.binList.getClass().getName() == orig(this.binList.getClass().getName())
this.binList.getClass().getName() == orig(this.feeders.getClass().getName())
this.feeders == orig(this.feeders)
this.feeders[] == orig(this.feeders[])
this.gantryGraphics == orig(this.gantryGraphics)
this.gantryGraphics.getClass().getName() == orig(this.gantryGraphics.getClass().getName())
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.feeders[] contains no nulls and has only one value, of length 4
this.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantryGraphics has only one value
this.agentThread has only one value
this.console has only one value
return == false
size(this.feeders[]) == 4
===========================================================================
agent.GantryAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.GantryAgent.setFeeder(agent.FeederAgent):::ENTER
this == arg0.gantry
this.binList == arg0.gantry.binList
this.binList.getClass().getName() == arg0.gantry.binList.getClass().getName()
this.binList.getClass().getName() == arg0.gantry.feeders.getClass().getName()
this.binList.getClass().getName() == arg0.lanes.getClass().getName()
this.feeders == arg0.gantry.feeders
this.name == arg0.gantry.name
this.animation == arg0.gantry.animation
this.stateChange == arg0.gantry.stateChange
this.console == arg0.gantry.console
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
arg0.state == agent.FeederAgent$FeederStatus.IDLE
this.gantryGraphics == null
this.agentThread == null
this.console has only one value
arg0.gantry has only one value
arg0.gantry.binList[] == []
arg0.gantry.binList[].getClass().getName() == []
arg0.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantry.gantryGraphics == null
arg0.gantry.name.toString == "GantryRobot"
arg0.gantry.agentThread == null
arg0.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feederGUI == null
arg0.currentOrientation == 0
arg0.bin == null
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.lanes[]) == 2
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
===========================================================================
agent.GantryAgent.setFeeder(agent.FeederAgent):::EXIT
this.binList == arg0.gantry.binList
this.binList == orig(this.binList)
this.binList == orig(arg0.gantry.binList)
this.binList[] == orig(this.binList[])
this.binList.getClass().getName() == arg0.gantry.binList.getClass().getName()
this.binList.getClass().getName() == arg0.gantry.feeders.getClass().getName()
this.binList.getClass().getName() == arg0.lanes.getClass().getName()
this.binList.getClass().getName() == orig(this.binList.getClass().getName())
this.binList.getClass().getName() == orig(this.feeders.getClass().getName())
this.binList.getClass().getName() == orig(arg0.gantry.binList.getClass().getName())
this.binList.getClass().getName() == orig(arg0.gantry.feeders.getClass().getName())
this.binList.getClass().getName() == orig(arg0.lanes.getClass().getName())
this.feeders == arg0.gantry.feeders
this.feeders == orig(this.feeders)
this.feeders == orig(arg0.gantry.feeders)
this.gantryGraphics == orig(this.gantryGraphics)
this.name == arg0.gantry.name
this.name == orig(this.name)
this.name == orig(arg0.gantry.name)
this.name.toString == orig(this.name.toString)
this.animation == arg0.gantry.animation
this.animation == orig(this.animation)
this.animation == orig(arg0.gantry.animation)
this.stateChange == arg0.gantry.stateChange
this.stateChange == orig(this.stateChange)
this.stateChange == orig(arg0.gantry.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.gantry.console
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.gantry.console)
this.console == orig(arg0.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.gantry == orig(this)
arg0.gantry == orig(arg0.gantry)
arg0.gantry.binList[] == orig(arg0.gantry.binList[])
arg0.gantry.gantryGraphics == orig(arg0.gantry.gantryGraphics)
arg0.gantry.name.toString == orig(arg0.gantry.name.toString)
arg0.gantry.agentThread == orig(arg0.gantry.agentThread)
arg0.lanes == orig(arg0.lanes)
arg0.lanes[] == orig(arg0.lanes[])
arg0.feederGUI == orig(arg0.feederGUI)
arg0.currentOrientation == orig(arg0.currentOrientation)
arg0.bin == orig(arg0.bin)
arg0.state == agent.FeederAgent$FeederStatus.IDLE
agent.FeederAgent$FeederStatus.IDLE == orig(arg0.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.animation == orig(arg0.animation)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
size(this.feeders[])-1 == orig(size(this.feeders[]))
size(arg0.gantry.feeders[])-1 == orig(size(arg0.gantry.feeders[]))
this.gantryGraphics == null
this.agentThread == null
this.console has only one value
arg0.gantry has only one value
arg0.gantry.binList[] == []
arg0.gantry.binList[].getClass().getName() == []
arg0.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantry.gantryGraphics == null
arg0.gantry.name.toString == "GantryRobot"
arg0.gantry.agentThread == null
arg0.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feederGUI == null
arg0.currentOrientation == 0
arg0.bin == null
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.lanes[]) == 2
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
===========================================================================
agent.GantryAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.feeders[] contains no nulls and has only one value, of length 4
this.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantryGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == DeviceGraphics.GantryGraphics.class
size(this.feeders[]) == 4
===========================================================================
agent.GantryAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.binList == orig(this.binList)
this.binList[] == orig(this.binList[])
this.binList.getClass().getName() == orig(this.binList.getClass().getName())
this.binList.getClass().getName() == orig(this.feeders.getClass().getName())
this.feeders == orig(this.feeders)
this.feeders[] == orig(this.feeders[])
this.gantryGraphics.getClass().getName() == orig(arg0.getClass().getName())
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.feeders[] contains no nulls and has only one value, of length 4
this.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.gantryGraphics has only one value
this.agentThread == null
this.console has only one value
size(this.feeders[]) == 4
===========================================================================
agent.KitRobotAgent$KitRobotState:::OBJECT
===========================================================================
agent.KitRobotAgent$KitRobotState.KitRobotState(java.lang.String, int):::ENTER
arg0.toString one of { "HOLDING_KIT", "IDLE", "NOT_HOLDING_KIT" }
arg1 one of { 0, 1, 2 }
===========================================================================
agent.KitRobotAgent$KitRobotState.KitRobotState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "HOLDING_KIT", "IDLE", "NOT_HOLDING_KIT" }
===========================================================================
agent.KitRobotAgent:::OBJECT
this.state == agent.KitRobotAgent$KitRobotState.IDLE
this.console == Utils.ConsoleWriter.this
this has only one value
this.myKits has only one value
this.myKits != null
this.myKits[] == []
this.myKits[].getClass().getName() == []
this.myKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.standPositions has only one value
this.standPositions != null
this.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
this.kitWaitingOnConveyor == false
this.kitRequested == false
this.numKitsToMake == 0
this.numKitsRequested == 0
this.animation has only one value
this.animation != null
this.stand.getClass().getName() == agent.StandAgent.class
this.conveyor.getClass().getName() == agent.ConveyorAgent.class
this.camera.getClass().getName() == agent.CameraAgent.class
this.kitrobotGraphics.getClass().getName() == DeviceGraphics.KitRobotGraphics.class
this.mockgraphics == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
agent.KitRobotAgent$KitRobotState.IDLE has only one value
agent.KitRobotAgent$KitRobotState.IDLE != null
agent.KitRobotAgent$KitRobotState.HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.HOLDING_KIT != null
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT has only one value
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT != null
agent.KitRobotAgent$KitRobotState.$VALUES has only one value
agent.KitRobotAgent$KitRobotState.$VALUES != null
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == agent.KitRobotAgent$KitRobotState[].class
agent.KitRobotAgent$KitRobotState.$VALUES[] contains no nulls and has only one value, of length 3
agent.KitRobotAgent$KitRobotState.$VALUES[] elements != null
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() == [agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState, agent.KitRobotAgent.KitRobotState]
agent.KitRobotAgent$KitRobotState.$VALUES[].getClass().getName() elements == agent.KitRobotAgent.KitRobotState.class
this.name has only one value
this.name != null
this.name.toString == "KitRobot"
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.KitRobotAgent$KitRobotState.$VALUES[]) == 3
this.myKits.getClass().getName() != this.standPositions.getClass().getName()
this.myKits.getClass().getName() != this.stand.getClass().getName()
this.myKits.getClass().getName() != this.conveyor.getClass().getName()
this.myKits.getClass().getName() != this.camera.getClass().getName()
this.myKits.getClass().getName() != this.kitrobotGraphics.getClass().getName()
this.myKits.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.myKits.getClass().getName() != this.console.messageQueue.getClass().getName()
this.standPositions.getClass().getName() != this.stand.getClass().getName()
this.standPositions.getClass().getName() != this.conveyor.getClass().getName()
this.standPositions.getClass().getName() != this.camera.getClass().getName()
this.standPositions.getClass().getName() != this.kitrobotGraphics.getClass().getName()
this.standPositions.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.standPositions.getClass().getName() != this.console.messageQueue.getClass().getName()
this.stand.getClass().getName() != this.conveyor.getClass().getName()
this.stand.getClass().getName() != this.camera.getClass().getName()
this.stand.getClass().getName() != this.kitrobotGraphics.getClass().getName()
this.stand.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.conveyor.getClass().getName() != this.camera.getClass().getName()
this.conveyor.getClass().getName() != this.kitrobotGraphics.getClass().getName()
this.conveyor.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.conveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.getClass().getName() != this.kitrobotGraphics.getClass().getName()
this.camera.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.camera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.kitrobotGraphics.getClass().getName() != agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName()
this.kitrobotGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.KitRobotAgent.KitRobotAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "KitRobot"
===========================================================================
agent.KitRobotAgent.KitRobotAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.stand == null
this.conveyor == null
this.camera == null
this.kitrobotGraphics == null
this.agentThread == null
this.console == null
arg0.toString == "KitRobot"
===========================================================================
agent.KitRobotAgent.getName():::ENTER
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.KitRobotAgent.getName():::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.kitrobotGraphics == orig(this.kitrobotGraphics)
this.kitrobotGraphics.getClass().getName() == orig(this.kitrobotGraphics.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == return
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics has only one value
this.agentThread == null
this.console has only one value
return has only one value
return.toString == "KitRobot"
===========================================================================
agent.KitRobotAgent.pickAndExecuteAnAction():::ENTER
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics has only one value
this.agentThread has only one value
this.console has only one value
===========================================================================
agent.KitRobotAgent.pickAndExecuteAnAction():::EXIT293
===========================================================================
agent.KitRobotAgent.pickAndExecuteAnAction():::EXIT293;condition="not(return == true)"
===========================================================================
agent.KitRobotAgent.pickAndExecuteAnAction():::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.kitrobotGraphics == orig(this.kitrobotGraphics)
this.kitrobotGraphics.getClass().getName() == orig(this.kitrobotGraphics.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics has only one value
this.agentThread has only one value
this.console has only one value
return == false
===========================================================================
agent.KitRobotAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.KitRobotAgent.setCamera(agent.interfaces.Camera):::ENTER
this.stand has only one value
this.conveyor == null
this.camera == null
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.CameraAgent.class
===========================================================================
agent.KitRobotAgent.setCamera(agent.interfaces.Camera):::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.conveyor == orig(this.conveyor)
this.camera == orig(arg0)
this.camera.getClass().getName() == orig(arg0.getClass().getName())
this.kitrobotGraphics == orig(this.kitrobotGraphics)
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.conveyor == null
this.camera has only one value
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.KitRobotAgent.setConveyor(agent.interfaces.Conveyor):::ENTER
this.stand has only one value
this.conveyor == null
this.camera has only one value
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.ConveyorAgent.class
===========================================================================
agent.KitRobotAgent.setConveyor(agent.interfaces.Conveyor):::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.conveyor == orig(arg0)
this.conveyor.getClass().getName() == orig(arg0.getClass().getName())
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.kitrobotGraphics == orig(this.kitrobotGraphics)
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.KitRobotAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == DeviceGraphics.KitRobotGraphics.class
===========================================================================
agent.KitRobotAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.conveyor == orig(this.conveyor)
this.conveyor.getClass().getName() == orig(this.conveyor.getClass().getName())
this.camera == orig(this.camera)
this.camera.getClass().getName() == orig(this.camera.getClass().getName())
this.kitrobotGraphics.getClass().getName() == orig(arg0.getClass().getName())
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.conveyor has only one value
this.camera has only one value
this.kitrobotGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.KitRobotAgent.setStand(agent.interfaces.Stand):::ENTER
this.stand == null
this.conveyor == null
this.camera == null
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.StandAgent.class
===========================================================================
agent.KitRobotAgent.setStand(agent.interfaces.Stand):::EXIT
this.myKits == orig(this.myKits)
this.myKits[] == orig(this.myKits[])
this.myKits.getClass().getName() == orig(this.myKits.getClass().getName())
this.standPositions == orig(this.standPositions)
this.standPositions.getClass().getName() == orig(this.standPositions.getClass().getName())
this.kitWaitingOnConveyor == orig(this.kitWaitingOnConveyor)
this.kitRequested == orig(this.kitRequested)
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsRequested == orig(this.numKitsRequested)
this.animation == orig(this.animation)
this.stand == orig(arg0)
this.stand.getClass().getName() == orig(arg0.getClass().getName())
this.conveyor == orig(this.conveyor)
this.camera == orig(this.camera)
this.kitrobotGraphics == orig(this.kitrobotGraphics)
this.mockgraphics == orig(this.mockgraphics)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.KitRobotAgent$KitRobotState.IDLE == orig(this.state)
agent.KitRobotAgent$KitRobotState.IDLE == orig(agent.KitRobotAgent$KitRobotState.IDLE)
agent.KitRobotAgent$KitRobotState.HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT == orig(agent.KitRobotAgent$KitRobotState.NOT_HOLDING_KIT)
agent.KitRobotAgent$KitRobotState.$VALUES == orig(agent.KitRobotAgent$KitRobotState.$VALUES)
agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName() == orig(agent.KitRobotAgent$KitRobotState.$VALUES.getClass().getName())
agent.KitRobotAgent$KitRobotState.$VALUES[] == orig(agent.KitRobotAgent$KitRobotState.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.conveyor == null
this.camera == null
this.kitrobotGraphics == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.LaneAgent$LaneStatus:::OBJECT
===========================================================================
agent.LaneAgent$LaneStatus.LaneStatus(java.lang.String, int):::ENTER
===========================================================================
agent.LaneAgent$LaneStatus.LaneStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.LaneAgent:::OBJECT
this.requestList == this.nest.lane.requestList
this.requestList.getClass().getName() == this.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.requestList.getClass().getName()
this.currentParts == this.nest.lane.currentParts
this.topLimit == this.nest.lane.topLimit
this.lowerThreshold == this.nest.lane.lowerThreshold
this.extraRequestCount == this.nest.lane.extraRequestCount
this.state == agent.LaneAgent$LaneStatus.FILLING
agent.LaneAgent$LaneStatus.FILLING == this.nest.lane.state
this.name == this.nest.lane.name
this.animation == this.nest.lane.animation
this.feeder == this.nest.lane.feeder
this.feeder.gantry.binList.getClass().getName() == this.feeder.lanes.getClass().getName()
this.feeder.gantry.feeders.getClass().getName() == this.feeder.lanes.getClass().getName()
this.feeder.gantry.console == this.feeder.console
this.feeder.lanes.getClass().getName() == this.nest.requestList.getClass().getName()
this.feeder.lanes.getClass().getName() == this.nest.lane.requestList.getClass().getName()
this.feeder.state == agent.FeederAgent$FeederStatus.IDLE
this.feeder.console == this.nest.lane.console
this.feeder.console == this.nest.console
this.feeder.console == this.console
this.feeder.console == Utils.ConsoleWriter.this
this.feeder.console.name == this.nest.console.name
this.feeder.console.name == this.console.name
this.feeder.console.stateChange == this.nest.console.stateChange
this.feeder.console.stateChange == this.console.stateChange
this.feeder.console.consoleWriterThread == this.nest.console.consoleWriterThread
this.feeder.console.consoleWriterThread == this.console.consoleWriterThread
this.feeder.console.messageQueue == this.nest.console.messageQueue
this.feeder.console.messageQueue == this.console.messageQueue
this.feeder.console.messageQueue.getClass().getName() == this.nest.console.messageQueue.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.nest == this.nest.lane.nest
this.nest.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.nest.requestList.getClass().getName() == this.nest.lane.requestList.getClass().getName()
this.nest.state == agent.NestAgent$NestState.DONE_PURGING
this.nest.lane.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.nest.lane.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.nest.lane.laneGUI == this.laneGUI
this.nest.lane.laneGUI.getClass().getName() == this.laneGUI.getClass().getName()
this.nest.lane.stateChange == this.stateChange
this.nest.lane.console == this.nest.camera.console
this.nest.lane.console == this.nest.console
this.nest.lane.console == this.console
this.nest.lane.console == Utils.ConsoleWriter.this
this.nest.laneState == agent.NestAgent$LaneState.READY
this.nest.console == this.console
this.nest.console == Utils.ConsoleWriter.this
this.nest.console.name == this.console.name
this.nest.console.stateChange == this.console.stateChange
this.nest.console.consoleWriterThread == this.console.consoleWriterThread
this.nest.console.messageQueue == this.console.messageQueue
this.nest.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.console == Utils.ConsoleWriter.this
this.requestList != null
this.requestList[] == []
this.requestList[].getClass().getName() == []
this.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.currentParts != null
this.currentParts[] == []
this.currentParts[].getClass().getName() == []
this.currentType == null
this.topLimit == 5
this.lowerThreshold == 3
this.extraRequestCount == 0
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.FILLING != null
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.PURGING != null
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.WAITING != null
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN != null
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING != null
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES != null
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[] elements != null
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
this.name != null
this.animation != null
this.feeder.gantry has only one value
this.feeder.gantry != null
this.feeder.gantry.binList has only one value
this.feeder.gantry.binList != null
this.feeder.gantry.binList[] == []
this.feeder.gantry.binList[].getClass().getName() == []
this.feeder.gantry.feeders has only one value
this.feeder.gantry.feeders != null
this.feeder.gantry.feeders[] contains no nulls and has only one value, of length 4
this.feeder.gantry.feeders[] elements != null
this.feeder.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
this.feeder.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
this.feeder.gantry.gantryGraphics.getClass().getName() == DeviceGraphics.GantryGraphics.class
this.feeder.gantry.name has only one value
this.feeder.gantry.name != null
this.feeder.gantry.name.toString == "GantryRobot"
this.feeder.gantry.animation has only one value
this.feeder.gantry.animation != null
this.feeder.gantry.stateChange has only one value
this.feeder.gantry.stateChange != null
this.feeder.lanes != null
this.feeder.lanes[] elements != null
this.feeder.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.feeder.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
this.feeder.lanes.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.feeder.feederGUI.getClass().getName() == DeviceGraphics.FeederGraphics.class
this.feeder.currentOrientation == 0
this.feeder.bin == null
this.feeder.state has only one value
this.feeder.state != null
agent.FeederAgent$FeederStatus.IDLE has only one value
agent.FeederAgent$FeederStatus.IDLE != null
agent.FeederAgent$FeederStatus.REQUESTED_PARTS has only one value
agent.FeederAgent$FeederStatus.REQUESTED_PARTS != null
agent.FeederAgent$FeederStatus.FEEDING_PARTS has only one value
agent.FeederAgent$FeederStatus.FEEDING_PARTS != null
agent.FeederAgent$FeederStatus.PURGING has only one value
agent.FeederAgent$FeederStatus.PURGING != null
agent.FeederAgent$FeederStatus.REMOVING_BIN has only one value
agent.FeederAgent$FeederStatus.REMOVING_BIN != null
agent.FeederAgent$FeederStatus.RECEIVING_BIN has only one value
agent.FeederAgent$FeederStatus.RECEIVING_BIN != null
agent.FeederAgent$FeederStatus.$VALUES has only one value
agent.FeederAgent$FeederStatus.$VALUES != null
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == agent.FeederAgent$FeederStatus[].class
agent.FeederAgent$FeederStatus.$VALUES[] contains no nulls and has only one value, of length 6
agent.FeederAgent$FeederStatus.$VALUES[] elements != null
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() == [agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus, agent.FeederAgent.FeederStatus]
agent.FeederAgent$FeederStatus.$VALUES[].getClass().getName() elements == agent.FeederAgent.FeederStatus.class
this.feeder.name != null
this.feeder.animation != null
this.feeder.stateChange != null
this.feeder.agentThread.goOn == true
agent.Agent.this.getClass().getName() == agent.FeederAgent.class
this.feeder.console has only one value
this.feeder.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.feeder.console.name has only one value
this.feeder.console.name != null
this.feeder.console.name.toString == "Server"
this.feeder.console.stateChange has only one value
this.feeder.console.stateChange != null
this.feeder.console.consoleWriterThread has only one value
this.feeder.console.consoleWriterThread != null
this.feeder.console.messageQueue has only one value
this.feeder.console.messageQueue != null
this.feeder.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.nest.requestList != null
this.nest.requestList[] == []
this.nest.requestList[].getClass().getName() == []
this.nest.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.currentPartType == null
this.nest.currentParts != null
this.nest.currentParts[] == []
this.nest.currentParts[].getClass().getName() == []
this.nest.count == 0
this.nest.countRequest == 0
this.nest.full == 8
this.nest.takingParts == false
this.nest.partReady == false
this.nest.partTypeNull == false
this.nest.nestGraphics == null
this.nest.state has only one value
this.nest.state != null
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PURGING != null
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.PRIORITY_PURGE != null
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE != null
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.DONE_PURGING != null
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.NULL != null
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES != null
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[] elements != null
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
this.nest.animation != null
this.nest.name != null
this.nest.lane.requestList != null
this.nest.lane.requestList[] == []
this.nest.lane.requestList[].getClass().getName() == []
this.nest.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.nest.lane.currentParts != null
this.nest.lane.currentParts[] == []
this.nest.lane.currentParts[].getClass().getName() == []
this.nest.lane.currentType == null
this.nest.lane.topLimit == 5
this.nest.lane.lowerThreshold == 3
this.nest.lane.extraRequestCount == 0
this.nest.lane.state has only one value
this.nest.lane.state != null
this.nest.lane.name != null
this.nest.lane.animation != null
this.nest.lane.feeder != null
this.nest.lane.nest != null
this.nest.lane.stateChange != null
this.nest.lane.console has only one value
this.nest.lane.console != null
this.nest.laneState has only one value
this.nest.laneState != null
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.PURGING != null
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.READY != null
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES != null
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[] elements != null
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
this.nest.camera.name has only one value
this.nest.camera.name != null
this.nest.camera.name.toString == "Camera"
this.nest.camera.nests has only one value
this.nest.camera.nests != null
this.nest.camera.nests[] contains no nulls and has only one value, of length 8
this.nest.camera.nests[] elements != null
this.nest.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.nest.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
this.nest.camera.mk == null
this.nest.camera.guiCamera has only one value
this.nest.camera.guiCamera != null
this.nest.camera.guiCamera.getClass().getName() == DeviceGraphics.CameraGraphics.class
this.nest.camera.timer has only one value
this.nest.camera.timer != null
this.nest.camera.kitRobot has only one value
this.nest.camera.kitRobot != null
this.nest.camera.partRobot has only one value
this.nest.camera.partRobot != null
this.nest.camera.animation has only one value
this.nest.camera.animation != null
this.nest.camera.stateChange has only one value
this.nest.camera.stateChange != null
this.nest.camera.agentThread has only one value
this.nest.camera.agentThread != null
this.nest.stateChange != null
this.nest.agentThread == null
this.nest.console has only one value
this.nest.console != null
this.nest.console.name has only one value
this.nest.console.name != null
this.nest.console.name.toString == "Server"
this.nest.console.stateChange has only one value
this.nest.console.stateChange != null
this.nest.console.consoleWriterThread has only one value
this.nest.console.consoleWriterThread != null
this.nest.console.messageQueue has only one value
this.nest.console.messageQueue != null
this.nest.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.laneGUI.getClass().getName() == DeviceGraphics.LaneGraphics.class
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.stateChange != null
agent.Agent.this.agentThread != null
agent.Agent.this.console has only one value
agent.Agent.this.console != null
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
size(this.feeder.gantry.feeders[]) == 4
size(this.feeder.lanes[]) == 2
size(agent.FeederAgent$FeederStatus.$VALUES[]) == 6
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.NestAgent$LaneState.$VALUES[]) == 2
size(this.nest.camera.nests[]) == 8
this.requestList.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.requestList.getClass().getName() != this.feeder.gantry.gantryGraphics.getClass().getName()
this.requestList.getClass().getName() != this.feeder.feederGUI.getClass().getName()
this.requestList.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.requestList.getClass().getName() != agent.Agent.this.getClass().getName()
this.requestList.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
this.requestList.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.requestList.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.requestList.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.requestList.getClass().getName() != this.laneGUI.getClass().getName()
this.requestList.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.feeder.gantry.gantryGraphics.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.feeder.lanes.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.feeder.feederGUI.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.Agent.this.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.nest.requestList.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.nest.lane.requestList.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.laneGUI.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.feeder.lanes.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.feeder.feederGUI.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != agent.Agent.this.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.nest.requestList.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.nest.lane.requestList.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.laneGUI.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
this.feeder.lanes.getClass().getName() != this.feeder.feederGUI.getClass().getName()
this.feeder.lanes.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.feeder.lanes.getClass().getName() != agent.Agent.this.getClass().getName()
this.feeder.lanes.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
this.feeder.lanes.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.feeder.lanes.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.feeder.lanes.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.feeder.lanes.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.feeder.lanes.getClass().getName() != this.laneGUI.getClass().getName()
this.feeder.lanes.getClass().getName() != this.console.messageQueue.getClass().getName()
this.feeder.feederGUI.getClass().getName() != agent.FeederAgent$FeederStatus.$VALUES.getClass().getName()
this.feeder.feederGUI.getClass().getName() != agent.Agent.this.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.nest.requestList.getClass().getName()
this.feeder.feederGUI.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.nest.lane.requestList.getClass().getName()
this.feeder.feederGUI.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.laneGUI.getClass().getName()
this.feeder.feederGUI.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != agent.Agent.this.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.nest.requestList.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.nest.lane.requestList.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.laneGUI.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.feeder.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.nest.requestList.getClass().getName()
agent.Agent.this.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
agent.Agent.this.getClass().getName() != this.nest.lane.requestList.getClass().getName()
agent.Agent.this.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.Agent.this.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
agent.Agent.this.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.laneGUI.getClass().getName()
agent.Agent.this.getClass().getName() != this.console.messageQueue.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != this.nest.requestList.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != this.nest.lane.requestList.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.feeder.console.messageQueue.getClass().getName() != this.laneGUI.getClass().getName()
this.nest.requestList.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.nest.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.nest.requestList.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.nest.requestList.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.nest.requestList.getClass().getName() != this.laneGUI.getClass().getName()
this.nest.requestList.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.nest.lane.requestList.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.laneGUI.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.nest.lane.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.nest.lane.requestList.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
this.nest.lane.requestList.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.nest.lane.requestList.getClass().getName() != this.laneGUI.getClass().getName()
this.nest.lane.requestList.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.nest.camera.guiCamera.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.laneGUI.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.nest.camera.guiCamera.getClass().getName() != this.nest.console.messageQueue.getClass().getName()
this.nest.camera.guiCamera.getClass().getName() != this.laneGUI.getClass().getName()
this.nest.camera.guiCamera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.nest.console.messageQueue.getClass().getName() != this.laneGUI.getClass().getName()
this.laneGUI.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.LaneAgent.LaneAgent(java.lang.String):::ENTER
===========================================================================
agent.LaneAgent.LaneAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.feeder == null
this.nest == null
this.laneGUI == null
this.agentThread == null
this.console == null
===========================================================================
agent.LaneAgent.getName():::ENTER
this == this.nest.lane
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.feeder.gantry.console == this.console
this.nest.camera.console == this.console
this.feeder != null
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.gantryGraphics != null
this.feeder.gantry.agentThread has only one value
this.feeder.gantry.agentThread != null
this.feeder.feederGUI != null
this.feeder.agentThread != null
this.nest != null
this.nest.lane != null
this.nest.lane.agentThread == null
this.nest.camera has only one value
this.nest.camera != null
this.laneGUI != null
this.agentThread == null
this.console has only one value
this.console != null
===========================================================================
agent.LaneAgent.getName():::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.nest.lane.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.binList.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.feeders.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.camera.nests.getClass().getName())
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.nest.lane.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.currentType == orig(this.currentType)
this.topLimit == orig(this.topLimit)
this.topLimit == orig(this.nest.lane.topLimit)
this.lowerThreshold == orig(this.lowerThreshold)
this.lowerThreshold == orig(this.nest.lane.lowerThreshold)
this.extraRequestCount == orig(this.extraRequestCount)
this.extraRequestCount == orig(this.nest.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.FILLING == orig(this.nest.lane.state)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.name == return
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.animation == orig(this.nest.lane.animation)
this.feeder == orig(this.feeder)
this.feeder == orig(this.nest.lane.feeder)
this.feeder.gantry == orig(this.feeder.gantry)
this.feeder.gantry.binList == orig(this.feeder.gantry.binList)
this.feeder.gantry.binList[] == orig(this.feeder.gantry.binList[])
this.feeder.gantry.feeders == orig(this.feeder.gantry.feeders)
this.feeder.gantry.feeders[] == orig(this.feeder.gantry.feeders[])
this.feeder.gantry.gantryGraphics == orig(this.feeder.gantry.gantryGraphics)
this.feeder.gantry.gantryGraphics.getClass().getName() == orig(this.feeder.gantry.gantryGraphics.getClass().getName())
this.feeder.gantry.name == orig(this.feeder.gantry.name)
this.feeder.gantry.name.toString == orig(this.feeder.gantry.name.toString)
this.feeder.gantry.animation == orig(this.feeder.gantry.animation)
this.feeder.gantry.stateChange == orig(this.feeder.gantry.stateChange)
this.feeder.gantry.agentThread == orig(this.feeder.gantry.agentThread)
this.feeder.gantry.console == this.console
this.feeder.lanes == orig(this.feeder.lanes)
this.feeder.lanes[] == orig(this.feeder.lanes[])
this.feeder.feederGUI == orig(this.feeder.feederGUI)
this.feeder.feederGUI.getClass().getName() == orig(this.feeder.feederGUI.getClass().getName())
this.feeder.currentOrientation == orig(this.feeder.currentOrientation)
this.feeder.bin == orig(this.feeder.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.feeder.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.feeder.name == orig(this.feeder.name)
this.feeder.name.toString == orig(this.feeder.name.toString)
this.feeder.animation == orig(this.feeder.animation)
this.feeder.stateChange == orig(this.feeder.stateChange)
this.feeder.agentThread == orig(this.feeder.agentThread)
this.feeder.agentThread.goOn == orig(this.feeder.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.feeder.console.name.toString == orig(this.feeder.console.name.toString)
this.nest == orig(this.nest)
this.nest == orig(this.nest.lane.nest)
this.nest.requestList == orig(this.nest.requestList)
this.nest.requestList[] == orig(this.nest.requestList[])
this.nest.currentPartType == orig(this.nest.currentPartType)
this.nest.currentParts == orig(this.nest.currentParts)
this.nest.currentParts[] == orig(this.nest.currentParts[])
this.nest.count == orig(this.nest.count)
this.nest.countRequest == orig(this.nest.countRequest)
this.nest.full == orig(this.nest.full)
this.nest.takingParts == orig(this.nest.takingParts)
this.nest.partReady == orig(this.nest.partReady)
this.nest.partTypeNull == orig(this.nest.partTypeNull)
this.nest.nestGraphics == orig(this.nest.nestGraphics)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(this.nest.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.nest.animation == orig(this.nest.animation)
this.nest.name == orig(this.nest.name)
this.nest.name.toString == orig(this.nest.name.toString)
this.nest.lane == orig(this)
this.nest.lane == orig(this.nest.lane)
this.nest.lane.requestList[] == orig(this.nest.lane.requestList[])
this.nest.lane.currentParts[] == orig(this.nest.lane.currentParts[])
this.nest.lane.currentType == orig(this.nest.lane.currentType)
this.nest.lane.name == return
this.nest.lane.name.toString == orig(this.nest.lane.name.toString)
this.nest.lane.agentThread == orig(this.nest.lane.agentThread)
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.nest.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.nest.camera == orig(this.nest.camera)
this.nest.camera.name == orig(this.nest.camera.name)
this.nest.camera.name.toString == orig(this.nest.camera.name.toString)
this.nest.camera.nests == orig(this.nest.camera.nests)
this.nest.camera.nests[] == orig(this.nest.camera.nests[])
this.nest.camera.mk == orig(this.nest.camera.mk)
this.nest.camera.guiCamera == orig(this.nest.camera.guiCamera)
this.nest.camera.guiCamera.getClass().getName() == orig(this.nest.camera.guiCamera.getClass().getName())
this.nest.camera.timer == orig(this.nest.camera.timer)
this.nest.camera.kitRobot == orig(this.nest.camera.kitRobot)
this.nest.camera.partRobot == orig(this.nest.camera.partRobot)
this.nest.camera.animation == orig(this.nest.camera.animation)
this.nest.camera.stateChange == orig(this.nest.camera.stateChange)
this.nest.camera.agentThread == orig(this.nest.camera.agentThread)
this.nest.camera.console == this.console
this.nest.stateChange == orig(this.nest.stateChange)
this.nest.agentThread == orig(this.nest.agentThread)
this.nest.console.name.toString == orig(this.nest.console.name.toString)
this.laneGUI == orig(this.nest.lane.laneGUI)
this.laneGUI == orig(this.laneGUI)
this.laneGUI.getClass().getName() == orig(this.nest.lane.laneGUI.getClass().getName())
this.laneGUI.getClass().getName() == orig(this.laneGUI.getClass().getName())
this.stateChange == orig(this.nest.lane.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.feeder.gantry.console)
this.console == orig(this.feeder.console)
this.console == orig(this.nest.lane.console)
this.console == orig(this.nest.camera.console)
this.console == orig(this.nest.console)
this.console == orig(this.console)
this.console.name == orig(this.feeder.console.name)
this.console.name == orig(this.nest.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.feeder.console.stateChange)
this.console.stateChange == orig(this.nest.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.feeder.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.nest.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.feeder.console.messageQueue)
this.console.messageQueue == orig(this.nest.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.feeder.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.nest.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
return == orig(this.nest.lane.name)
this.feeder != null
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.gantryGraphics != null
this.feeder.gantry.agentThread has only one value
this.feeder.gantry.agentThread != null
this.feeder.feederGUI != null
this.feeder.agentThread != null
this.nest != null
this.nest.lane != null
this.nest.lane.agentThread == null
this.nest.camera has only one value
this.nest.camera != null
this.laneGUI != null
this.agentThread == null
this.console has only one value
this.console != null
return != null
===========================================================================
agent.LaneAgent.pickAndExecuteAnAction():::ENTER
this == this.nest.lane
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.feeder.gantry.console == this.console
this.nest.camera.console == this.console
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.agentThread has only one value
this.nest.camera has only one value
this.console has only one value
===========================================================================
agent.LaneAgent.pickAndExecuteAnAction():::EXIT232
===========================================================================
agent.LaneAgent.pickAndExecuteAnAction():::EXIT232;condition="not(return == true)"
===========================================================================
agent.LaneAgent.pickAndExecuteAnAction():::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.nest.lane.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.binList.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.feeders.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.camera.nests.getClass().getName())
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.nest.lane.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.currentType == orig(this.currentType)
this.topLimit == orig(this.topLimit)
this.topLimit == orig(this.nest.lane.topLimit)
this.lowerThreshold == orig(this.lowerThreshold)
this.lowerThreshold == orig(this.nest.lane.lowerThreshold)
this.extraRequestCount == orig(this.extraRequestCount)
this.extraRequestCount == orig(this.nest.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.FILLING == orig(this.nest.lane.state)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.name == orig(this.name)
this.name == orig(this.nest.lane.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.animation == orig(this.nest.lane.animation)
this.feeder == orig(this.feeder)
this.feeder == orig(this.nest.lane.feeder)
this.feeder.gantry == orig(this.feeder.gantry)
this.feeder.gantry.binList == orig(this.feeder.gantry.binList)
this.feeder.gantry.binList[] == orig(this.feeder.gantry.binList[])
this.feeder.gantry.feeders == orig(this.feeder.gantry.feeders)
this.feeder.gantry.feeders[] == orig(this.feeder.gantry.feeders[])
this.feeder.gantry.gantryGraphics == orig(this.feeder.gantry.gantryGraphics)
this.feeder.gantry.gantryGraphics.getClass().getName() == orig(this.feeder.gantry.gantryGraphics.getClass().getName())
this.feeder.gantry.name == orig(this.feeder.gantry.name)
this.feeder.gantry.name.toString == orig(this.feeder.gantry.name.toString)
this.feeder.gantry.animation == orig(this.feeder.gantry.animation)
this.feeder.gantry.stateChange == orig(this.feeder.gantry.stateChange)
this.feeder.gantry.agentThread == orig(this.feeder.gantry.agentThread)
this.feeder.gantry.console == this.console
this.feeder.lanes == orig(this.feeder.lanes)
this.feeder.lanes[] == orig(this.feeder.lanes[])
this.feeder.feederGUI == orig(this.feeder.feederGUI)
this.feeder.feederGUI.getClass().getName() == orig(this.feeder.feederGUI.getClass().getName())
this.feeder.currentOrientation == orig(this.feeder.currentOrientation)
this.feeder.bin == orig(this.feeder.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.feeder.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.feeder.name == orig(this.feeder.name)
this.feeder.name.toString == orig(this.feeder.name.toString)
this.feeder.animation == orig(this.feeder.animation)
this.feeder.stateChange == orig(this.feeder.stateChange)
this.feeder.agentThread == orig(this.feeder.agentThread)
this.feeder.agentThread.goOn == orig(this.feeder.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.feeder.console.name.toString == orig(this.feeder.console.name.toString)
this.nest == orig(this.nest)
this.nest == orig(this.nest.lane.nest)
this.nest.requestList == orig(this.nest.requestList)
this.nest.requestList[] == orig(this.nest.requestList[])
this.nest.currentPartType == orig(this.nest.currentPartType)
this.nest.currentParts == orig(this.nest.currentParts)
this.nest.currentParts[] == orig(this.nest.currentParts[])
this.nest.count == orig(this.nest.count)
this.nest.countRequest == orig(this.nest.countRequest)
this.nest.full == orig(this.nest.full)
this.nest.takingParts == orig(this.nest.takingParts)
this.nest.partReady == orig(this.nest.partReady)
this.nest.partTypeNull == orig(this.nest.partTypeNull)
this.nest.nestGraphics == orig(this.nest.nestGraphics)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(this.nest.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.nest.animation == orig(this.nest.animation)
this.nest.name == orig(this.nest.name)
this.nest.name.toString == orig(this.nest.name.toString)
this.nest.lane == orig(this)
this.nest.lane == orig(this.nest.lane)
this.nest.lane.requestList[] == orig(this.nest.lane.requestList[])
this.nest.lane.currentParts[] == orig(this.nest.lane.currentParts[])
this.nest.lane.currentType == orig(this.nest.lane.currentType)
this.nest.lane.name.toString == orig(this.nest.lane.name.toString)
this.nest.lane.agentThread == orig(this.nest.lane.agentThread)
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.nest.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.nest.camera == orig(this.nest.camera)
this.nest.camera.name == orig(this.nest.camera.name)
this.nest.camera.name.toString == orig(this.nest.camera.name.toString)
this.nest.camera.nests == orig(this.nest.camera.nests)
this.nest.camera.nests[] == orig(this.nest.camera.nests[])
this.nest.camera.mk == orig(this.nest.camera.mk)
this.nest.camera.guiCamera == orig(this.nest.camera.guiCamera)
this.nest.camera.guiCamera.getClass().getName() == orig(this.nest.camera.guiCamera.getClass().getName())
this.nest.camera.timer == orig(this.nest.camera.timer)
this.nest.camera.kitRobot == orig(this.nest.camera.kitRobot)
this.nest.camera.partRobot == orig(this.nest.camera.partRobot)
this.nest.camera.animation == orig(this.nest.camera.animation)
this.nest.camera.stateChange == orig(this.nest.camera.stateChange)
this.nest.camera.agentThread == orig(this.nest.camera.agentThread)
this.nest.camera.console == this.console
this.nest.stateChange == orig(this.nest.stateChange)
this.nest.agentThread == orig(this.nest.agentThread)
this.nest.console.name.toString == orig(this.nest.console.name.toString)
this.laneGUI == orig(this.nest.lane.laneGUI)
this.laneGUI == orig(this.laneGUI)
this.laneGUI.getClass().getName() == orig(this.nest.lane.laneGUI.getClass().getName())
this.laneGUI.getClass().getName() == orig(this.laneGUI.getClass().getName())
this.stateChange == orig(this.nest.lane.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.feeder.gantry.console)
this.console == orig(this.feeder.console)
this.console == orig(this.nest.lane.console)
this.console == orig(this.nest.camera.console)
this.console == orig(this.nest.console)
this.console == orig(this.console)
this.console.name == orig(this.feeder.console.name)
this.console.name == orig(this.nest.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.feeder.console.stateChange)
this.console.stateChange == orig(this.nest.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.feeder.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.nest.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.feeder.console.messageQueue)
this.console.messageQueue == orig(this.nest.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.feeder.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.nest.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.agentThread has only one value
this.nest.camera has only one value
this.console has only one value
return == false
===========================================================================
agent.LaneAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.LaneAgent.setFeeder(agent.FeederAgent):::ENTER
this.requestList.getClass().getName() == arg0.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == arg0.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == arg0.lanes.getClass().getName()
agent.FeederAgent$FeederStatus.IDLE == arg0.state
this.console == arg0.gantry.console
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.feeder == null
this.nest == null
this.laneGUI == null
this.agentThread == null
this.console has only one value
arg0.gantry has only one value
arg0.gantry.binList has only one value
arg0.gantry.binList[] == []
arg0.gantry.binList[].getClass().getName() == []
arg0.gantry.feeders has only one value
arg0.gantry.feeders[] contains no nulls and has only one value, of length 4
arg0.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
arg0.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantry.gantryGraphics == null
arg0.gantry.name has only one value
arg0.gantry.name.toString == "GantryRobot"
arg0.gantry.animation has only one value
arg0.gantry.stateChange has only one value
arg0.gantry.agentThread == null
arg0.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feederGUI == null
arg0.currentOrientation == 0
arg0.bin == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.gantry.feeders[]) == 4
size(arg0.lanes[]) == 2
===========================================================================
agent.LaneAgent.setFeeder(agent.FeederAgent):::EXIT
this.requestList == orig(this.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == arg0.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == arg0.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == arg0.lanes.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.gantry.binList.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.gantry.feeders.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.lanes.getClass().getName())
this.currentParts == orig(this.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.currentType == orig(this.currentType)
this.topLimit == orig(this.topLimit)
this.lowerThreshold == orig(this.lowerThreshold)
this.extraRequestCount == orig(this.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.feeder == orig(arg0)
this.feeder.gantry == arg0.gantry
this.feeder.gantry.binList == arg0.gantry.binList
this.feeder.gantry.feeders == arg0.gantry.feeders
this.feeder.gantry.name == arg0.gantry.name
this.feeder.gantry.animation == arg0.gantry.animation
this.feeder.gantry.stateChange == arg0.gantry.stateChange
this.feeder.gantry.console == this.console
this.feeder.lanes == arg0.lanes
this.feeder.currentOrientation == arg0.currentOrientation
agent.FeederAgent$FeederStatus.IDLE == arg0.state
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.IDLE == orig(arg0.state)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.feeder.name == arg0.name
this.feeder.animation == arg0.animation
this.feeder.stateChange == arg0.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.nest == orig(this.nest)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.laneGUI == orig(this.laneGUI)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.gantry.console
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.gantry.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.gantry == orig(arg0.gantry)
arg0.gantry.binList == orig(arg0.gantry.binList)
arg0.gantry.binList[] == orig(arg0.gantry.binList[])
arg0.gantry.feeders == orig(arg0.gantry.feeders)
arg0.gantry.feeders[] == orig(arg0.gantry.feeders[])
arg0.gantry.gantryGraphics == orig(arg0.gantry.gantryGraphics)
arg0.gantry.name == orig(arg0.gantry.name)
arg0.gantry.name.toString == orig(arg0.gantry.name.toString)
arg0.gantry.animation == orig(arg0.gantry.animation)
arg0.gantry.stateChange == orig(arg0.gantry.stateChange)
arg0.gantry.agentThread == orig(arg0.gantry.agentThread)
arg0.lanes == orig(arg0.lanes)
arg0.lanes[] == orig(arg0.lanes[])
arg0.feederGUI == orig(arg0.feederGUI)
arg0.currentOrientation == orig(arg0.currentOrientation)
arg0.bin == orig(arg0.bin)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.animation == orig(arg0.animation)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.feeder.gantry.gantryGraphics == null
this.feeder.gantry.agentThread == null
this.feeder.feederGUI == null
this.feeder.agentThread == null
this.nest == null
this.laneGUI == null
this.agentThread == null
this.console has only one value
arg0.gantry has only one value
arg0.gantry.binList has only one value
arg0.gantry.binList[] == []
arg0.gantry.binList[].getClass().getName() == []
arg0.gantry.feeders has only one value
arg0.gantry.feeders[] contains no nulls and has only one value, of length 4
arg0.gantry.feeders[].getClass().getName() == [agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder, agent.GantryAgent.MyFeeder]
arg0.gantry.feeders[].getClass().getName() elements == agent.GantryAgent.MyFeeder.class
arg0.gantry.gantryGraphics == null
arg0.gantry.name has only one value
arg0.gantry.name.toString == "GantryRobot"
arg0.gantry.animation has only one value
arg0.gantry.stateChange has only one value
arg0.gantry.agentThread == null
arg0.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feederGUI == null
arg0.currentOrientation == 0
arg0.bin == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.gantry.feeders[]) == 4
size(arg0.lanes[]) == 2
===========================================================================
agent.LaneAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this == this.nest.lane
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.feeder.gantry.console == this.console
this.nest.camera.console == this.console
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.agentThread has only one value
this.nest.lane.agentThread == null
this.nest.camera has only one value
this.laneGUI == null
this.agentThread == null
this.console has only one value
arg0.getClass().getName() == DeviceGraphics.LaneGraphics.class
this.requestList.getClass().getName() != arg0.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != arg0.getClass().getName()
this.feeder.gantry.gantryGraphics.getClass().getName() != arg0.getClass().getName()
this.feeder.feederGUI.getClass().getName() != arg0.getClass().getName()
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() != arg0.getClass().getName()
agent.Agent.this.getClass().getName() != arg0.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != arg0.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != arg0.getClass().getName()
this.nest.camera.guiCamera.getClass().getName() != arg0.getClass().getName()
this.console.messageQueue.getClass().getName() != arg0.getClass().getName()
===========================================================================
agent.LaneAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.nest.lane.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.nest.camera.nests.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.binList.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.feeders.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.nest.camera.nests.getClass().getName())
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.nest.lane.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.currentType == orig(this.currentType)
this.topLimit == orig(this.topLimit)
this.topLimit == orig(this.nest.lane.topLimit)
this.lowerThreshold == orig(this.lowerThreshold)
this.lowerThreshold == orig(this.nest.lane.lowerThreshold)
this.extraRequestCount == orig(this.extraRequestCount)
this.extraRequestCount == orig(this.nest.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.FILLING == orig(this.nest.lane.state)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.name == orig(this.name)
this.name == orig(this.nest.lane.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.animation == orig(this.nest.lane.animation)
this.feeder == orig(this.feeder)
this.feeder == orig(this.nest.lane.feeder)
this.feeder.gantry == orig(this.feeder.gantry)
this.feeder.gantry.binList == orig(this.feeder.gantry.binList)
this.feeder.gantry.binList[] == orig(this.feeder.gantry.binList[])
this.feeder.gantry.feeders == orig(this.feeder.gantry.feeders)
this.feeder.gantry.feeders[] == orig(this.feeder.gantry.feeders[])
this.feeder.gantry.gantryGraphics == orig(this.feeder.gantry.gantryGraphics)
this.feeder.gantry.gantryGraphics.getClass().getName() == orig(this.feeder.gantry.gantryGraphics.getClass().getName())
this.feeder.gantry.name == orig(this.feeder.gantry.name)
this.feeder.gantry.name.toString == orig(this.feeder.gantry.name.toString)
this.feeder.gantry.animation == orig(this.feeder.gantry.animation)
this.feeder.gantry.stateChange == orig(this.feeder.gantry.stateChange)
this.feeder.gantry.agentThread == orig(this.feeder.gantry.agentThread)
this.feeder.gantry.console == this.console
this.feeder.lanes == orig(this.feeder.lanes)
this.feeder.lanes[] == orig(this.feeder.lanes[])
this.feeder.feederGUI == orig(this.feeder.feederGUI)
this.feeder.feederGUI.getClass().getName() == orig(this.feeder.feederGUI.getClass().getName())
this.feeder.currentOrientation == orig(this.feeder.currentOrientation)
this.feeder.bin == orig(this.feeder.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.feeder.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.feeder.name == orig(this.feeder.name)
this.feeder.name.toString == orig(this.feeder.name.toString)
this.feeder.animation == orig(this.feeder.animation)
this.feeder.stateChange == orig(this.feeder.stateChange)
this.feeder.agentThread == orig(this.feeder.agentThread)
this.feeder.agentThread.goOn == orig(this.feeder.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.feeder.console.name.toString == orig(this.feeder.console.name.toString)
this.nest == orig(this.nest)
this.nest == orig(this.nest.lane.nest)
this.nest.requestList == orig(this.nest.requestList)
this.nest.requestList[] == orig(this.nest.requestList[])
this.nest.currentPartType == orig(this.nest.currentPartType)
this.nest.currentParts == orig(this.nest.currentParts)
this.nest.currentParts[] == orig(this.nest.currentParts[])
this.nest.count == orig(this.nest.count)
this.nest.countRequest == orig(this.nest.countRequest)
this.nest.full == orig(this.nest.full)
this.nest.takingParts == orig(this.nest.takingParts)
this.nest.partReady == orig(this.nest.partReady)
this.nest.partTypeNull == orig(this.nest.partTypeNull)
this.nest.nestGraphics == orig(this.nest.nestGraphics)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(this.nest.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.nest.animation == orig(this.nest.animation)
this.nest.name == orig(this.nest.name)
this.nest.name.toString == orig(this.nest.name.toString)
this.nest.lane == orig(this)
this.nest.lane == orig(this.nest.lane)
this.nest.lane.requestList[] == orig(this.nest.lane.requestList[])
this.nest.lane.currentParts[] == orig(this.nest.lane.currentParts[])
this.nest.lane.currentType == orig(this.nest.lane.currentType)
this.nest.lane.name.toString == orig(this.nest.lane.name.toString)
this.nest.lane.agentThread == orig(this.nest.lane.agentThread)
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.nest.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.nest.camera == orig(this.nest.camera)
this.nest.camera.name == orig(this.nest.camera.name)
this.nest.camera.name.toString == orig(this.nest.camera.name.toString)
this.nest.camera.nests == orig(this.nest.camera.nests)
this.nest.camera.nests[] == orig(this.nest.camera.nests[])
this.nest.camera.mk == orig(this.nest.camera.mk)
this.nest.camera.guiCamera == orig(this.nest.camera.guiCamera)
this.nest.camera.guiCamera.getClass().getName() == orig(this.nest.camera.guiCamera.getClass().getName())
this.nest.camera.timer == orig(this.nest.camera.timer)
this.nest.camera.kitRobot == orig(this.nest.camera.kitRobot)
this.nest.camera.partRobot == orig(this.nest.camera.partRobot)
this.nest.camera.animation == orig(this.nest.camera.animation)
this.nest.camera.stateChange == orig(this.nest.camera.stateChange)
this.nest.camera.agentThread == orig(this.nest.camera.agentThread)
this.nest.camera.console == this.console
this.nest.stateChange == orig(this.nest.stateChange)
this.nest.agentThread == orig(this.nest.agentThread)
this.nest.console.name.toString == orig(this.nest.console.name.toString)
this.laneGUI.getClass().getName() == orig(arg0.getClass().getName())
this.stateChange == orig(this.nest.lane.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.feeder.gantry.console)
this.console == orig(this.feeder.console)
this.console == orig(this.nest.lane.console)
this.console == orig(this.nest.camera.console)
this.console == orig(this.nest.console)
this.console == orig(this.console)
this.console.name == orig(this.feeder.console.name)
this.console.name == orig(this.nest.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.feeder.console.stateChange)
this.console.stateChange == orig(this.nest.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.feeder.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.nest.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.feeder.console.messageQueue)
this.console.messageQueue == orig(this.nest.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.feeder.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.nest.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.feeder.gantry.gantryGraphics has only one value
this.feeder.gantry.agentThread has only one value
this.nest.lane.agentThread == null
this.nest.camera has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.LaneAgent.setNest(agent.NestAgent):::ENTER
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == arg0.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.currentParts.getClass().getName()
this.feeder.gantry.console == this.console
agent.NestAgent$NestState.DONE_PURGING == arg0.state
agent.NestAgent$LaneState.READY == arg0.laneState
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.feeder.gantry.gantryGraphics == null
this.feeder.gantry.agentThread == null
this.feeder.feederGUI == null
this.feeder.agentThread == null
this.nest == null
this.laneGUI == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentPartType == null
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.count == 0
arg0.countRequest == 0
arg0.full == 8
arg0.takingParts == false
arg0.partReady == false
arg0.partTypeNull == false
arg0.nestGraphics == null
arg0.lane == null
arg0.camera == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
===========================================================================
agent.LaneAgent.setNest(agent.NestAgent):::EXIT
this.requestList == orig(this.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.feeder.gantry.binList.getClass().getName()
this.requestList.getClass().getName() == this.feeder.gantry.feeders.getClass().getName()
this.requestList.getClass().getName() == this.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.currentParts.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.binList.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.gantry.feeders.getClass().getName())
this.requestList.getClass().getName() == orig(this.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.currentParts.getClass().getName())
this.currentParts == orig(this.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.currentType == orig(this.currentType)
this.topLimit == orig(this.topLimit)
this.lowerThreshold == orig(this.lowerThreshold)
this.extraRequestCount == orig(this.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.animation == orig(this.animation)
this.feeder == orig(this.feeder)
this.feeder.gantry == orig(this.feeder.gantry)
this.feeder.gantry.binList == orig(this.feeder.gantry.binList)
this.feeder.gantry.binList[] == orig(this.feeder.gantry.binList[])
this.feeder.gantry.feeders == orig(this.feeder.gantry.feeders)
this.feeder.gantry.feeders[] == orig(this.feeder.gantry.feeders[])
this.feeder.gantry.gantryGraphics == orig(this.feeder.gantry.gantryGraphics)
this.feeder.gantry.name == orig(this.feeder.gantry.name)
this.feeder.gantry.name.toString == orig(this.feeder.gantry.name.toString)
this.feeder.gantry.animation == orig(this.feeder.gantry.animation)
this.feeder.gantry.stateChange == orig(this.feeder.gantry.stateChange)
this.feeder.gantry.agentThread == orig(this.feeder.gantry.agentThread)
this.feeder.gantry.console == this.console
this.feeder.lanes == orig(this.feeder.lanes)
this.feeder.lanes[] == orig(this.feeder.lanes[])
this.feeder.feederGUI == orig(this.feeder.feederGUI)
this.feeder.currentOrientation == orig(this.feeder.currentOrientation)
this.feeder.bin == orig(this.feeder.bin)
agent.FeederAgent$FeederStatus.IDLE == orig(this.feeder.state)
agent.FeederAgent$FeederStatus.IDLE == orig(agent.FeederAgent$FeederStatus.IDLE)
agent.FeederAgent$FeederStatus.REQUESTED_PARTS == orig(agent.FeederAgent$FeederStatus.REQUESTED_PARTS)
agent.FeederAgent$FeederStatus.FEEDING_PARTS == orig(agent.FeederAgent$FeederStatus.FEEDING_PARTS)
agent.FeederAgent$FeederStatus.PURGING == orig(agent.FeederAgent$FeederStatus.PURGING)
agent.FeederAgent$FeederStatus.REMOVING_BIN == orig(agent.FeederAgent$FeederStatus.REMOVING_BIN)
agent.FeederAgent$FeederStatus.RECEIVING_BIN == orig(agent.FeederAgent$FeederStatus.RECEIVING_BIN)
agent.FeederAgent$FeederStatus.$VALUES == orig(agent.FeederAgent$FeederStatus.$VALUES)
agent.FeederAgent$FeederStatus.$VALUES.getClass().getName() == orig(agent.FeederAgent$FeederStatus.$VALUES.getClass().getName())
agent.FeederAgent$FeederStatus.$VALUES[] == orig(agent.FeederAgent$FeederStatus.$VALUES[])
this.feeder.name == orig(this.feeder.name)
this.feeder.name.toString == orig(this.feeder.name.toString)
this.feeder.animation == orig(this.feeder.animation)
this.feeder.stateChange == orig(this.feeder.stateChange)
this.feeder.agentThread == orig(this.feeder.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.feeder.console.name.toString == orig(this.feeder.console.name.toString)
this.nest == orig(arg0)
this.nest.requestList == arg0.requestList
this.nest.currentParts == arg0.currentParts
this.nest.count == arg0.count
this.nest.countRequest == arg0.countRequest
this.nest.full == arg0.full
this.nest.takingParts == arg0.takingParts
this.nest.partReady == arg0.partReady
this.nest.partTypeNull == arg0.partTypeNull
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == arg0.state
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.DONE_PURGING == orig(arg0.state)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.nest.animation == arg0.animation
this.nest.name == arg0.name
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == arg0.laneState
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.READY == orig(arg0.laneState)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.nest.stateChange == arg0.stateChange
this.laneGUI == orig(this.laneGUI)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == orig(this.feeder.gantry.console)
this.console == orig(this.feeder.console)
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.feeder.console.name)
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.feeder.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.feeder.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.feeder.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.feeder.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.requestList == orig(arg0.requestList)
arg0.requestList[] == orig(arg0.requestList[])
arg0.currentPartType == orig(arg0.currentPartType)
arg0.currentParts == orig(arg0.currentParts)
arg0.currentParts[] == orig(arg0.currentParts[])
arg0.count == orig(arg0.count)
arg0.countRequest == orig(arg0.countRequest)
arg0.full == orig(arg0.full)
arg0.takingParts == orig(arg0.takingParts)
arg0.partReady == orig(arg0.partReady)
arg0.partTypeNull == orig(arg0.partTypeNull)
arg0.nestGraphics == orig(arg0.nestGraphics)
arg0.animation == orig(arg0.animation)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.lane == orig(arg0.lane)
arg0.camera == orig(arg0.camera)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.feeder.gantry.gantryGraphics == null
this.feeder.gantry.agentThread == null
this.feeder.feederGUI == null
this.feeder.agentThread == null
this.nest.lane == null
this.nest.camera == null
this.laneGUI == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentPartType == null
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.count == 0
arg0.countRequest == 0
arg0.full == 8
arg0.takingParts == false
arg0.partReady == false
arg0.partTypeNull == false
arg0.nestGraphics == null
arg0.lane == null
arg0.camera == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
===========================================================================
agent.NestAgent$LaneState:::OBJECT
===========================================================================
agent.NestAgent$LaneState.LaneState(java.lang.String, int):::ENTER
arg0.toString one of { "PURGING", "READY" }
arg1 one of { 0, 1 }
===========================================================================
agent.NestAgent$LaneState.LaneState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "PURGING", "READY" }
===========================================================================
agent.NestAgent$NestState:::OBJECT
===========================================================================
agent.NestAgent$NestState.NestState(java.lang.String, int):::ENTER
===========================================================================
agent.NestAgent$NestState.NestState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.NestAgent:::OBJECT
this == this.lane.nest
this.requestList == this.lane.nest.requestList
this.requestList.getClass().getName() == this.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.requestList.getClass().getName()
this.requestList.getClass().getName() == this.camera.nests.getClass().getName()
this.requestList.getClass().getName() == this.camera.kitRobot.myKits.getClass().getName()
this.currentParts == this.lane.nest.currentParts
this.count == this.lane.nest.count
this.countRequest == this.lane.nest.countRequest
this.full == this.lane.nest.full
this.takingParts == this.lane.nest.takingParts
this.partReady == this.lane.nest.partReady
this.partTypeNull == this.lane.nest.partTypeNull
this.nestGraphics == this.lane.nest.nestGraphics
this.nestGraphics.getClass().getName() == this.lane.nest.nestGraphics.getClass().getName()
this.state == this.lane.nest.state
this.animation == this.lane.nest.animation
this.name == this.lane.nest.name
this.lane == this.lane.nest.lane
this.lane.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.lane.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.lane.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.lane.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.lane.requestList.getClass().getName() == this.camera.nests.getClass().getName()
this.lane.requestList.getClass().getName() == this.camera.kitRobot.myKits.getClass().getName()
this.lane.state == agent.LaneAgent$LaneStatus.FILLING
this.lane.feeder.console == this.lane.console
this.lane.nest.laneState == this.laneState
this.lane.nest.camera == this.camera
this.lane.nest.stateChange == this.stateChange
this.lane.nest.console == this.lane.console
this.lane.console == this.camera.kitRobot.console
this.lane.console == this.camera.console
this.lane.console == this.console
this.lane.console == Utils.ConsoleWriter.this
this.lane.console.name == this.camera.console.name
this.lane.console.name == this.console.name
this.lane.console.stateChange == this.camera.console.stateChange
this.lane.console.stateChange == this.console.stateChange
this.lane.console.consoleWriterThread == this.camera.console.consoleWriterThread
this.lane.console.consoleWriterThread == this.console.consoleWriterThread
this.lane.console.messageQueue == this.camera.console.messageQueue
this.lane.console.messageQueue == this.console.messageQueue
this.lane.console.messageQueue.getClass().getName() == this.camera.console.messageQueue.getClass().getName()
this.lane.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.camera.nests.getClass().getName() == this.camera.kitRobot.myKits.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.camera.kitRobot.stand == this.camera.partRobot.stand
this.camera.kitRobot.stand.getClass().getName() == this.camera.partRobot.stand.getClass().getName()
this.camera.kitRobot.console == this.camera.partRobot.console
this.camera.kitRobot.console == this.camera.console
this.camera.kitRobot.console == this.console
this.camera.kitRobot.console == Utils.ConsoleWriter.this
this.camera.console == this.console
this.camera.console == Utils.ConsoleWriter.this
this.camera.console.name == this.console.name
this.camera.console.stateChange == this.console.stateChange
this.camera.console.consoleWriterThread == this.console.consoleWriterThread
this.camera.console.messageQueue == this.console.messageQueue
this.camera.console.messageQueue.getClass().getName() == this.console.messageQueue.getClass().getName()
this.console == Utils.ConsoleWriter.this
this.requestList != null
this.requestList[] == []
this.requestList[].getClass().getName() == []
this.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.currentPartType == null
this.currentParts != null
this.currentParts[] == []
this.currentParts[].getClass().getName() == []
this.count == 0
this.countRequest == 0
this.full == 8
this.takingParts == false
this.partReady == false
this.partTypeNull == false
this.nestGraphics.getClass().getName() == DeviceGraphics.NestGraphics.class
this.state has only one value
this.state != null
agent.NestAgent$NestState.PURGING has only one value
agent.NestAgent$NestState.PURGING != null
agent.NestAgent$NestState.PRIORITY_PURGE has only one value
agent.NestAgent$NestState.PRIORITY_PURGE != null
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE has only one value
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE != null
agent.NestAgent$NestState.DONE_PURGING has only one value
agent.NestAgent$NestState.DONE_PURGING != null
agent.NestAgent$NestState.NULL has only one value
agent.NestAgent$NestState.NULL != null
agent.NestAgent$NestState.$VALUES has only one value
agent.NestAgent$NestState.$VALUES != null
agent.NestAgent$NestState.$VALUES.getClass().getName() == agent.NestAgent$NestState[].class
agent.NestAgent$NestState.$VALUES[] contains no nulls and has only one value, of length 5
agent.NestAgent$NestState.$VALUES[] elements != null
agent.NestAgent$NestState.$VALUES[].getClass().getName() == [agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState, agent.NestAgent.NestState]
agent.NestAgent$NestState.$VALUES[].getClass().getName() elements == agent.NestAgent.NestState.class
this.animation != null
this.name != null
this.lane.requestList != null
this.lane.requestList[] == []
this.lane.requestList[].getClass().getName() == []
this.lane.requestList.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.lane.currentParts != null
this.lane.currentParts[] == []
this.lane.currentParts[].getClass().getName() == []
this.lane.currentType == null
this.lane.topLimit == 5
this.lane.lowerThreshold == 3
this.lane.extraRequestCount == 0
this.lane.state has only one value
this.lane.state != null
agent.LaneAgent$LaneStatus.FILLING has only one value
agent.LaneAgent$LaneStatus.FILLING != null
agent.LaneAgent$LaneStatus.PURGING has only one value
agent.LaneAgent$LaneStatus.PURGING != null
agent.LaneAgent$LaneStatus.WAITING has only one value
agent.LaneAgent$LaneStatus.WAITING != null
agent.LaneAgent$LaneStatus.BROKEN has only one value
agent.LaneAgent$LaneStatus.BROKEN != null
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING has only one value
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING != null
agent.LaneAgent$LaneStatus.$VALUES has only one value
agent.LaneAgent$LaneStatus.$VALUES != null
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == agent.LaneAgent$LaneStatus[].class
agent.LaneAgent$LaneStatus.$VALUES[] contains no nulls and has only one value, of length 5
agent.LaneAgent$LaneStatus.$VALUES[] elements != null
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() == [agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus, agent.LaneAgent.LaneStatus]
agent.LaneAgent$LaneStatus.$VALUES[].getClass().getName() elements == agent.LaneAgent.LaneStatus.class
this.lane.name != null
this.lane.animation != null
this.lane.feeder != null
this.lane.feeder.gantry has only one value
this.lane.feeder.gantry != null
this.lane.feeder.lanes != null
this.lane.feeder.lanes[] elements != null
this.lane.feeder.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
this.lane.feeder.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
this.lane.feeder.feederGUI.getClass().getName() == DeviceGraphics.FeederGraphics.class
this.lane.feeder.currentOrientation == 0
this.lane.feeder.bin == null
this.lane.feeder.state has only one value
this.lane.feeder.state != null
this.lane.feeder.name != null
this.lane.feeder.animation != null
this.lane.feeder.stateChange != null
this.lane.nest != null
this.lane.nest.requestList != null
this.lane.nest.requestList[] == []
this.lane.nest.requestList[].getClass().getName() == []
this.lane.nest.currentPartType == null
this.lane.nest.currentParts != null
this.lane.nest.currentParts[] == []
this.lane.nest.currentParts[].getClass().getName() == []
this.lane.nest.count == 0
this.lane.nest.countRequest == 0
this.lane.nest.full == 8
this.lane.nest.takingParts == false
this.lane.nest.partReady == false
this.lane.nest.partTypeNull == false
this.lane.nest.state has only one value
this.lane.nest.state != null
this.lane.nest.animation != null
this.lane.nest.name != null
this.lane.nest.lane != null
this.lane.nest.laneState has only one value
this.lane.nest.laneState != null
this.lane.nest.stateChange != null
this.lane.laneGUI.getClass().getName() == DeviceGraphics.LaneGraphics.class
this.lane.stateChange != null
this.lane.agentThread.goOn == true
agent.Agent.this.getClass().getName() == agent.LaneAgent.class
this.lane.console has only one value
this.lane.console != null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.lane.console.name has only one value
this.lane.console.name != null
this.lane.console.name.toString == "Server"
this.lane.console.stateChange has only one value
this.lane.console.stateChange != null
this.lane.console.consoleWriterThread has only one value
this.lane.console.consoleWriterThread != null
this.lane.console.messageQueue has only one value
this.lane.console.messageQueue != null
this.lane.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.laneState has only one value
this.laneState != null
agent.NestAgent$LaneState.PURGING has only one value
agent.NestAgent$LaneState.PURGING != null
agent.NestAgent$LaneState.READY has only one value
agent.NestAgent$LaneState.READY != null
agent.NestAgent$LaneState.$VALUES has only one value
agent.NestAgent$LaneState.$VALUES != null
agent.NestAgent$LaneState.$VALUES.getClass().getName() == agent.NestAgent$LaneState[].class
agent.NestAgent$LaneState.$VALUES[] contains no nulls and has only one value, of length 2
agent.NestAgent$LaneState.$VALUES[] elements != null
agent.NestAgent$LaneState.$VALUES[].getClass().getName() == [agent.NestAgent.LaneState, agent.NestAgent.LaneState]
agent.NestAgent$LaneState.$VALUES[].getClass().getName() elements == agent.NestAgent.LaneState.class
this.camera.name has only one value
this.camera.name != null
this.camera.name.toString == "Camera"
this.camera.nests has only one value
this.camera.nests != null
this.camera.nests[] elements != null
this.camera.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
this.camera.nests.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.camera.mk == null
this.camera.guiCamera.getClass().getName() == DeviceGraphics.CameraGraphics.class
this.camera.timer has only one value
this.camera.timer != null
this.camera.kitRobot.myKits has only one value
this.camera.kitRobot.myKits != null
this.camera.kitRobot.myKits[] == []
this.camera.kitRobot.myKits[].getClass().getName() == []
this.camera.kitRobot.myKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.camera.kitRobot.standPositions has only one value
this.camera.kitRobot.standPositions != null
this.camera.kitRobot.standPositions.getClass().getName() == java.util.Collections$SynchronizedMap.class
this.camera.kitRobot.kitWaitingOnConveyor == false
this.camera.kitRobot.kitRequested == false
this.camera.kitRobot.numKitsToMake == 0
this.camera.kitRobot.numKitsRequested == 0
this.camera.kitRobot.animation has only one value
this.camera.kitRobot.animation != null
this.camera.kitRobot.stand has only one value
this.camera.kitRobot.stand != null
this.camera.kitRobot.stand.getClass().getName() == agent.StandAgent.class
this.camera.kitRobot.conveyor has only one value
this.camera.kitRobot.conveyor != null
this.camera.kitRobot.conveyor.getClass().getName() == agent.ConveyorAgent.class
this.camera.kitRobot.camera has only one value
this.camera.kitRobot.camera != null
this.camera.kitRobot.camera.getClass().getName() == agent.CameraAgent.class
this.camera.kitRobot.kitrobotGraphics has only one value
this.camera.kitRobot.kitrobotGraphics != null
this.camera.kitRobot.kitrobotGraphics.getClass().getName() == DeviceGraphics.KitRobotGraphics.class
this.camera.kitRobot.mockgraphics == null
this.camera.kitRobot.state has only one value
this.camera.kitRobot.state != null
this.camera.kitRobot.name has only one value
this.camera.kitRobot.name != null
this.camera.kitRobot.name.toString == "KitRobot"
this.camera.kitRobot.stateChange has only one value
this.camera.kitRobot.stateChange != null
this.camera.kitRobot.agentThread has only one value
this.camera.kitRobot.agentThread != null
this.camera.kitRobot.console has only one value
this.camera.kitRobot.console != null
this.camera.partRobot.name has only one value
this.camera.partRobot.name != null
this.camera.partRobot.name.toString == "PartsRobot"
this.camera.partRobot.Kitconfig == null
this.camera.partRobot.MyKits has only one value
this.camera.partRobot.MyKits != null
this.camera.partRobot.MyKits[] == []
this.camera.partRobot.MyKits[].getClass().getName() == []
this.camera.partRobot.GoodParts has only one value
this.camera.partRobot.GoodParts != null
this.camera.partRobot.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.camera.partRobot.Arms has only one value
this.camera.partRobot.Arms != null
this.camera.partRobot.Arms[] contains no nulls and has only one value, of length 4
this.camera.partRobot.Arms[] elements != null
this.camera.partRobot.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
this.camera.partRobot.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
this.camera.partRobot.time has only one value
this.camera.partRobot.time != null
this.camera.partRobot.kitsNum == 0
this.camera.partRobot.timer has only one value
this.camera.partRobot.timer != null
this.camera.partRobot.KitsOnStand == null
this.camera.partRobot.partsRobotGraphics has only one value
this.camera.partRobot.partsRobotGraphics != null
this.camera.partRobot.partsRobotGraphics.getClass().getName() == DeviceGraphics.PartsRobotGraphics.class
this.camera.partRobot.dropChance == 0.0
this.camera.partRobot.status has only one value
this.camera.partRobot.status != null
this.camera.partRobot.animation has only one value
this.camera.partRobot.animation != null
this.camera.partRobot.stateChange has only one value
this.camera.partRobot.stateChange != null
this.camera.partRobot.agentThread has only one value
this.camera.partRobot.agentThread != null
this.camera.animation has only one value
this.camera.animation != null
this.camera.stateChange has only one value
this.camera.stateChange != null
this.camera.agentThread.goOn == true
this.camera.console has only one value
this.camera.console != null
this.camera.console.name has only one value
this.camera.console.name != null
this.camera.console.name.toString == "Server"
this.camera.console.stateChange has only one value
this.camera.console.stateChange != null
this.camera.console.consoleWriterThread has only one value
this.camera.console.consoleWriterThread != null
this.camera.console.messageQueue has only one value
this.camera.console.messageQueue != null
this.camera.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this.stateChange != null
agent.Agent.this.agentThread != null
agent.Agent.this.console has only one value
agent.Agent.this.console != null
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.NestAgent$NestState.$VALUES[]) == 5
size(agent.LaneAgent$LaneStatus.$VALUES[]) == 5
size(this.lane.feeder.lanes[]) == 2
size(agent.NestAgent$LaneState.$VALUES[]) == 2
size(this.camera.partRobot.Arms[]) == 4
this.requestList.getClass().getName() != this.nestGraphics.getClass().getName()
this.requestList.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.requestList.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.requestList.getClass().getName() != this.lane.feeder.feederGUI.getClass().getName()
this.requestList.getClass().getName() != this.lane.laneGUI.getClass().getName()
this.requestList.getClass().getName() != agent.Agent.this.getClass().getName()
this.requestList.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
this.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.requestList.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.requestList.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.requestList.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.requestList.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.requestList.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.requestList.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.requestList.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.requestList.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.requestList.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.requestList.getClass().getName() != this.console.messageQueue.getClass().getName()
this.nestGraphics.getClass().getName() != agent.NestAgent$NestState.$VALUES.getClass().getName()
this.nestGraphics.getClass().getName() != this.lane.requestList.getClass().getName()
this.nestGraphics.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.nestGraphics.getClass().getName() != this.lane.feeder.feederGUI.getClass().getName()
this.nestGraphics.getClass().getName() != this.lane.laneGUI.getClass().getName()
this.nestGraphics.getClass().getName() != agent.Agent.this.getClass().getName()
this.nestGraphics.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
this.nestGraphics.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.nests.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.nestGraphics.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.nestGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.lane.requestList.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.lane.feeder.feederGUI.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.lane.laneGUI.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.Agent.this.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.nests.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.guiCamera.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.lane.requestList.getClass().getName() != agent.LaneAgent$LaneStatus.$VALUES.getClass().getName()
this.lane.requestList.getClass().getName() != this.lane.feeder.feederGUI.getClass().getName()
this.lane.requestList.getClass().getName() != this.lane.laneGUI.getClass().getName()
this.lane.requestList.getClass().getName() != agent.Agent.this.getClass().getName()
this.lane.requestList.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
this.lane.requestList.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.lane.requestList.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.lane.requestList.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.lane.feeder.feederGUI.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.lane.laneGUI.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.Agent.this.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.nests.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.guiCamera.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.lane.laneGUI.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != agent.Agent.this.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.nests.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != this.console.messageQueue.getClass().getName()
this.lane.laneGUI.getClass().getName() != agent.Agent.this.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
this.lane.laneGUI.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.nests.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.lane.laneGUI.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.lane.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.nests.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.guiCamera.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
agent.Agent.this.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
agent.Agent.this.getClass().getName() != this.console.messageQueue.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != agent.NestAgent$LaneState.$VALUES.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.nests.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.lane.console.messageQueue.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.nests.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.guiCamera.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.guiCamera.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.nests.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.nests.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.myKits.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.guiCamera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.kitRobot.standPositions.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.myKits.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.kitRobot.stand.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.kitRobot.conveyor.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.camera.kitRobot.camera.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != this.camera.kitRobot.kitrobotGraphics.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.kitRobot.kitrobotGraphics.getClass().getName() != this.camera.partRobot.GoodParts.getClass().getName()
this.camera.kitRobot.kitrobotGraphics.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.kitRobot.kitrobotGraphics.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.kitRobot.kitrobotGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.partRobot.GoodParts.getClass().getName() != this.camera.partRobot.partsRobotGraphics.getClass().getName()
this.camera.partRobot.GoodParts.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.partRobot.GoodParts.getClass().getName() != this.console.messageQueue.getClass().getName()
this.camera.partRobot.partsRobotGraphics.getClass().getName() != this.camera.console.messageQueue.getClass().getName()
this.camera.partRobot.partsRobotGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.NestAgent.NestAgent(java.lang.String):::ENTER
===========================================================================
agent.NestAgent.NestAgent(java.lang.String):::EXIT
this.state == agent.NestAgent$NestState.DONE_PURGING
this.name == orig(arg0)
this.laneState == agent.NestAgent$LaneState.READY
arg0.toString == orig(arg0.toString)
this.nestGraphics == null
this.lane == null
this.camera == null
this.agentThread == null
this.console == null
===========================================================================
agent.NestAgent.getName():::ENTER
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
this.lane.feeder.console == this.console
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.console == this.console
this.laneState == agent.NestAgent$LaneState.READY
this.camera.partRobot.console == this.console
this.nestGraphics != null
this.lane != null
this.lane.feeder.feederGUI != null
this.lane.feeder.agentThread != null
this.lane.nest.agentThread == null
this.lane.laneGUI != null
this.lane.agentThread != null
this.camera has only one value
this.camera != null
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.guiCamera != null
this.camera.kitRobot has only one value
this.camera.kitRobot != null
this.camera.partRobot has only one value
this.camera.partRobot != null
this.camera.agentThread has only one value
this.camera.agentThread != null
this.agentThread == null
this.console has only one value
this.console != null
size(this.camera.nests[]) == 8
===========================================================================
agent.NestAgent.getName():::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.lane.nest.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.nests.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.kitRobot.myKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.MyKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.Arms.getClass().getName())
this.currentPartType == orig(this.currentPartType)
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.lane.nest.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.count == orig(this.count)
this.count == orig(this.lane.nest.count)
this.countRequest == orig(this.countRequest)
this.countRequest == orig(this.lane.nest.countRequest)
this.full == orig(this.full)
this.full == orig(this.lane.nest.full)
this.takingParts == orig(this.takingParts)
this.takingParts == orig(this.lane.nest.takingParts)
this.partReady == orig(this.partReady)
this.partReady == orig(this.lane.nest.partReady)
this.partTypeNull == orig(this.partTypeNull)
this.partTypeNull == orig(this.lane.nest.partTypeNull)
this.nestGraphics == orig(this.nestGraphics)
this.nestGraphics == orig(this.lane.nest.nestGraphics)
this.nestGraphics.getClass().getName() == orig(this.nestGraphics.getClass().getName())
this.nestGraphics.getClass().getName() == orig(this.lane.nest.nestGraphics.getClass().getName())
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
agent.NestAgent$NestState.DONE_PURGING == orig(this.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.DONE_PURGING == orig(this.lane.nest.state)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.animation == orig(this.animation)
this.animation == orig(this.lane.nest.animation)
this.name == return
this.name.toString == orig(this.name.toString)
this.lane == orig(this.lane)
this.lane == orig(this.lane.nest.lane)
this.lane.requestList == orig(this.lane.requestList)
this.lane.requestList[] == orig(this.lane.requestList[])
this.lane.currentParts == orig(this.lane.currentParts)
this.lane.currentParts[] == orig(this.lane.currentParts[])
this.lane.currentType == orig(this.lane.currentType)
this.lane.topLimit == orig(this.lane.topLimit)
this.lane.lowerThreshold == orig(this.lane.lowerThreshold)
this.lane.extraRequestCount == orig(this.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.lane.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.lane.name == orig(this.lane.name)
this.lane.name.toString == orig(this.lane.name.toString)
this.lane.animation == orig(this.lane.animation)
this.lane.feeder == orig(this.lane.feeder)
this.lane.feeder.gantry == orig(this.lane.feeder.gantry)
this.lane.feeder.lanes == orig(this.lane.feeder.lanes)
this.lane.feeder.lanes[] == orig(this.lane.feeder.lanes[])
this.lane.feeder.feederGUI == orig(this.lane.feeder.feederGUI)
this.lane.feeder.feederGUI.getClass().getName() == orig(this.lane.feeder.feederGUI.getClass().getName())
this.lane.feeder.currentOrientation == orig(this.lane.feeder.currentOrientation)
this.lane.feeder.bin == orig(this.lane.feeder.bin)
this.lane.feeder.state == orig(this.lane.feeder.state)
this.lane.feeder.name == orig(this.lane.feeder.name)
this.lane.feeder.name.toString == orig(this.lane.feeder.name.toString)
this.lane.feeder.animation == orig(this.lane.feeder.animation)
this.lane.feeder.stateChange == orig(this.lane.feeder.stateChange)
this.lane.feeder.agentThread == orig(this.lane.feeder.agentThread)
this.lane.feeder.console == this.console
this.lane.nest == orig(this)
this.lane.nest == orig(this.lane.nest)
this.lane.nest.requestList[] == orig(this.lane.nest.requestList[])
this.lane.nest.currentPartType == orig(this.lane.nest.currentPartType)
this.lane.nest.currentParts[] == orig(this.lane.nest.currentParts[])
this.lane.nest.name == return
this.lane.nest.name.toString == orig(this.lane.nest.name.toString)
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.agentThread == orig(this.lane.nest.agentThread)
this.lane.nest.console == this.console
this.lane.laneGUI == orig(this.lane.laneGUI)
this.lane.laneGUI.getClass().getName() == orig(this.lane.laneGUI.getClass().getName())
this.lane.stateChange == orig(this.lane.stateChange)
this.lane.agentThread == orig(this.lane.agentThread)
this.lane.agentThread.goOn == orig(this.lane.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lane.console.name.toString == orig(this.lane.console.name.toString)
this.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.lane.nest.laneState)
agent.NestAgent$LaneState.READY == orig(this.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.camera == orig(this.lane.nest.camera)
this.camera == orig(this.camera)
this.camera.name == orig(this.camera.name)
this.camera.name.toString == orig(this.camera.name.toString)
this.camera.nests == orig(this.camera.nests)
this.camera.nests[] == orig(this.camera.nests[])
this.camera.mk == orig(this.camera.mk)
this.camera.guiCamera == orig(this.camera.guiCamera)
this.camera.guiCamera.getClass().getName() == orig(this.camera.guiCamera.getClass().getName())
this.camera.timer == orig(this.camera.timer)
this.camera.kitRobot == orig(this.camera.kitRobot)
this.camera.kitRobot.myKits == orig(this.camera.kitRobot.myKits)
this.camera.kitRobot.myKits[] == orig(this.camera.kitRobot.myKits[])
this.camera.kitRobot.standPositions == orig(this.camera.kitRobot.standPositions)
this.camera.kitRobot.standPositions.getClass().getName() == orig(this.camera.kitRobot.standPositions.getClass().getName())
this.camera.kitRobot.kitWaitingOnConveyor == orig(this.camera.kitRobot.kitWaitingOnConveyor)
this.camera.kitRobot.kitRequested == orig(this.camera.kitRobot.kitRequested)
this.camera.kitRobot.numKitsToMake == orig(this.camera.kitRobot.numKitsToMake)
this.camera.kitRobot.numKitsRequested == orig(this.camera.kitRobot.numKitsRequested)
this.camera.kitRobot.animation == orig(this.camera.kitRobot.animation)
this.camera.kitRobot.stand == orig(this.camera.kitRobot.stand)
this.camera.kitRobot.stand == orig(this.camera.partRobot.stand)
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.kitRobot.stand.getClass().getName())
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.partRobot.stand.getClass().getName())
this.camera.kitRobot.conveyor == orig(this.camera.kitRobot.conveyor)
this.camera.kitRobot.conveyor.getClass().getName() == orig(this.camera.kitRobot.conveyor.getClass().getName())
this.camera.kitRobot.camera == orig(this.camera.kitRobot.camera)
this.camera.kitRobot.camera.getClass().getName() == orig(this.camera.kitRobot.camera.getClass().getName())
this.camera.kitRobot.kitrobotGraphics == orig(this.camera.kitRobot.kitrobotGraphics)
this.camera.kitRobot.kitrobotGraphics.getClass().getName() == orig(this.camera.kitRobot.kitrobotGraphics.getClass().getName())
this.camera.kitRobot.mockgraphics == orig(this.camera.kitRobot.mockgraphics)
this.camera.kitRobot.state == orig(this.camera.kitRobot.state)
this.camera.kitRobot.name == orig(this.camera.kitRobot.name)
this.camera.kitRobot.name.toString == orig(this.camera.kitRobot.name.toString)
this.camera.kitRobot.stateChange == orig(this.camera.kitRobot.stateChange)
this.camera.kitRobot.agentThread == orig(this.camera.kitRobot.agentThread)
this.camera.partRobot == orig(this.camera.partRobot)
this.camera.partRobot.name == orig(this.camera.partRobot.name)
this.camera.partRobot.name.toString == orig(this.camera.partRobot.name.toString)
this.camera.partRobot.Kitconfig == orig(this.camera.partRobot.Kitconfig)
this.camera.partRobot.MyKits == orig(this.camera.partRobot.MyKits)
this.camera.partRobot.MyKits[] == orig(this.camera.partRobot.MyKits[])
this.camera.partRobot.GoodParts == orig(this.camera.partRobot.GoodParts)
this.camera.partRobot.GoodParts.getClass().getName() == orig(this.camera.partRobot.GoodParts.getClass().getName())
this.camera.partRobot.Arms == orig(this.camera.partRobot.Arms)
this.camera.partRobot.Arms[] == orig(this.camera.partRobot.Arms[])
this.camera.partRobot.time == orig(this.camera.partRobot.time)
this.camera.partRobot.kitsNum == orig(this.camera.partRobot.kitsNum)
this.camera.partRobot.timer == orig(this.camera.partRobot.timer)
this.camera.partRobot.KitsOnStand == orig(this.camera.partRobot.KitsOnStand)
this.camera.partRobot.partsRobotGraphics == orig(this.camera.partRobot.partsRobotGraphics)
this.camera.partRobot.partsRobotGraphics.getClass().getName() == orig(this.camera.partRobot.partsRobotGraphics.getClass().getName())
this.camera.partRobot.dropChance == orig(this.camera.partRobot.dropChance)
this.camera.partRobot.status == orig(this.camera.partRobot.status)
this.camera.partRobot.animation == orig(this.camera.partRobot.animation)
this.camera.partRobot.stateChange == orig(this.camera.partRobot.stateChange)
this.camera.partRobot.agentThread == orig(this.camera.partRobot.agentThread)
this.camera.partRobot.console == this.console
this.camera.animation == orig(this.camera.animation)
this.camera.stateChange == orig(this.camera.stateChange)
this.camera.agentThread == orig(this.camera.agentThread)
this.camera.agentThread.goOn == orig(this.camera.agentThread.goOn)
this.camera.console.name.toString == orig(this.camera.console.name.toString)
this.stateChange == orig(this.lane.nest.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.lane.feeder.console)
this.console == orig(this.lane.nest.console)
this.console == orig(this.lane.console)
this.console == orig(this.camera.kitRobot.console)
this.console == orig(this.camera.partRobot.console)
this.console == orig(this.camera.console)
this.console == orig(this.console)
this.console.name == orig(this.lane.console.name)
this.console.name == orig(this.camera.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.lane.console.stateChange)
this.console.stateChange == orig(this.camera.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.lane.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.camera.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.lane.console.messageQueue)
this.console.messageQueue == orig(this.camera.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.lane.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.camera.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
return == orig(this.lane.nest.name)
this.nestGraphics != null
this.lane != null
this.lane.feeder.feederGUI != null
this.lane.feeder.agentThread != null
this.lane.nest.agentThread == null
this.lane.laneGUI != null
this.lane.agentThread != null
this.camera has only one value
this.camera != null
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.guiCamera != null
this.camera.kitRobot has only one value
this.camera.kitRobot != null
this.camera.partRobot has only one value
this.camera.partRobot != null
this.camera.agentThread has only one value
this.camera.agentThread != null
this.agentThread == null
this.console has only one value
this.console != null
return != null
size(this.camera.nests[]) == 8
===========================================================================
agent.NestAgent.pickAndExecuteAnAction():::ENTER
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.lane.feeder.console == this.console
this.lane.nest.console == this.console
this.camera.partRobot.console == this.console
this.camera has only one value
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.kitRobot has only one value
this.camera.partRobot has only one value
this.camera.agentThread has only one value
this.console has only one value
size(this.camera.nests[]) == 8
===========================================================================
agent.NestAgent.pickAndExecuteAnAction():::EXIT237
===========================================================================
agent.NestAgent.pickAndExecuteAnAction():::EXIT237;condition="not(return == true)"
===========================================================================
agent.NestAgent.pickAndExecuteAnAction():::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.lane.nest.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.nests.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.kitRobot.myKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.MyKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.Arms.getClass().getName())
this.currentPartType == orig(this.currentPartType)
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.lane.nest.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.count == orig(this.count)
this.count == orig(this.lane.nest.count)
this.countRequest == orig(this.countRequest)
this.countRequest == orig(this.lane.nest.countRequest)
this.full == orig(this.full)
this.full == orig(this.lane.nest.full)
this.takingParts == orig(this.takingParts)
this.takingParts == orig(this.lane.nest.takingParts)
this.partReady == orig(this.partReady)
this.partReady == orig(this.lane.nest.partReady)
this.partTypeNull == orig(this.partTypeNull)
this.partTypeNull == orig(this.lane.nest.partTypeNull)
this.nestGraphics == orig(this.nestGraphics)
this.nestGraphics == orig(this.lane.nest.nestGraphics)
this.nestGraphics.getClass().getName() == orig(this.nestGraphics.getClass().getName())
this.nestGraphics.getClass().getName() == orig(this.lane.nest.nestGraphics.getClass().getName())
this.state == orig(this.state)
this.state == orig(this.lane.nest.state)
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.animation == orig(this.animation)
this.animation == orig(this.lane.nest.animation)
this.name == orig(this.name)
this.name == orig(this.lane.nest.name)
this.name.toString == orig(this.name.toString)
this.lane == orig(this.lane)
this.lane == orig(this.lane.nest.lane)
this.lane.requestList == orig(this.lane.requestList)
this.lane.requestList[] == orig(this.lane.requestList[])
this.lane.currentParts == orig(this.lane.currentParts)
this.lane.currentParts[] == orig(this.lane.currentParts[])
this.lane.currentType == orig(this.lane.currentType)
this.lane.topLimit == orig(this.lane.topLimit)
this.lane.lowerThreshold == orig(this.lane.lowerThreshold)
this.lane.extraRequestCount == orig(this.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.lane.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.lane.name == orig(this.lane.name)
this.lane.name.toString == orig(this.lane.name.toString)
this.lane.animation == orig(this.lane.animation)
this.lane.feeder == orig(this.lane.feeder)
this.lane.feeder.gantry == orig(this.lane.feeder.gantry)
this.lane.feeder.lanes == orig(this.lane.feeder.lanes)
this.lane.feeder.lanes[] == orig(this.lane.feeder.lanes[])
this.lane.feeder.feederGUI == orig(this.lane.feeder.feederGUI)
this.lane.feeder.feederGUI.getClass().getName() == orig(this.lane.feeder.feederGUI.getClass().getName())
this.lane.feeder.currentOrientation == orig(this.lane.feeder.currentOrientation)
this.lane.feeder.bin == orig(this.lane.feeder.bin)
this.lane.feeder.state == orig(this.lane.feeder.state)
this.lane.feeder.name == orig(this.lane.feeder.name)
this.lane.feeder.name.toString == orig(this.lane.feeder.name.toString)
this.lane.feeder.animation == orig(this.lane.feeder.animation)
this.lane.feeder.stateChange == orig(this.lane.feeder.stateChange)
this.lane.feeder.agentThread == orig(this.lane.feeder.agentThread)
this.lane.feeder.console == this.console
this.lane.nest == orig(this)
this.lane.nest == orig(this.lane.nest)
this.lane.nest.requestList[] == orig(this.lane.nest.requestList[])
this.lane.nest.currentPartType == orig(this.lane.nest.currentPartType)
this.lane.nest.currentParts[] == orig(this.lane.nest.currentParts[])
this.lane.nest.name.toString == orig(this.lane.nest.name.toString)
this.lane.nest.agentThread == orig(this.lane.nest.agentThread)
this.lane.nest.console == this.console
this.lane.laneGUI == orig(this.lane.laneGUI)
this.lane.laneGUI.getClass().getName() == orig(this.lane.laneGUI.getClass().getName())
this.lane.stateChange == orig(this.lane.stateChange)
this.lane.agentThread == orig(this.lane.agentThread)
this.lane.agentThread.goOn == orig(this.lane.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lane.console.name.toString == orig(this.lane.console.name.toString)
this.laneState == orig(this.lane.nest.laneState)
this.laneState == orig(this.laneState)
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.camera == orig(this.lane.nest.camera)
this.camera == orig(this.camera)
this.camera.name == orig(this.camera.name)
this.camera.name.toString == orig(this.camera.name.toString)
this.camera.nests == orig(this.camera.nests)
this.camera.nests[] == orig(this.camera.nests[])
this.camera.mk == orig(this.camera.mk)
this.camera.guiCamera == orig(this.camera.guiCamera)
this.camera.guiCamera.getClass().getName() == orig(this.camera.guiCamera.getClass().getName())
this.camera.timer == orig(this.camera.timer)
this.camera.kitRobot == orig(this.camera.kitRobot)
this.camera.kitRobot.myKits == orig(this.camera.kitRobot.myKits)
this.camera.kitRobot.myKits[] == orig(this.camera.kitRobot.myKits[])
this.camera.kitRobot.standPositions == orig(this.camera.kitRobot.standPositions)
this.camera.kitRobot.standPositions.getClass().getName() == orig(this.camera.kitRobot.standPositions.getClass().getName())
this.camera.kitRobot.kitWaitingOnConveyor == orig(this.camera.kitRobot.kitWaitingOnConveyor)
this.camera.kitRobot.kitRequested == orig(this.camera.kitRobot.kitRequested)
this.camera.kitRobot.numKitsToMake == orig(this.camera.kitRobot.numKitsToMake)
this.camera.kitRobot.numKitsRequested == orig(this.camera.kitRobot.numKitsRequested)
this.camera.kitRobot.animation == orig(this.camera.kitRobot.animation)
this.camera.kitRobot.stand == orig(this.camera.kitRobot.stand)
this.camera.kitRobot.stand == orig(this.camera.partRobot.stand)
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.kitRobot.stand.getClass().getName())
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.partRobot.stand.getClass().getName())
this.camera.kitRobot.conveyor == orig(this.camera.kitRobot.conveyor)
this.camera.kitRobot.conveyor.getClass().getName() == orig(this.camera.kitRobot.conveyor.getClass().getName())
this.camera.kitRobot.camera == orig(this.camera.kitRobot.camera)
this.camera.kitRobot.camera.getClass().getName() == orig(this.camera.kitRobot.camera.getClass().getName())
this.camera.kitRobot.kitrobotGraphics == orig(this.camera.kitRobot.kitrobotGraphics)
this.camera.kitRobot.kitrobotGraphics.getClass().getName() == orig(this.camera.kitRobot.kitrobotGraphics.getClass().getName())
this.camera.kitRobot.mockgraphics == orig(this.camera.kitRobot.mockgraphics)
this.camera.kitRobot.state == orig(this.camera.kitRobot.state)
this.camera.kitRobot.name == orig(this.camera.kitRobot.name)
this.camera.kitRobot.name.toString == orig(this.camera.kitRobot.name.toString)
this.camera.kitRobot.stateChange == orig(this.camera.kitRobot.stateChange)
this.camera.kitRobot.agentThread == orig(this.camera.kitRobot.agentThread)
this.camera.partRobot == orig(this.camera.partRobot)
this.camera.partRobot.name == orig(this.camera.partRobot.name)
this.camera.partRobot.name.toString == orig(this.camera.partRobot.name.toString)
this.camera.partRobot.Kitconfig == orig(this.camera.partRobot.Kitconfig)
this.camera.partRobot.MyKits == orig(this.camera.partRobot.MyKits)
this.camera.partRobot.MyKits[] == orig(this.camera.partRobot.MyKits[])
this.camera.partRobot.GoodParts == orig(this.camera.partRobot.GoodParts)
this.camera.partRobot.GoodParts.getClass().getName() == orig(this.camera.partRobot.GoodParts.getClass().getName())
this.camera.partRobot.Arms == orig(this.camera.partRobot.Arms)
this.camera.partRobot.Arms[] == orig(this.camera.partRobot.Arms[])
this.camera.partRobot.time == orig(this.camera.partRobot.time)
this.camera.partRobot.kitsNum == orig(this.camera.partRobot.kitsNum)
this.camera.partRobot.timer == orig(this.camera.partRobot.timer)
this.camera.partRobot.KitsOnStand == orig(this.camera.partRobot.KitsOnStand)
this.camera.partRobot.partsRobotGraphics == orig(this.camera.partRobot.partsRobotGraphics)
this.camera.partRobot.partsRobotGraphics.getClass().getName() == orig(this.camera.partRobot.partsRobotGraphics.getClass().getName())
this.camera.partRobot.dropChance == orig(this.camera.partRobot.dropChance)
this.camera.partRobot.status == orig(this.camera.partRobot.status)
this.camera.partRobot.animation == orig(this.camera.partRobot.animation)
this.camera.partRobot.stateChange == orig(this.camera.partRobot.stateChange)
this.camera.partRobot.agentThread == orig(this.camera.partRobot.agentThread)
this.camera.partRobot.console == this.console
this.camera.animation == orig(this.camera.animation)
this.camera.stateChange == orig(this.camera.stateChange)
this.camera.agentThread == orig(this.camera.agentThread)
this.camera.agentThread.goOn == orig(this.camera.agentThread.goOn)
this.camera.console.name.toString == orig(this.camera.console.name.toString)
this.stateChange == orig(this.lane.nest.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.lane.feeder.console)
this.console == orig(this.lane.nest.console)
this.console == orig(this.lane.console)
this.console == orig(this.camera.kitRobot.console)
this.console == orig(this.camera.partRobot.console)
this.console == orig(this.camera.console)
this.console == orig(this.console)
this.console.name == orig(this.lane.console.name)
this.console.name == orig(this.camera.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.lane.console.stateChange)
this.console.stateChange == orig(this.camera.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.lane.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.camera.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.lane.console.messageQueue)
this.console.messageQueue == orig(this.camera.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.lane.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.camera.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.camera has only one value
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.kitRobot has only one value
this.camera.partRobot has only one value
this.camera.agentThread has only one value
this.console has only one value
return == false
size(this.camera.nests[]) == 8
===========================================================================
agent.NestAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.NestAgent.setCamera(agent.CameraAgent):::ENTER
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.nests.getClass().getName()
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
this.lane.feeder.console == this.console
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.console == this.console
this.laneState == agent.NestAgent$LaneState.READY
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.nestGraphics == null
this.lane.feeder.feederGUI == null
this.lane.feeder.agentThread == null
this.lane.nest.agentThread == null
this.lane.laneGUI == null
this.lane.agentThread == null
this.camera == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "Camera"
arg0.nests has only one value
arg0.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg0.mk == null
arg0.guiCamera == null
arg0.timer has only one value
arg0.kitRobot == null
arg0.partRobot == null
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
===========================================================================
agent.NestAgent.setCamera(agent.CameraAgent):::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.lane.nest.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.nests.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.nests.getClass().getName())
this.currentPartType == orig(this.currentPartType)
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.lane.nest.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.count == orig(this.count)
this.count == orig(this.lane.nest.count)
this.countRequest == orig(this.countRequest)
this.countRequest == orig(this.lane.nest.countRequest)
this.full == orig(this.full)
this.full == orig(this.lane.nest.full)
this.takingParts == orig(this.takingParts)
this.takingParts == orig(this.lane.nest.takingParts)
this.partReady == orig(this.partReady)
this.partReady == orig(this.lane.nest.partReady)
this.partTypeNull == orig(this.partTypeNull)
this.partTypeNull == orig(this.lane.nest.partTypeNull)
this.nestGraphics == orig(this.nestGraphics)
this.nestGraphics == orig(this.lane.nest.nestGraphics)
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
agent.NestAgent$NestState.DONE_PURGING == orig(this.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.DONE_PURGING == orig(this.lane.nest.state)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.animation == orig(this.animation)
this.animation == orig(this.lane.nest.animation)
this.name == orig(this.name)
this.name == orig(this.lane.nest.name)
this.name.toString == orig(this.name.toString)
this.lane == orig(this.lane)
this.lane == orig(this.lane.nest.lane)
this.lane.requestList == orig(this.lane.requestList)
this.lane.requestList[] == orig(this.lane.requestList[])
this.lane.currentParts == orig(this.lane.currentParts)
this.lane.currentParts[] == orig(this.lane.currentParts[])
this.lane.currentType == orig(this.lane.currentType)
this.lane.topLimit == orig(this.lane.topLimit)
this.lane.lowerThreshold == orig(this.lane.lowerThreshold)
this.lane.extraRequestCount == orig(this.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.lane.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.lane.name == orig(this.lane.name)
this.lane.name.toString == orig(this.lane.name.toString)
this.lane.animation == orig(this.lane.animation)
this.lane.feeder == orig(this.lane.feeder)
this.lane.feeder.gantry == orig(this.lane.feeder.gantry)
this.lane.feeder.lanes == orig(this.lane.feeder.lanes)
this.lane.feeder.lanes[] == orig(this.lane.feeder.lanes[])
this.lane.feeder.feederGUI == orig(this.lane.feeder.feederGUI)
this.lane.feeder.currentOrientation == orig(this.lane.feeder.currentOrientation)
this.lane.feeder.bin == orig(this.lane.feeder.bin)
this.lane.feeder.state == orig(this.lane.feeder.state)
this.lane.feeder.name == orig(this.lane.feeder.name)
this.lane.feeder.name.toString == orig(this.lane.feeder.name.toString)
this.lane.feeder.animation == orig(this.lane.feeder.animation)
this.lane.feeder.stateChange == orig(this.lane.feeder.stateChange)
this.lane.feeder.agentThread == orig(this.lane.feeder.agentThread)
this.lane.feeder.console == this.console
this.lane.nest == orig(this)
this.lane.nest == orig(this.lane.nest)
this.lane.nest.requestList[] == orig(this.lane.nest.requestList[])
this.lane.nest.currentPartType == orig(this.lane.nest.currentPartType)
this.lane.nest.currentParts[] == orig(this.lane.nest.currentParts[])
this.lane.nest.name.toString == orig(this.lane.nest.name.toString)
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.agentThread == orig(this.lane.nest.agentThread)
this.lane.nest.console == this.console
this.lane.laneGUI == orig(this.lane.laneGUI)
this.lane.stateChange == orig(this.lane.stateChange)
this.lane.agentThread == orig(this.lane.agentThread)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lane.console.name.toString == orig(this.lane.console.name.toString)
this.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.lane.nest.laneState)
agent.NestAgent$LaneState.READY == orig(this.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.camera == orig(arg0)
this.camera.name == arg0.name
this.camera.nests == arg0.nests
this.camera.timer == arg0.timer
this.camera.animation == arg0.animation
this.camera.stateChange == arg0.stateChange
this.stateChange == orig(this.lane.nest.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.console
this.console == orig(this.lane.feeder.console)
this.console == orig(this.lane.nest.console)
this.console == orig(this.lane.console)
this.console == orig(this.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.lane.console.name)
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.lane.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.lane.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.lane.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.lane.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.nests == orig(arg0.nests)
arg0.nests[] == orig(arg0.nests[])
arg0.mk == orig(arg0.mk)
arg0.guiCamera == orig(arg0.guiCamera)
arg0.timer == orig(arg0.timer)
arg0.kitRobot == orig(arg0.kitRobot)
arg0.partRobot == orig(arg0.partRobot)
arg0.animation == orig(arg0.animation)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.nestGraphics == null
this.lane.feeder.feederGUI == null
this.lane.feeder.agentThread == null
this.lane.nest.agentThread == null
this.lane.laneGUI == null
this.lane.agentThread == null
this.camera has only one value
this.camera.guiCamera == null
this.camera.kitRobot == null
this.camera.partRobot == null
this.camera.agentThread == null
this.agentThread == null
this.console has only one value
arg0.name has only one value
arg0.name.toString == "Camera"
arg0.nests has only one value
arg0.nests[].getClass().getName() elements == agent.CameraAgent.MyNest.class
arg0.mk == null
arg0.guiCamera == null
arg0.timer has only one value
arg0.kitRobot == null
arg0.partRobot == null
arg0.animation has only one value
arg0.stateChange has only one value
arg0.agentThread == null
arg0.console.name.toString == "Server"
===========================================================================
agent.NestAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
this.lane.feeder.console == this.console
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.console == this.console
this.laneState == agent.NestAgent$LaneState.READY
this.camera.partRobot.console == this.console
this.nestGraphics == null
this.lane.nest.agentThread == null
this.camera has only one value
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.kitRobot has only one value
this.camera.partRobot has only one value
this.camera.agentThread has only one value
this.agentThread == null
this.console has only one value
arg0.getClass().getName() == DeviceGraphics.NestGraphics.class
size(this.camera.nests[]) == 8
this.requestList.getClass().getName() != arg0.getClass().getName()
agent.NestAgent$NestState.$VALUES.getClass().getName() != arg0.getClass().getName()
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() != arg0.getClass().getName()
this.lane.feeder.feederGUI.getClass().getName() != arg0.getClass().getName()
this.lane.laneGUI.getClass().getName() != arg0.getClass().getName()
agent.Agent.this.getClass().getName() != arg0.getClass().getName()
agent.NestAgent$LaneState.$VALUES.getClass().getName() != arg0.getClass().getName()
this.camera.guiCamera.getClass().getName() != arg0.getClass().getName()
this.camera.kitRobot.standPositions.getClass().getName() != arg0.getClass().getName()
this.camera.kitRobot.stand.getClass().getName() != arg0.getClass().getName()
this.camera.kitRobot.conveyor.getClass().getName() != arg0.getClass().getName()
this.camera.kitRobot.camera.getClass().getName() != arg0.getClass().getName()
this.camera.kitRobot.kitrobotGraphics.getClass().getName() != arg0.getClass().getName()
this.camera.partRobot.GoodParts.getClass().getName() != arg0.getClass().getName()
this.camera.partRobot.partsRobotGraphics.getClass().getName() != arg0.getClass().getName()
this.console.messageQueue.getClass().getName() != arg0.getClass().getName()
===========================================================================
agent.NestAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.requestList == orig(this.requestList)
this.requestList == orig(this.lane.nest.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.MyKits.getClass().getName()
this.requestList.getClass().getName() == this.camera.partRobot.Arms.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.lane.nest.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.nests.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.kitRobot.myKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.MyKits.getClass().getName())
this.requestList.getClass().getName() == orig(this.camera.partRobot.Arms.getClass().getName())
this.currentPartType == orig(this.currentPartType)
this.currentParts == orig(this.currentParts)
this.currentParts == orig(this.lane.nest.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.count == orig(this.count)
this.count == orig(this.lane.nest.count)
this.countRequest == orig(this.countRequest)
this.countRequest == orig(this.lane.nest.countRequest)
this.full == orig(this.full)
this.full == orig(this.lane.nest.full)
this.takingParts == orig(this.takingParts)
this.takingParts == orig(this.lane.nest.takingParts)
this.partReady == orig(this.partReady)
this.partReady == orig(this.lane.nest.partReady)
this.partTypeNull == orig(this.partTypeNull)
this.partTypeNull == orig(this.lane.nest.partTypeNull)
this.nestGraphics.getClass().getName() == orig(arg0.getClass().getName())
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
agent.NestAgent$NestState.DONE_PURGING == orig(this.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.DONE_PURGING == orig(this.lane.nest.state)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.animation == orig(this.animation)
this.animation == orig(this.lane.nest.animation)
this.name == orig(this.name)
this.name == orig(this.lane.nest.name)
this.name.toString == orig(this.name.toString)
this.lane == orig(this.lane)
this.lane == orig(this.lane.nest.lane)
this.lane.requestList == orig(this.lane.requestList)
this.lane.requestList[] == orig(this.lane.requestList[])
this.lane.currentParts == orig(this.lane.currentParts)
this.lane.currentParts[] == orig(this.lane.currentParts[])
this.lane.currentType == orig(this.lane.currentType)
this.lane.topLimit == orig(this.lane.topLimit)
this.lane.lowerThreshold == orig(this.lane.lowerThreshold)
this.lane.extraRequestCount == orig(this.lane.extraRequestCount)
agent.LaneAgent$LaneStatus.FILLING == orig(this.lane.state)
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.lane.name == orig(this.lane.name)
this.lane.name.toString == orig(this.lane.name.toString)
this.lane.animation == orig(this.lane.animation)
this.lane.feeder == orig(this.lane.feeder)
this.lane.feeder.gantry == orig(this.lane.feeder.gantry)
this.lane.feeder.lanes == orig(this.lane.feeder.lanes)
this.lane.feeder.lanes[] == orig(this.lane.feeder.lanes[])
this.lane.feeder.feederGUI == orig(this.lane.feeder.feederGUI)
this.lane.feeder.feederGUI.getClass().getName() == orig(this.lane.feeder.feederGUI.getClass().getName())
this.lane.feeder.currentOrientation == orig(this.lane.feeder.currentOrientation)
this.lane.feeder.bin == orig(this.lane.feeder.bin)
this.lane.feeder.state == orig(this.lane.feeder.state)
this.lane.feeder.name == orig(this.lane.feeder.name)
this.lane.feeder.name.toString == orig(this.lane.feeder.name.toString)
this.lane.feeder.animation == orig(this.lane.feeder.animation)
this.lane.feeder.stateChange == orig(this.lane.feeder.stateChange)
this.lane.feeder.agentThread == orig(this.lane.feeder.agentThread)
this.lane.feeder.console == this.console
this.lane.nest == orig(this)
this.lane.nest == orig(this.lane.nest)
this.lane.nest.requestList[] == orig(this.lane.nest.requestList[])
this.lane.nest.currentPartType == orig(this.lane.nest.currentPartType)
this.lane.nest.currentParts[] == orig(this.lane.nest.currentParts[])
this.lane.nest.name.toString == orig(this.lane.nest.name.toString)
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.agentThread == orig(this.lane.nest.agentThread)
this.lane.nest.console == this.console
this.lane.laneGUI == orig(this.lane.laneGUI)
this.lane.laneGUI.getClass().getName() == orig(this.lane.laneGUI.getClass().getName())
this.lane.stateChange == orig(this.lane.stateChange)
this.lane.agentThread == orig(this.lane.agentThread)
this.lane.agentThread.goOn == orig(this.lane.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.lane.console.name.toString == orig(this.lane.console.name.toString)
this.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == orig(this.lane.nest.laneState)
agent.NestAgent$LaneState.READY == orig(this.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.camera == orig(this.lane.nest.camera)
this.camera == orig(this.camera)
this.camera.name == orig(this.camera.name)
this.camera.name.toString == orig(this.camera.name.toString)
this.camera.nests == orig(this.camera.nests)
this.camera.nests[] == orig(this.camera.nests[])
this.camera.mk == orig(this.camera.mk)
this.camera.guiCamera == orig(this.camera.guiCamera)
this.camera.guiCamera.getClass().getName() == orig(this.camera.guiCamera.getClass().getName())
this.camera.timer == orig(this.camera.timer)
this.camera.kitRobot == orig(this.camera.kitRobot)
this.camera.kitRobot.myKits == orig(this.camera.kitRobot.myKits)
this.camera.kitRobot.myKits[] == orig(this.camera.kitRobot.myKits[])
this.camera.kitRobot.standPositions == orig(this.camera.kitRobot.standPositions)
this.camera.kitRobot.standPositions.getClass().getName() == orig(this.camera.kitRobot.standPositions.getClass().getName())
this.camera.kitRobot.kitWaitingOnConveyor == orig(this.camera.kitRobot.kitWaitingOnConveyor)
this.camera.kitRobot.kitRequested == orig(this.camera.kitRobot.kitRequested)
this.camera.kitRobot.numKitsToMake == orig(this.camera.kitRobot.numKitsToMake)
this.camera.kitRobot.numKitsRequested == orig(this.camera.kitRobot.numKitsRequested)
this.camera.kitRobot.animation == orig(this.camera.kitRobot.animation)
this.camera.kitRobot.stand == orig(this.camera.kitRobot.stand)
this.camera.kitRobot.stand == orig(this.camera.partRobot.stand)
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.kitRobot.stand.getClass().getName())
this.camera.kitRobot.stand.getClass().getName() == orig(this.camera.partRobot.stand.getClass().getName())
this.camera.kitRobot.conveyor == orig(this.camera.kitRobot.conveyor)
this.camera.kitRobot.conveyor.getClass().getName() == orig(this.camera.kitRobot.conveyor.getClass().getName())
this.camera.kitRobot.camera == orig(this.camera.kitRobot.camera)
this.camera.kitRobot.camera.getClass().getName() == orig(this.camera.kitRobot.camera.getClass().getName())
this.camera.kitRobot.kitrobotGraphics == orig(this.camera.kitRobot.kitrobotGraphics)
this.camera.kitRobot.kitrobotGraphics.getClass().getName() == orig(this.camera.kitRobot.kitrobotGraphics.getClass().getName())
this.camera.kitRobot.mockgraphics == orig(this.camera.kitRobot.mockgraphics)
this.camera.kitRobot.state == orig(this.camera.kitRobot.state)
this.camera.kitRobot.name == orig(this.camera.kitRobot.name)
this.camera.kitRobot.name.toString == orig(this.camera.kitRobot.name.toString)
this.camera.kitRobot.stateChange == orig(this.camera.kitRobot.stateChange)
this.camera.kitRobot.agentThread == orig(this.camera.kitRobot.agentThread)
this.camera.partRobot == orig(this.camera.partRobot)
this.camera.partRobot.name == orig(this.camera.partRobot.name)
this.camera.partRobot.name.toString == orig(this.camera.partRobot.name.toString)
this.camera.partRobot.Kitconfig == orig(this.camera.partRobot.Kitconfig)
this.camera.partRobot.MyKits == orig(this.camera.partRobot.MyKits)
this.camera.partRobot.MyKits[] == orig(this.camera.partRobot.MyKits[])
this.camera.partRobot.GoodParts == orig(this.camera.partRobot.GoodParts)
this.camera.partRobot.GoodParts.getClass().getName() == orig(this.camera.partRobot.GoodParts.getClass().getName())
this.camera.partRobot.Arms == orig(this.camera.partRobot.Arms)
this.camera.partRobot.Arms[] == orig(this.camera.partRobot.Arms[])
this.camera.partRobot.time == orig(this.camera.partRobot.time)
this.camera.partRobot.kitsNum == orig(this.camera.partRobot.kitsNum)
this.camera.partRobot.timer == orig(this.camera.partRobot.timer)
this.camera.partRobot.KitsOnStand == orig(this.camera.partRobot.KitsOnStand)
this.camera.partRobot.partsRobotGraphics == orig(this.camera.partRobot.partsRobotGraphics)
this.camera.partRobot.partsRobotGraphics.getClass().getName() == orig(this.camera.partRobot.partsRobotGraphics.getClass().getName())
this.camera.partRobot.dropChance == orig(this.camera.partRobot.dropChance)
this.camera.partRobot.status == orig(this.camera.partRobot.status)
this.camera.partRobot.animation == orig(this.camera.partRobot.animation)
this.camera.partRobot.stateChange == orig(this.camera.partRobot.stateChange)
this.camera.partRobot.agentThread == orig(this.camera.partRobot.agentThread)
this.camera.partRobot.console == this.console
this.camera.animation == orig(this.camera.animation)
this.camera.stateChange == orig(this.camera.stateChange)
this.camera.agentThread == orig(this.camera.agentThread)
this.camera.agentThread.goOn == orig(this.camera.agentThread.goOn)
this.camera.console.name.toString == orig(this.camera.console.name.toString)
this.stateChange == orig(this.lane.nest.stateChange)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.lane.feeder.console)
this.console == orig(this.lane.nest.console)
this.console == orig(this.lane.console)
this.console == orig(this.camera.kitRobot.console)
this.console == orig(this.camera.partRobot.console)
this.console == orig(this.camera.console)
this.console == orig(this.console)
this.console.name == orig(this.lane.console.name)
this.console.name == orig(this.camera.console.name)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.lane.console.stateChange)
this.console.stateChange == orig(this.camera.console.stateChange)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.lane.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.camera.console.consoleWriterThread)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.lane.console.messageQueue)
this.console.messageQueue == orig(this.camera.console.messageQueue)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.lane.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.camera.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.lane.nest.agentThread == null
this.camera has only one value
this.camera.nests[] contains no nulls and has only one value, of length 8
this.camera.nests[].getClass().getName() == [agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest, agent.CameraAgent.MyNest]
this.camera.guiCamera has only one value
this.camera.kitRobot has only one value
this.camera.partRobot has only one value
this.camera.agentThread has only one value
this.agentThread == null
this.console has only one value
size(this.camera.nests[]) == 8
===========================================================================
agent.NestAgent.setLane(agent.LaneAgent):::ENTER
this == arg0.nest
this.requestList == arg0.nest.requestList
this.requestList.getClass().getName() == arg0.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == arg0.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.nest.currentParts.getClass().getName()
this.currentParts == arg0.nest.currentParts
this.count == arg0.nest.count
this.countRequest == arg0.nest.countRequest
this.full == arg0.nest.full
this.takingParts == arg0.nest.takingParts
this.partReady == arg0.nest.partReady
this.partTypeNull == arg0.nest.partTypeNull
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.DONE_PURGING == arg0.nest.state
this.animation == arg0.nest.animation
this.name == arg0.nest.name
this.lane == arg0.nest.lane
agent.LaneAgent$LaneStatus.FILLING == arg0.state
this.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.READY == arg0.nest.laneState
this.stateChange == arg0.nest.stateChange
this.console == arg0.feeder.console
this.console == arg0.nest.console
this.console == arg0.console
this.console.name == arg0.console.name
this.console.stateChange == arg0.console.stateChange
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.nestGraphics == null
this.lane == null
this.camera == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.currentType == null
arg0.topLimit == 5
arg0.lowerThreshold == 3
arg0.extraRequestCount == 0
arg0.feeder.gantry has only one value
arg0.feeder.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.feeder.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feeder.feederGUI == null
arg0.feeder.currentOrientation == 0
arg0.feeder.bin == null
arg0.feeder.state has only one value
arg0.feeder.agentThread == null
arg0.nest.requestList[] == []
arg0.nest.requestList[].getClass().getName() == []
arg0.nest.currentPartType == null
arg0.nest.currentParts[] == []
arg0.nest.currentParts[].getClass().getName() == []
arg0.nest.nestGraphics == null
arg0.nest.camera == null
arg0.nest.agentThread == null
arg0.laneGUI == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.feeder.lanes[]) == 2
===========================================================================
agent.NestAgent.setLane(agent.LaneAgent):::EXIT
this.requestList == arg0.nest.requestList
this.requestList == orig(this.requestList)
this.requestList == orig(arg0.nest.requestList)
this.requestList[] == orig(this.requestList[])
this.requestList.getClass().getName() == this.lane.currentParts.getClass().getName()
this.requestList.getClass().getName() == this.lane.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == this.lane.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.currentParts.getClass().getName()
this.requestList.getClass().getName() == arg0.feeder.lanes.getClass().getName()
this.requestList.getClass().getName() == arg0.nest.requestList.getClass().getName()
this.requestList.getClass().getName() == arg0.nest.currentParts.getClass().getName()
this.requestList.getClass().getName() == orig(this.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(this.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.currentParts.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.feeder.lanes.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.nest.requestList.getClass().getName())
this.requestList.getClass().getName() == orig(arg0.nest.currentParts.getClass().getName())
this.currentPartType == orig(this.currentPartType)
this.currentParts == arg0.nest.currentParts
this.currentParts == orig(this.currentParts)
this.currentParts == orig(arg0.nest.currentParts)
this.currentParts[] == orig(this.currentParts[])
this.count == arg0.nest.count
this.count == orig(this.count)
this.count == orig(arg0.nest.count)
this.countRequest == arg0.nest.countRequest
this.countRequest == orig(this.countRequest)
this.countRequest == orig(arg0.nest.countRequest)
this.full == arg0.nest.full
this.full == orig(this.full)
this.full == orig(arg0.nest.full)
this.takingParts == arg0.nest.takingParts
this.takingParts == orig(this.takingParts)
this.takingParts == orig(arg0.nest.takingParts)
this.partReady == arg0.nest.partReady
this.partReady == orig(this.partReady)
this.partReady == orig(arg0.nest.partReady)
this.partTypeNull == arg0.nest.partTypeNull
this.partTypeNull == orig(this.partTypeNull)
this.partTypeNull == orig(arg0.nest.partTypeNull)
this.nestGraphics == orig(this.nestGraphics)
this.state == agent.NestAgent$NestState.DONE_PURGING
agent.NestAgent$NestState.PURGING == orig(agent.NestAgent$NestState.PURGING)
agent.NestAgent$NestState.PRIORITY_PURGE == orig(agent.NestAgent$NestState.PRIORITY_PURGE)
agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE == orig(agent.NestAgent$NestState.WAITING_FOR_LANE_PURGE)
agent.NestAgent$NestState.DONE_PURGING == this.lane.nest.state
agent.NestAgent$NestState.DONE_PURGING == arg0.nest.state
agent.NestAgent$NestState.DONE_PURGING == orig(this.state)
agent.NestAgent$NestState.DONE_PURGING == orig(agent.NestAgent$NestState.DONE_PURGING)
agent.NestAgent$NestState.DONE_PURGING == orig(arg0.nest.state)
agent.NestAgent$NestState.NULL == orig(agent.NestAgent$NestState.NULL)
agent.NestAgent$NestState.$VALUES == orig(agent.NestAgent$NestState.$VALUES)
agent.NestAgent$NestState.$VALUES.getClass().getName() == orig(agent.NestAgent$NestState.$VALUES.getClass().getName())
agent.NestAgent$NestState.$VALUES[] == orig(agent.NestAgent$NestState.$VALUES[])
this.animation == arg0.nest.animation
this.animation == orig(this.animation)
this.animation == orig(arg0.nest.animation)
this.name == arg0.nest.name
this.name == orig(this.name)
this.name == orig(arg0.nest.name)
this.name.toString == orig(this.name.toString)
this.lane == arg0.nest.lane
this.lane == orig(arg0)
this.lane.requestList == arg0.requestList
this.lane.currentParts == arg0.currentParts
this.lane.topLimit == arg0.topLimit
this.lane.lowerThreshold == arg0.lowerThreshold
this.lane.extraRequestCount == arg0.extraRequestCount
agent.LaneAgent$LaneStatus.FILLING == arg0.state
agent.LaneAgent$LaneStatus.FILLING == orig(agent.LaneAgent$LaneStatus.FILLING)
agent.LaneAgent$LaneStatus.FILLING == orig(arg0.state)
agent.LaneAgent$LaneStatus.PURGING == orig(agent.LaneAgent$LaneStatus.PURGING)
agent.LaneAgent$LaneStatus.WAITING == orig(agent.LaneAgent$LaneStatus.WAITING)
agent.LaneAgent$LaneStatus.BROKEN == orig(agent.LaneAgent$LaneStatus.BROKEN)
agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING == orig(agent.LaneAgent$LaneStatus.BROKEN_WHILE_PURGING)
agent.LaneAgent$LaneStatus.$VALUES == orig(agent.LaneAgent$LaneStatus.$VALUES)
agent.LaneAgent$LaneStatus.$VALUES.getClass().getName() == orig(agent.LaneAgent$LaneStatus.$VALUES.getClass().getName())
agent.LaneAgent$LaneStatus.$VALUES[] == orig(agent.LaneAgent$LaneStatus.$VALUES[])
this.lane.name == arg0.name
this.lane.animation == arg0.animation
this.lane.feeder == arg0.feeder
this.lane.feeder.gantry == arg0.feeder.gantry
this.lane.feeder.lanes == arg0.feeder.lanes
this.lane.feeder.currentOrientation == arg0.feeder.currentOrientation
this.lane.feeder.state == arg0.feeder.state
this.lane.feeder.name == arg0.feeder.name
this.lane.feeder.animation == arg0.feeder.animation
this.lane.feeder.stateChange == arg0.feeder.stateChange
this.lane.feeder.console == this.console
this.lane.nest == arg0.nest
this.lane.nest.laneState == agent.NestAgent$LaneState.READY
this.lane.nest.console == this.console
this.lane.stateChange == arg0.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.laneState == agent.NestAgent$LaneState.READY
agent.NestAgent$LaneState.PURGING == orig(agent.NestAgent$LaneState.PURGING)
agent.NestAgent$LaneState.READY == arg0.nest.laneState
agent.NestAgent$LaneState.READY == orig(this.laneState)
agent.NestAgent$LaneState.READY == orig(agent.NestAgent$LaneState.READY)
agent.NestAgent$LaneState.READY == orig(arg0.nest.laneState)
agent.NestAgent$LaneState.$VALUES == orig(agent.NestAgent$LaneState.$VALUES)
agent.NestAgent$LaneState.$VALUES.getClass().getName() == orig(agent.NestAgent$LaneState.$VALUES.getClass().getName())
agent.NestAgent$LaneState.$VALUES[] == orig(agent.NestAgent$LaneState.$VALUES[])
this.camera == orig(this.camera)
this.stateChange == arg0.nest.stateChange
this.stateChange == orig(this.stateChange)
this.stateChange == orig(arg0.nest.stateChange)
this.agentThread == orig(this.agentThread)
this.console == arg0.feeder.console
this.console == arg0.nest.console
this.console == arg0.console
this.console == orig(this.console)
this.console == orig(arg0.feeder.console)
this.console == orig(arg0.nest.console)
this.console == orig(arg0.console)
this.console.name == arg0.console.name
this.console.name == orig(this.console.name)
this.console.name == orig(arg0.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == arg0.console.stateChange
this.console.stateChange == orig(this.console.stateChange)
this.console.stateChange == orig(arg0.console.stateChange)
this.console.consoleWriterThread == arg0.console.consoleWriterThread
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == arg0.console.messageQueue
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue == orig(arg0.console.messageQueue)
this.console.messageQueue.getClass().getName() == arg0.console.messageQueue.getClass().getName()
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.console.messageQueue.getClass().getName() == orig(arg0.console.messageQueue.getClass().getName())
arg0.requestList == orig(arg0.requestList)
arg0.requestList[] == orig(arg0.requestList[])
arg0.currentParts == orig(arg0.currentParts)
arg0.currentParts[] == orig(arg0.currentParts[])
arg0.currentType == orig(arg0.currentType)
arg0.topLimit == orig(arg0.topLimit)
arg0.lowerThreshold == orig(arg0.lowerThreshold)
arg0.extraRequestCount == orig(arg0.extraRequestCount)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.animation == orig(arg0.animation)
arg0.feeder == orig(arg0.feeder)
arg0.feeder.gantry == orig(arg0.feeder.gantry)
arg0.feeder.lanes == orig(arg0.feeder.lanes)
arg0.feeder.lanes[] == orig(arg0.feeder.lanes[])
arg0.feeder.feederGUI == orig(arg0.feeder.feederGUI)
arg0.feeder.currentOrientation == orig(arg0.feeder.currentOrientation)
arg0.feeder.bin == orig(arg0.feeder.bin)
arg0.feeder.state == orig(arg0.feeder.state)
arg0.feeder.name == orig(arg0.feeder.name)
arg0.feeder.name.toString == orig(arg0.feeder.name.toString)
arg0.feeder.animation == orig(arg0.feeder.animation)
arg0.feeder.stateChange == orig(arg0.feeder.stateChange)
arg0.feeder.agentThread == orig(arg0.feeder.agentThread)
arg0.nest == orig(this)
arg0.nest == orig(arg0.nest)
arg0.nest.requestList[] == orig(arg0.nest.requestList[])
arg0.nest.currentPartType == orig(arg0.nest.currentPartType)
arg0.nest.currentParts[] == orig(arg0.nest.currentParts[])
arg0.nest.nestGraphics == orig(arg0.nest.nestGraphics)
arg0.nest.name.toString == orig(arg0.nest.name.toString)
arg0.nest.camera == orig(arg0.nest.camera)
arg0.nest.agentThread == orig(arg0.nest.agentThread)
arg0.laneGUI == orig(arg0.laneGUI)
arg0.stateChange == orig(arg0.stateChange)
arg0.agentThread == orig(arg0.agentThread)
arg0.console.name.toString == orig(arg0.console.name.toString)
this.nestGraphics == null
this.lane.feeder.feederGUI == null
this.lane.feeder.agentThread == null
this.lane.nest.agentThread == null
this.lane.laneGUI == null
this.lane.agentThread == null
this.camera == null
this.agentThread == null
this.console has only one value
arg0.requestList[] == []
arg0.requestList[].getClass().getName() == []
arg0.currentParts[] == []
arg0.currentParts[].getClass().getName() == []
arg0.currentType == null
arg0.topLimit == 5
arg0.lowerThreshold == 3
arg0.extraRequestCount == 0
arg0.feeder.gantry has only one value
arg0.feeder.lanes[].getClass().getName() == [agent.FeederAgent.MyLane, agent.FeederAgent.MyLane]
arg0.feeder.lanes[].getClass().getName() elements == agent.FeederAgent.MyLane.class
arg0.feeder.feederGUI == null
arg0.feeder.currentOrientation == 0
arg0.feeder.bin == null
arg0.feeder.state has only one value
arg0.feeder.agentThread == null
arg0.nest.requestList[] == []
arg0.nest.requestList[].getClass().getName() == []
arg0.nest.currentPartType == null
arg0.nest.currentParts[] == []
arg0.nest.currentParts[].getClass().getName() == []
arg0.nest.nestGraphics == null
arg0.nest.camera == null
arg0.nest.agentThread == null
arg0.laneGUI == null
arg0.agentThread == null
arg0.console.name.toString == "Server"
size(arg0.feeder.lanes[]) == 2
===========================================================================
agent.PartsRobotAgent$1:::OBJECT
this has only one value
agent.PartsRobotAgent.this has only one value
agent.PartsRobotAgent.this.name has only one value
agent.PartsRobotAgent.this.name.toString == "PartsRobot"
agent.PartsRobotAgent.this.Kitconfig == null
agent.PartsRobotAgent.this.MyKits has only one value
agent.PartsRobotAgent.this.MyKits[] == []
agent.PartsRobotAgent.this.MyKits[].getClass().getName() == []
agent.PartsRobotAgent.this.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.GoodParts has only one value
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
agent.PartsRobotAgent.this.Arms has only one value
agent.PartsRobotAgent.this.Arms[] contains no nulls and has only one value, of length 4
agent.PartsRobotAgent.this.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
agent.PartsRobotAgent.this.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
agent.PartsRobotAgent.this.Arms.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.time has only one value
agent.PartsRobotAgent.this.kitsNum == 0
agent.PartsRobotAgent.this.timer has only one value
agent.PartsRobotAgent.this.KitsOnStand == null
agent.PartsRobotAgent.this.stand has only one value
agent.PartsRobotAgent.this.stand.getClass().getName() == agent.StandAgent.class
agent.PartsRobotAgent.this.partsRobotGraphics has only one value
agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName() == DeviceGraphics.PartsRobotGraphics.class
agent.PartsRobotAgent.this.dropChance == 0.0
agent.PartsRobotAgent.this.status has only one value
agent.PartsRobotAgent$PartsRobotStatus.IDLE has only one value
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP has only one value
agent.PartsRobotAgent$PartsRobotStatus.PLACING has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$PartsRobotStatus[].class
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus]
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.PartsRobotStatus.class
agent.PartsRobotAgent.this.animation has only one value
agent.PartsRobotAgent.this.stateChange has only one value
agent.PartsRobotAgent.this.agentThread has only one value
agent.PartsRobotAgent.this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.PartsRobotAgent.class
agent.PartsRobotAgent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
agent.PartsRobotAgent.this.console.name has only one value
agent.PartsRobotAgent.this.console.name.toString == "Server"
agent.PartsRobotAgent.this.console.stateChange has only one value
agent.PartsRobotAgent.this.console.consoleWriterThread has only one value
agent.PartsRobotAgent.this.console.messageQueue has only one value
agent.PartsRobotAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.PartsRobotAgent.this.Arms[]) == 4
size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[]) == 3
===========================================================================
agent.PartsRobotAgent$1.(agent.PartsRobotAgent):::ENTER
agent.PartsRobotAgent.this has only one value
agent.PartsRobotAgent.this.name has only one value
agent.PartsRobotAgent.this.name.toString == "PartsRobot"
agent.PartsRobotAgent.this.Kitconfig == null
agent.PartsRobotAgent.this.MyKits has only one value
agent.PartsRobotAgent.this.MyKits[] == []
agent.PartsRobotAgent.this.MyKits[].getClass().getName() == []
agent.PartsRobotAgent.this.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.GoodParts has only one value
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
agent.PartsRobotAgent.this.Arms has only one value
agent.PartsRobotAgent.this.Arms[] contains no nulls and has only one value, of length 4
agent.PartsRobotAgent.this.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
agent.PartsRobotAgent.this.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
agent.PartsRobotAgent.this.Arms.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.time has only one value
agent.PartsRobotAgent.this.kitsNum == 0
agent.PartsRobotAgent.this.timer has only one value
agent.PartsRobotAgent.this.KitsOnStand == null
agent.PartsRobotAgent.this.stand has only one value
agent.PartsRobotAgent.this.stand.getClass().getName() == agent.StandAgent.class
agent.PartsRobotAgent.this.partsRobotGraphics has only one value
agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName() == DeviceGraphics.PartsRobotGraphics.class
agent.PartsRobotAgent.this.dropChance == 0.0
agent.PartsRobotAgent.this.status has only one value
agent.PartsRobotAgent$PartsRobotStatus.IDLE has only one value
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP has only one value
agent.PartsRobotAgent$PartsRobotStatus.PLACING has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$PartsRobotStatus[].class
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus]
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.PartsRobotStatus.class
agent.PartsRobotAgent.this.animation has only one value
agent.PartsRobotAgent.this.stateChange has only one value
agent.PartsRobotAgent.this.agentThread has only one value
agent.PartsRobotAgent.this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.PartsRobotAgent.class
agent.PartsRobotAgent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
agent.PartsRobotAgent.this.console.name has only one value
agent.PartsRobotAgent.this.console.name.toString == "Server"
agent.PartsRobotAgent.this.console.stateChange has only one value
agent.PartsRobotAgent.this.console.consoleWriterThread has only one value
agent.PartsRobotAgent.this.console.messageQueue has only one value
agent.PartsRobotAgent.this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(agent.PartsRobotAgent.this.Arms[]) == 4
size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[]) == 3
===========================================================================
agent.PartsRobotAgent$1.(agent.PartsRobotAgent):::EXIT
agent.PartsRobotAgent.this == orig(agent.PartsRobotAgent.this)
agent.PartsRobotAgent.this.name == orig(agent.PartsRobotAgent.this.name)
agent.PartsRobotAgent.this.name.toString == orig(agent.PartsRobotAgent.this.name.toString)
agent.PartsRobotAgent.this.Kitconfig == orig(agent.PartsRobotAgent.this.Kitconfig)
agent.PartsRobotAgent.this.MyKits == orig(agent.PartsRobotAgent.this.MyKits)
agent.PartsRobotAgent.this.MyKits[] == orig(agent.PartsRobotAgent.this.MyKits[])
agent.PartsRobotAgent.this.MyKits.getClass().getName() == orig(agent.PartsRobotAgent.this.MyKits.getClass().getName())
agent.PartsRobotAgent.this.GoodParts == orig(agent.PartsRobotAgent.this.GoodParts)
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == orig(agent.PartsRobotAgent.this.GoodParts.getClass().getName())
agent.PartsRobotAgent.this.Arms == orig(agent.PartsRobotAgent.this.Arms)
agent.PartsRobotAgent.this.Arms[] == orig(agent.PartsRobotAgent.this.Arms[])
agent.PartsRobotAgent.this.Arms.getClass().getName() == orig(agent.PartsRobotAgent.this.Arms.getClass().getName())
agent.PartsRobotAgent.this.time == orig(agent.PartsRobotAgent.this.time)
agent.PartsRobotAgent.this.kitsNum == orig(agent.PartsRobotAgent.this.kitsNum)
agent.PartsRobotAgent.this.timer == orig(agent.PartsRobotAgent.this.timer)
agent.PartsRobotAgent.this.KitsOnStand == orig(agent.PartsRobotAgent.this.KitsOnStand)
agent.PartsRobotAgent.this.stand == orig(agent.PartsRobotAgent.this.stand)
agent.PartsRobotAgent.this.stand.getClass().getName() == orig(agent.PartsRobotAgent.this.stand.getClass().getName())
agent.PartsRobotAgent.this.partsRobotGraphics == orig(agent.PartsRobotAgent.this.partsRobotGraphics)
agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName() == orig(agent.PartsRobotAgent.this.partsRobotGraphics.getClass().getName())
agent.PartsRobotAgent.this.dropChance == orig(agent.PartsRobotAgent.this.dropChance)
agent.PartsRobotAgent.this.status == orig(agent.PartsRobotAgent.this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
agent.PartsRobotAgent.this.animation == orig(agent.PartsRobotAgent.this.animation)
agent.PartsRobotAgent.this.stateChange == orig(agent.PartsRobotAgent.this.stateChange)
agent.PartsRobotAgent.this.agentThread == orig(agent.PartsRobotAgent.this.agentThread)
agent.PartsRobotAgent.this.agentThread.goOn == orig(agent.PartsRobotAgent.this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.PartsRobotAgent.this.console == orig(agent.PartsRobotAgent.this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
agent.PartsRobotAgent.this.console.name == orig(agent.PartsRobotAgent.this.console.name)
agent.PartsRobotAgent.this.console.name.toString == orig(agent.PartsRobotAgent.this.console.name.toString)
agent.PartsRobotAgent.this.console.stateChange == orig(agent.PartsRobotAgent.this.console.stateChange)
agent.PartsRobotAgent.this.console.consoleWriterThread == orig(agent.PartsRobotAgent.this.console.consoleWriterThread)
agent.PartsRobotAgent.this.console.messageQueue == orig(agent.PartsRobotAgent.this.console.messageQueue)
agent.PartsRobotAgent.this.console.messageQueue.getClass().getName() == orig(agent.PartsRobotAgent.this.console.messageQueue.getClass().getName())
===========================================================================
agent.PartsRobotAgent$Arm:::OBJECT
this.AS == agent.PartsRobotAgent$ArmStatus.EMPTY
agent.PartsRobotAgent.this.MyKits.getClass().getName() == agent.PartsRobotAgent.this.Arms.getClass().getName()
this.part == null
agent.PartsRobotAgent$ArmStatus.EMPTY has only one value
agent.PartsRobotAgent$ArmStatus.FULL has only one value
agent.PartsRobotAgent$ArmStatus.EMPTYING has only one value
agent.PartsRobotAgent$ArmStatus.$VALUES has only one value
agent.PartsRobotAgent$ArmStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$ArmStatus[].class
agent.PartsRobotAgent$ArmStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$ArmStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.ArmStatus, agent.PartsRobotAgent.ArmStatus, agent.PartsRobotAgent.ArmStatus]
agent.PartsRobotAgent$ArmStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.ArmStatus.class
agent.PartsRobotAgent.this has only one value
agent.PartsRobotAgent.this.name has only one value
agent.PartsRobotAgent.this.name.toString == "PartsRobot"
agent.PartsRobotAgent.this.Kitconfig == null
agent.PartsRobotAgent.this.MyKits has only one value
agent.PartsRobotAgent.this.MyKits[] == []
agent.PartsRobotAgent.this.MyKits[].getClass().getName() == []
agent.PartsRobotAgent.this.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.GoodParts has only one value
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
agent.PartsRobotAgent.this.Arms has only one value
agent.PartsRobotAgent.this.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
agent.PartsRobotAgent.this.time has only one value
agent.PartsRobotAgent.this.kitsNum == 0
agent.PartsRobotAgent.this.timer has only one value
agent.PartsRobotAgent.this.KitsOnStand == null
agent.PartsRobotAgent.this.stand == null
agent.PartsRobotAgent.this.partsRobotGraphics == null
agent.PartsRobotAgent.this.dropChance == 0.0
agent.PartsRobotAgent.this.status == null
agent.PartsRobotAgent.this.animation has only one value
agent.PartsRobotAgent.this.stateChange has only one value
agent.PartsRobotAgent.this.agentThread == null
agent.PartsRobotAgent.this.console == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
size(agent.PartsRobotAgent$ArmStatus.$VALUES[]) == 3
===========================================================================
agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::ENTER
agent.PartsRobotAgent.this.MyKits.getClass().getName() == agent.PartsRobotAgent.this.Arms.getClass().getName()
agent.PartsRobotAgent.this has only one value
agent.PartsRobotAgent.this.name has only one value
agent.PartsRobotAgent.this.name.toString == "PartsRobot"
agent.PartsRobotAgent.this.Kitconfig == null
agent.PartsRobotAgent.this.MyKits has only one value
agent.PartsRobotAgent.this.MyKits[] == []
agent.PartsRobotAgent.this.MyKits[].getClass().getName() == []
agent.PartsRobotAgent.this.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
agent.PartsRobotAgent.this.GoodParts has only one value
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
agent.PartsRobotAgent.this.Arms has only one value
agent.PartsRobotAgent.this.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
agent.PartsRobotAgent.this.time has only one value
agent.PartsRobotAgent.this.kitsNum == 0
agent.PartsRobotAgent.this.timer has only one value
agent.PartsRobotAgent.this.KitsOnStand == null
agent.PartsRobotAgent.this.stand == null
agent.PartsRobotAgent.this.partsRobotGraphics == null
agent.PartsRobotAgent.this.dropChance == 0.0
agent.PartsRobotAgent.this.status == null
agent.PartsRobotAgent.this.animation has only one value
agent.PartsRobotAgent.this.stateChange has only one value
agent.PartsRobotAgent.this.agentThread == null
agent.PartsRobotAgent.this.console == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
===========================================================================
agent.PartsRobotAgent$Arm.Arm(agent.PartsRobotAgent):::EXIT
agent.PartsRobotAgent.this == orig(agent.PartsRobotAgent.this)
agent.PartsRobotAgent.this.name == orig(agent.PartsRobotAgent.this.name)
agent.PartsRobotAgent.this.name.toString == orig(agent.PartsRobotAgent.this.name.toString)
agent.PartsRobotAgent.this.Kitconfig == orig(agent.PartsRobotAgent.this.Kitconfig)
agent.PartsRobotAgent.this.MyKits == orig(agent.PartsRobotAgent.this.MyKits)
agent.PartsRobotAgent.this.MyKits[] == orig(agent.PartsRobotAgent.this.MyKits[])
agent.PartsRobotAgent.this.MyKits.getClass().getName() == orig(agent.PartsRobotAgent.this.MyKits.getClass().getName())
agent.PartsRobotAgent.this.MyKits.getClass().getName() == orig(agent.PartsRobotAgent.this.Arms.getClass().getName())
agent.PartsRobotAgent.this.GoodParts == orig(agent.PartsRobotAgent.this.GoodParts)
agent.PartsRobotAgent.this.GoodParts.getClass().getName() == orig(agent.PartsRobotAgent.this.GoodParts.getClass().getName())
agent.PartsRobotAgent.this.Arms == orig(agent.PartsRobotAgent.this.Arms)
agent.PartsRobotAgent.this.Arms[] == orig(agent.PartsRobotAgent.this.Arms[])
agent.PartsRobotAgent.this.time == orig(agent.PartsRobotAgent.this.time)
agent.PartsRobotAgent.this.kitsNum == orig(agent.PartsRobotAgent.this.kitsNum)
agent.PartsRobotAgent.this.timer == orig(agent.PartsRobotAgent.this.timer)
agent.PartsRobotAgent.this.KitsOnStand == orig(agent.PartsRobotAgent.this.KitsOnStand)
agent.PartsRobotAgent.this.stand == orig(agent.PartsRobotAgent.this.stand)
agent.PartsRobotAgent.this.partsRobotGraphics == orig(agent.PartsRobotAgent.this.partsRobotGraphics)
agent.PartsRobotAgent.this.dropChance == orig(agent.PartsRobotAgent.this.dropChance)
agent.PartsRobotAgent.this.status == orig(agent.PartsRobotAgent.this.status)
agent.PartsRobotAgent.this.animation == orig(agent.PartsRobotAgent.this.animation)
agent.PartsRobotAgent.this.stateChange == orig(agent.PartsRobotAgent.this.stateChange)
agent.PartsRobotAgent.this.agentThread == orig(agent.PartsRobotAgent.this.agentThread)
agent.PartsRobotAgent.this.console == orig(agent.PartsRobotAgent.this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
===========================================================================
agent.PartsRobotAgent$ArmStatus:::OBJECT
===========================================================================
agent.PartsRobotAgent$ArmStatus.ArmStatus(java.lang.String, int):::ENTER
arg0.toString one of { "EMPTY", "EMPTYING", "FULL" }
arg1 one of { 0, 1, 2 }
===========================================================================
agent.PartsRobotAgent$ArmStatus.ArmStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "EMPTY", "EMPTYING", "FULL" }
===========================================================================
agent.PartsRobotAgent$PartsRobotStatus:::OBJECT
===========================================================================
agent.PartsRobotAgent$PartsRobotStatus.PartsRobotStatus(java.lang.String, int):::ENTER
arg0.toString one of { "IDLE", "PICKING_UP", "PLACING" }
arg1 one of { 0, 1, 2 }
===========================================================================
agent.PartsRobotAgent$PartsRobotStatus.PartsRobotStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "IDLE", "PICKING_UP", "PLACING" }
===========================================================================
agent.PartsRobotAgent:::OBJECT
this.MyKits.getClass().getName() == this.Arms.getClass().getName()
this.console == Utils.ConsoleWriter.this
this has only one value
this.name has only one value
this.name != null
this.name.toString == "PartsRobot"
this.Kitconfig == null
this.MyKits has only one value
this.MyKits != null
this.MyKits[] == []
this.MyKits[].getClass().getName() == []
this.MyKits.getClass().getName() == java.util.Collections$SynchronizedRandomAccessList.class
this.GoodParts has only one value
this.GoodParts != null
this.GoodParts.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
this.Arms has only one value
this.Arms != null
this.Arms[] contains no nulls and has only one value, of length 4
this.Arms[] elements != null
this.Arms[].getClass().getName() == [agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm, agent.PartsRobotAgent.Arm]
this.Arms[].getClass().getName() elements == agent.PartsRobotAgent.Arm.class
this.time has only one value
this.time != null
this.kitsNum == 0
this.timer has only one value
this.timer != null
this.KitsOnStand == null
this.stand.getClass().getName() == agent.StandAgent.class
this.partsRobotGraphics.getClass().getName() == DeviceGraphics.PartsRobotGraphics.class
this.dropChance == 0.0
this.status != null
agent.PartsRobotAgent$PartsRobotStatus.IDLE has only one value
agent.PartsRobotAgent$PartsRobotStatus.IDLE != null
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP has only one value
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP != null
agent.PartsRobotAgent$PartsRobotStatus.PLACING has only one value
agent.PartsRobotAgent$PartsRobotStatus.PLACING != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES has only one value
agent.PartsRobotAgent$PartsRobotStatus.$VALUES != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == agent.PartsRobotAgent$PartsRobotStatus[].class
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] contains no nulls and has only one value, of length 3
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] elements != null
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() == [agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus, agent.PartsRobotAgent.PartsRobotStatus]
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[].getClass().getName() elements == agent.PartsRobotAgent.PartsRobotStatus.class
this.animation has only one value
this.animation != null
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.PartsRobotAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.Arms[]) == 4
size(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[]) == 3
this.MyKits.getClass().getName() != this.GoodParts.getClass().getName()
this.MyKits.getClass().getName() != this.stand.getClass().getName()
this.MyKits.getClass().getName() != this.partsRobotGraphics.getClass().getName()
this.MyKits.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.MyKits.getClass().getName() != this.console.messageQueue.getClass().getName()
this.GoodParts.getClass().getName() != this.stand.getClass().getName()
this.GoodParts.getClass().getName() != this.partsRobotGraphics.getClass().getName()
this.GoodParts.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.GoodParts.getClass().getName() != this.console.messageQueue.getClass().getName()
this.stand.getClass().getName() != this.partsRobotGraphics.getClass().getName()
this.stand.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.stand.getClass().getName() != this.console.messageQueue.getClass().getName()
this.partsRobotGraphics.getClass().getName() != agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName()
this.partsRobotGraphics.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.PartsRobotAgent.IsAnyArmEmpty():::ENTER
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread has only one value
this.console has only one value
===========================================================================
agent.PartsRobotAgent.IsAnyArmEmpty():::EXIT410
===========================================================================
agent.PartsRobotAgent.IsAnyArmEmpty():::EXIT410;condition="return == true"
===========================================================================
agent.PartsRobotAgent.IsAnyArmEmpty():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.Kitconfig == orig(this.Kitconfig)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.MyKits.getClass().getName() == orig(this.MyKits.getClass().getName())
this.MyKits.getClass().getName() == orig(this.Arms.getClass().getName())
this.GoodParts == orig(this.GoodParts)
this.GoodParts.getClass().getName() == orig(this.GoodParts.getClass().getName())
this.Arms == orig(this.Arms)
this.Arms[] == orig(this.Arms[])
this.time == orig(this.time)
this.kitsNum == orig(this.kitsNum)
this.timer == orig(this.timer)
this.KitsOnStand == orig(this.KitsOnStand)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobotGraphics == orig(this.partsRobotGraphics)
this.partsRobotGraphics.getClass().getName() == orig(this.partsRobotGraphics.getClass().getName())
this.dropChance == orig(this.dropChance)
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread has only one value
this.console has only one value
return == true
===========================================================================
agent.PartsRobotAgent.IsAnyArmEmpty():::EXIT;condition="return == true"
===========================================================================
agent.PartsRobotAgent.PartsRobotAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "PartsRobot"
===========================================================================
agent.PartsRobotAgent.PartsRobotAgent(java.lang.String):::EXIT
this.name == orig(arg0)
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
arg0.toString == orig(arg0.toString)
this.stand == null
this.partsRobotGraphics == null
this.agentThread == null
this.console == null
arg0.toString == "PartsRobot"
===========================================================================
agent.PartsRobotAgent.getName():::ENTER
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.PartsRobotAgent.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.Kitconfig == orig(this.Kitconfig)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.MyKits.getClass().getName() == orig(this.MyKits.getClass().getName())
this.MyKits.getClass().getName() == orig(this.Arms.getClass().getName())
this.GoodParts == orig(this.GoodParts)
this.GoodParts.getClass().getName() == orig(this.GoodParts.getClass().getName())
this.Arms == orig(this.Arms)
this.Arms[] == orig(this.Arms[])
this.time == orig(this.time)
this.kitsNum == orig(this.kitsNum)
this.timer == orig(this.timer)
this.KitsOnStand == orig(this.KitsOnStand)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobotGraphics == orig(this.partsRobotGraphics)
this.partsRobotGraphics.getClass().getName() == orig(this.partsRobotGraphics.getClass().getName())
this.dropChance == orig(this.dropChance)
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread == null
this.console has only one value
return has only one value
return.toString == "PartsRobot"
===========================================================================
agent.PartsRobotAgent.pickAndExecuteAnAction():::ENTER
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread has only one value
this.console has only one value
===========================================================================
agent.PartsRobotAgent.pickAndExecuteAnAction():::EXIT280
===========================================================================
agent.PartsRobotAgent.pickAndExecuteAnAction():::EXIT280;condition="not(return == true)"
===========================================================================
agent.PartsRobotAgent.pickAndExecuteAnAction():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.Kitconfig == orig(this.Kitconfig)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.MyKits.getClass().getName() == orig(this.MyKits.getClass().getName())
this.MyKits.getClass().getName() == orig(this.Arms.getClass().getName())
this.GoodParts == orig(this.GoodParts)
this.GoodParts.getClass().getName() == orig(this.GoodParts.getClass().getName())
this.Arms == orig(this.Arms)
this.Arms[] == orig(this.Arms[])
this.time == orig(this.time)
this.kitsNum == orig(this.kitsNum)
this.timer == orig(this.timer)
this.KitsOnStand == orig(this.KitsOnStand)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobotGraphics == orig(this.partsRobotGraphics)
this.partsRobotGraphics.getClass().getName() == orig(this.partsRobotGraphics.getClass().getName())
this.dropChance == orig(this.dropChance)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobotGraphics has only one value
this.status has only one value
this.agentThread has only one value
this.console has only one value
return == false
===========================================================================
agent.PartsRobotAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.PartsRobotAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::ENTER
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.stand has only one value
this.partsRobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == DeviceGraphics.PartsRobotGraphics.class
===========================================================================
agent.PartsRobotAgent.setGraphicalRepresentation(DeviceGraphics.DeviceGraphics):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.Kitconfig == orig(this.Kitconfig)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.MyKits.getClass().getName() == orig(this.MyKits.getClass().getName())
this.MyKits.getClass().getName() == orig(this.Arms.getClass().getName())
this.GoodParts == orig(this.GoodParts)
this.GoodParts.getClass().getName() == orig(this.GoodParts.getClass().getName())
this.Arms == orig(this.Arms)
this.Arms[] == orig(this.Arms[])
this.time == orig(this.time)
this.kitsNum == orig(this.kitsNum)
this.timer == orig(this.timer)
this.KitsOnStand == orig(this.KitsOnStand)
this.stand == orig(this.stand)
this.stand.getClass().getName() == orig(this.stand.getClass().getName())
this.partsRobotGraphics.getClass().getName() == orig(arg0.getClass().getName())
this.dropChance == orig(this.dropChance)
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobotGraphics has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.PartsRobotAgent.setStand(agent.interfaces.Stand):::ENTER
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
this.stand == null
this.partsRobotGraphics == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.StandAgent.class
===========================================================================
agent.PartsRobotAgent.setStand(agent.interfaces.Stand):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.Kitconfig == orig(this.Kitconfig)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.MyKits.getClass().getName() == orig(this.MyKits.getClass().getName())
this.MyKits.getClass().getName() == orig(this.Arms.getClass().getName())
this.GoodParts == orig(this.GoodParts)
this.GoodParts.getClass().getName() == orig(this.GoodParts.getClass().getName())
this.Arms == orig(this.Arms)
this.Arms[] == orig(this.Arms[])
this.time == orig(this.time)
this.kitsNum == orig(this.kitsNum)
this.timer == orig(this.timer)
this.KitsOnStand == orig(this.KitsOnStand)
this.stand == orig(arg0)
this.stand.getClass().getName() == orig(arg0.getClass().getName())
this.partsRobotGraphics == orig(this.partsRobotGraphics)
this.dropChance == orig(this.dropChance)
this.status == agent.PartsRobotAgent$PartsRobotStatus.IDLE
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(this.status)
agent.PartsRobotAgent$PartsRobotStatus.IDLE == orig(agent.PartsRobotAgent$PartsRobotStatus.IDLE)
agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP == orig(agent.PartsRobotAgent$PartsRobotStatus.PICKING_UP)
agent.PartsRobotAgent$PartsRobotStatus.PLACING == orig(agent.PartsRobotAgent$PartsRobotStatus.PLACING)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES)
agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName() == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES.getClass().getName())
agent.PartsRobotAgent$PartsRobotStatus.$VALUES[] == orig(agent.PartsRobotAgent$PartsRobotStatus.$VALUES[])
this.animation == orig(this.animation)
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.stand has only one value
this.partsRobotGraphics == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.StandAgent$StandStatus:::OBJECT
===========================================================================
agent.StandAgent$StandStatus.StandStatus(java.lang.String, int):::ENTER
===========================================================================
agent.StandAgent$StandStatus.StandStatus(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
agent.StandAgent:::OBJECT
this.status == agent.StandAgent$StandStatus.IDLE
this.console == Utils.ConsoleWriter.this
this has only one value
this.kitrobot.getClass().getName() == agent.KitRobotAgent.class
this.partsrobot.getClass().getName() == agent.PartsRobotAgent.class
this.fcs.getClass().getName() == agent.FCSAgent.class
this.name has only one value
this.name != null
this.name.toString == "Stand"
this.MyKits has only one value
this.MyKits != null
this.MyKits[] contains only nulls and has only one value, of length 3
this.MyKits[] elements == null
this.MyKits[].getClass().getName() == [null, null, null]
this.MyKits[].getClass().getName() elements == null
this.numKitsToMake == 0
this.numKitsMade == 0
this.oldLocForKitBeingInspected == 0
this.start == false
agent.StandAgent$StandStatus.IDLE has only one value
agent.StandAgent$StandStatus.IDLE != null
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE has only one value
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE != null
agent.StandAgent$StandStatus.KIT_REQUESTED has only one value
agent.StandAgent$StandStatus.KIT_REQUESTED != null
agent.StandAgent$StandStatus.DONE has only one value
agent.StandAgent$StandStatus.DONE != null
agent.StandAgent$StandStatus.$VALUES has only one value
agent.StandAgent$StandStatus.$VALUES != null
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == agent.StandAgent$StandStatus[].class
agent.StandAgent$StandStatus.$VALUES[] contains no nulls and has only one value, of length 4
agent.StandAgent$StandStatus.$VALUES[] elements != null
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() == [agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus, agent.StandAgent.StandStatus]
agent.StandAgent$StandStatus.$VALUES[].getClass().getName() elements == agent.StandAgent.StandStatus.class
this.stateChange has only one value
this.stateChange != null
this.agentThread.goOn == true
agent.Agent.this has only one value
agent.Agent.this.getClass().getName() == agent.StandAgent.class
agent.Agent.this.stateChange has only one value
agent.Agent.this.agentThread has only one value
agent.Agent.this.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID != null
Utils.ConsoleWriter.consoleID.toString == ""
this.console.name has only one value
this.console.name != null
this.console.name.toString == "Server"
this.console.stateChange has only one value
this.console.stateChange != null
this.console.consoleWriterThread has only one value
this.console.consoleWriterThread != null
this.console.consoleWriterThread.goOn == true
Utils.ConsoleWriter.this has only one value
this.console.messageQueue has only one value
this.console.messageQueue != null
this.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
size(this.MyKits[]) == 3
size(agent.StandAgent$StandStatus.$VALUES[]) == 4
this.kitrobot.getClass().getName() != this.partsrobot.getClass().getName()
this.kitrobot.getClass().getName() != this.fcs.getClass().getName()
this.kitrobot.getClass().getName() != agent.StandAgent$StandStatus.$VALUES.getClass().getName()
this.kitrobot.getClass().getName() != this.console.messageQueue.getClass().getName()
this.partsrobot.getClass().getName() != this.fcs.getClass().getName()
this.partsrobot.getClass().getName() != agent.StandAgent$StandStatus.$VALUES.getClass().getName()
this.partsrobot.getClass().getName() != this.console.messageQueue.getClass().getName()
this.fcs.getClass().getName() != agent.StandAgent$StandStatus.$VALUES.getClass().getName()
this.fcs.getClass().getName() != this.console.messageQueue.getClass().getName()
agent.StandAgent$StandStatus.$VALUES.getClass().getName() != this.console.messageQueue.getClass().getName()
===========================================================================
agent.StandAgent.StandAgent(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Stand"
===========================================================================
agent.StandAgent.StandAgent(java.lang.String):::EXIT
this.name == orig(arg0)
arg0.toString == orig(arg0.toString)
this.kitrobot == null
this.partsrobot == null
this.fcs == null
this.agentThread == null
this.console == null
arg0.toString == "Stand"
===========================================================================
agent.StandAgent.getName():::ENTER
this.kitrobot has only one value
this.partsrobot has only one value
this.fcs has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.StandAgent.getName():::EXIT
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.partsrobot == orig(this.partsrobot)
this.partsrobot.getClass().getName() == orig(this.partsrobot.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.getClass().getName() == orig(this.fcs.getClass().getName())
this.name == return
this.name.toString == orig(this.name.toString)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsMade == orig(this.numKitsMade)
this.oldLocForKitBeingInspected == orig(this.oldLocForKitBeingInspected)
this.start == orig(this.start)
agent.StandAgent$StandStatus.IDLE == orig(this.status)
agent.StandAgent$StandStatus.IDLE == orig(agent.StandAgent$StandStatus.IDLE)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == orig(agent.StandAgent$StandStatus.$VALUES.getClass().getName())
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
return == orig(this.name)
this.kitrobot has only one value
this.partsrobot has only one value
this.fcs has only one value
this.agentThread == null
this.console has only one value
return has only one value
return.toString == "Stand"
===========================================================================
agent.StandAgent.pickAndExecuteAnAction():::ENTER
this.kitrobot has only one value
this.partsrobot has only one value
this.fcs has only one value
this.agentThread has only one value
this.console has only one value
===========================================================================
agent.StandAgent.pickAndExecuteAnAction():::EXIT234
===========================================================================
agent.StandAgent.pickAndExecuteAnAction():::EXIT234;condition="not(return == true)"
===========================================================================
agent.StandAgent.pickAndExecuteAnAction():::EXIT
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.partsrobot == orig(this.partsrobot)
this.partsrobot.getClass().getName() == orig(this.partsrobot.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.getClass().getName() == orig(this.fcs.getClass().getName())
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsMade == orig(this.numKitsMade)
this.oldLocForKitBeingInspected == orig(this.oldLocForKitBeingInspected)
this.start == orig(this.start)
agent.StandAgent$StandStatus.IDLE == orig(this.status)
agent.StandAgent$StandStatus.IDLE == orig(agent.StandAgent$StandStatus.IDLE)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == orig(agent.StandAgent$StandStatus.$VALUES.getClass().getName())
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.agentThread.goOn == orig(this.agentThread.goOn)
agent.Agent.this == orig(agent.Agent.this)
agent.Agent.this.getClass().getName() == orig(agent.Agent.this.getClass().getName())
agent.Agent.this.stateChange == orig(agent.Agent.this.stateChange)
agent.Agent.this.agentThread == orig(agent.Agent.this.agentThread)
agent.Agent.this.console == orig(agent.Agent.this.console)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.partsrobot has only one value
this.fcs has only one value
this.agentThread has only one value
this.console has only one value
return == false
===========================================================================
agent.StandAgent.pickAndExecuteAnAction():::EXIT;condition="not(return == true)"
===========================================================================
agent.StandAgent.setFCS(agent.interfaces.FCS):::ENTER
this.kitrobot has only one value
this.partsrobot == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.FCSAgent.class
===========================================================================
agent.StandAgent.setFCS(agent.interfaces.FCS):::EXIT
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.partsrobot == orig(this.partsrobot)
this.fcs == orig(arg0)
this.fcs.getClass().getName() == orig(arg0.getClass().getName())
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsMade == orig(this.numKitsMade)
this.oldLocForKitBeingInspected == orig(this.oldLocForKitBeingInspected)
this.start == orig(this.start)
agent.StandAgent$StandStatus.IDLE == orig(this.status)
agent.StandAgent$StandStatus.IDLE == orig(agent.StandAgent$StandStatus.IDLE)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == orig(agent.StandAgent$StandStatus.$VALUES.getClass().getName())
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.partsrobot == null
this.fcs has only one value
this.agentThread == null
this.console has only one value
===========================================================================
agent.StandAgent.setKitrobot(agent.interfaces.KitRobot):::ENTER
this.kitrobot == null
this.partsrobot == null
this.fcs == null
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.KitRobotAgent.class
===========================================================================
agent.StandAgent.setKitrobot(agent.interfaces.KitRobot):::EXIT
this.kitrobot == orig(arg0)
this.kitrobot.getClass().getName() == orig(arg0.getClass().getName())
this.partsrobot == orig(this.partsrobot)
this.fcs == orig(this.fcs)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsMade == orig(this.numKitsMade)
this.oldLocForKitBeingInspected == orig(this.oldLocForKitBeingInspected)
this.start == orig(this.start)
agent.StandAgent$StandStatus.IDLE == orig(this.status)
agent.StandAgent$StandStatus.IDLE == orig(agent.StandAgent$StandStatus.IDLE)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == orig(agent.StandAgent$StandStatus.$VALUES.getClass().getName())
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.partsrobot == null
this.fcs == null
this.agentThread == null
this.console has only one value
===========================================================================
agent.StandAgent.setPartsRobot(agent.interfaces.PartsRobot):::ENTER
this.kitrobot has only one value
this.partsrobot == null
this.fcs has only one value
this.agentThread == null
this.console has only one value
arg0 has only one value
arg0.getClass().getName() == agent.PartsRobotAgent.class
===========================================================================
agent.StandAgent.setPartsRobot(agent.interfaces.PartsRobot):::EXIT
this.kitrobot == orig(this.kitrobot)
this.kitrobot.getClass().getName() == orig(this.kitrobot.getClass().getName())
this.partsrobot == orig(arg0)
this.partsrobot.getClass().getName() == orig(arg0.getClass().getName())
this.fcs == orig(this.fcs)
this.fcs.getClass().getName() == orig(this.fcs.getClass().getName())
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.MyKits == orig(this.MyKits)
this.MyKits[] == orig(this.MyKits[])
this.numKitsToMake == orig(this.numKitsToMake)
this.numKitsMade == orig(this.numKitsMade)
this.oldLocForKitBeingInspected == orig(this.oldLocForKitBeingInspected)
this.start == orig(this.start)
agent.StandAgent$StandStatus.IDLE == orig(this.status)
agent.StandAgent$StandStatus.IDLE == orig(agent.StandAgent$StandStatus.IDLE)
agent.StandAgent$StandStatus.NEED_TO_INITIALIZE == orig(agent.StandAgent$StandStatus.NEED_TO_INITIALIZE)
agent.StandAgent$StandStatus.KIT_REQUESTED == orig(agent.StandAgent$StandStatus.KIT_REQUESTED)
agent.StandAgent$StandStatus.DONE == orig(agent.StandAgent$StandStatus.DONE)
agent.StandAgent$StandStatus.$VALUES == orig(agent.StandAgent$StandStatus.$VALUES)
agent.StandAgent$StandStatus.$VALUES.getClass().getName() == orig(agent.StandAgent$StandStatus.$VALUES.getClass().getName())
agent.StandAgent$StandStatus.$VALUES[] == orig(agent.StandAgent$StandStatus.$VALUES[])
this.stateChange == orig(this.stateChange)
this.agentThread == orig(this.agentThread)
this.console == orig(this.console)
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.console.name == orig(this.console.name)
this.console.name.toString == orig(this.console.name.toString)
this.console.stateChange == orig(this.console.stateChange)
this.console.consoleWriterThread == orig(this.console.consoleWriterThread)
this.console.consoleWriterThread.goOn == orig(this.console.consoleWriterThread.goOn)
Utils.ConsoleWriter.this == orig(Utils.ConsoleWriter.this)
this.console.messageQueue == orig(this.console.messageQueue)
this.console.messageQueue.getClass().getName() == orig(this.console.messageQueue.getClass().getName())
this.kitrobot has only one value
this.partsrobot has only one value
this.fcs has only one value
this.agentThread == null
this.console has only one value
===========================================================================
factory.FCS:::OBJECT
this.agent == this.server.fcsAgent
this.agent.nests == this.server.fcsAgent.nests
this.agent.state == agent.FCSAgent$myState.PENDING
agent.FCSAgent$myState.PENDING == this.server.fcsAgent.state
this.agent.orders == this.server.fcsAgent.orders
this.agent.numOrdersFinished == this.server.fcsAgent.numOrdersFinished
this.agent.partTypeCount == this.server.fcsAgent.partTypeCount
this.agent.name == this.server.fcsAgent.name
this.agent.binsSet == this.server.fcsAgent.binsSet
this.agent.binsToAdd == this.server.fcsAgent.binsToAdd
this.agent.stateChange == this.server.fcsAgent.stateChange
this has only one value
this.queue has only one value
this.queue[] == []
this.queue[].getClass().getName() == []
this.kitConfigs has only one value
this.kitConfigs[] contains no nulls and has only one value, of length 5
this.kitConfigs[].getClass().getName() == [factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig, factory.KitConfig]
this.kitConfigs[].getClass().getName() elements == factory.KitConfig.class
this.partTypes has only one value
this.partTypes[] contains no nulls and has only one value, of length 10
this.partTypes[].getClass().getName() == [factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType, factory.PartType]
this.partTypes[].getClass().getName() elements == factory.PartType.class
this.agent has only one value
this.agent.stand == null
this.agent.partsRobot == null
this.agent.gantry == null
this.agent.nests has only one value
this.agent.nests[] == []
this.agent.nests[].getClass().getName() == []
this.agent.conveyor == null
agent.FCSAgent$myState.PENDING has only one value
agent.FCSAgent$myState.STARTED has only one value
agent.FCSAgent$myState.LOADED has only one value
agent.FCSAgent$myState.$VALUES has only one value
agent.FCSAgent$myState.$VALUES.getClass().getName() == agent.FCSAgent$myState[].class
agent.FCSAgent$myState.$VALUES[] contains no nulls and has only one value, of length 3
agent.FCSAgent$myState.$VALUES[].getClass().getName() == [agent.FCSAgent.myState, agent.FCSAgent.myState, agent.FCSAgent.myState]
agent.FCSAgent$myState.$VALUES[].getClass().getName() elements == agent.FCSAgent.myState.class
this.agent.orders has only one value
this.agent.orders[] == []
this.agent.orders[].getClass().getName() == []
this.agent.orders.getClass().getName() == java.util.ArrayList.class
this.agent.numOrdersFinished == 0
this.agent.camera == null
this.agent.partTypeCount == 0
this.agent.fcs == null
this.agent.name has only one value
this.agent.name.toString == "FCS"
this.agent.binsSet == false
this.agent.binsToAdd has only one value
this.agent.binsToAdd[] == []
this.agent.binsToAdd[].getClass().getName() == []
this.agent.stateChange has only one value
this.agent.agentThread == null
this.agent.console == null
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
this.server has only one value
this.server.ss == null
this.server.s == null
this.server.factProdMngrReader == null
this.server.factProdMngrWriter has only one value
this.server.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
this.server.partsMngrReader == null
this.server.partsMngrWriter has only one value
this.server.kitMngrReader == null
this.server.kitMngrWriter has only one value
this.server.gantryRobotMngrReader == null
this.server.gantryRobotMngrWriter has only one value
this.server.kitAssemblyMngrReader == null
this.server.kitAssemblyMngrWriter has only one value
this.server.laneMngrReader == null
this.server.laneMngrWriter has only one value
this.server.kitRobotMngrReader == null
this.server.kitRobotMngrWriter has only one value
this.server.partsRobotMngrReader == null
this.server.partsRobotMngrWriter has only one value
this.server.numClients == 0
this.server.devices has only one value
this.server.agents has only one value
this.server.fcs == null
this.server.fcsAgent.stand == null
this.server.fcsAgent.partsRobot == null
this.server.fcsAgent.gantry == null
this.server.fcsAgent.nests[] == []
this.server.fcsAgent.nests[].getClass().getName() == []
this.server.fcsAgent.conveyor == null
this.server.fcsAgent.orders[] == []
this.server.fcsAgent.orders[].getClass().getName() == []
this.server.fcsAgent.camera == null
this.server.fcsAgent.fcs == null
this.server.fcsAgent.name.toString == "FCS"
this.server.fcsAgent.binsToAdd[] == []
this.server.fcsAgent.binsToAdd[].getClass().getName() == []
this.server.fcsAgent.agentThread == null
this.server.fcsAgent.console == null
this.server.console has only one value
this.server.console.name has only one value
this.server.console.name.toString == "Server"
this.server.console.stateChange has only one value
this.server.console.consoleWriterThread has only one value
this.server.console.messageQueue has only one value
this.server.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
this.productionStarted == false
this.completed == null
size(this.kitConfigs[]) == 5
size(this.partTypes[]) == 10
size(agent.FCSAgent$myState.$VALUES[]) == 3
===========================================================================
factory.FCS.FCS(Networking.Server, agent.Agent):::ENTER
arg0.fcsAgent.stateChange == arg1.stateChange
arg0 has only one value
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs == null
arg0.fcsAgent has only one value
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests has only one value
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.state has only one value
arg0.fcsAgent.orders has only one value
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.orders.getClass().getName() == java.util.ArrayList.class
arg0.fcsAgent.numOrdersFinished == 0
arg0.fcsAgent.camera == null
arg0.fcsAgent.partTypeCount == 0
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name has only one value
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsSet == false
arg0.fcsAgent.binsToAdd has only one value
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
Utils.ConsoleWriter.consoleID has only one value
Utils.ConsoleWriter.consoleID.toString == ""
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1 has only one value
arg1.getClass().getName() == agent.FCSAgent.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
===========================================================================
factory.FCS.FCS(Networking.Server, agent.Agent):::EXIT
this.agent == arg0.fcsAgent
this.agent == orig(arg0.fcsAgent)
this.agent.nests == arg0.fcsAgent.nests
this.agent.nests == orig(arg0.fcsAgent.nests)
agent.FCSAgent$myState.PENDING == arg0.fcsAgent.state
agent.FCSAgent$myState.PENDING == orig(arg0.fcsAgent.state)
this.agent.orders == arg0.fcsAgent.orders
this.agent.orders == orig(arg0.fcsAgent.orders)
this.agent.numOrdersFinished == arg0.fcsAgent.numOrdersFinished
this.agent.numOrdersFinished == orig(arg0.fcsAgent.numOrdersFinished)
this.agent.partTypeCount == arg0.fcsAgent.partTypeCount
this.agent.partTypeCount == orig(arg0.fcsAgent.partTypeCount)
this.agent.name == arg0.fcsAgent.name
this.agent.name == orig(arg0.fcsAgent.name)
this.agent.binsSet == arg0.fcsAgent.binsSet
this.agent.binsSet == orig(arg0.fcsAgent.binsSet)
this.agent.binsToAdd == arg0.fcsAgent.binsToAdd
this.agent.binsToAdd == orig(arg0.fcsAgent.binsToAdd)
this.agent.stateChange == arg1.stateChange
Utils.ConsoleWriter.consoleID == orig(Utils.ConsoleWriter.consoleID)
Utils.ConsoleWriter.consoleID.toString == orig(Utils.ConsoleWriter.consoleID.toString)
this.server == orig(arg0)
this.server.factProdMngrWriter == arg0.factProdMngrWriter
this.server.partsMngrWriter == arg0.partsMngrWriter
this.server.kitMngrWriter == arg0.kitMngrWriter
this.server.gantryRobotMngrWriter == arg0.gantryRobotMngrWriter
this.server.kitAssemblyMngrWriter == arg0.kitAssemblyMngrWriter
this.server.laneMngrWriter == arg0.laneMngrWriter
this.server.kitRobotMngrWriter == arg0.kitRobotMngrWriter
this.server.partsRobotMngrWriter == arg0.partsRobotMngrWriter
this.server.numClients == arg0.numClients
this.server.devices == arg0.devices
this.server.agents == arg0.agents
this.server.fcsAgent.stateChange == arg1.stateChange
this.server.console == arg0.console
this.server.console.name == arg0.console.name
this.server.console.stateChange == arg0.console.stateChange
this.server.console.consoleWriterThread == arg0.console.consoleWriterThread
this.server.console.messageQueue == arg0.console.messageQueue
arg0.ss == orig(arg0.ss)
arg0.s == orig(arg0.s)
arg0.factProdMngrReader == orig(arg0.factProdMngrReader)
arg0.factProdMngrWriter == orig(arg0.factProdMngrWriter)
arg0.partsMngrReader == orig(arg0.partsMngrReader)
arg0.partsMngrWriter == orig(arg0.partsMngrWriter)
arg0.kitMngrReader == orig(arg0.kitMngrReader)
arg0.kitMngrWriter == orig(arg0.kitMngrWriter)
arg0.gantryRobotMngrReader == orig(arg0.gantryRobotMngrReader)
arg0.gantryRobotMngrWriter == orig(arg0.gantryRobotMngrWriter)
arg0.kitAssemblyMngrReader == orig(arg0.kitAssemblyMngrReader)
arg0.kitAssemblyMngrWriter == orig(arg0.kitAssemblyMngrWriter)
arg0.laneMngrReader == orig(arg0.laneMngrReader)
arg0.laneMngrWriter == orig(arg0.laneMngrWriter)
arg0.kitRobotMngrReader == orig(arg0.kitRobotMngrReader)
arg0.kitRobotMngrWriter == orig(arg0.kitRobotMngrWriter)
arg0.partsRobotMngrReader == orig(arg0.partsRobotMngrReader)
arg0.partsRobotMngrWriter == orig(arg0.partsRobotMngrWriter)
arg0.numClients == orig(arg0.numClients)
arg0.devices == orig(arg0.devices)
arg0.agents == orig(arg0.agents)
arg0.fcs == orig(arg0.fcs)
arg0.fcsAgent.stand == orig(arg0.fcsAgent.stand)
arg0.fcsAgent.partsRobot == orig(arg0.fcsAgent.partsRobot)
arg0.fcsAgent.gantry == orig(arg0.fcsAgent.gantry)
arg0.fcsAgent.nests[] == orig(arg0.fcsAgent.nests[])
arg0.fcsAgent.conveyor == orig(arg0.fcsAgent.conveyor)
arg0.fcsAgent.orders[] == orig(arg0.fcsAgent.orders[])
arg0.fcsAgent.camera == orig(arg0.fcsAgent.camera)
arg0.fcsAgent.fcs == orig(arg0.fcsAgent.fcs)
arg0.fcsAgent.name.toString == orig(arg0.fcsAgent.name.toString)
arg0.fcsAgent.binsToAdd[] == orig(arg0.fcsAgent.binsToAdd[])
arg0.fcsAgent.stateChange == arg1.stateChange
arg0.fcsAgent.agentThread == orig(arg0.fcsAgent.agentThread)
arg0.fcsAgent.console == orig(arg0.fcsAgent.console)
arg0.console == orig(arg0.console)
arg0.console.name == orig(arg0.console.name)
arg0.console.name.toString == orig(arg0.console.name.toString)
arg0.console.stateChange == orig(arg0.console.stateChange)
arg0.console.consoleWriterThread == orig(arg0.console.consoleWriterThread)
arg0.console.messageQueue == orig(arg0.console.messageQueue)
arg1.stateChange == orig(arg0.fcsAgent.stateChange)
arg1.stateChange == orig(arg1.stateChange)
arg1.agentThread == orig(arg1.agentThread)
arg1.console == orig(arg1.console)
arg0.ss == null
arg0.s == null
arg0.factProdMngrReader == null
arg0.factProdMngrWriter has only one value
arg0.factProdMngrWriter.getClass().getName() == Networking.DummyWriter.class
arg0.partsMngrReader == null
arg0.partsMngrWriter has only one value
arg0.kitMngrReader == null
arg0.kitMngrWriter has only one value
arg0.gantryRobotMngrReader == null
arg0.gantryRobotMngrWriter has only one value
arg0.kitAssemblyMngrReader == null
arg0.kitAssemblyMngrWriter has only one value
arg0.laneMngrReader == null
arg0.laneMngrWriter has only one value
arg0.kitRobotMngrReader == null
arg0.kitRobotMngrWriter has only one value
arg0.partsRobotMngrReader == null
arg0.partsRobotMngrWriter has only one value
arg0.numClients == 0
arg0.devices has only one value
arg0.agents has only one value
arg0.fcs == null
arg0.fcsAgent.stand == null
arg0.fcsAgent.partsRobot == null
arg0.fcsAgent.gantry == null
arg0.fcsAgent.nests[] == []
arg0.fcsAgent.nests[].getClass().getName() == []
arg0.fcsAgent.conveyor == null
arg0.fcsAgent.orders[] == []
arg0.fcsAgent.orders[].getClass().getName() == []
arg0.fcsAgent.camera == null
arg0.fcsAgent.fcs == null
arg0.fcsAgent.name.toString == "FCS"
arg0.fcsAgent.binsToAdd[] == []
arg0.fcsAgent.binsToAdd[].getClass().getName() == []
arg0.fcsAgent.agentThread == null
arg0.fcsAgent.console == null
arg0.console has only one value
arg0.console.name has only one value
arg0.console.name.toString == "Server"
arg0.console.stateChange has only one value
arg0.console.consoleWriterThread has only one value
arg0.console.messageQueue has only one value
arg0.console.messageQueue.getClass().getName() == java.util.concurrent.LinkedBlockingQueue.class
arg1.stateChange has only one value
arg1.agentThread == null
arg1.console == null
===========================================================================
factory.KitConfig:::OBJECT
this.config != null
this.id != null
this.name != null
this.location != null
this.location.x == 0.0
this.location.y == 0.0
this.standId == -1
===========================================================================
factory.KitConfig.KitConfig(java.lang.String):::ENTER
===========================================================================
factory.KitConfig.KitConfig(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
factory.KitConfig.KitConfig(java.lang.String, factory.PartType[]):::ENTER
arg1.getClass().getName() == factory.PartType[].class
arg1[].badChance elements == 0.0
arg1[].badChance one of { [0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }
arg1[].invisible elements == false
arg1[].invisible one of { [0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0] }
size(arg1[]) one of { 2, 4, 8 }
===========================================================================
factory.KitConfig.KitConfig(java.lang.String, factory.PartType[]):::EXIT
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg1[].name == orig(arg1[].name)
arg1[].id == orig(arg1[].id)
arg1[].partNum == orig(arg1[].partNum)
arg1[].badChance == orig(arg1[].badChance)
arg1[].description == orig(arg1[].description)
arg1[].imagePath == orig(arg1[].imagePath)
arg1[].invisible == orig(arg1[].invisible)
arg1[].badChance elements == 0.0
arg1[].badChance one of { [0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] }
arg1[].invisible elements == false
arg1[].invisible one of { [0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0] }
===========================================================================
factory.KitConfig.KitConfig(java.lang.String, java.util.List):::ENTER
arg1[].getClass().getName() elements == factory.PartType.class
arg1.getClass().getName() == java.util.Arrays$ArrayList.class
size(arg1[]) one of { 2, 4, 8 }
===========================================================================
factory.KitConfig.KitConfig(java.lang.String, java.util.List):::EXIT
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg1[].getClass().getName() elements == factory.PartType.class
===========================================================================
factory.PartType:::CLASS
===========================================================================
factory.PartType:::OBJECT
this.badChance == 0.0
this.invisible == false
===========================================================================
factory.PartType.PartType(java.lang.String, int, java.lang.String):::ENTER
===========================================================================
factory.PartType.PartType(java.lang.String, int, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
Exiting Daikon.
