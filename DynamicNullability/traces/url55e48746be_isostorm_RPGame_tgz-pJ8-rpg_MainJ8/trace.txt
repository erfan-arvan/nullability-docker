Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
rpg.Main.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
rpg.Main.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
rpg.creature.Anchor:::OBJECT
this.holder != null
rpg.creature.Creature.strengthPrecision == 2
this.holder.strength one of { 1.0, 10.0 }
this.holder.name != null
this.holder.name.toString one of { "Destroyer o'Hope", "James" }
this.holder.hitpoints one of { 11, 41, 103 }
this.holder.treasure != null
this.holder.treasure[] elements != null
this.holder.maximumHitpoints one of { 41, 103 }
this.holder.anchors != null
this.holder.anchors[] elements != null
this.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
this.holder.isTerminated == false
this.holder.getClass().getName() != this.item.getClass().getName()
this.holder.hitpoints <= this.holder.maximumHitpoints
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, java.lang.String):::ENTER
arg0.hitpoints == arg0.maximumHitpoints
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Hero.class
rpg.creature.Creature.strengthPrecision == 2
arg0.strength == 10.0
arg0.name has only one value
arg0.name.toString == "James"
arg0.hitpoints == 103
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
arg1.toString one of { "back", "leftHand", "rightHand" }
size(arg0.anchors[]) one of { 2, 3, 4 }
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, java.lang.String):::EXIT
this.holder == orig(arg0)
this.holder.getClass().getName() == orig(arg0.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == arg0.strength
this.holder.name == arg0.name
this.holder.hitpoints == arg0.hitpoints
this.holder.treasure == arg0.treasure
this.holder.maximumHitpoints == arg0.hitpoints
this.holder.anchors == arg0.anchors
this.holder.isTerminated == arg0.isTerminated
this.name == orig(arg1)
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == arg0.maximumHitpoints
arg0.hitpoints == orig(arg0.hitpoints)
arg0.hitpoints == orig(arg0.maximumHitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.treasure[] == orig(arg0.treasure[])
arg0.anchors == orig(arg0.anchors)
arg0.isTerminated == orig(arg0.isTerminated)
arg1.toString == orig(arg1.toString)
size(arg0.anchors[])-1 == orig(size(arg0.anchors[]))
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Hero.class
this.holder.name.toString == "James"
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.name.toString one of { "back", "leftHand", "rightHand" }
this.item == null
arg0.strength == 10.0
arg0.name has only one value
arg0.name.toString == "James"
arg0.hitpoints == 103
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
arg1.toString one of { "back", "leftHand", "rightHand" }
size(this.holder.anchors[]) one of { 3, 4, 5 }
size(arg0.anchors[]) one of { 3, 4, 5 }
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, java.lang.String, rpg.item.Item):::ENTER
arg0.hitpoints == arg0.maximumHitpoints
rpg.creature.Creature.strengthPrecision == 2
arg0.strength one of { 1.0, 10.0 }
arg0.name.toString one of { "Destroyer o'Hope", "James" }
arg0.hitpoints one of { 41, 103 }
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
arg1.toString one of { "belt", "body" }
size(arg0.anchors[]) one of { 0, 1, 2 }
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, java.lang.String, rpg.item.Item):::EXIT
this.holder == orig(arg0)
this.holder.getClass().getName() == orig(arg0.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == arg0.strength
this.holder.name == arg0.name
this.holder.hitpoints == arg0.hitpoints
this.holder.treasure == arg0.treasure
this.holder.maximumHitpoints == arg0.hitpoints
this.holder.anchors == arg0.anchors
this.holder.isTerminated == arg0.isTerminated
this.name == orig(arg1)
this.item == orig(arg2)
this.item.getClass().getName() == orig(arg2.getClass().getName())
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == arg0.maximumHitpoints
arg0.hitpoints == orig(arg0.hitpoints)
arg0.hitpoints == orig(arg0.maximumHitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.treasure[] == orig(arg0.treasure[])
arg0.anchors == orig(arg0.anchors)
arg0.isTerminated == orig(arg0.isTerminated)
arg1.toString == orig(arg1.toString)
size(arg0.anchors[])-1 == orig(size(arg0.anchors[]))
this.isTerminated == false
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.name.toString one of { "belt", "body" }
arg0.strength one of { 1.0, 10.0 }
arg0.name.toString one of { "Destroyer o'Hope", "James" }
arg0.hitpoints one of { 41, 103 }
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
arg1.toString one of { "belt", "body" }
size(this.holder.anchors[]) one of { 1, 2, 3 }
size(arg0.anchors[]) one of { 1, 2, 3 }
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, rpg.item.Item):::ENTER
arg0.hitpoints == arg0.maximumHitpoints
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Monster.class
rpg.creature.Creature.strengthPrecision == 2
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 41
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
size(arg0.anchors[]) one of { 0, 1, 2 }
===========================================================================
rpg.creature.Anchor.Anchor(rpg.creature.Creature, rpg.item.Item):::EXIT
this.holder == orig(arg0)
this.holder.getClass().getName() == orig(arg0.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == arg0.strength
this.holder.name == arg0.name
this.holder.hitpoints == arg0.hitpoints
this.holder.treasure == arg0.treasure
this.holder.maximumHitpoints == arg0.hitpoints
this.holder.anchors == arg0.anchors
this.holder.isTerminated == arg0.isTerminated
this.item == orig(arg1)
this.item.getClass().getName() == orig(arg1.getClass().getName())
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == arg0.maximumHitpoints
arg0.hitpoints == orig(arg0.hitpoints)
arg0.hitpoints == orig(arg0.maximumHitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.treasure[] == orig(arg0.treasure[])
arg0.anchors == orig(arg0.anchors)
arg0.isTerminated == orig(arg0.isTerminated)
size(arg0.anchors[])-1 == orig(size(arg0.anchors[]))
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Monster.class
this.holder.name.toString == "Destroyer o'Hope"
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.name == null
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 41
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
size(this.holder.anchors[]) one of { 1, 2, 3 }
size(arg0.anchors[]) one of { 1, 2, 3 }
===========================================================================
rpg.creature.Anchor.addItem(rpg.item.Item):::ENTER
this.holder.hitpoints == this.holder.maximumHitpoints
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.item == null
this.holder.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.creature.Anchor.addItem(rpg.item.Item):::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == this.holder.maximumHitpoints
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.hitpoints == orig(this.holder.maximumHitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.item == orig(arg0)
this.item.getClass().getName() == orig(arg0.getClass().getName())
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::ENTER
this.holder.hitpoints == this.holder.maximumHitpoints
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
arg0 != null
this.holder.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT207
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Hero.class
this.holder.strength == 10.0
this.holder.name has only one value
this.holder.name.toString == "James"
this.holder.hitpoints == 103
this.holder.treasure has only one value
this.holder.anchors has only one value
this.holder.anchors[] contains no nulls and has only one value, of length 5
this.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.name != null
this.item != null
return == false
size(this.holder.anchors[]) == 5
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT207;condition="not(return == true)"
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT210
this.item == null
return == true
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT210;condition="return == true"
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == this.holder.maximumHitpoints
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.hitpoints == orig(this.holder.maximumHitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.item == orig(this.item)
this.item.getClass().getName() == orig(this.item.getClass().getName())
(this.item != null)  <==>  (return == false)
(this.item != null)  ==>  (size(this.holder.anchors[]) == 5)
(this.item != null)  ==>  (this.holder has only one value)
(this.item != null)  ==>  (this.holder.anchors has only one value)
(this.item != null)  ==>  (this.holder.anchors[] contains no nulls and has only one value, of length 5)
(this.item != null)  ==>  (this.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor])
(this.item != null)  ==>  (this.holder.getClass().getName() != this.item.getClass().getName())
(this.item != null)  ==>  (this.holder.getClass().getName() == rpg.creature.Hero.class)
(this.item != null)  ==>  (this.holder.hitpoints == 103)
(this.item != null)  ==>  (this.holder.name has only one value)
(this.item != null)  ==>  (this.holder.name.toString == "James")
(this.item != null)  ==>  (this.holder.strength == 10.0)
(this.item != null)  ==>  (this.holder.treasure has only one value)
(this.item != null)  ==>  (this.name != null)
(this.item == null)  <==>  (return == true)
(this.item == null)  ==>  (this.holder.hitpoints one of { 41, 103 })
(this.item == null)  ==>  (this.holder.name.toString one of { "Destroyer o'Hope", "James" })
(this.item == null)  ==>  (this.holder.strength one of { 1.0, 10.0 })
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.holder.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT;condition="return == true"
this.item == null
return == true
===========================================================================
rpg.creature.Anchor.canAddItem(rpg.item.Item):::EXIT;condition="not(return == true)"
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Hero.class
this.holder.strength == 10.0
this.holder.name has only one value
this.holder.name.toString == "James"
this.holder.hitpoints == 103
this.holder.treasure has only one value
this.holder.anchors has only one value
this.holder.anchors[] contains no nulls and has only one value, of length 5
this.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.name != null
this.item != null
return == false
size(this.holder.anchors[]) == 5
===========================================================================
rpg.creature.Anchor.getHolder():::ENTER
this.isTerminated == false
this.holder.treasure[].getClass().getName() one of { [], [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack] }
size(this.holder.treasure[]) one of { 0, 3 }
this.item.getClass().getName() in this.holder.treasure[].getClass().getName()
===========================================================================
rpg.creature.Anchor.getHolder():::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == return
this.holder.getClass().getName() == return.getClass().getName()
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == return.strength
this.holder.name == return.name
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == return.hitpoints
this.holder.treasure == return.treasure
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.maximumHitpoints == return.maximumHitpoints
this.holder.anchors == return.anchors
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == return.isTerminated
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.item == orig(this.item)
this.item.getClass().getName() == orig(this.item.getClass().getName())
return == orig(this.holder)
return.getClass().getName() == orig(this.holder.getClass().getName())
return.strength == orig(this.holder.strength)
return.name == orig(this.holder.name)
return.hitpoints == orig(this.holder.hitpoints)
return.treasure == orig(this.holder.treasure)
return.maximumHitpoints == orig(this.holder.maximumHitpoints)
return.anchors == orig(this.holder.anchors)
return.isTerminated == orig(this.holder.isTerminated)
this.isTerminated == false
this.holder.treasure[].getClass().getName() one of { [], [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack] }
return != null
return.strength one of { 1.0, 10.0 }
return.name != null
return.name.toString one of { "Destroyer o'Hope", "James" }
return.hitpoints one of { 11, 41, 103 }
return.treasure != null
return.treasure[] elements != null
return.treasure[].getClass().getName() one of { [], [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack] }
return.maximumHitpoints one of { 41, 103 }
return.anchors != null
return.anchors[] elements != null
return.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
return.isTerminated == false
size(this.holder.treasure[]) one of { 0, 3 }
size(return.treasure[]) one of { 0, 3 }
this.item.getClass().getName() in this.holder.treasure[].getClass().getName()
this.item.getClass().getName() in return.treasure[].getClass().getName()
return.hitpoints <= return.maximumHitpoints
===========================================================================
rpg.creature.Anchor.getItem():::ENTER
this.isTerminated == false
===========================================================================
rpg.creature.Anchor.getItem():::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.maximumHitpoints == orig(this.holder.maximumHitpoints)
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.item == return
this.item.getClass().getName() == return.getClass().getName()
return == orig(this.item)
return.getClass().getName() == orig(this.item.getClass().getName())
this.isTerminated == false
this.holder.getClass().getName() != return.getClass().getName()
===========================================================================
rpg.creature.Anchor.getName():::ENTER
this.holder.hitpoints == this.holder.maximumHitpoints
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Hero.class
this.holder.strength == 10.0
this.holder.name has only one value
this.holder.name.toString == "James"
this.holder.hitpoints == 103
this.holder.treasure has only one value
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.holder.anchors has only one value
this.holder.anchors[] contains no nulls and has only one value, of length 5
this.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.name != null
size(this.holder.anchors[]) == 5
===========================================================================
rpg.creature.Anchor.getName():::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == this.holder.maximumHitpoints
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.hitpoints == orig(this.holder.maximumHitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == return
this.name.toString == orig(this.name.toString)
this.item == orig(this.item)
this.item.getClass().getName() == orig(this.item.getClass().getName())
return == orig(this.name)
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Hero.class
this.holder.strength == 10.0
this.holder.name has only one value
this.holder.name.toString == "James"
this.holder.hitpoints == 103
this.holder.treasure has only one value
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.holder.anchors has only one value
this.holder.anchors[] contains no nulls and has only one value, of length 5
this.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
return != null
size(this.holder.anchors[]) == 5
===========================================================================
rpg.creature.Anchor.removeItem():::ENTER
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Monster.class
this.holder.strength == 1.0
this.holder.name has only one value
this.holder.name.toString == "Destroyer o'Hope"
this.holder.hitpoints == 11
this.holder.treasure has only one value
this.holder.treasure[] contains no nulls and has only one value, of length 3
this.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.holder.maximumHitpoints == 41
this.holder.anchors has only one value
this.name == null
size(this.holder.treasure[]) == 3
size(this.holder.anchors[]) one of { 0, 1, 2 }
this.item.getClass().getName() in this.holder.treasure[].getClass().getName()
===========================================================================
rpg.creature.Anchor.removeItem():::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.maximumHitpoints == orig(this.holder.maximumHitpoints)
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Monster.class
this.holder.strength == 1.0
this.holder.name has only one value
this.holder.name.toString == "Destroyer o'Hope"
this.holder.hitpoints == 11
this.holder.treasure has only one value
this.holder.treasure[] contains no nulls and has only one value, of length 3
this.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.holder.maximumHitpoints == 41
this.holder.anchors has only one value
this.name == null
this.item == null
size(this.holder.treasure[]) == 3
size(this.holder.anchors[]) one of { 0, 1, 2 }
orig(this.item.getClass().getName()) in this.holder.treasure[].getClass().getName()
===========================================================================
rpg.creature.Anchor.setItem(rpg.item.Item):::ENTER
this.holder.hitpoints == this.holder.maximumHitpoints
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
this.item == null
this.holder.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.creature.Anchor.setItem(rpg.item.Item):::EXIT
this.isTerminated == orig(this.isTerminated)
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == this.holder.maximumHitpoints
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.hitpoints == orig(this.holder.maximumHitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.anchors == orig(this.holder.anchors)
this.holder.anchors[] == orig(this.holder.anchors[])
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.item == orig(arg0)
this.item.getClass().getName() == orig(arg0.getClass().getName())
this.isTerminated == false
this.holder.hitpoints one of { 41, 103 }
this.holder.treasure[] == []
this.holder.treasure[].getClass().getName() == []
===========================================================================
rpg.creature.Anchor.terminate():::ENTER
this.isTerminated == false
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Monster.class
this.holder.strength == 1.0
this.holder.name has only one value
this.holder.name.toString == "Destroyer o'Hope"
this.holder.hitpoints == 11
this.holder.treasure has only one value
this.holder.treasure[] contains no nulls and has only one value, of length 3
this.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.holder.maximumHitpoints == 41
this.holder.anchors has only one value
this.name == null
size(this.holder.treasure[]) == 3
size(this.holder.anchors[]) one of { 1, 2, 3 }
this.item.getClass().getName() in this.holder.treasure[].getClass().getName()
===========================================================================
rpg.creature.Anchor.terminate():::EXIT
this.holder == orig(this.holder)
this.holder.getClass().getName() == orig(this.holder.getClass().getName())
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.holder.strength == orig(this.holder.strength)
this.holder.name == orig(this.holder.name)
this.holder.name.toString == orig(this.holder.name.toString)
this.holder.hitpoints == orig(this.holder.hitpoints)
this.holder.treasure == orig(this.holder.treasure)
this.holder.treasure[] == orig(this.holder.treasure[])
this.holder.maximumHitpoints == orig(this.holder.maximumHitpoints)
this.holder.anchors == orig(this.holder.anchors)
this.holder.isTerminated == orig(this.holder.isTerminated)
this.name == orig(this.name)
size(this.holder.anchors[]) == orig(size(this.holder.anchors[]))-1
this.isTerminated == true
this.holder has only one value
this.holder.getClass().getName() == rpg.creature.Monster.class
this.holder.strength == 1.0
this.holder.name has only one value
this.holder.name.toString == "Destroyer o'Hope"
this.holder.hitpoints == 11
this.holder.treasure has only one value
this.holder.treasure[] contains no nulls and has only one value, of length 3
this.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.holder.maximumHitpoints == 41
this.holder.anchors has only one value
this.name == null
this.item == null
size(this.holder.treasure[]) == 3
orig(this.item.getClass().getName()) in this.holder.treasure[].getClass().getName()
===========================================================================
rpg.creature.Creature:::CLASS
rpg.creature.Creature.strengthPrecision == 2
===========================================================================
rpg.creature.Creature:::OBJECT
this.strength one of { 0.0, 1.0, 10.0 }
this.name.toString one of { "Destroyer o'Hope", "James" }
this.hitpoints >= 0
this.treasure[] elements != null
this.treasure[].getClass().getName() one of { [], [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack] }
this.maximumHitpoints one of { 0, 41, 103 }
this.anchors[] elements != null
this.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
size(this.treasure[]) one of { 0, 3 }
size(this.treasure[])-1 != 0
===========================================================================
rpg.creature.Creature.Creature(java.lang.String, int):::ENTER
arg0.toString one of { "Destroyer o'Hope", "James" }
arg1 one of { 41, 103 }
===========================================================================
rpg.creature.Creature.Creature(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
this.strength == 0.0
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == false
arg0.toString one of { "Destroyer o'Hope", "James" }
===========================================================================
rpg.creature.Creature.addAnchor(rpg.creature.Anchor):::ENTER
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
arg0.isTerminated == false
arg0.holder.strength one of { 1.0, 10.0 }
arg0.holder.name.toString one of { "Destroyer o'Hope", "James" }
arg0.holder.hitpoints one of { 41, 103 }
arg0.holder.treasure[] == []
arg0.holder.treasure[].getClass().getName() == []
arg0.holder.maximumHitpoints one of { 41, 103 }
arg0.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.holder.isTerminated == false
===========================================================================
rpg.creature.Creature.addAnchor(rpg.creature.Anchor):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.isTerminated == orig(arg0.isTerminated)
arg0.holder == orig(arg0.holder)
arg0.holder.getClass().getName() == orig(arg0.holder.getClass().getName())
arg0.holder.strength == orig(arg0.holder.strength)
arg0.holder.name == orig(arg0.holder.name)
arg0.holder.name.toString == orig(arg0.holder.name.toString)
arg0.holder.hitpoints == orig(arg0.holder.hitpoints)
arg0.holder.treasure == orig(arg0.holder.treasure)
arg0.holder.treasure[] == orig(arg0.holder.treasure[])
arg0.holder.maximumHitpoints == orig(arg0.holder.maximumHitpoints)
arg0.holder.anchors == orig(arg0.holder.anchors)
arg0.holder.isTerminated == orig(arg0.holder.isTerminated)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.item == orig(arg0.item)
arg0.item.getClass().getName() == orig(arg0.item.getClass().getName())
size(this.anchors[])-1 == orig(size(this.anchors[]))
size(arg0.holder.anchors[])-1 == orig(size(arg0.holder.anchors[]))
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
arg0.isTerminated == false
arg0.holder.strength one of { 1.0, 10.0 }
arg0.holder.name.toString one of { "Destroyer o'Hope", "James" }
arg0.holder.hitpoints one of { 41, 103 }
arg0.holder.treasure[] == []
arg0.holder.treasure[].getClass().getName() == []
arg0.holder.maximumHitpoints one of { 41, 103 }
arg0.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.holder.isTerminated == false
===========================================================================
rpg.creature.Creature.canAddItem(rpg.item.Item):::ENTER
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
===========================================================================
rpg.creature.Creature.canAddItem(rpg.item.Item):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
return == true
===========================================================================
rpg.creature.Creature.canAddItem(rpg.item.Item):::EXIT;condition="return == true"
===========================================================================
rpg.creature.Creature.canHaveAsName(java.lang.String):::ENTER
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints == 0
this.anchors == null
this.isTerminated == false
arg0.toString one of { "Destroyer o'Hope", "James" }
===========================================================================
rpg.creature.Creature.canHaveAsName(java.lang.String):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.toString == orig(arg0.toString)
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints == 0
this.anchors == null
this.isTerminated == false
arg0.toString one of { "Destroyer o'Hope", "James" }
return == true
===========================================================================
rpg.creature.Creature.canHaveAsName(java.lang.String):::EXIT;condition="return == true"
===========================================================================
rpg.creature.Creature.collect(rpg.creature.Creature, java.util.ArrayList):::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Hero.class
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Monster.class
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 11
arg0.treasure has only one value
arg0.treasure[] contains no nulls and has only one value, of length 3
arg0.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[] == []
arg0.anchors[].getClass().getName() == []
arg0.isTerminated == true
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 3
arg1[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
size(this.anchors[]) == 5
size(arg0.treasure[]) == 3
size(arg1[]) == 3
===========================================================================
rpg.creature.Creature.collect(rpg.creature.Creature, java.util.ArrayList):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == orig(arg0.hitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.maximumHitpoints == orig(arg0.maximumHitpoints)
arg0.anchors == orig(arg0.anchors)
arg0.anchors[] == orig(arg0.anchors[])
arg0.isTerminated == orig(arg0.isTerminated)
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 11
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[] == []
arg0.anchors[].getClass().getName() == []
arg0.isTerminated == true
arg1[] == []
arg1[].getClass().getName() == []
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.destroyTreasure():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.destroyTreasure():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
===========================================================================
rpg.creature.Creature.getAnchor(java.lang.String):::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Hero.class
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
arg0.toString one of { "body", "leftHand", "rightHand" }
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getAnchor(java.lang.String):::EXIT616
===========================================================================
rpg.creature.Creature.getAnchor(java.lang.String):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
arg0.toString == orig(arg0.toString)
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
arg0.toString one of { "body", "leftHand", "rightHand" }
return.isTerminated == false
return.holder has only one value
return.holder.getClass().getName() == rpg.creature.Hero.class
return.holder.strength == 10.0
return.holder.name has only one value
return.holder.name.toString == "James"
return.holder.hitpoints == 103
return.holder.treasure has only one value
return.holder.treasure[] == []
return.holder.treasure[].getClass().getName() == []
return.holder.maximumHitpoints == 103
return.holder.anchors has only one value
return.holder.anchors[] contains no nulls and has only one value, of length 5
return.holder.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
return.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
return.holder.isTerminated == false
return.name.toString one of { "body", "leftHand", "rightHand" }
size(this.anchors[]) == 5
size(return.holder.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getAnchors():::ENTER
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 11, 41, 103 }
this.treasure != null
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
this.isTerminated == false
===========================================================================
rpg.creature.Creature.getAnchors():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 11, 41, 103 }
this.treasure != null
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
this.isTerminated == false
return != null
return[] elements != null
return[].getClass().getName() elements == rpg.creature.Anchor.class
===========================================================================
rpg.creature.Creature.getAverageStrength():::ENTER
===========================================================================
rpg.creature.Creature.getAverageStrength():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
return == 10.0
===========================================================================
rpg.creature.Creature.getHitpoints():::ENTER
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 11, 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.getHitpoints():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 11, 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
return one of { 11, 41, 103 }
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.getMaximumHitpoints():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Hero.class
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getMaximumHitpoints():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
return == 103
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getName():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Hero.class
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getName():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 10.0
this.name has only one value
this.name.toString == "James"
this.hitpoints == 103
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 103
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
return has only one value
return.toString == "James"
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Creature.getStrength():::ENTER
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 41, 103 }
this.treasure != null
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
this.isTerminated == false
===========================================================================
rpg.creature.Creature.getStrength():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 41, 103 }
this.treasure != null
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
this.isTerminated == false
return one of { 1.0, 10.0 }
===========================================================================
rpg.creature.Creature.getStrengthPrecision():::ENTER
===========================================================================
rpg.creature.Creature.getStrengthPrecision():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
return == 2
===========================================================================
rpg.creature.Creature.getTotalValue():::ENTER
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.getTotalValue():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
return one of { 5, 282, 283 }
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.getTotalWeight():::ENTER
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
===========================================================================
rpg.creature.Creature.getTotalWeight():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.isTerminated == false
return.unit has only one value
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.creature.Creature.getTreasure():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.getTreasure():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
return has only one value
return[] contains no nulls and has only one value, of length 3
return[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
size(this.treasure[]) == 3
size(return[]) == 3
===========================================================================
rpg.creature.Creature.isPrime(int):::ENTER
arg0 one of { 11, 103 }
===========================================================================
rpg.creature.Creature.isPrime(int):::EXIT579
===========================================================================
rpg.creature.Creature.isPrime(int):::EXIT579;condition="return == true"
===========================================================================
rpg.creature.Creature.isPrime(int):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
return == true
===========================================================================
rpg.creature.Creature.isPrime(int):::EXIT;condition="return == true"
===========================================================================
rpg.creature.Creature.isTerminated():::ENTER
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 11, 41, 103 }
this.treasure != null
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
size(this.anchors[]) one of { 0, 3, 5 }
===========================================================================
rpg.creature.Creature.isTerminated():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
(this.treasure[] == [])  <==>  (return == false)
(this.treasure[] == [])  <==>  (size(this.anchors[]) one of { 3, 5 })
(this.treasure[] == [])  <==>  (this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] })
(this.treasure[] == [])  <==>  (this.isTerminated == false)
(this.treasure[] == [])  <==>  (this.treasure[].getClass().getName() == [])
(this.treasure[] == [])  ==>  (this.anchors[].getClass().getName() elements == rpg.creature.Anchor.class)
(this.treasure[] == [])  ==>  (this.hitpoints one of { 11, 41, 103 })
(this.treasure[] == [])  ==>  (this.maximumHitpoints one of { 41, 103 })
(this.treasure[] == [])  ==>  (this.name.toString one of { "Destroyer o'Hope", "James" })
(this.treasure[] == [])  ==>  (this.strength one of { 1.0, 10.0 })
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (return == true)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (size(this.treasure[]) == 3)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.anchors[].getClass().getName() == [])
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.isTerminated == true)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack])
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (orig(this) has only one value)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (orig(this.getClass().getName()) == rpg.creature.Monster.class)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.anchors has only one value)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.anchors[] == [])
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.hitpoints == 11)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.maximumHitpoints == 41)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.name has only one value)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.name.toString == "Destroyer o'Hope")
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.strength == 1.0)
(this.treasure[] contains no nulls and has only one value, of length 3)  ==>  (this.treasure has only one value)
this.strength one of { 1.0, 10.0 }
this.name != null
this.hitpoints one of { 11, 41, 103 }
this.treasure != null
this.maximumHitpoints one of { 41, 103 }
this.anchors != null
size(this.anchors[]) one of { 0, 3, 5 }
===========================================================================
rpg.creature.Creature.isTerminated():::EXIT;condition="return == true"
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
return == true
orig(this) has only one value
orig(this.getClass().getName()) == rpg.creature.Monster.class
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.isTerminated():::EXIT;condition="not(return == true)"
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
return == false
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.makeTreasure():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Creature.makeTreasure():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
size(this.treasure[]) == 3
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Creature.removeAnchor(rpg.creature.Anchor):::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.isTerminated == false
arg0.isTerminated == false
arg0.holder has only one value
arg0.holder.getClass().getName() == rpg.creature.Monster.class
arg0.holder.strength == 1.0
arg0.holder.name has only one value
arg0.holder.name.toString == "Destroyer o'Hope"
arg0.holder.hitpoints == 11
arg0.holder.treasure has only one value
arg0.holder.treasure[] contains no nulls and has only one value, of length 3
arg0.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
arg0.holder.maximumHitpoints == 41
arg0.holder.anchors has only one value
arg0.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.holder.isTerminated == false
arg0.name == null
size(this.treasure[]) == 3
size(this.anchors[]) one of { 1, 2, 3 }
size(arg0.holder.treasure[]) == 3
size(arg0.holder.anchors[]) one of { 1, 2, 3 }
===========================================================================
rpg.creature.Creature.removeAnchor(rpg.creature.Anchor):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.isTerminated == orig(arg0.isTerminated)
arg0.holder == orig(arg0.holder)
arg0.holder.getClass().getName() == orig(arg0.holder.getClass().getName())
arg0.holder.strength == orig(arg0.holder.strength)
arg0.holder.name == orig(arg0.holder.name)
arg0.holder.name.toString == orig(arg0.holder.name.toString)
arg0.holder.hitpoints == orig(arg0.holder.hitpoints)
arg0.holder.treasure == orig(arg0.holder.treasure)
arg0.holder.treasure[] == orig(arg0.holder.treasure[])
arg0.holder.maximumHitpoints == orig(arg0.holder.maximumHitpoints)
arg0.holder.anchors == orig(arg0.holder.anchors)
arg0.holder.isTerminated == orig(arg0.holder.isTerminated)
arg0.name == orig(arg0.name)
arg0.item == orig(arg0.item)
arg0.item.getClass().getName() == orig(arg0.item.getClass().getName())
size(this.anchors[]) == orig(size(this.anchors[]))-1
size(arg0.holder.anchors[]) == orig(size(arg0.holder.anchors[]))-1
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.isTerminated == false
arg0.isTerminated == false
arg0.holder has only one value
arg0.holder.getClass().getName() == rpg.creature.Monster.class
arg0.holder.strength == 1.0
arg0.holder.name has only one value
arg0.holder.name.toString == "Destroyer o'Hope"
arg0.holder.hitpoints == 11
arg0.holder.treasure has only one value
arg0.holder.treasure[] contains no nulls and has only one value, of length 3
arg0.holder.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
arg0.holder.maximumHitpoints == 41
arg0.holder.anchors has only one value
arg0.holder.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.holder.isTerminated == false
arg0.name == null
size(this.treasure[]) == 3
size(arg0.holder.treasure[]) == 3
===========================================================================
rpg.creature.Creature.setHitpoints(int):::ENTER
this.hitpoints one of { 0, 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
arg0 one of { 11, 41, 103 }
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.setHitpoints(int):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.hitpoints one of { 11, 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[].getClass().getName() one of { [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
this.isTerminated == false
size(this.anchors[]) one of { 3, 5 }
===========================================================================
rpg.creature.Creature.setMaximumHitpoints(int):::ENTER
this.strength == 0.0
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints == 0
this.anchors == null
this.isTerminated == false
arg0 one of { 41, 103 }
===========================================================================
rpg.creature.Creature.setMaximumHitpoints(int):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
this.strength == 0.0
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints one of { 41, 103 }
this.anchors == null
this.isTerminated == false
===========================================================================
rpg.creature.Creature.setName(java.lang.String):::ENTER
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints == 0
this.anchors == null
this.isTerminated == false
arg0.toString one of { "Destroyer o'Hope", "James" }
===========================================================================
rpg.creature.Creature.setName(java.lang.String):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.toString == orig(arg0.toString)
this.strength == 0.0
this.hitpoints == 0
this.treasure == null
this.maximumHitpoints == 0
this.anchors == null
this.isTerminated == false
arg0.toString one of { "Destroyer o'Hope", "James" }
===========================================================================
rpg.creature.Creature.setStrength(double):::ENTER
this.strength == 0.0
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == false
arg0 one of { 1.0, 10.0 }
===========================================================================
rpg.creature.Creature.setStrength(double):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength one of { 1.0, 10.0 }
this.hitpoints one of { 41, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 41, 103 }
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == false
===========================================================================
rpg.creature.Creature.terminate():::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
size(this.treasure[]) == 3
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Creature.terminate():::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.weaken(int):::ENTER
this has only one value
this.getClass().getName() == rpg.creature.Monster.class
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints one of { 11, 41 }
this.treasure has only one value
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
arg0 == 30
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT468
this.hitpoints == orig(this.hitpoints)
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
return == true
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT468;condition="return == true"
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT475
this.treasure[] == orig(this.treasure[])
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
return == false
orig(this.hitpoints) == 41
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT475;condition="not(return == true)"
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.treasure == orig(this.treasure)
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
(this.treasure[] == [])  <==>  (orig(this.hitpoints) == 41)
(this.treasure[] == [])  <==>  (return == false)
(this.treasure[] == [])  <==>  (size(this.anchors[]) == 3)
(this.treasure[] == [])  <==>  (this.anchors[] contains no nulls and has only one value, of length 3)
(this.treasure[] == [])  <==>  (this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor])
(this.treasure[] == [])  <==>  (this.isTerminated == false)
(this.treasure[] == [])  <==>  (this.treasure[].getClass().getName() == [])
(this.treasure[] == [])  ==>  (this.anchors[] == orig(this.anchors[]))
(this.treasure[] == [])  ==>  (this.anchors[].getClass().getName() elements == rpg.creature.Anchor.class)
(this.treasure[] == [])  ==>  (this.isTerminated == orig(this.isTerminated))
(this.treasure[] == [])  ==>  (this.treasure[] == orig(this.treasure[]))
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (orig(this.hitpoints) == 11)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (return == true)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (size(this.treasure[]) == 3)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.anchors[] == [])
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.anchors[].getClass().getName() == [])
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.hitpoints == orig(this.hitpoints))
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.isTerminated == true)
(this.treasure[] contains no nulls and has only one value, of length 3)  <==>  (this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack])
this.strength == 1.0
this.name has only one value
this.name.toString == "Destroyer o'Hope"
this.hitpoints == 11
this.treasure has only one value
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[].getClass().getName() one of { [], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
size(this.anchors[]) one of { 0, 3 }
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT;condition="return == true"
this.hitpoints == orig(this.hitpoints)
this.treasure[] contains no nulls and has only one value, of length 3
this.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
this.anchors[] == []
this.anchors[].getClass().getName() == []
this.isTerminated == true
return == true
size(this.treasure[]) == 3
===========================================================================
rpg.creature.Creature.weaken(int):::EXIT;condition="not(return == true)"
this.treasure[] == orig(this.treasure[])
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
this.isTerminated == false
return == false
orig(this.hitpoints) == 41
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Hero:::CLASS
rpg.creature.Hero.standardProtection == 10
rpg.creature.Hero.allowedCharacters has only one value
rpg.creature.Hero.allowedCharacters != null
rpg.creature.Hero.allowedCharacters[] == []
rpg.creature.Hero.allowedCharacters[].getClass().getName() == []
rpg.creature.Hero.allowApostrophes == true
rpg.creature.Creature.strengthPrecision == 2
===========================================================================
rpg.creature.Hero:::OBJECT
this.hitpoints == this.maximumHitpoints
this has only one value
this.strength one of { 0.0, 10.0 }
this.name.toString == "James"
this.hitpoints one of { 0, 103 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.anchors[] elements != null
this.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
this.isTerminated == false
size(this.anchors[]) one of { 0, 1, 5 }
===========================================================================
rpg.creature.Hero.Hero(java.lang.String, int, rpg.item.Item[]):::ENTER
arg0 has only one value
arg0.toString == "James"
arg1 == 103
arg2 has only one value
arg2.getClass().getName() == rpg.item.Item[].class
arg2[] contains no nulls and has only one value, of length 1
arg2[] elements has only one value
size(arg2[]) == 1
===========================================================================
rpg.creature.Hero.Hero(java.lang.String, int, rpg.item.Item[]):::EXIT
this.name == orig(arg0)
this.hitpoints == orig(arg1)
arg0.toString == orig(arg0.toString)
arg2[] == orig(arg2[])
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.toString == "James"
arg2[] contains no nulls and has only one value, of length 1
arg2[] elements has only one value
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.canHaveAsName(java.lang.String):::ENTER
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.anchors == null
arg0 has only one value
arg0.toString == "James"
===========================================================================
rpg.creature.Hero.canHaveAsName(java.lang.String):::EXIT197
===========================================================================
rpg.creature.Hero.canHaveAsName(java.lang.String):::EXIT197;condition="return == true"
===========================================================================
rpg.creature.Hero.canHaveAsName(java.lang.String):::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.toString == orig(arg0.toString)
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.anchors == null
arg0.toString == "James"
return == true
===========================================================================
rpg.creature.Hero.canHaveAsName(java.lang.String):::EXIT;condition="return == true"
===========================================================================
rpg.creature.Hero.collect(rpg.creature.Creature, java.util.ArrayList):::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Monster.class
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 11
arg0.treasure has only one value
arg0.treasure[] contains no nulls and has only one value, of length 3
arg0.treasure[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[] == []
arg0.anchors[].getClass().getName() == []
arg0.isTerminated == true
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 3
arg1[].getClass().getName() == [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack]
size(this.anchors[]) == 5
size(arg0.treasure[]) == 3
size(arg1[]) == 3
===========================================================================
rpg.creature.Hero.collect(rpg.creature.Creature, java.util.ArrayList):::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == orig(arg0.hitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.maximumHitpoints == orig(arg0.maximumHitpoints)
arg0.anchors == orig(arg0.anchors)
arg0.anchors[] == orig(arg0.anchors[])
arg0.isTerminated == orig(arg0.isTerminated)
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints == 11
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[] == []
arg0.anchors[].getClass().getName() == []
arg0.isTerminated == true
arg1[] == []
arg1[].getClass().getName() == []
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.getCapacity():::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
===========================================================================
rpg.creature.Hero.getCapacity():::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
return.unit == rpg.item.WeightUnit.KG
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
return.numeral == 100.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.creature.Hero.getCapacity(int):::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
arg0 == 10
===========================================================================
rpg.creature.Hero.getCapacity(int):::EXIT247
===========================================================================
rpg.creature.Hero.getCapacity(int):::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
return.unit == rpg.item.WeightUnit.KG
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
return.numeral == 100.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.creature.Hero.getProtection():::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.getProtection():::EXIT137
===========================================================================
rpg.creature.Hero.getProtection():::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
return == 40
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.getStandardProtection():::ENTER
===========================================================================
rpg.creature.Hero.getStandardProtection():::EXIT
rpg.creature.Hero.standardProtection == return
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
===========================================================================
rpg.creature.Hero.getTotalStrength():::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.getTotalStrength():::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
return == 70.0
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.heal():::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.heal():::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
size(this.anchors[]) == 5
===========================================================================
rpg.creature.Hero.hit(rpg.creature.Creature):::ENTER
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Monster.class
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints one of { 11, 41 }
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[] contains no nulls and has only one value, of length 3
arg0.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
size(this.anchors[]) == 5
size(arg0.anchors[]) == 3
===========================================================================
rpg.creature.Hero.hit(rpg.creature.Creature):::EXIT360
===========================================================================
rpg.creature.Hero.hit(rpg.creature.Creature):::EXIT
rpg.creature.Hero.standardProtection == orig(rpg.creature.Hero.standardProtection)
rpg.creature.Hero.allowedCharacters == orig(rpg.creature.Hero.allowedCharacters)
rpg.creature.Hero.allowedCharacters[] == orig(rpg.creature.Hero.allowedCharacters[])
rpg.creature.Hero.allowApostrophes == orig(rpg.creature.Hero.allowApostrophes)
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.treasure == orig(arg0.treasure)
arg0.maximumHitpoints == orig(arg0.maximumHitpoints)
arg0.anchors == orig(arg0.anchors)
this.strength == 10.0
this.name has only one value
this.hitpoints == 103
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 5
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.strength == 1.0
arg0.name has only one value
arg0.name.toString == "Destroyer o'Hope"
arg0.hitpoints one of { 11, 41 }
arg0.treasure has only one value
arg0.treasure[].getClass().getName() one of { [], [rpg.item.Dukat, rpg.item.Dukat, rpg.item.BackPack] }
arg0.maximumHitpoints == 41
arg0.anchors has only one value
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.anchors[].getClass().getName() one of { [], [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor] }
size(this.anchors[]) == 5
size(arg0.treasure[]) one of { 0, 3 }
size(arg0.anchors[]) one of { 0, 3 }
===========================================================================
rpg.creature.Monster:::CLASS
rpg.creature.Monster.allowedCharacters has only one value
rpg.creature.Monster.allowedCharacters != null
rpg.creature.Monster.allowedCharacters[] == []
rpg.creature.Monster.allowedCharacters[].getClass().getName() == []
rpg.creature.Creature.strengthPrecision == 2
===========================================================================
rpg.creature.Monster:::OBJECT
this has only one value
this.protection one of { 0, 17 }
this.damage one of { 0, 50 }
this.strength one of { 0.0, 1.0 }
this.name.toString == "Destroyer o'Hope"
this.hitpoints one of { 0, 11, 41 }
this.treasure[] == []
this.treasure[].getClass().getName() == []
this.maximumHitpoints one of { 0, 41 }
this.anchors[] elements != null
this.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
this.isTerminated == false
this.hitpoints <= this.maximumHitpoints
===========================================================================
rpg.creature.Monster.Monster(java.lang.String, int, int, int, rpg.item.Item[]):::ENTER
arg0 has only one value
arg0.toString == "Destroyer o'Hope"
arg1 == 41
arg2 == 50
arg3 == 17
arg4 has only one value
arg4.getClass().getName() == rpg.item.Item[].class
arg4[] contains no nulls and has only one value, of length 3
size(arg4[]) == 3
===========================================================================
rpg.creature.Monster.Monster(java.lang.String, int, int, int, rpg.item.Item[]):::EXIT
this.protection == orig(arg3)
this.damage == orig(arg2)
this.name == orig(arg0)
this.hitpoints == this.maximumHitpoints
this.hitpoints == orig(arg1)
arg0.toString == orig(arg0.toString)
arg4[] == orig(arg4[])
this.protection == 17
this.damage == 50
this.strength == 1.0
this.name has only one value
this.hitpoints == 41
this.treasure has only one value
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.toString == "Destroyer o'Hope"
arg4[] contains no nulls and has only one value, of length 3
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Monster.canHaveAsName(java.lang.String):::ENTER
this.hitpoints == this.maximumHitpoints
this.protection == 0
this.damage == 0
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.anchors == null
arg0 has only one value
arg0.toString == "Destroyer o'Hope"
===========================================================================
rpg.creature.Monster.canHaveAsName(java.lang.String):::EXIT119
===========================================================================
rpg.creature.Monster.canHaveAsName(java.lang.String):::EXIT119;condition="return == true"
===========================================================================
rpg.creature.Monster.canHaveAsName(java.lang.String):::EXIT
this.protection == orig(this.protection)
this.damage == orig(this.damage)
rpg.creature.Monster.allowedCharacters == orig(rpg.creature.Monster.allowedCharacters)
rpg.creature.Monster.allowedCharacters[] == orig(rpg.creature.Monster.allowedCharacters[])
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.hitpoints == this.maximumHitpoints
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.anchors == orig(this.anchors)
this.isTerminated == orig(this.isTerminated)
arg0.toString == orig(arg0.toString)
this.protection == 0
this.damage == 0
this.strength == 0.0
this.name == null
this.hitpoints == 0
this.treasure == null
this.anchors == null
arg0.toString == "Destroyer o'Hope"
return == true
===========================================================================
rpg.creature.Monster.canHaveAsName(java.lang.String):::EXIT;condition="return == true"
===========================================================================
rpg.creature.Monster.getCapacity():::ENTER
this.hitpoints == this.maximumHitpoints
this.protection == 0
this.damage == 0
this.strength == 1.0
this.name has only one value
this.hitpoints == 41
this.treasure has only one value
this.anchors has only one value
size(this.anchors[]) one of { 0, 1, 2 }
===========================================================================
rpg.creature.Monster.getCapacity():::EXIT
this.protection == orig(this.protection)
this.damage == orig(this.damage)
rpg.creature.Monster.allowedCharacters == orig(rpg.creature.Monster.allowedCharacters)
rpg.creature.Monster.allowedCharacters[] == orig(rpg.creature.Monster.allowedCharacters[])
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == this.maximumHitpoints
this.hitpoints == orig(this.hitpoints)
this.hitpoints == orig(this.maximumHitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
return.unit == rpg.item.WeightUnit.KG
this.protection == 0
this.damage == 0
this.strength == 1.0
this.name has only one value
this.hitpoints == 41
this.treasure has only one value
this.anchors has only one value
return.numeral == 9.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(this.anchors[]) one of { 0, 1, 2 }
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.creature.Monster.getProtection():::ENTER
this.protection == 17
this.damage == 50
this.strength == 1.0
this.name has only one value
this.hitpoints one of { 11, 41 }
this.treasure has only one value
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Monster.getProtection():::EXIT
this.protection == return
this.damage == orig(this.damage)
rpg.creature.Monster.allowedCharacters == orig(rpg.creature.Monster.allowedCharacters)
rpg.creature.Monster.allowedCharacters[] == orig(rpg.creature.Monster.allowedCharacters[])
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
return == orig(this.protection)
this.damage == 50
this.strength == 1.0
this.name has only one value
this.hitpoints one of { 11, 41 }
this.treasure has only one value
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
return == 17
size(this.anchors[]) == 3
===========================================================================
rpg.creature.Monster.hit(rpg.creature.Creature):::ENTER
arg0.hitpoints == arg0.maximumHitpoints
this.protection == 17
this.damage == 50
this.strength == 1.0
this.name has only one value
this.hitpoints one of { 11, 41 }
this.treasure has only one value
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0 has only one value
arg0.getClass().getName() == rpg.creature.Hero.class
arg0.strength == 10.0
arg0.name has only one value
arg0.name.toString == "James"
arg0.hitpoints == 103
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[] contains no nulls and has only one value, of length 5
arg0.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
size(this.anchors[]) == 3
size(arg0.anchors[]) == 5
===========================================================================
rpg.creature.Monster.hit(rpg.creature.Creature):::EXIT191
===========================================================================
rpg.creature.Monster.hit(rpg.creature.Creature):::EXIT
this.protection == orig(this.protection)
this.damage == orig(this.damage)
rpg.creature.Monster.allowedCharacters == orig(rpg.creature.Monster.allowedCharacters)
rpg.creature.Monster.allowedCharacters[] == orig(rpg.creature.Monster.allowedCharacters[])
rpg.creature.Creature.strengthPrecision == orig(rpg.creature.Creature.strengthPrecision)
this.strength == orig(this.strength)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hitpoints == orig(this.hitpoints)
this.treasure == orig(this.treasure)
this.treasure[] == orig(this.treasure[])
this.maximumHitpoints == orig(this.maximumHitpoints)
this.anchors == orig(this.anchors)
this.anchors[] == orig(this.anchors[])
this.isTerminated == orig(this.isTerminated)
arg0.strength == orig(arg0.strength)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.hitpoints == arg0.maximumHitpoints
arg0.hitpoints == orig(arg0.hitpoints)
arg0.hitpoints == orig(arg0.maximumHitpoints)
arg0.treasure == orig(arg0.treasure)
arg0.treasure[] == orig(arg0.treasure[])
arg0.anchors == orig(arg0.anchors)
arg0.anchors[] == orig(arg0.anchors[])
arg0.isTerminated == orig(arg0.isTerminated)
this.protection == 17
this.damage == 50
this.strength == 1.0
this.name has only one value
this.hitpoints one of { 11, 41 }
this.treasure has only one value
this.maximumHitpoints == 41
this.anchors has only one value
this.anchors[] contains no nulls and has only one value, of length 3
this.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.strength == 10.0
arg0.name has only one value
arg0.name.toString == "James"
arg0.hitpoints == 103
arg0.treasure has only one value
arg0.treasure[] == []
arg0.treasure[].getClass().getName() == []
arg0.anchors has only one value
arg0.anchors[] contains no nulls and has only one value, of length 5
arg0.anchors[].getClass().getName() == [rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor, rpg.creature.Anchor]
arg0.anchors[].getClass().getName() elements == rpg.creature.Anchor.class
arg0.isTerminated == false
size(this.anchors[]) == 3
size(arg0.anchors[]) == 5
===========================================================================
rpg.item.Armor:::OBJECT
this.weight.unit == rpg.item.WeightUnit.KG
this has only one value
this.maxValue == 50
this.maxProtection == 40
this.protection one of { 0, 30 }
this.value == 0
this.weight has only one value
this.weight != null
this.weight.numeral == 30.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.id one of { 0, 2 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
this.maxValue > this.protection
this.maxProtection > this.protection
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != this.parent.getClass().getName()
===========================================================================
rpg.item.Armor.Armor(long, rpg.item.Weight, int, int, int):::ENTER
arg1.unit == rpg.item.WeightUnit.KG
arg0 == 2
arg1 has only one value
arg1.numeral == 30.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg2 == 50
arg3 == 30
arg4 == 40
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Armor.Armor(long, rpg.item.Weight, int, int, int):::EXIT
this.maxValue == orig(arg2)
this.maxProtection == orig(arg4)
this.protection == orig(arg3)
this.weight == orig(arg1)
this.weight.numeral == arg1.numeral
rpg.item.WeightUnit.KG == arg1.unit
rpg.item.WeightUnit.KG == orig(arg1.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(arg0)
arg1.numeral == orig(arg1.numeral)
this.protection == 30
this.id == 2
this.parent == null
arg1.numeral == 30.0
===========================================================================
rpg.item.Armor.canHaveAsId(long):::ENTER
this.protection == 30
this.id == 0
this.parent == null
arg0 == 2
===========================================================================
rpg.item.Armor.canHaveAsId(long):::EXIT82
===========================================================================
rpg.item.Armor.canHaveAsId(long):::EXIT82;condition="return == true"
===========================================================================
rpg.item.Armor.canHaveAsId(long):::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == orig(this.maxProtection)
this.protection == orig(this.protection)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.protection == 30
this.id == 0
this.parent == null
return == true
===========================================================================
rpg.item.Armor.canHaveAsId(long):::EXIT;condition="return == true"
===========================================================================
rpg.item.Armor.getMaxProtection():::ENTER
this.protection == 30
this.id == 2
this.parent has only one value
===========================================================================
rpg.item.Armor.getMaxProtection():::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == return
this.protection == orig(this.protection)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.maxProtection)
this.protection == 30
this.id == 2
this.parent has only one value
return == 40
===========================================================================
rpg.item.Armor.getMaxValue():::ENTER
this.protection == 30
this.id == 2
this.parent has only one value
===========================================================================
rpg.item.Armor.getMaxValue():::EXIT
this.maxValue == return
this.maxProtection == orig(this.maxProtection)
this.protection == orig(this.protection)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.maxValue)
this.protection == 30
this.id == 2
this.parent has only one value
return == 50
===========================================================================
rpg.item.Armor.getProtection():::ENTER
this.protection == 30
this.id == 2
this.parent has only one value
===========================================================================
rpg.item.Armor.getProtection():::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == orig(this.maxProtection)
this.protection == return
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.protection)
this.id == 2
this.parent has only one value
return == 30
===========================================================================
rpg.item.Armor.getValue():::ENTER
this.protection == 30
this.id == 2
this.parent has only one value
===========================================================================
rpg.item.Armor.getValue():::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == orig(this.maxProtection)
this.protection == orig(this.protection)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
this.protection == 30
this.id == 2
this.parent has only one value
return == 37
===========================================================================
rpg.item.Armor.setId(long):::ENTER
this.protection == 30
this.id == 0
this.parent == null
arg0 == 2
===========================================================================
rpg.item.Armor.setId(long):::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == orig(this.maxProtection)
this.protection == orig(this.protection)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(arg0)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.protection == 30
this.id == 2
this.parent == null
===========================================================================
rpg.item.Armor.setProtection(int):::ENTER
this.protection == 0
this.id == 0
this.parent == null
arg0 == 30
===========================================================================
rpg.item.Armor.setProtection(int):::EXIT
this.maxValue == orig(this.maxValue)
this.maxProtection == orig(this.maxProtection)
this.protection == orig(arg0)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.protection == 30
this.id == 0
this.parent == null
===========================================================================
rpg.item.BackPack:::CLASS
rpg.item.BackPack.nbOfBackPacks one of { 1, 2, 3 }
===========================================================================
rpg.item.BackPack:::OBJECT
this.capacity.numeral == this.weight.numeral
this.capacity.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.G == this.weight.unit
this.capacity.numeral == 100.0
this.capacity.unit has only one value
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.value one of { 0, 3, 10 }
this.weight.numeral == 100.0
this.id one of { 2, 4 }
this.parent == null
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.BackPack.nbOfBackPacks <= this.id
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.BackPack.BackPack(rpg.item.Weight, rpg.item.Weight, int):::ENTER
arg0.numeral == arg1.numeral
arg0.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == arg1.unit
arg0.numeral == 100.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg2 one of { 3, 10 }
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.BackPack.BackPack(rpg.item.Weight, rpg.item.Weight, int):::EXIT
this.capacity == orig(arg1)
this.capacity.numeral == arg0.numeral
rpg.item.WeightUnit.KG == arg1.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.KG == orig(arg1.unit)
rpg.item.WeightUnit.G == arg0.unit
rpg.item.WeightUnit.G == orig(arg0.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.value == orig(arg2)
this.weight == orig(arg0)
this.weight.numeral == arg0.numeral
arg0.numeral == arg1.numeral
arg0.numeral == orig(arg0.numeral)
arg0.numeral == orig(arg1.numeral)
rpg.item.BackPack.nbOfBackPacks one of { 2, 3 }
this.value one of { 3, 10 }
arg0.numeral == 100.0
===========================================================================
rpg.item.BackPack.addItem(rpg.item.Item):::ENTER
rpg.item.BackPack.nbOfBackPacks == this.id
this has only one value
rpg.item.BackPack.nbOfBackPacks == 2
this.capacity has only one value
this.content has only one value
this.value == 10
this.weight has only one value
arg0 has only one value
arg0.getClass().getName() == rpg.item.Purse.class
===========================================================================
rpg.item.BackPack.addItem(rpg.item.Item):::EXIT
rpg.item.BackPack.nbOfBackPacks == this.id
rpg.item.BackPack.nbOfBackPacks == orig(rpg.item.BackPack.nbOfBackPacks)
rpg.item.BackPack.nbOfBackPacks == orig(this.id)
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.BackPack.nbOfBackPacks == 2
this.capacity has only one value
this.content has only one value
this.value == 10
this.weight has only one value
===========================================================================
rpg.item.BackPack.generateId():::ENTER
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
===========================================================================
rpg.item.BackPack.generateId():::EXIT
rpg.item.BackPack.nbOfBackPacks == orig(rpg.item.BackPack.nbOfBackPacks)
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
return one of { 2, 4 }
===========================================================================
rpg.item.BackPack.getNbOfBackPacks():::ENTER
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
===========================================================================
rpg.item.BackPack.getNbOfBackPacks():::EXIT
rpg.item.BackPack.nbOfBackPacks == return
rpg.item.BackPack.nbOfBackPacks == orig(rpg.item.BackPack.nbOfBackPacks)
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
===========================================================================
rpg.item.BackPack.setValue(int):::ENTER
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
this.capacity == null
this.content == null
this.value == 0
arg0 one of { 3, 10 }
===========================================================================
rpg.item.BackPack.setValue(int):::EXIT
rpg.item.BackPack.nbOfBackPacks == orig(rpg.item.BackPack.nbOfBackPacks)
this.capacity == orig(this.capacity)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(arg0)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.BackPack.nbOfBackPacks one of { 1, 2 }
this.capacity == null
this.content == null
this.value one of { 3, 10 }
===========================================================================
rpg.item.Container$1:::OBJECT
this.curIndex >= -1
this.items[] elements != null
rpg.item.Container.this.capacity != null
rpg.item.Container.this.capacity.numeral one of { 3.0, 100.0, 5500.0 }
rpg.item.Container.this.capacity.unit != null
rpg.item.Container.this.content != null
rpg.item.Container.this.value one of { 0, 3, 10 }
rpg.item.Container.this.weight != null
rpg.item.Container.this.weight.numeral one of { 5.0, 11.0, 100.0 }
rpg.item.Container.this.weight.unit has only one value
rpg.item.Container.this.weight.unit != null
rpg.item.Container.this.id one of { 1, 2, 4 }
rpg.item.Container.this.parent.getClass().getName() == rpg.creature.Anchor.class
rpg.item.Container.this.isTerminated == false
rpg.item.Container.this.getClass().getName() != rpg.item.Container.this.parent.getClass().getName()
===========================================================================
rpg.item.Container$1.(rpg.item.Container):::ENTER
rpg.item.Container.this != null
rpg.item.Container.this.capacity != null
rpg.item.Container.this.capacity.numeral one of { 3.0, 100.0, 5500.0 }
rpg.item.Container.this.capacity.unit != null
rpg.item.Container.this.content != null
rpg.item.Container.this.value one of { 0, 3, 10 }
rpg.item.Container.this.weight != null
rpg.item.Container.this.weight.numeral one of { 5.0, 11.0, 100.0 }
rpg.item.Container.this.weight.unit has only one value
rpg.item.Container.this.weight.unit != null
rpg.item.Container.this.id one of { 1, 2, 4 }
rpg.item.Container.this.parent.getClass().getName() == rpg.creature.Anchor.class
rpg.item.Container.this.isTerminated == false
rpg.item.Container.this.getClass().getName() != rpg.item.Container.this.parent.getClass().getName()
===========================================================================
rpg.item.Container$1.(rpg.item.Container):::EXIT
rpg.item.Container.this == orig(rpg.item.Container.this)
rpg.item.Container.this.getClass().getName() == orig(rpg.item.Container.this.getClass().getName())
rpg.item.Container.this.capacity == orig(rpg.item.Container.this.capacity)
rpg.item.Container.this.capacity.numeral == orig(rpg.item.Container.this.capacity.numeral)
rpg.item.Container.this.capacity.unit == orig(rpg.item.Container.this.capacity.unit)
rpg.item.Container.this.content == orig(rpg.item.Container.this.content)
rpg.item.Container.this.value == orig(rpg.item.Container.this.value)
rpg.item.Container.this.weight == orig(rpg.item.Container.this.weight)
rpg.item.Container.this.weight.numeral == orig(rpg.item.Container.this.weight.numeral)
rpg.item.Container.this.weight.unit == orig(rpg.item.Container.this.weight.unit)
rpg.item.Container.this.id == orig(rpg.item.Container.this.id)
rpg.item.Container.this.parent == orig(rpg.item.Container.this.parent)
rpg.item.Container.this.parent.getClass().getName() == orig(rpg.item.Container.this.parent.getClass().getName())
rpg.item.Container.this.isTerminated == orig(rpg.item.Container.this.isTerminated)
this.curIndex == -1
this.items != null
===========================================================================
rpg.item.Container$1.generateItemList(java.util.ArrayList):::ENTER
this.curIndex == 0
this.items == null
arg0 != null
arg0[] elements != null
===========================================================================
rpg.item.Container$1.generateItemList(java.util.ArrayList):::EXIT
this.curIndex == orig(this.curIndex)
this.items == orig(this.items)
rpg.item.Container.this == orig(rpg.item.Container.this)
rpg.item.Container.this.getClass().getName() == orig(rpg.item.Container.this.getClass().getName())
rpg.item.Container.this.capacity == orig(rpg.item.Container.this.capacity)
rpg.item.Container.this.capacity.numeral == orig(rpg.item.Container.this.capacity.numeral)
rpg.item.Container.this.capacity.unit == orig(rpg.item.Container.this.capacity.unit)
rpg.item.Container.this.content == orig(rpg.item.Container.this.content)
rpg.item.Container.this.value == orig(rpg.item.Container.this.value)
rpg.item.Container.this.weight == orig(rpg.item.Container.this.weight)
rpg.item.Container.this.weight.numeral == orig(rpg.item.Container.this.weight.numeral)
rpg.item.Container.this.weight.unit == orig(rpg.item.Container.this.weight.unit)
rpg.item.Container.this.id == orig(rpg.item.Container.this.id)
rpg.item.Container.this.parent == orig(rpg.item.Container.this.parent)
rpg.item.Container.this.parent.getClass().getName() == orig(rpg.item.Container.this.parent.getClass().getName())
rpg.item.Container.this.isTerminated == orig(rpg.item.Container.this.isTerminated)
arg0[] == orig(arg0[])
this.curIndex == 0
this.items == null
arg0[] elements != null
return != null
return[] elements != null
===========================================================================
rpg.item.Container$1.hasMoreElements():::ENTER
this.items != null
===========================================================================
rpg.item.Container$1.hasMoreElements():::EXIT
this.curIndex == orig(this.curIndex)
this.items == orig(this.items)
this.items[] == orig(this.items[])
rpg.item.Container.this == orig(rpg.item.Container.this)
rpg.item.Container.this.getClass().getName() == orig(rpg.item.Container.this.getClass().getName())
rpg.item.Container.this.capacity == orig(rpg.item.Container.this.capacity)
rpg.item.Container.this.capacity.numeral == orig(rpg.item.Container.this.capacity.numeral)
rpg.item.Container.this.capacity.unit == orig(rpg.item.Container.this.capacity.unit)
rpg.item.Container.this.content == orig(rpg.item.Container.this.content)
rpg.item.Container.this.value == orig(rpg.item.Container.this.value)
rpg.item.Container.this.weight == orig(rpg.item.Container.this.weight)
rpg.item.Container.this.weight.numeral == orig(rpg.item.Container.this.weight.numeral)
rpg.item.Container.this.weight.unit == orig(rpg.item.Container.this.weight.unit)
rpg.item.Container.this.id == orig(rpg.item.Container.this.id)
rpg.item.Container.this.parent == orig(rpg.item.Container.this.parent)
rpg.item.Container.this.parent.getClass().getName() == orig(rpg.item.Container.this.parent.getClass().getName())
rpg.item.Container.this.isTerminated == orig(rpg.item.Container.this.isTerminated)
(return == false)  ==>  (rpg.item.Container.this.id one of { 1, 2, 4 })
(return == false)  ==>  (rpg.item.Container.this.value one of { 0, 3, 10 })
(return == true)  ==>  (rpg.item.Container.this.id one of { 1, 2 })
(return == true)  ==>  (rpg.item.Container.this.value one of { 0, 10 })
this.items != null
===========================================================================
rpg.item.Container$1.hasMoreElements():::EXIT;condition="return == true"
rpg.item.Container.this.value one of { 0, 10 }
rpg.item.Container.this.id one of { 1, 2 }
return == true
===========================================================================
rpg.item.Container$1.hasMoreElements():::EXIT;condition="not(return == true)"
return == false
===========================================================================
rpg.item.Container$1.nextElement():::ENTER
this.items != null
rpg.item.Container.this.value one of { 0, 10 }
rpg.item.Container.this.id one of { 1, 2 }
===========================================================================
rpg.item.Container$1.nextElement():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
rpg.item.Container.this == orig(rpg.item.Container.this)
rpg.item.Container.this.getClass().getName() == orig(rpg.item.Container.this.getClass().getName())
rpg.item.Container.this.capacity == orig(rpg.item.Container.this.capacity)
rpg.item.Container.this.capacity.numeral == orig(rpg.item.Container.this.capacity.numeral)
rpg.item.Container.this.capacity.unit == orig(rpg.item.Container.this.capacity.unit)
rpg.item.Container.this.content == orig(rpg.item.Container.this.content)
rpg.item.Container.this.value == orig(rpg.item.Container.this.value)
rpg.item.Container.this.weight == orig(rpg.item.Container.this.weight)
rpg.item.Container.this.weight.numeral == orig(rpg.item.Container.this.weight.numeral)
rpg.item.Container.this.weight.unit == orig(rpg.item.Container.this.weight.unit)
rpg.item.Container.this.id == orig(rpg.item.Container.this.id)
rpg.item.Container.this.parent == orig(rpg.item.Container.this.parent)
rpg.item.Container.this.parent.getClass().getName() == orig(rpg.item.Container.this.parent.getClass().getName())
rpg.item.Container.this.isTerminated == orig(rpg.item.Container.this.isTerminated)
this.curIndex >= 0
this.items != null
rpg.item.Container.this.value one of { 0, 10 }
rpg.item.Container.this.id one of { 1, 2 }
return != null
this.curIndex - orig(this.curIndex) - 1 == 0
return.getClass().getName() in this.items[].getClass().getName()
rpg.item.Container.this.getClass().getName() != return.getClass().getName()
rpg.item.Container.this.parent.getClass().getName() != return.getClass().getName()
===========================================================================
rpg.item.Container:::OBJECT
rpg.item.WeightUnit.G == this.weight.unit
this.capacity.numeral one of { 3.0, 100.0, 5500.0 }
this.capacity.unit != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.value one of { 0, 3, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2, 4 }
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
this.getClass().getName() != rpg.item.WeightUnit.conversionRates.getClass().getName()
this.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
this.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != this.parent.getClass().getName()
===========================================================================
rpg.item.Container.Container(long, rpg.item.Weight, rpg.item.Weight):::ENTER
arg1.unit == rpg.item.WeightUnit.G
arg0 == 1
arg1.numeral one of { 5.0, 11.0 }
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg2.numeral one of { 3.0, 5500.0 }
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Container.Container(long, rpg.item.Weight, rpg.item.Weight):::EXIT
this.capacity == orig(arg2)
this.capacity.numeral == arg2.numeral
this.capacity.unit == arg2.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == arg1.unit
rpg.item.WeightUnit.G == orig(arg1.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.weight == orig(arg1)
this.weight.numeral == arg1.numeral
this.id == orig(arg0)
arg1.numeral == orig(arg1.numeral)
arg2.numeral == orig(arg2.numeral)
arg2.unit == orig(arg2.unit)
this.value == 0
this.id == 1
this.parent == null
arg1.numeral one of { 5.0, 11.0 }
arg2.numeral one of { 3.0, 5500.0 }
===========================================================================
rpg.item.Container.Container(long, rpg.item.Weight, rpg.item.Weight, int):::ENTER
arg1.unit == rpg.item.WeightUnit.G
arg0 one of { 1, 2, 4 }
arg1.numeral one of { 5.0, 11.0, 100.0 }
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg2.numeral one of { 3.0, 100.0, 5500.0 }
arg3 one of { 0, 3, 10 }
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Container.Container(long, rpg.item.Weight, rpg.item.Weight, int):::EXIT
this.capacity == orig(arg2)
this.capacity.numeral == arg2.numeral
this.capacity.unit == arg2.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == arg1.unit
rpg.item.WeightUnit.G == orig(arg1.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.value == orig(arg3)
this.weight == orig(arg1)
this.weight.numeral == arg1.numeral
this.id == orig(arg0)
arg1.numeral == orig(arg1.numeral)
arg2.numeral == orig(arg2.numeral)
arg2.unit == orig(arg2.unit)
this.parent == null
arg1.numeral one of { 5.0, 11.0, 100.0 }
arg2.numeral one of { 3.0, 100.0, 5500.0 }
===========================================================================
rpg.item.Container.addItem(rpg.item.Item):::ENTER
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
arg0 != null
this.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.item.Container.addItem(rpg.item.Item):::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(arg0.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
rpg.item.Container.canAddItem(rpg.item.Item):::ENTER
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
arg0 != null
this.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.item.Container.canAddItem(rpg.item.Item):::EXIT260
===========================================================================
rpg.item.Container.canAddItem(rpg.item.Item):::EXIT260;condition="return == true"
===========================================================================
rpg.item.Container.canAddItem(rpg.item.Item):::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
return == true
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(arg0.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
rpg.item.Container.canAddItem(rpg.item.Item):::EXIT;condition="return == true"
===========================================================================
rpg.item.Container.canAddItemToContainer(rpg.item.Item):::ENTER
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
arg0 != null
this.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != arg0.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != arg0.getClass().getName()
===========================================================================
rpg.item.Container.canAddItemToContainer(rpg.item.Item):::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
return == true
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(arg0.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
rpg.item.Container.canAddItemToContainer(rpg.item.Item):::EXIT;condition="return == true"
===========================================================================
rpg.item.Container.canHaveAsCapacity(rpg.item.Weight):::ENTER
this.capacity == null
this.content == null
this.parent == null
arg0.numeral one of { 3.0, 100.0, 5500.0 }
===========================================================================
rpg.item.Container.canHaveAsCapacity(rpg.item.Weight):::EXIT
this.capacity == orig(this.capacity)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
arg0.numeral == orig(arg0.numeral)
arg0.unit == orig(arg0.unit)
this.capacity == null
this.content == null
this.parent == null
arg0.numeral one of { 3.0, 100.0, 5500.0 }
return == true
===========================================================================
rpg.item.Container.canHaveAsCapacity(rpg.item.Weight):::EXIT;condition="return == true"
===========================================================================
rpg.item.Container.equalsOrIsDirectOrIndirectParentOf(rpg.item.Container):::ENTER
this.capacity.numeral == this.weight.numeral
this.capacity.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == arg0.capacity.unit
rpg.item.WeightUnit.G == arg0.weight.unit
this has only one value
this.getClass().getName() == rpg.item.BackPack.class
this.capacity has only one value
this.capacity.numeral == 100.0
this.content has only one value
this.value == 10
this.weight has only one value
this.id == 2
this.parent == null
arg0.getClass().getName() == rpg.item.Purse.class
arg0.capacity has only one value
arg0.capacity.numeral == 3.0
arg0.capacity.unit has only one value
arg0.content has only one value
arg0.value == 0
arg0.weight has only one value
arg0.weight.numeral == 11.0
arg0.weight.unit has only one value
arg0.id == 1
arg0.parent == null
arg0.isTerminated == false
===========================================================================
rpg.item.Container.equalsOrIsDirectOrIndirectParentOf(rpg.item.Container):::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == this.weight.numeral
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.numeral == orig(this.weight.numeral)
this.capacity.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == arg0.capacity.unit
rpg.item.WeightUnit.KG == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == arg0.weight.unit
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
arg0.capacity == orig(arg0.capacity)
arg0.capacity.numeral == orig(arg0.capacity.numeral)
arg0.capacity.unit == orig(arg0.capacity.unit)
arg0.content == orig(arg0.content)
arg0.value == orig(arg0.value)
arg0.weight == orig(arg0.weight)
arg0.weight.numeral == orig(arg0.weight.numeral)
arg0.weight.unit == orig(arg0.weight.unit)
arg0.id == orig(arg0.id)
arg0.parent == orig(arg0.parent)
arg0.isTerminated == orig(arg0.isTerminated)
this.capacity has only one value
this.capacity.numeral == 100.0
this.content has only one value
this.value == 10
this.weight has only one value
this.id == 2
this.parent == null
arg0.capacity has only one value
arg0.capacity.numeral == 3.0
arg0.capacity.unit has only one value
arg0.content has only one value
arg0.value == 0
arg0.weight has only one value
arg0.weight.numeral == 11.0
arg0.weight.unit has only one value
arg0.id == 1
arg0.parent == null
arg0.isTerminated == false
return == false
===========================================================================
rpg.item.Container.equalsOrIsDirectOrIndirectParentOf(rpg.item.Container):::EXIT;condition="not(return == true)"
===========================================================================
rpg.item.Container.getCapacity():::ENTER
this.capacity != null
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
===========================================================================
rpg.item.Container.getCapacity():::EXIT
this.capacity == return
this.capacity.numeral == return.numeral
this.capacity.unit == return.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
return == orig(this.capacity)
return.numeral == orig(this.capacity.numeral)
return.unit == orig(this.capacity.unit)
this.content != null
this.value one of { 0, 10 }
this.id one of { 1, 2 }
this.parent == null
return != null
return.numeral one of { 3.0, 100.0, 5500.0 }
return.unit != null
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.Container.getDirectItems():::ENTER
this.capacity != null
this.content != null
===========================================================================
rpg.item.Container.getDirectItems():::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
return != null
return[] elements != null
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.Container.getItems():::ENTER
this.capacity != null
this.content != null
this.parent.getClass().getName() == rpg.creature.Anchor.class
===========================================================================
rpg.item.Container.getItems():::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
this.parent.getClass().getName() == rpg.creature.Anchor.class
return != null
return.getClass().getName() == rpg.item.Container$1.class
rpg.item.WeightUnit.conversionRates.getClass().getName() != return.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != return.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != return.getClass().getName()
this.parent.getClass().getName() != orig(this.getClass().getName())
return.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.Container.getTotalValue():::ENTER
this.capacity.numeral one of { 100.0, 5500.0 }
this.weight.numeral one of { 5.0, 100.0 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
===========================================================================
rpg.item.Container.getTotalValue():::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
this.capacity.numeral one of { 100.0, 5500.0 }
this.weight.numeral one of { 5.0, 100.0 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
return one of { 3, 30, 95 }
===========================================================================
rpg.item.Container.getTotalWeight():::ENTER
this.capacity != null
this.content != null
this.parent.getClass().getName() == rpg.creature.Anchor.class
===========================================================================
rpg.item.Container.getTotalWeight():::EXIT
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == return.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
this.capacity != null
this.content != null
this.parent.getClass().getName() == rpg.creature.Anchor.class
return != null
this.capacity.numeral > return.numeral
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.weight.numeral > return.numeral
this.parent.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.Container.setCapacity(rpg.item.Weight):::ENTER
this.capacity == null
this.content == null
this.parent == null
arg0.numeral one of { 3.0, 100.0, 5500.0 }
===========================================================================
rpg.item.Container.setCapacity(rpg.item.Weight):::EXIT
this.capacity == orig(arg0)
this.capacity.numeral == arg0.numeral
this.capacity.unit == arg0.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
arg0.numeral == orig(arg0.numeral)
arg0.unit == orig(arg0.unit)
this.content == null
this.parent == null
arg0.numeral one of { 3.0, 100.0, 5500.0 }
===========================================================================
rpg.item.Dukat:::CLASS
rpg.item.Dukat.WEIGHT has only one value
rpg.item.Dukat.WEIGHT != null
rpg.item.Dukat.WEIGHT.numeral == 50.0
rpg.item.Dukat.WEIGHT.unit has only one value
rpg.item.Dukat.WEIGHT.unit != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.Dukat:::OBJECT
===========================================================================
rpg.item.Dukat.Dukat():::EXIT
===========================================================================
rpg.item.Dukat.getId():::ENTER
===========================================================================
rpg.item.Dukat.getId():::EXIT
rpg.item.Dukat.WEIGHT == orig(rpg.item.Dukat.WEIGHT)
rpg.item.Dukat.WEIGHT.numeral == orig(rpg.item.Dukat.WEIGHT.numeral)
rpg.item.Dukat.WEIGHT.unit == orig(rpg.item.Dukat.WEIGHT.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return == 0
===========================================================================
rpg.item.Dukat.getValue():::ENTER
===========================================================================
rpg.item.Dukat.getValue():::EXIT
rpg.item.Dukat.WEIGHT == orig(rpg.item.Dukat.WEIGHT)
rpg.item.Dukat.WEIGHT.numeral == orig(rpg.item.Dukat.WEIGHT.numeral)
rpg.item.Dukat.WEIGHT.unit == orig(rpg.item.Dukat.WEIGHT.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return == 1
===========================================================================
rpg.item.Dukat.getWeight():::ENTER
===========================================================================
rpg.item.Dukat.getWeight():::EXIT
rpg.item.Dukat.WEIGHT == return
rpg.item.Dukat.WEIGHT == orig(rpg.item.Dukat.WEIGHT)
rpg.item.Dukat.WEIGHT.numeral == orig(rpg.item.Dukat.WEIGHT.numeral)
rpg.item.Dukat.WEIGHT.unit == orig(rpg.item.Dukat.WEIGHT.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == return.unit
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return.numeral == 50.0
===========================================================================
rpg.item.ItemImplementation:::OBJECT
this.value >= 0
this.weight.unit != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.id >= 0
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
this.getClass().getName() != rpg.item.WeightUnit.conversionRates.getClass().getName()
this.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
this.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != this.parent.getClass().getName()
===========================================================================
rpg.item.ItemImplementation.ItemImplementation(long, rpg.item.Weight, int):::ENTER
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.ItemImplementation.ItemImplementation(long, rpg.item.Weight, int):::EXIT
this.value == orig(arg2)
this.weight == orig(arg1)
this.weight.numeral == arg1.numeral
this.weight.unit == arg1.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(arg0)
arg1.numeral == orig(arg1.numeral)
arg1.unit == orig(arg1.unit)
this.parent == null
===========================================================================
rpg.item.ItemImplementation.ItemImplementation(rpg.item.Weight):::ENTER
arg0.unit == rpg.item.WeightUnit.KG
arg0 has only one value
arg0.numeral == 30.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.ItemImplementation.ItemImplementation(rpg.item.Weight):::EXIT
this.weight == orig(arg0)
this.weight.numeral == arg0.numeral
this.weight.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == arg0.unit
rpg.item.WeightUnit.KG == orig(arg0.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
arg0.numeral == orig(arg0.numeral)
this.value == 0
this.weight has only one value
this.id == 0
this.parent == null
arg0.numeral == 30.0
===========================================================================
rpg.item.ItemImplementation.canHaveAsId(long):::ENTER
this.value == 0
this.weight == null
this.id == 0
this.parent == null
===========================================================================
rpg.item.ItemImplementation.canHaveAsId(long):::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.value == 0
this.weight == null
this.id == 0
this.parent == null
return == true
===========================================================================
rpg.item.ItemImplementation.canHaveAsId(long):::EXIT;condition="return == true"
===========================================================================
rpg.item.ItemImplementation.getHolder():::ENTER
this.weight.unit == rpg.item.WeightUnit.G
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
===========================================================================
rpg.item.ItemImplementation.getHolder():::EXIT232
===========================================================================
rpg.item.ItemImplementation.getHolder():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
return == null
rpg.creature.Creature.strengthPrecision == 2
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.getId():::ENTER
this.value one of { 0, 1 }
this.weight.numeral one of { 1.0, 5.0, 11.0 }
this.id one of { 1, 6 }
this.parent.getClass().getName() == rpg.item.BackPack.class
===========================================================================
rpg.item.ItemImplementation.getId():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == return
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.id)
this.value one of { 0, 1 }
this.weight.numeral one of { 1.0, 5.0, 11.0 }
this.parent.getClass().getName() == rpg.item.BackPack.class
return one of { 1, 6 }
===========================================================================
rpg.item.ItemImplementation.getParent():::ENTER
this.weight != null
this.id >= 1
this.parent == null
===========================================================================
rpg.item.ItemImplementation.getParent():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.weight != null
this.id >= 1
this.parent == null
return == null
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.getValue():::ENTER
this.weight.unit == rpg.item.WeightUnit.G
this.getClass().getName() == rpg.item.BackPack.class
this.value one of { 3, 10 }
this.weight.numeral == 100.0
this.id one of { 2, 4 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
===========================================================================
rpg.item.ItemImplementation.getValue():::EXIT
this.value == return
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.value)
this.weight.numeral == 100.0
this.id one of { 2, 4 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
return one of { 3, 10 }
===========================================================================
rpg.item.ItemImplementation.getWeight():::ENTER
this.weight != null
this.id >= 1
===========================================================================
rpg.item.ItemImplementation.getWeight():::EXIT
this.value == orig(this.value)
this.weight == return
this.weight.numeral == return.numeral
this.weight.unit == return.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.weight)
return.numeral == orig(this.weight.numeral)
return.unit == orig(this.weight.unit)
this.id >= 1
return != null
return.unit != null
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.parent.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.hasHolder():::ENTER
this.weight.unit == rpg.item.WeightUnit.G
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
===========================================================================
rpg.item.ItemImplementation.hasHolder():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
return == false
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.hasHolder():::EXIT;condition="not(return == true)"
===========================================================================
rpg.item.ItemImplementation.hasParent():::ENTER
this.weight != null
this.id >= 1
this.parent == null
===========================================================================
rpg.item.ItemImplementation.hasParent():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.weight != null
this.id >= 1
this.parent == null
return == false
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.hasParent():::EXIT;condition="not(return == true)"
===========================================================================
rpg.item.ItemImplementation.isTerminated():::ENTER
this.weight.unit == rpg.item.WeightUnit.G
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
===========================================================================
rpg.item.ItemImplementation.isTerminated():::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == return
return == orig(this.isTerminated)
this.value one of { 0, 10 }
this.weight != null
this.weight.numeral one of { 5.0, 11.0, 100.0 }
this.id one of { 1, 2 }
this.parent == null
return == false
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.isTerminated():::EXIT;condition="not(return == true)"
===========================================================================
rpg.item.ItemImplementation.setId(long):::ENTER
this.value == 0
this.weight == null
this.id == 0
this.parent == null
===========================================================================
rpg.item.ItemImplementation.setId(long):::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(arg0)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.value == 0
this.weight == null
this.parent == null
===========================================================================
rpg.item.ItemImplementation.setParent(rpg.item.Parent):::ENTER
this.parent.getClass().getName() == rpg.creature.Anchor.class
===========================================================================
rpg.item.ItemImplementation.setParent(rpg.item.Parent):::EXIT
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(arg0)
this.parent.getClass().getName() == orig(arg0.getClass().getName())
this.isTerminated == orig(this.isTerminated)
rpg.item.WeightUnit.conversionRates.getClass().getName() != orig(this.getClass().getName())
rpg.item.WeightUnit.$VALUES.getClass().getName() != orig(this.getClass().getName())
===========================================================================
rpg.item.ItemImplementation.setValue(int):::ENTER
this.value == 0
this.parent == null
===========================================================================
rpg.item.ItemImplementation.setValue(int):::EXIT
this.value == orig(arg0)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.weight.unit == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
this.parent == null
===========================================================================
rpg.item.Purse:::CLASS
rpg.item.Purse.secondLastId one of { 0, 1 }
rpg.item.Purse.lastId one of { 0, 1 }
rpg.item.Purse.secondLastId <= rpg.item.Purse.lastId
===========================================================================
rpg.item.Purse:::OBJECT
rpg.item.WeightUnit.G == this.weight.unit
this.capacity.numeral one of { 3.0, 5500.0 }
this.capacity.unit != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.value == 0
this.weight.numeral one of { 5.0, 11.0 }
this.weight.unit has only one value
this.weight.unit != null
this.id one of { 0, 1 }
this.parent.getClass().getName() == rpg.creature.Anchor.class
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.Purse.secondLastId <= this.id
this.capacity.numeral != this.weight.numeral
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.Purse.Purse(rpg.item.Weight, rpg.item.Weight, int):::ENTER
arg0.unit == rpg.item.WeightUnit.G
arg0.numeral one of { 5.0, 11.0 }
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg1.numeral one of { 3.0, 5500.0 }
arg2 one of { 20, 95 }
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Purse.Purse(rpg.item.Weight, rpg.item.Weight, int):::EXIT
rpg.item.Purse.lastId == this.id
this.capacity == orig(arg1)
this.capacity.numeral == arg1.numeral
this.capacity.unit == arg1.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == arg0.unit
rpg.item.WeightUnit.G == orig(arg0.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.weight == orig(arg0)
this.weight.numeral == arg0.numeral
arg0.numeral == orig(arg0.numeral)
arg1.numeral == orig(arg1.numeral)
arg1.unit == orig(arg1.unit)
rpg.item.Purse.lastId == 1
this.parent == null
arg0.numeral one of { 5.0, 11.0 }
arg1.numeral one of { 3.0, 5500.0 }
===========================================================================
rpg.item.Purse.addDukat(rpg.item.Dukat):::ENTER
rpg.item.Purse.secondLastId == 0
this.capacity != null
this.content != null
this.weight != null
this.id == 1
this.parent == null
arg0 != null
rpg.item.Dukat.WEIGHT has only one value
rpg.item.Dukat.WEIGHT != null
rpg.item.Dukat.WEIGHT.numeral == 50.0
rpg.item.Dukat.WEIGHT.unit has only one value
rpg.item.Dukat.WEIGHT.unit != null
rpg.item.Purse.lastId <= this.id
===========================================================================
rpg.item.Purse.addDukat(rpg.item.Dukat):::EXIT
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.lastId == orig(rpg.item.Purse.lastId)
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Dukat.WEIGHT == orig(rpg.item.Dukat.WEIGHT)
rpg.item.Dukat.WEIGHT.numeral == orig(rpg.item.Dukat.WEIGHT.numeral)
rpg.item.Dukat.WEIGHT.unit == orig(rpg.item.Dukat.WEIGHT.unit)
rpg.item.Purse.secondLastId == 0
this.capacity != null
this.content != null
this.weight != null
this.id == 1
this.parent == null
rpg.item.Dukat.WEIGHT has only one value
rpg.item.Dukat.WEIGHT != null
rpg.item.Dukat.WEIGHT.numeral == 50.0
rpg.item.Dukat.WEIGHT.unit has only one value
rpg.item.Dukat.WEIGHT.unit != null
rpg.item.Purse.lastId <= this.id
===========================================================================
rpg.item.Purse.addDukats(int):::ENTER
rpg.item.Purse.secondLastId == 0
this.id == 1
this.parent == null
arg0 one of { 20, 95 }
===========================================================================
rpg.item.Purse.addDukats(int):::EXIT
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.lastId == orig(rpg.item.Purse.lastId)
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Purse.secondLastId == 0
this.id == 1
this.parent == null
===========================================================================
rpg.item.Purse.canHaveAsId(long):::ENTER
rpg.item.Purse.secondLastId == this.id
rpg.item.Purse.secondLastId == 0
this.capacity == null
this.content == null
this.weight == null
this.parent == null
arg0 == 1
===========================================================================
rpg.item.Purse.canHaveAsId(long):::EXIT153
===========================================================================
rpg.item.Purse.canHaveAsId(long):::EXIT153;condition="return == true"
===========================================================================
rpg.item.Purse.canHaveAsId(long):::EXIT
rpg.item.Purse.secondLastId == this.id
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.secondLastId == orig(this.id)
rpg.item.Purse.lastId == orig(rpg.item.Purse.lastId)
this.capacity == orig(this.capacity)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Purse.secondLastId == 0
this.capacity == null
this.content == null
this.weight == null
this.parent == null
return == true
===========================================================================
rpg.item.Purse.canHaveAsId(long):::EXIT;condition="return == true"
===========================================================================
rpg.item.Purse.generateId():::ENTER
rpg.item.Purse.secondLastId == 0
===========================================================================
rpg.item.Purse.generateId():::EXIT
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.lastId == orig(rpg.item.Purse.lastId)
rpg.item.Purse.secondLastId == 0
return == 1
===========================================================================
rpg.item.Purse.getValue():::ENTER
rpg.item.Purse.secondLastId == rpg.item.Purse.lastId
rpg.item.Purse.secondLastId == this.id
this.capacity.unit == rpg.item.WeightUnit.G
this has only one value
rpg.item.Purse.secondLastId == 1
this.capacity has only one value
this.capacity.numeral == 5500.0
this.content has only one value
this.weight has only one value
this.weight.numeral == 5.0
this.parent has only one value
===========================================================================
rpg.item.Purse.getValue():::EXIT
rpg.item.Purse.secondLastId == rpg.item.Purse.lastId
rpg.item.Purse.secondLastId == this.id
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.lastId)
rpg.item.Purse.secondLastId == orig(this.id)
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(this.capacity.unit)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
rpg.item.Purse.secondLastId == 1
this.capacity has only one value
this.capacity.numeral == 5500.0
this.content has only one value
this.weight has only one value
this.weight.numeral == 5.0
this.parent has only one value
return == 95
===========================================================================
rpg.item.Purse.setCapacity(rpg.item.Weight):::ENTER
rpg.item.Purse.secondLastId == 0
this.capacity == null
this.content == null
this.id == 1
this.parent == null
arg0.numeral one of { 3.0, 5500.0 }
===========================================================================
rpg.item.Purse.setCapacity(rpg.item.Weight):::EXIT
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.secondLastId)
rpg.item.Purse.lastId == orig(rpg.item.Purse.lastId)
this.capacity == orig(arg0)
this.capacity.numeral == arg0.numeral
this.capacity.unit == arg0.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
arg0.numeral == orig(arg0.numeral)
arg0.unit == orig(arg0.unit)
rpg.item.Purse.secondLastId == 0
this.content == null
this.id == 1
this.parent == null
arg0.numeral one of { 3.0, 5500.0 }
===========================================================================
rpg.item.Purse.shiftFibonacciNumbers():::ENTER
rpg.item.Purse.secondLastId == 0
this.id == 1
this.parent == null
===========================================================================
rpg.item.Purse.shiftFibonacciNumbers():::EXIT
rpg.item.Purse.secondLastId == orig(rpg.item.Purse.lastId)
rpg.item.Purse.lastId == this.id
rpg.item.Purse.lastId == orig(this.id)
this.capacity == orig(this.capacity)
this.capacity.numeral == orig(this.capacity.numeral)
this.capacity.unit == orig(this.capacity.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.G == orig(this.weight.unit)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.content == orig(this.content)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Purse.lastId == 1
this.parent == null
===========================================================================
rpg.item.Weapon:::CLASS
rpg.item.Weapon.lastId one of { 0, 6 }
rpg.item.Weapon.maxDamage == 100
rpg.item.Weapon.damageValueFactor == 2.0
rpg.item.Weapon.useFormula == true
===========================================================================
rpg.item.Weapon:::OBJECT
this.weight.unit == rpg.item.WeightUnit.KG
this has only one value
this.damage one of { 0, 60 }
this.value == 1
this.weight has only one value
this.weight != null
this.weight.numeral == 1.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
this.id == 6
this.parent.getClass().getName() == rpg.creature.Anchor.class
this.isTerminated == false
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.Weapon.lastId <= this.id
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
rpg.item.WeightUnit.conversionRates.getClass().getName() != this.parent.getClass().getName()
rpg.item.WeightUnit.$VALUES.getClass().getName() != this.parent.getClass().getName()
===========================================================================
rpg.item.Weapon.Weapon(rpg.item.Weight, int):::ENTER
arg0.unit == rpg.item.WeightUnit.KG
arg0 has only one value
arg0.numeral == 1.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg1 == 60
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Weapon.Weapon(rpg.item.Weight, int):::EXIT
rpg.item.Weapon.lastId == this.id
this.damage == orig(arg1)
this.weight == orig(arg0)
this.weight.numeral == arg0.numeral
rpg.item.WeightUnit.KG == arg0.unit
rpg.item.WeightUnit.KG == orig(arg0.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
arg0.numeral == orig(arg0.numeral)
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent == null
arg0.numeral == 1.0
===========================================================================
rpg.item.Weapon.Weapon(rpg.item.Weight, int, int):::ENTER
arg0.unit == rpg.item.WeightUnit.KG
arg0 has only one value
arg0.numeral == 1.0
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
arg1 == 60
arg2 == 1
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
===========================================================================
rpg.item.Weapon.Weapon(rpg.item.Weight, int, int):::EXIT
rpg.item.Weapon.lastId == this.id
this.damage == orig(arg1)
this.value == orig(arg2)
this.weight == orig(arg0)
this.weight.numeral == arg0.numeral
rpg.item.WeightUnit.KG == arg0.unit
rpg.item.WeightUnit.KG == orig(arg0.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
arg0.numeral == orig(arg0.numeral)
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent == null
arg0.numeral == 1.0
===========================================================================
rpg.item.Weapon.generateId():::ENTER
rpg.item.Weapon.lastId == 0
===========================================================================
rpg.item.Weapon.generateId():::EXIT
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
rpg.item.Weapon.lastId == 0
return == 6
===========================================================================
rpg.item.Weapon.getDamage():::ENTER
rpg.item.Weapon.lastId == this.id
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent has only one value
===========================================================================
rpg.item.Weapon.getDamage():::EXIT
rpg.item.Weapon.lastId == this.id
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.lastId == orig(this.id)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
this.damage == return
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
return == orig(this.damage)
rpg.item.Weapon.lastId == 6
this.parent has only one value
return == 60
===========================================================================
rpg.item.Weapon.getDamageValueFactor():::ENTER
rpg.item.Weapon.lastId == 6
===========================================================================
rpg.item.Weapon.getDamageValueFactor():::EXIT
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
rpg.item.Weapon.damageValueFactor == return
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
rpg.item.Weapon.lastId == 6
===========================================================================
rpg.item.Weapon.getUseFormula():::ENTER
rpg.item.Weapon.lastId == 6
===========================================================================
rpg.item.Weapon.getUseFormula():::EXIT
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == return
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
rpg.item.Weapon.lastId == 6
===========================================================================
rpg.item.Weapon.getUseFormula():::EXIT;condition="return == true"
===========================================================================
rpg.item.Weapon.getValue():::ENTER
rpg.item.Weapon.lastId == this.id
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent has only one value
===========================================================================
rpg.item.Weapon.getValue():::EXIT266
===========================================================================
rpg.item.Weapon.getValue():::EXIT
rpg.item.Weapon.lastId == this.id
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.lastId == orig(this.id)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
this.damage == orig(this.damage)
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.parent == orig(this.parent)
this.parent.getClass().getName() == orig(this.parent.getClass().getName())
this.isTerminated == orig(this.isTerminated)
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent has only one value
return == 120
===========================================================================
rpg.item.Weapon.setDamage(int):::ENTER
rpg.item.Weapon.lastId == 0
this.damage == 0
this.parent == null
arg0 == 60
===========================================================================
rpg.item.Weapon.setDamage(int):::EXIT
rpg.item.Weapon.lastId == orig(rpg.item.Weapon.lastId)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
this.damage == orig(arg0)
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.id == orig(this.id)
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Weapon.lastId == 0
this.damage == 60
this.parent == null
===========================================================================
rpg.item.Weapon.shiftId():::ENTER
rpg.item.Weapon.lastId == 0
this.damage == 60
this.parent == null
===========================================================================
rpg.item.Weapon.shiftId():::EXIT
rpg.item.Weapon.lastId == this.id
rpg.item.Weapon.lastId == orig(this.id)
rpg.item.Weapon.maxDamage == orig(rpg.item.Weapon.maxDamage)
this.damage == orig(this.damage)
rpg.item.Weapon.damageValueFactor == orig(rpg.item.Weapon.damageValueFactor)
rpg.item.Weapon.useFormula == orig(rpg.item.Weapon.useFormula)
this.value == orig(this.value)
this.weight == orig(this.weight)
this.weight.numeral == orig(this.weight.numeral)
rpg.item.WeightUnit.KG == orig(this.weight.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.parent == orig(this.parent)
this.isTerminated == orig(this.isTerminated)
rpg.item.Weapon.lastId == 6
this.damage == 60
this.parent == null
===========================================================================
rpg.item.Weight:::OBJECT
this.numeral >= 0.0
this.unit != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.Weight.Weight(double, rpg.item.WeightUnit):::ENTER
arg0 >= 0.0
arg1 != null
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.Weight.Weight(double, rpg.item.WeightUnit):::EXIT
this.numeral == orig(arg0)
this.unit == orig(arg1)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
===========================================================================
rpg.item.Weight.add(rpg.item.Weight):::ENTER
this.unit == rpg.item.WeightUnit.KG
arg0 != null
arg0.unit != null
this.numeral != arg0.numeral
===========================================================================
rpg.item.Weight.add(rpg.item.Weight):::EXIT137
===========================================================================
rpg.item.Weight.add(rpg.item.Weight):::EXIT
this.numeral == orig(this.numeral)
this.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == return.unit
rpg.item.WeightUnit.KG == orig(this.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
arg0.numeral == orig(arg0.numeral)
arg0.unit == orig(arg0.unit)
arg0.unit != null
return != null
this.numeral != arg0.numeral
this.numeral < return.numeral
===========================================================================
rpg.item.Weight.compareTo(rpg.item.Weight):::ENTER
this.unit == rpg.item.WeightUnit.KG
arg0 != null
arg0.unit != null
this.numeral < arg0.numeral
===========================================================================
rpg.item.Weight.compareTo(rpg.item.Weight):::EXIT57
===========================================================================
rpg.item.Weight.compareTo(rpg.item.Weight):::EXIT
this.numeral == orig(this.numeral)
this.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == orig(this.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
arg0.numeral == orig(arg0.numeral)
arg0.unit == orig(arg0.unit)
arg0.unit != null
return == -1
this.numeral < arg0.numeral
===========================================================================
rpg.item.Weight.getNumeral():::ENTER
===========================================================================
rpg.item.Weight.getNumeral():::EXIT
this.numeral == return
this.unit == orig(this.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return == orig(this.numeral)
return >= 0.0
===========================================================================
rpg.item.Weight.getUnit():::ENTER
===========================================================================
rpg.item.Weight.getUnit():::EXIT
this.numeral == orig(this.numeral)
this.unit == return
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return == orig(this.unit)
return != null
===========================================================================
rpg.item.Weight.multiply(double):::ENTER
this.unit == rpg.item.WeightUnit.KG
this.numeral one of { 9.0, 10.0 }
arg0 one of { 1.0, 10.0 }
this.numeral >= arg0
===========================================================================
rpg.item.Weight.multiply(double):::EXIT
this.numeral == orig(this.numeral)
this.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == return.unit
rpg.item.WeightUnit.KG == orig(this.unit)
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
this.numeral one of { 9.0, 10.0 }
return.numeral one of { 9.0, 100.0 }
this.numeral <= return.numeral
this.numeral >= orig(arg0)
return.numeral > orig(arg0)
===========================================================================
rpg.item.Weight.toUnit(rpg.item.WeightUnit):::ENTER
rpg.item.WeightUnit.KG == arg0
===========================================================================
rpg.item.Weight.toUnit(rpg.item.WeightUnit):::EXIT101
this.unit == rpg.item.WeightUnit.G
rpg.item.WeightUnit.G == orig(this.unit)
3.422735716801577E15 * this.numeral - 3.422735716801577E18 * return.numeral == 0
this.numeral > return.numeral
===========================================================================
rpg.item.Weight.toUnit(rpg.item.WeightUnit):::EXIT99
this.numeral == return.numeral
this.unit == rpg.item.WeightUnit.KG
rpg.item.WeightUnit.KG == orig(this.unit)
return == orig(this)
===========================================================================
rpg.item.Weight.toUnit(rpg.item.WeightUnit):::EXIT
this.numeral == orig(this.numeral)
this.unit == orig(this.unit)
rpg.item.WeightUnit.KG == return.unit
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.KG == orig(arg0)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return != null
this.numeral >= return.numeral
===========================================================================
rpg.item.WeightUnit:::CLASS
rpg.item.WeightUnit.KG has only one value
rpg.item.WeightUnit.KG != null
rpg.item.WeightUnit.G has only one value
rpg.item.WeightUnit.G != null
rpg.item.WeightUnit.POUND has only one value
rpg.item.WeightUnit.POUND != null
rpg.item.WeightUnit.conversionRates has only one value
rpg.item.WeightUnit.conversionRates != null
rpg.item.WeightUnit.conversionRates.getClass().getName() == double[][].class
rpg.item.WeightUnit.conversionRates[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.conversionRates[] elements != null
rpg.item.WeightUnit.$VALUES has only one value
rpg.item.WeightUnit.$VALUES != null
rpg.item.WeightUnit.$VALUES.getClass().getName() == rpg.item.WeightUnit[].class
rpg.item.WeightUnit.$VALUES[] contains no nulls and has only one value, of length 3
rpg.item.WeightUnit.$VALUES[] elements != null
rpg.item.WeightUnit.$VALUES[].getClass().getName() == [rpg.item.WeightUnit, rpg.item.WeightUnit, rpg.item.WeightUnit]
rpg.item.WeightUnit.$VALUES[].getClass().getName() elements == rpg.item.WeightUnit.class
size(rpg.item.WeightUnit.conversionRates[]) == 3
size(rpg.item.WeightUnit.$VALUES[]) == 3
rpg.item.WeightUnit.conversionRates.getClass().getName() != rpg.item.WeightUnit.$VALUES.getClass().getName()
===========================================================================
rpg.item.WeightUnit:::OBJECT
===========================================================================
rpg.item.WeightUnit.WeightUnit(java.lang.String, int):::ENTER
arg0.toString one of { "G", "KG", "POUND" }
arg1 one of { 0, 1, 2 }
===========================================================================
rpg.item.WeightUnit.WeightUnit(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "G", "KG", "POUND" }
===========================================================================
rpg.item.WeightUnit.toUnit(rpg.item.WeightUnit):::ENTER
this == rpg.item.WeightUnit.G
rpg.item.WeightUnit.KG == arg0
this has only one value
===========================================================================
rpg.item.WeightUnit.toUnit(rpg.item.WeightUnit):::EXIT46
===========================================================================
rpg.item.WeightUnit.toUnit(rpg.item.WeightUnit):::EXIT
rpg.item.WeightUnit.KG == orig(rpg.item.WeightUnit.KG)
rpg.item.WeightUnit.KG == orig(arg0)
rpg.item.WeightUnit.G == orig(this)
rpg.item.WeightUnit.G == orig(rpg.item.WeightUnit.G)
rpg.item.WeightUnit.POUND == orig(rpg.item.WeightUnit.POUND)
rpg.item.WeightUnit.conversionRates == orig(rpg.item.WeightUnit.conversionRates)
rpg.item.WeightUnit.conversionRates.getClass().getName() == orig(rpg.item.WeightUnit.conversionRates.getClass().getName())
rpg.item.WeightUnit.conversionRates[] == orig(rpg.item.WeightUnit.conversionRates[])
rpg.item.WeightUnit.$VALUES == orig(rpg.item.WeightUnit.$VALUES)
rpg.item.WeightUnit.$VALUES.getClass().getName() == orig(rpg.item.WeightUnit.$VALUES.getClass().getName())
rpg.item.WeightUnit.$VALUES[] == orig(rpg.item.WeightUnit.$VALUES[])
return == 0.001
Exiting Daikon.
