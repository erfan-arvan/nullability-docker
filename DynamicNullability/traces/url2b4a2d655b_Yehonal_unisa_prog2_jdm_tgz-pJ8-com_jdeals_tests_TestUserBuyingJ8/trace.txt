Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 3 times.  Unmatched entries are ignored!
Unterminated calls:
  com.jdeals.tests.TestDemoData.importExampleData(com.jdeals.main.controller.JDealsController) : 1 invocation
  com.jdeals.main.controller.Store.addItemToCart(com.jdeals.main.entity.catalogue.Item, int) : 1 invocation
  com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
com.jdeals.libs.Message:::OBJECT
this has only one value
===========================================================================
com.jdeals.libs.Message.Message(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Example data loaded succefully!"
===========================================================================
com.jdeals.libs.Message.Message(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "Example data loaded succefully!"
===========================================================================
com.jdeals.libs.Message.toString():::ENTER
===========================================================================
com.jdeals.libs.Message.toString():::EXIT
return has only one value
return.toString == "Example data loaded succefully!"
===========================================================================
com.jdeals.libs.MyDate:::CLASS
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat != null
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask != null
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
===========================================================================
com.jdeals.libs.MyDate:::OBJECT
this.format has only one value
this.format != null
this.format.toString == "dd/mm/yyyy"
this.calendar != null
this.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.libs.MyDate.MyDate():::EXIT
===========================================================================
com.jdeals.libs.MyDate.MyDate(java.lang.String, java.util.Calendar):::ENTER
arg0 has only one value
arg0 != null
arg0.toString == "dd/mm/yyyy"
arg1 != null
arg1.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.libs.MyDate.MyDate(java.lang.String, java.util.Calendar):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "dd/mm/yyyy"
===========================================================================
com.jdeals.libs.MyDate.fromString(java.lang.String):::ENTER
===========================================================================
com.jdeals.libs.MyDate.fromString(java.lang.String):::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.format == orig(this.format)
this.format.toString == orig(this.format.toString)
this.calendar == orig(this.calendar)
this.calendar.getClass().getName() == orig(this.calendar.getClass().getName())
arg0.toString == orig(arg0.toString)
return.format has only one value
return.format.toString == "dd/mm/yyyy"
return.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.libs.MyDate.getDate():::ENTER
this has only one value
this.calendar has only one value
===========================================================================
com.jdeals.libs.MyDate.getDate():::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.format == orig(this.format)
this.format.toString == orig(this.format.toString)
this.calendar == orig(this.calendar)
this.calendar.getClass().getName() == orig(this.calendar.getClass().getName())
this.calendar has only one value
return has only one value
===========================================================================
com.jdeals.libs.MyDate.toString():::ENTER
this has only one value
this.calendar has only one value
===========================================================================
com.jdeals.libs.MyDate.toString():::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.format == orig(this.format)
this.format.toString == orig(this.format.toString)
this.calendar == orig(this.calendar)
this.calendar.getClass().getName() == orig(this.calendar.getClass().getName())
this.calendar has only one value
return has only one value
return.toString == "April 6, 2025"
===========================================================================
com.jdeals.libs.MyObject:::OBJECT
===========================================================================
com.jdeals.libs.MyObject.MyObject():::EXIT
===========================================================================
com.jdeals.libs.MyObject.equals(java.lang.Object):::ENTER
===========================================================================
com.jdeals.libs.MyObject.equals(java.lang.Object):::EXIT
return == false
===========================================================================
com.jdeals.libs.MyObject.equals(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.libs.MyVar:::OBJECT
this.name.toString one of { "Date", "Price" }
===========================================================================
com.jdeals.libs.MyVar.MyVar(java.lang.Object, java.lang.String):::ENTER
arg1.toString one of { "Date", "Price" }
===========================================================================
com.jdeals.libs.MyVar.MyVar(java.lang.Object, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
arg1.toString one of { "Date", "Price" }
===========================================================================
com.jdeals.libs.Tools.RoundDecimalPos(double, int):::ENTER
arg0 == 20.0
arg1 == 2
===========================================================================
com.jdeals.libs.Tools.RoundDecimalPos(double, int):::EXIT
return == orig(arg0)
return == 20.0
===========================================================================
com.jdeals.libs.Tools.printVars(java.lang.String, boolean, boolean, com.jdeals.libs.MyVar[]):::ENTER
arg0 has only one value
arg0.toString == "Order"
arg1 == true
arg2 == true
arg3 has only one value
arg3.getClass().getName() == com.jdeals.libs.MyVar[].class
arg3[] contains no nulls and has only one value, of length 2
arg3[].value contains no nulls and has only one value, of length 2
arg3[].value.getClass().getName() == [java.lang.String, java.lang.Double]
arg3[].name contains no nulls and has only one value, of length 2
arg3[].name.toString == [Date, Price]
arg3[].name.toString elements one of { "Date", "Price" }
size(arg3[]) == 2
===========================================================================
com.jdeals.libs.Tools.printVars(java.lang.String, boolean, boolean, com.jdeals.libs.MyVar[]):::EXIT
arg0.toString == orig(arg0.toString)
arg3[] == orig(arg3[])
arg3[].value == orig(arg3[].value)
arg3[].name == orig(arg3[].name)
arg0.toString == "Order"
arg3[] contains no nulls and has only one value, of length 2
arg3[].value contains no nulls and has only one value, of length 2
arg3[].value.getClass().getName() == [java.lang.String, java.lang.Double]
arg3[].name contains no nulls and has only one value, of length 2
arg3[].name.toString == [Date, Price]
arg3[].name.toString elements one of { "Date", "Price" }
return has only one value
return.toString == "Order\nApril 6, 2025 \n20.0 \n"
===========================================================================
com.jdeals.main.controller.JDealsController$1:::OBJECT
this has only one value
com.jdeals.main.controller.JDealsController.this has only one value
com.jdeals.main.controller.JDealsController.scan == null
com.jdeals.main.controller.JDealsController.this.users has only one value
com.jdeals.main.controller.JDealsController.this.users[] == []
com.jdeals.main.controller.JDealsController.this.users[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.curUser == null
com.jdeals.main.controller.JDealsController.this.curMenu == null
com.jdeals.main.controller.JDealsController.this.store has only one value
com.jdeals.main.controller.JDealsController.this.store.items has only one value
com.jdeals.main.controller.JDealsController.this.store.items[] == []
com.jdeals.main.controller.JDealsController.this.store.items[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.store.discounts has only one value
com.jdeals.main.controller.JDealsController.this.store.discounts[] == []
com.jdeals.main.controller.JDealsController.this.store.discounts[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.store.mainCtrl has only one value
com.jdeals.main.controller.JDealsController.this.frame == null
com.jdeals.main.controller.JDealsController.this.rType has only one value
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
com.jdeals.main.controller.JDealsController.this.settings has only one value
com.jdeals.main.controller.JDealsController.this.settings.extrasEnabled == false
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController$1.(com.jdeals.main.controller.JDealsController):::ENTER
com.jdeals.main.controller.JDealsController.this has only one value
com.jdeals.main.controller.JDealsController.scan == null
com.jdeals.main.controller.JDealsController.this.users has only one value
com.jdeals.main.controller.JDealsController.this.users[] == []
com.jdeals.main.controller.JDealsController.this.users[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.curUser == null
com.jdeals.main.controller.JDealsController.this.curMenu == null
com.jdeals.main.controller.JDealsController.this.store has only one value
com.jdeals.main.controller.JDealsController.this.store.items has only one value
com.jdeals.main.controller.JDealsController.this.store.items[] == []
com.jdeals.main.controller.JDealsController.this.store.items[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.store.discounts has only one value
com.jdeals.main.controller.JDealsController.this.store.discounts[] == []
com.jdeals.main.controller.JDealsController.this.store.discounts[].getClass().getName() == []
com.jdeals.main.controller.JDealsController.this.store.mainCtrl has only one value
com.jdeals.main.controller.JDealsController.this.frame == null
com.jdeals.main.controller.JDealsController.this.rType has only one value
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
com.jdeals.main.controller.JDealsController.this.settings has only one value
com.jdeals.main.controller.JDealsController.this.settings.extrasEnabled == false
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController$1.(com.jdeals.main.controller.JDealsController):::EXIT
com.jdeals.main.controller.JDealsController.this == orig(com.jdeals.main.controller.JDealsController.this)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
com.jdeals.main.controller.JDealsController.this.users == orig(com.jdeals.main.controller.JDealsController.this.users)
com.jdeals.main.controller.JDealsController.this.users[] == orig(com.jdeals.main.controller.JDealsController.this.users[])
com.jdeals.main.controller.JDealsController.this.curUser == orig(com.jdeals.main.controller.JDealsController.this.curUser)
com.jdeals.main.controller.JDealsController.this.curMenu == orig(com.jdeals.main.controller.JDealsController.this.curMenu)
com.jdeals.main.controller.JDealsController.this.store == orig(com.jdeals.main.controller.JDealsController.this.store)
com.jdeals.main.controller.JDealsController.this.store.items == orig(com.jdeals.main.controller.JDealsController.this.store.items)
com.jdeals.main.controller.JDealsController.this.store.items[] == orig(com.jdeals.main.controller.JDealsController.this.store.items[])
com.jdeals.main.controller.JDealsController.this.store.discounts == orig(com.jdeals.main.controller.JDealsController.this.store.discounts)
com.jdeals.main.controller.JDealsController.this.store.discounts[] == orig(com.jdeals.main.controller.JDealsController.this.store.discounts[])
com.jdeals.main.controller.JDealsController.this.store.mainCtrl == orig(com.jdeals.main.controller.JDealsController.this.store.mainCtrl)
com.jdeals.main.controller.JDealsController.this.frame == orig(com.jdeals.main.controller.JDealsController.this.frame)
com.jdeals.main.controller.JDealsController.this.rType == orig(com.jdeals.main.controller.JDealsController.this.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
com.jdeals.main.controller.JDealsController.this.settings == orig(com.jdeals.main.controller.JDealsController.this.settings)
com.jdeals.main.controller.JDealsController.this.settings.extrasEnabled == orig(com.jdeals.main.controller.JDealsController.this.settings.extrasEnabled)
===========================================================================
com.jdeals.main.controller.JDealsController$RunType:::OBJECT
===========================================================================
com.jdeals.main.controller.JDealsController$RunType.RunType(java.lang.String, int):::ENTER
arg0.toString one of { "APPLET", "CLI", "FRAME" }
arg1 one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController$RunType.RunType(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "APPLET", "CLI", "FRAME" }
===========================================================================
com.jdeals.main.controller.JDealsController:::CLASS
com.jdeals.main.controller.JDealsController.scan == null
===========================================================================
com.jdeals.main.controller.JDealsController:::OBJECT
this == this.store.mainCtrl
this.users == this.store.mainCtrl.users
this.curUser == this.store.mainCtrl.curUser
this.curUser.username == this.curUser.password
this.store == this.store.mainCtrl.store
this.store.mainCtrl.rType == com.jdeals.main.controller.JDealsController$RunType.FRAME
this.store.mainCtrl.settings == this.settings
this.rType == com.jdeals.main.controller.JDealsController$RunType.FRAME
this has only one value
this.users has only one value
this.users != null
this.users[] elements != null
this.curUser.username has only one value
this.curUser.username.toString == "user"
this.curUser.password.toString == "user"
this.curUser.email has only one value
this.curUser.email.toString == "user@hw2.it"
this.curUser.credit one of { 0.0, 1000.0 }
this.curUser.city has only one value
this.curUser.city.toString == "Salerno"
this.curUser.orders has only one value
this.curUser.orders[] == []
this.curUser.orders[].getClass().getName() == []
this.curUser.curOrder has only one value
this.curUser.curOrder.items has only one value
this.curUser.curOrder.items[] elements has only one value
this.curUser.curOrder.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
this.curUser.curOrder.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
this.curUser.curOrder.totalPrice == 0.0
this.curUser.curOrder.date has only one value
this.curMenu == null
this.store has only one value
this.store != null
this.store.items has only one value
this.store.items != null
this.store.items[] elements != null
this.store.discounts != null
this.store.discounts[] elements != null
this.store.mainCtrl has only one value
this.store.mainCtrl != null
this.store.mainCtrl.users[] elements != null
this.store.mainCtrl.curMenu == null
this.store.mainCtrl.frame == null
this.frame == null
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.APPLET != null
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI != null
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] elements != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
this.settings has only one value
this.settings != null
this.settings.extrasEnabled == false
size(this.curUser.curOrder.items[]) one of { 0, 1 }
size(this.store.items[])-1 != 0
size(this.store.discounts[]) one of { 0, 3 }
size(this.store.discounts[])-1 != 0
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.JDealsController():::EXIT
this.users[] == []
this.users[].getClass().getName() == []
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[] == []
this.store.mainCtrl.users[].getClass().getName() == []
===========================================================================
com.jdeals.main.controller.JDealsController.JDealsController(com.jdeals.main.controller.JDealsController$RunType):::ENTER
arg0 == com.jdeals.main.controller.JDealsController$RunType.FRAME
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.JDealsController(com.jdeals.main.controller.JDealsController$RunType):::EXIT
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(arg0)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.users[] == []
this.users[].getClass().getName() == []
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[] == []
this.store.mainCtrl.users[].getClass().getName() == []
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String):::ENTER
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser == null
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.toString one of { "root", "supplier", "user" }
size(this.users[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
arg0.toString == orig(arg0.toString)
return.username == return.password
return.username == orig(arg0)
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser == null
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.toString one of { "root", "supplier", "user" }
return.username.toString one of { "root", "supplier", "user" }
return.password.toString one of { "root", "supplier", "user" }
return.email.toString one of { "admin@hw2.it", "supplier@hw2.it", "user@hw2.it" }
return.credit == 0.0
return.city has only one value
return.city.toString == "Salerno"
return.orders[] == []
return.orders[].getClass().getName() == []
return.curOrder.items[] == []
return.curOrder.items[].getClass().getName() == []
return.curOrder.totalPrice == 0.0
size(this.users[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String):::ENTER
this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
arg0.toString one of { "root", "supplier", "utente" }
arg1.toString one of { "admin@hw2.it", "supplier@hw2.it", "utente@hw2.it" }
size(this.users[]) one of { 0, 1, 2 }
size(this.store.mainCtrl.users[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
arg0.toString one of { "root", "supplier", "utente" }
arg1.toString one of { "admin@hw2.it", "supplier@hw2.it", "utente@hw2.it" }
return == null
size(this.users[]) one of { 0, 1, 2 }
size(this.store.mainCtrl.users[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String, java.lang.String):::ENTER
arg0 == arg1
this.curUser == null
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
arg2.toString one of { "admin@hw2.it", "supplier@hw2.it", "utente@hw2.it" }
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String, java.lang.String):::EXIT323
return.username == orig(arg1)
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.toString one of { "root", "supplier", "user" }
arg1.toString one of { "root", "supplier", "user" }
orig(arg2) == null
size(this.users[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String, java.lang.String):::EXIT328
this.curUser == return
this.store.mainCtrl.curUser == return
return == orig(this.curUser)
return == orig(this.store.mainCtrl.curUser)
this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
arg0.toString one of { "root", "supplier", "utente" }
arg1.toString one of { "root", "supplier", "utente" }
return == null
size(this.users[]) one of { 0, 1, 2 }
size(this.store.mainCtrl.users[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController.findUser(java.lang.String, java.lang.String, java.lang.String):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
return.username == return.password
return.username == orig(arg0)
(return == null)  <==>  (size(this.store.mainCtrl.users[]) one of { 0, 1, 2 })
(return == null)  <==>  (size(this.users[]) one of { 0, 1, 2 })
(return == null)  ==>  (arg0.toString one of { "root", "supplier", "utente" })
(return == null)  ==>  (arg1.toString one of { "root", "supplier", "utente" })
(return == null)  ==>  (arg2.toString one of { "admin@hw2.it", "supplier@hw2.it", "utente@hw2.it" })
(return == null)  ==>  (this.curUser == return)
(return == null)  ==>  (this.store.discounts[] == [])
(return == null)  ==>  (this.store.discounts[].getClass().getName() == [])
(return == null)  ==>  (this.store.items[] == [])
(return == null)  ==>  (this.store.items[].getClass().getName() == [])
(return == null)  ==>  (this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class)
(return == null)  ==>  (this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class)
this.curUser == null
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
arg2.toString one of { "admin@hw2.it", "supplier@hw2.it", "utente@hw2.it" }
return.username.toString one of { "root", "supplier", "user" }
return.password.toString one of { "root", "supplier", "user" }
return.email.toString one of { "admin@hw2.it", "supplier@hw2.it", "user@hw2.it" }
return.credit == 0.0
return.city has only one value
return.city.toString == "Salerno"
return.orders[] == []
return.orders[].getClass().getName() == []
return.curOrder.items[] == []
return.curOrder.items[].getClass().getName() == []
return.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.controller.JDealsController.getCurUser():::ENTER
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser has only one value
this.curUser.credit == 1000.0
this.store.items[] contains no nulls and has only one value, of length 10
this.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
size(this.users[]) == 3
size(this.store.items[]) == 10
size(this.store.discounts[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.getCurUser():::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == return
this.curUser.username == return.username
this.curUser.username.toString == orig(this.curUser.username.toString)
this.curUser.password == return.username
this.curUser.password.toString == orig(this.curUser.password.toString)
this.curUser.email == return.email
this.curUser.email.toString == orig(this.curUser.email.toString)
this.curUser.credit == return.credit
this.curUser.city == return.city
this.curUser.city.toString == orig(this.curUser.city.toString)
this.curUser.orders == return.orders
this.curUser.orders[] == orig(this.curUser.orders[])
this.curUser.curOrder == return.curOrder
this.curUser.curOrder.items == return.curOrder.items
this.curUser.curOrder.items[] == orig(this.curUser.curOrder.items[])
this.curUser.curOrder.totalPrice == return.curOrder.totalPrice
this.curUser.curOrder.date == return.curOrder.date
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curUser == return
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
return == orig(this.curUser)
return == orig(this.store.mainCtrl.curUser)
return.username == return.password
return.username == orig(this.curUser.username)
return.username == orig(this.curUser.password)
return.email == orig(this.curUser.email)
return.credit == orig(this.curUser.credit)
return.city == orig(this.curUser.city)
return.orders == orig(this.curUser.orders)
return.curOrder == orig(this.curUser.curOrder)
return.curOrder.items == orig(this.curUser.curOrder.items)
return.curOrder.totalPrice == orig(this.curUser.curOrder.totalPrice)
return.curOrder.date == orig(this.curUser.curOrder.date)
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.store.items[] contains no nulls and has only one value, of length 10
this.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
return has only one value
return.username has only one value
return.username.toString == "user"
return.password.toString == "user"
return.email has only one value
return.email.toString == "user@hw2.it"
return.credit == 1000.0
return.city has only one value
return.city.toString == "Salerno"
return.orders has only one value
return.orders[] == []
return.orders[].getClass().getName() == []
return.curOrder has only one value
return.curOrder.items has only one value
return.curOrder.items[] elements has only one value
return.curOrder.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
return.curOrder.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
return.curOrder.totalPrice == 0.0
return.curOrder.date has only one value
size(this.users[]) == 3
size(this.store.items[]) == 10
size(this.store.discounts[]) == 3
size(this.store.mainCtrl.users[]) == 3
size(return.curOrder.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.controller.JDealsController.getStore():::ENTER
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser.credit == 1000.0
this.curUser.curOrder.items[] == []
this.curUser.curOrder.items[].getClass().getName() == []
this.store.items[].getClass().getName() one of { [], [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant] }
this.store.discounts has only one value
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
size(this.users[]) == 3
size(this.store.items[]) one of { 0, 10 }
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.getStore():::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == return.mainCtrl.users
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == return.mainCtrl.curUser
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curUser.username == orig(this.curUser.username)
this.curUser.username == orig(this.curUser.password)
this.curUser.username.toString == orig(this.curUser.username.toString)
this.curUser.password.toString == orig(this.curUser.password.toString)
this.curUser.email == orig(this.curUser.email)
this.curUser.email.toString == orig(this.curUser.email.toString)
this.curUser.credit == orig(this.curUser.credit)
this.curUser.city == orig(this.curUser.city)
this.curUser.city.toString == orig(this.curUser.city.toString)
this.curUser.orders == orig(this.curUser.orders)
this.curUser.orders[] == orig(this.curUser.orders[])
this.curUser.curOrder == orig(this.curUser.curOrder)
this.curUser.curOrder.items == orig(this.curUser.curOrder.items)
this.curUser.curOrder.items[] == orig(this.curUser.curOrder.items[])
this.curUser.curOrder.totalPrice == orig(this.curUser.curOrder.totalPrice)
this.curUser.curOrder.date == orig(this.curUser.curOrder.date)
this.curMenu == orig(this.curMenu)
this.store == return
this.store.items == return.items
this.store.items[] == orig(this.store.items[])
this.store.discounts == return.discounts
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == return.mainCtrl
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.store == return
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == return.mainCtrl.rType
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == return.mainCtrl.settings
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
return == return.mainCtrl.store
return == orig(this.store)
return == orig(this.store.mainCtrl.store)
return.items == orig(this.store.items)
return.discounts == orig(this.store.discounts)
return.mainCtrl == orig(this)
return.mainCtrl == orig(this.store.mainCtrl)
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser.credit == 1000.0
this.curUser.curOrder.items[] == []
this.curUser.curOrder.items[].getClass().getName() == []
this.store.items[].getClass().getName() one of { [], [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant] }
this.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
return has only one value
return.items has only one value
return.items[].getClass().getName() one of { [], [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant] }
return.discounts has only one value
return.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
return.mainCtrl has only one value
return.mainCtrl.users[] contains no nulls and has only one value, of length 3
return.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
return.mainCtrl.curMenu == null
return.mainCtrl.frame == null
size(this.users[]) == 3
size(this.store.items[]) one of { 0, 10 }
size(this.store.mainCtrl.users[]) == 3
size(return.items[]) one of { 0, 10 }
size(return.discounts[]) one of { 0, 3 }
size(return.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.getUsers():::ENTER
this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
size(this.users[]) one of { 0, 1, 2 }
size(this.store.mainCtrl.users[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController.getUsers():::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == return
this.users[] == orig(this.users[])
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users == return
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
return == orig(this.users)
return == orig(this.store.mainCtrl.users)
this.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
return has only one value
return[].getClass().getName() elements == com.jdeals.main.entity.user.Manager.class
size(this.users[]) one of { 0, 1, 2 }
size(this.store.mainCtrl.users[]) one of { 0, 1, 2 }
size(return[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.JDealsController.loadData(com.jdeals.main.helper.storage.DataBaseInterface):::ENTER
this.users[] == []
this.users[].getClass().getName() == []
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[] == []
this.store.mainCtrl.users[].getClass().getName() == []
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.helper.storage.FileSerialization.class
===========================================================================
com.jdeals.main.controller.JDealsController.loadData(com.jdeals.main.helper.storage.DataBaseInterface):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == orig(this.curUser)
this.curUser == orig(this.store.mainCtrl.curUser)
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
this.users[] == []
this.users[].getClass().getName() == []
this.curUser == null
this.store.items[] == []
this.store.items[].getClass().getName() == []
this.store.discounts has only one value
this.store.discounts[] == []
this.store.discounts[].getClass().getName() == []
this.store.mainCtrl.users[] == []
this.store.mainCtrl.users[].getClass().getName() == []
===========================================================================
com.jdeals.main.controller.JDealsController.setCurUser(com.jdeals.main.entity.user.User):::ENTER
arg0.username == arg0.password
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser == null
this.store.items[] contains no nulls and has only one value, of length 10
this.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.store.discounts has only one value
this.store.discounts[] contains no nulls and has only one value, of length 3
this.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0 has only one value
arg0.username has only one value
arg0.username.toString == "user"
arg0.password.toString == "user"
arg0.email has only one value
arg0.email.toString == "user@hw2.it"
arg0.credit == 0.0
arg0.city has only one value
arg0.city.toString == "Salerno"
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.curOrder has only one value
arg0.curOrder.items has only one value
arg0.curOrder.items[] == []
arg0.curOrder.items[].getClass().getName() == []
arg0.curOrder.totalPrice == 0.0
arg0.curOrder.date has only one value
size(this.users[]) == 3
size(this.store.items[]) == 10
size(this.store.discounts[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.JDealsController.setCurUser(com.jdeals.main.entity.user.User):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.users == orig(this.users)
this.users == orig(this.store.mainCtrl.users)
this.users[] == orig(this.users[])
this.curUser == orig(arg0)
this.curUser.username == arg0.username
this.curUser.password == arg0.username
this.curUser.email == arg0.email
this.curUser.credit == arg0.credit
this.curUser.city == arg0.city
this.curUser.orders == arg0.orders
this.curUser.curOrder == arg0.curOrder
this.curUser.curOrder.items == arg0.curOrder.items
this.curUser.curOrder.totalPrice == arg0.curOrder.totalPrice
this.curUser.curOrder.date == arg0.curOrder.date
this.curMenu == orig(this.curMenu)
this.store == orig(this.store)
this.store == orig(this.store.mainCtrl.store)
this.store.items == orig(this.store.items)
this.store.items[] == orig(this.store.items[])
this.store.discounts == orig(this.store.discounts)
this.store.discounts[] == orig(this.store.discounts[])
this.store.mainCtrl == orig(this)
this.store.mainCtrl == orig(this.store.mainCtrl)
this.store.mainCtrl.users[] == orig(this.store.mainCtrl.users[])
this.store.mainCtrl.curMenu == orig(this.store.mainCtrl.curMenu)
this.store.mainCtrl.frame == orig(this.store.mainCtrl.frame)
this.frame == orig(this.frame)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.store.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(this.rType)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.settings == orig(this.store.mainCtrl.settings)
this.settings == orig(this.settings)
this.settings.extrasEnabled == orig(this.settings.extrasEnabled)
arg0.username == arg0.password
arg0.username == orig(arg0.username)
arg0.username == orig(arg0.password)
arg0.username.toString == orig(arg0.username.toString)
arg0.password.toString == orig(arg0.password.toString)
arg0.email == orig(arg0.email)
arg0.email.toString == orig(arg0.email.toString)
arg0.credit == orig(arg0.credit)
arg0.city == orig(arg0.city)
arg0.city.toString == orig(arg0.city.toString)
arg0.orders == orig(arg0.orders)
arg0.orders[] == orig(arg0.orders[])
arg0.curOrder == orig(arg0.curOrder)
arg0.curOrder.items == orig(arg0.curOrder.items)
arg0.curOrder.items[] == orig(arg0.curOrder.items[])
arg0.curOrder.totalPrice == orig(arg0.curOrder.totalPrice)
arg0.curOrder.date == orig(arg0.curOrder.date)
this.users[] contains no nulls and has only one value, of length 3
this.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.curUser has only one value
this.curUser.curOrder.items[] == []
this.curUser.curOrder.items[].getClass().getName() == []
this.store.items[] contains no nulls and has only one value, of length 10
this.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.store.discounts has only one value
this.store.discounts[] contains no nulls and has only one value, of length 3
this.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.store.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.store.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.username has only one value
arg0.username.toString == "user"
arg0.password.toString == "user"
arg0.email has only one value
arg0.email.toString == "user@hw2.it"
arg0.credit == 0.0
arg0.city has only one value
arg0.city.toString == "Salerno"
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.curOrder has only one value
arg0.curOrder.items has only one value
arg0.curOrder.items[] == []
arg0.curOrder.items[].getClass().getName() == []
arg0.curOrder.totalPrice == 0.0
arg0.curOrder.date has only one value
size(this.users[]) == 3
size(this.store.items[]) == 10
size(this.store.discounts[]) == 3
size(this.store.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.Store:::OBJECT
this has only one value
this.items has only one value
this.items != null
this.items[] elements != null
this.discounts != null
this.discounts[] elements != null
this.mainCtrl has only one value
this.mainCtrl != null
com.jdeals.main.controller.JDealsController.scan == null
this.mainCtrl.users[] elements != null
this.mainCtrl.users[].getClass().getName() one of { [], [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User] }
this.mainCtrl.curUser.username has only one value
this.mainCtrl.curUser.username != null
this.mainCtrl.curUser.username.toString == "user"
this.mainCtrl.curUser.password has only one value
this.mainCtrl.curUser.password != null
this.mainCtrl.curUser.password.toString == "user"
this.mainCtrl.curUser.email has only one value
this.mainCtrl.curUser.email != null
this.mainCtrl.curUser.email.toString == "user@hw2.it"
this.mainCtrl.curUser.credit one of { 980.0, 1000.0 }
this.mainCtrl.curUser.city has only one value
this.mainCtrl.curUser.city != null
this.mainCtrl.curUser.city.toString == "Salerno"
this.mainCtrl.curUser.orders has only one value
this.mainCtrl.curUser.orders != null
this.mainCtrl.curUser.orders[] elements has only one value
this.mainCtrl.curUser.orders[] elements != null
this.mainCtrl.curUser.orders[].getClass().getName() elements == com.jdeals.main.entity.Order.class
this.mainCtrl.curUser.orders[].getClass().getName() one of { [], [com.jdeals.main.entity.Order] }
this.mainCtrl.curUser.curOrder has only one value
this.mainCtrl.curUser.curOrder != null
this.mainCtrl.curMenu == null
this.mainCtrl.store.items has only one value
this.mainCtrl.store.items != null
this.mainCtrl.store.items[] elements != null
this.mainCtrl.store.discounts != null
this.mainCtrl.store.discounts[] elements != null
this.mainCtrl.store.mainCtrl has only one value
this.mainCtrl.store.mainCtrl != null
this.mainCtrl.frame == null
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.APPLET != null
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI != null
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] elements != null
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
this.mainCtrl.settings.extrasEnabled == false
size(this.mainCtrl.users[]) one of { 0, 3 }
size(this.mainCtrl.users[])-1 != 0
size(this.mainCtrl.curUser.orders[]) one of { 0, 1 }
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.Store.Store(com.jdeals.main.controller.JDealsController):::ENTER
arg0 has only one value
com.jdeals.main.controller.JDealsController.scan == null
arg0.users == null
arg0.curUser == null
arg0.curMenu == null
arg0.store == null
arg0.frame == null
arg0.rType == null
com.jdeals.main.controller.JDealsController$RunType.APPLET has only one value
com.jdeals.main.controller.JDealsController$RunType.CLI has only one value
com.jdeals.main.controller.JDealsController$RunType.FRAME has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES has only one value
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == com.jdeals.main.controller.JDealsController$RunType[].class
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] contains no nulls and has only one value, of length 3
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() == [com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType, com.jdeals.main.controller.JDealsController.RunType]
com.jdeals.main.controller.JDealsController$RunType.$VALUES[].getClass().getName() elements == com.jdeals.main.controller.JDealsController.RunType.class
arg0.settings == null
size(com.jdeals.main.controller.JDealsController$RunType.$VALUES[]) == 3
===========================================================================
com.jdeals.main.controller.Store.Store(com.jdeals.main.controller.JDealsController):::EXIT
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
arg0.users == orig(arg0.users)
arg0.curUser == orig(arg0.curUser)
arg0.curMenu == orig(arg0.curMenu)
arg0.store == orig(arg0.store)
arg0.frame == orig(arg0.frame)
arg0.rType == orig(arg0.rType)
arg0.settings == orig(arg0.settings)
this.items[] == []
this.items[].getClass().getName() == []
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users == null
this.mainCtrl.curUser == null
this.mainCtrl.store == null
this.mainCtrl.rType == null
this.mainCtrl.settings == null
arg0.users == null
arg0.curUser == null
arg0.curMenu == null
arg0.store == null
arg0.frame == null
arg0.rType == null
arg0.settings == null
===========================================================================
com.jdeals.main.controller.Store.addDiscount(com.jdeals.main.helper.discount.DiscountInterface):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
size(this.items[]) == 10
size(this.discounts[]) one of { 0, 1, 2 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) one of { 0, 1, 2 }
===========================================================================
com.jdeals.main.controller.Store.addDiscount(com.jdeals.main.helper.discount.DiscountInterface):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
size(this.discounts[])-1 == orig(size(this.discounts[]))
size(this.mainCtrl.store.discounts[])-1 == orig(size(this.mainCtrl.store.discounts[]))
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
size(this.items[]) == 10
size(this.discounts[]) one of { 1, 2, 3 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) one of { 1, 2, 3 }
===========================================================================
com.jdeals.main.controller.Store.addItem(com.jdeals.main.entity.catalogue.Item):::ENTER
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.sold one of { 0, 1, 4 }
size(this.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.Store.addItem(com.jdeals.main.entity.catalogue.Item):::EXIT
this.items == orig(this.items)
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg0.id == orig(arg0.id)
arg0.price == orig(arg0.price)
arg0.sold == orig(arg0.sold)
size(this.items[])-1 == orig(size(this.items[]))
size(this.mainCtrl.store.items[])-1 == orig(size(this.mainCtrl.store.items[]))
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.sold one of { 0, 1, 4 }
size(this.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.main.controller.Store.addItemToCart(com.jdeals.main.entity.catalogue.Item, int):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 0
arg1 == 1
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.addItemToCart(com.jdeals.main.entity.catalogue.Item, int):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg0.id == orig(arg0.id)
arg0.price == orig(arg0.price)
arg0.sold == orig(arg0.sold)
size(this.discounts[]) == orig(size(this.discounts[]))
size(this.mainCtrl.store.discounts[]) == orig(size(this.mainCtrl.store.discounts[]))
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 0
return == true
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.addItemToCart(com.jdeals.main.entity.catalogue.Item, int):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 0
arg1 has only one value
arg1.items has only one value
arg1.items[] elements has only one value
arg1.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg1.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
arg1.totalPrice == 0.0
arg1.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg1.date.format has only one value
arg1.date.format.toString == "dd/mm/yyyy"
arg1.date.calendar has only one value
arg1.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg2 == 1
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg1.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean):::EXIT259
===========================================================================
com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean):::EXIT259;condition="return == true"
===========================================================================
com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg0.id == orig(arg0.id)
arg0.price == orig(arg0.price)
arg0.sold == orig(arg0.sold)
arg1.items == orig(arg1.items)
arg1.items[] == orig(arg1.items[])
arg1.totalPrice == orig(arg1.totalPrice)
arg1.date == orig(arg1.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg1.date.format == orig(arg1.date.format)
arg1.date.format.toString == orig(arg1.date.format.toString)
arg1.date.calendar == orig(arg1.date.calendar)
arg1.date.calendar.getClass().getName() == orig(arg1.date.calendar.getClass().getName())
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[].getClass().getName() one of { [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 0
arg1.items has only one value
arg1.items[] elements has only one value
arg1.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg1.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
arg1.totalPrice == 0.0
arg1.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg1.date.format has only one value
arg1.date.format.toString == "dd/mm/yyyy"
arg1.date.calendar has only one value
arg1.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
return == true
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg1.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.controller.Store.checkQuantity(com.jdeals.main.entity.catalogue.Item, com.jdeals.main.entity.Order, int, boolean):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.controller.Store.creditCheck(com.jdeals.main.entity.user.User, com.jdeals.main.entity.catalogue.Item, boolean):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.username has only one value
arg0.username.toString == "user"
arg0.password has only one value
arg0.password.toString == "user"
arg0.email has only one value
arg0.email.toString == "user@hw2.it"
arg0.credit == 1000.0
arg0.city has only one value
arg0.city.toString == "Salerno"
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.curOrder has only one value
arg0.curOrder.items has only one value
arg0.curOrder.items[] contains no nulls and has only one value, of length 1
arg0.curOrder.items[] elements has only one value
arg0.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.curOrder.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.curOrder.totalPrice == 0.0
arg0.curOrder.date has only one value
arg1 has only one value
arg1.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg1.id == 4
arg1.price == 20.0
arg1.sold == 0
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg0.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.controller.Store.creditCheck(com.jdeals.main.entity.user.User, com.jdeals.main.entity.catalogue.Item, boolean):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
arg0.username == orig(arg0.username)
arg0.username.toString == orig(arg0.username.toString)
arg0.password == orig(arg0.password)
arg0.password.toString == orig(arg0.password.toString)
arg0.email == orig(arg0.email)
arg0.email.toString == orig(arg0.email.toString)
arg0.credit == orig(arg0.credit)
arg0.city == orig(arg0.city)
arg0.city.toString == orig(arg0.city.toString)
arg0.orders == orig(arg0.orders)
arg0.orders[] == orig(arg0.orders[])
arg0.curOrder == orig(arg0.curOrder)
arg0.curOrder.items == orig(arg0.curOrder.items)
arg0.curOrder.items[] == orig(arg0.curOrder.items[])
arg0.curOrder.totalPrice == orig(arg0.curOrder.totalPrice)
arg0.curOrder.date == orig(arg0.curOrder.date)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg1.id == orig(arg1.id)
arg1.price == orig(arg1.price)
arg1.sold == orig(arg1.sold)
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0.username has only one value
arg0.username.toString == "user"
arg0.password has only one value
arg0.password.toString == "user"
arg0.email has only one value
arg0.email.toString == "user@hw2.it"
arg0.credit == 1000.0
arg0.city has only one value
arg0.city.toString == "Salerno"
arg0.orders has only one value
arg0.orders[] == []
arg0.orders[].getClass().getName() == []
arg0.curOrder has only one value
arg0.curOrder.items has only one value
arg0.curOrder.items[] contains no nulls and has only one value, of length 1
arg0.curOrder.items[] elements has only one value
arg0.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.curOrder.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.curOrder.totalPrice == 0.0
arg0.curOrder.date has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg1.id == 4
arg1.price == 20.0
arg1.sold == 0
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg0.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.controller.Store.discountOrderCost(com.jdeals.main.entity.Order):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.controller.Store.discountOrderCost(com.jdeals.main.entity.Order):::EXIT379
===========================================================================
com.jdeals.main.controller.Store.discountOrderCost(com.jdeals.main.entity.Order):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
arg0.items == orig(arg0.items)
arg0.items[] == orig(arg0.items[])
arg0.totalPrice == orig(arg0.totalPrice)
arg0.date == orig(arg0.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg0.date.format == orig(arg0.date.format)
arg0.date.format.toString == orig(arg0.date.format.toString)
arg0.date.calendar == orig(arg0.date.calendar)
arg0.date.calendar.getClass().getName() == orig(arg0.date.calendar.getClass().getName())
size(this.discounts[]) == orig(size(this.discounts[]))
size(this.mainCtrl.store.discounts[]) == orig(size(this.mainCtrl.store.discounts[]))
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.controller.Store.getItem(int):::ENTER
this.discounts has only one value
this.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.users has only one value
this.mainCtrl.users != null
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store != null
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.rType has only one value
this.mainCtrl.rType != null
this.mainCtrl.settings has only one value
this.mainCtrl.settings != null
size(this.discounts[]) one of { 0, 3 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.discounts[]) one of { 0, 3 }
===========================================================================
com.jdeals.main.controller.Store.getItem(int):::EXIT133
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
this.mainCtrl.curUser has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
orig(arg0) one of { 1, 4 }
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.getItem(int):::EXIT137
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.curUser == null
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
return == null
===========================================================================
com.jdeals.main.controller.Store.getItem(int):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
(this.discounts[] == [])  <==>  (return == null)
(this.discounts[] == [])  <==>  (this.discounts[].getClass().getName() == [])
(this.discounts[] == [])  <==>  (this.mainCtrl.curUser == null)
(this.discounts[] == [])  <==>  (this.mainCtrl.store.discounts[] == [])
(this.discounts[] == [])  <==>  (this.mainCtrl.store.discounts[].getClass().getName() == [])
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (size(this.discounts[]) == 3)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (size(this.items[]) == 10)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (size(this.mainCtrl.store.discounts[]) == 3)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (size(this.mainCtrl.store.items[]) == 10)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount])
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (this.mainCtrl.curUser has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3)
(this.discounts[] contains no nulls and has only one value, of length 3)  <==>  (this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount])
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (orig(arg0) one of { 1, 4 })
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (return.id one of { 1, 4 })
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (return.price one of { 20.0, 2000.0 })
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.items[] contains no nulls and has only one value, of length 10)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant])
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.city has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.city.toString == "Salerno")
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.curOrder has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.email has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.email.toString == "user@hw2.it")
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.orders has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.orders[] == [])
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.orders[].getClass().getName() == [])
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.password has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.password.toString == "user")
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.username has only one value)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.curUser.username.toString == "user")
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10)
(this.discounts[] contains no nulls and has only one value, of length 3)  ==>  (this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant])
this.discounts has only one value
this.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.users has only one value
this.mainCtrl.users != null
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store != null
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[].getClass().getName() one of { [], [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount] }
this.mainCtrl.rType has only one value
this.mainCtrl.rType != null
this.mainCtrl.settings has only one value
this.mainCtrl.settings != null
com.jdeals.main.entity.catalogue.Item.nextId has only one value
com.jdeals.main.entity.catalogue.Item.nextId != null
return.id one of { 1, 4 }
return.price one of { 20.0, 2000.0 }
return.sold == 0
size(this.discounts[]) one of { 0, 3 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.discounts[]) one of { 0, 3 }
===========================================================================
com.jdeals.main.controller.Store.getMainCtrl():::ENTER
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
size(this.items[]) one of { 3, 4, 5 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) one of { 3, 4, 5 }
===========================================================================
com.jdeals.main.controller.Store.getMainCtrl():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
return has only one value
return.users has only one value
return.users[] contains no nulls and has only one value, of length 3
return.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
return.curUser == null
return.curMenu == null
return.store has only one value
return.store.items has only one value
return.store.discounts has only one value
return.store.discounts[] == []
return.store.discounts[].getClass().getName() == []
return.store.mainCtrl has only one value
return.frame == null
return.rType has only one value
return.settings has only one value
return.settings.extrasEnabled == false
size(this.items[]) one of { 3, 4, 5 }
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) one of { 3, 4, 5 }
size(return.users[]) == 3
size(return.store.items[]) one of { 3, 4, 5 }
===========================================================================
com.jdeals.main.controller.Store.loadData(com.jdeals.main.helper.storage.DataBaseInterface):::ENTER
this.items[] == []
this.items[].getClass().getName() == []
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] == []
this.mainCtrl.users[].getClass().getName() == []
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] == []
this.mainCtrl.store.items[].getClass().getName() == []
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.helper.storage.FileSerialization.class
===========================================================================
com.jdeals.main.controller.Store.loadData(com.jdeals.main.helper.storage.DataBaseInterface):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
this.items[] == []
this.items[].getClass().getName() == []
this.discounts has only one value
this.discounts[] == []
this.discounts[].getClass().getName() == []
this.mainCtrl.users has only one value
this.mainCtrl.users[] == []
this.mainCtrl.users[].getClass().getName() == []
this.mainCtrl.curUser == null
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] == []
this.mainCtrl.store.items[].getClass().getName() == []
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] == []
this.mainCtrl.store.discounts[].getClass().getName() == []
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
===========================================================================
com.jdeals.main.controller.Store.payOrder():::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.payOrder():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
size(this.mainCtrl.curUser.orders[])-1 == orig(size(this.mainCtrl.curUser.orders[]))
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 980.0
this.mainCtrl.curUser.orders[] contains no nulls and has only one value, of length 1
this.mainCtrl.curUser.orders[].getClass().getName() == [com.jdeals.main.entity.Order]
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
return == true
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.curUser.orders[]) == 1
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.payOrder():::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.controller.Store.sellItem(com.jdeals.main.entity.catalogue.Item, int):::ENTER
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 0
arg1 == 1
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.sellItem(com.jdeals.main.entity.catalogue.Item, int):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.discounts == orig(this.discounts)
this.discounts[] == orig(this.discounts[])
this.mainCtrl == orig(this.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
this.mainCtrl.users == orig(this.mainCtrl.users)
this.mainCtrl.users[] == orig(this.mainCtrl.users[])
this.mainCtrl.curUser == orig(this.mainCtrl.curUser)
this.mainCtrl.curUser.username == orig(this.mainCtrl.curUser.username)
this.mainCtrl.curUser.username.toString == orig(this.mainCtrl.curUser.username.toString)
this.mainCtrl.curUser.password == orig(this.mainCtrl.curUser.password)
this.mainCtrl.curUser.password.toString == orig(this.mainCtrl.curUser.password.toString)
this.mainCtrl.curUser.email == orig(this.mainCtrl.curUser.email)
this.mainCtrl.curUser.email.toString == orig(this.mainCtrl.curUser.email.toString)
this.mainCtrl.curUser.credit == orig(this.mainCtrl.curUser.credit)
this.mainCtrl.curUser.city == orig(this.mainCtrl.curUser.city)
this.mainCtrl.curUser.city.toString == orig(this.mainCtrl.curUser.city.toString)
this.mainCtrl.curUser.orders == orig(this.mainCtrl.curUser.orders)
this.mainCtrl.curUser.orders[] == orig(this.mainCtrl.curUser.orders[])
this.mainCtrl.curUser.curOrder == orig(this.mainCtrl.curUser.curOrder)
this.mainCtrl.curMenu == orig(this.mainCtrl.curMenu)
this.mainCtrl.store == orig(this.mainCtrl.store)
this.mainCtrl.store.items == orig(this.mainCtrl.store.items)
this.mainCtrl.store.items[] == orig(this.mainCtrl.store.items[])
this.mainCtrl.store.discounts == orig(this.mainCtrl.store.discounts)
this.mainCtrl.store.discounts[] == orig(this.mainCtrl.store.discounts[])
this.mainCtrl.store.mainCtrl == orig(this.mainCtrl.store.mainCtrl)
this.mainCtrl.frame == orig(this.mainCtrl.frame)
this.mainCtrl.rType == orig(this.mainCtrl.rType)
com.jdeals.main.controller.JDealsController$RunType.APPLET == orig(com.jdeals.main.controller.JDealsController$RunType.APPLET)
com.jdeals.main.controller.JDealsController$RunType.CLI == orig(com.jdeals.main.controller.JDealsController$RunType.CLI)
com.jdeals.main.controller.JDealsController$RunType.FRAME == orig(com.jdeals.main.controller.JDealsController$RunType.FRAME)
com.jdeals.main.controller.JDealsController$RunType.$VALUES == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES)
com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName() == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES.getClass().getName())
com.jdeals.main.controller.JDealsController$RunType.$VALUES[] == orig(com.jdeals.main.controller.JDealsController$RunType.$VALUES[])
this.mainCtrl.settings == orig(this.mainCtrl.settings)
this.mainCtrl.settings.extrasEnabled == orig(this.mainCtrl.settings.extrasEnabled)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg0.id == orig(arg0.id)
arg0.price == orig(arg0.price)
this.items[] contains no nulls and has only one value, of length 10
this.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.discounts has only one value
this.discounts[] contains no nulls and has only one value, of length 3
this.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.users has only one value
this.mainCtrl.users[] contains no nulls and has only one value, of length 3
this.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
this.mainCtrl.curUser has only one value
this.mainCtrl.curUser.credit == 1000.0
this.mainCtrl.curUser.orders[] == []
this.mainCtrl.curUser.orders[].getClass().getName() == []
this.mainCtrl.store has only one value
this.mainCtrl.store.items[] contains no nulls and has only one value, of length 10
this.mainCtrl.store.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
this.mainCtrl.store.discounts has only one value
this.mainCtrl.store.discounts[] contains no nulls and has only one value, of length 3
this.mainCtrl.store.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.LastDaysDiscount, com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount]
this.mainCtrl.rType has only one value
this.mainCtrl.settings has only one value
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold == 1
return == true
size(this.items[]) == 10
size(this.discounts[]) == 3
size(this.mainCtrl.users[]) == 3
size(this.mainCtrl.store.items[]) == 10
size(this.mainCtrl.store.discounts[]) == 3
===========================================================================
com.jdeals.main.controller.Store.sellItem(com.jdeals.main.entity.catalogue.Item, int):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.entity.Order$ItemStack:::OBJECT
this.item != null
this.item.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
com.jdeals.main.entity.catalogue.Item.nextId != null
this.item.id == 4
this.item.price == 20.0
this.item.sold one of { 0, 1 }
this.quantity == 1
this.finalPrice == -1.0
com.jdeals.main.entity.Order.this.items != null
com.jdeals.main.entity.Order.this.items[] elements != null
com.jdeals.main.entity.Order.this.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
com.jdeals.main.entity.Order.this.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
com.jdeals.main.entity.Order.this.totalPrice one of { 0.0, 20.0 }
com.jdeals.main.entity.Order.this.date != null
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat != null
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask != null
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
com.jdeals.main.entity.Order.this.date.format has only one value
com.jdeals.main.entity.Order.this.date.format != null
com.jdeals.main.entity.Order.this.date.format.toString == "dd/mm/yyyy"
com.jdeals.main.entity.Order.this.date.calendar != null
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(com.jdeals.main.entity.Order.this.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.Order$ItemStack.ItemStack(com.jdeals.main.entity.Order, com.jdeals.main.entity.catalogue.Item, int):::ENTER
com.jdeals.main.entity.Order.this.items[] == []
com.jdeals.main.entity.Order.this.items[].getClass().getName() == []
com.jdeals.main.entity.Order.this.totalPrice one of { 0.0, 20.0 }
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
com.jdeals.main.entity.Order.this.date.format has only one value
com.jdeals.main.entity.Order.this.date.format.toString == "dd/mm/yyyy"
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg1.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg1.id == 4
arg1.price == 20.0
arg1.sold one of { 0, 1 }
arg2 == 1
===========================================================================
com.jdeals.main.entity.Order$ItemStack.ItemStack(com.jdeals.main.entity.Order, com.jdeals.main.entity.catalogue.Item, int):::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
com.jdeals.main.entity.Order.this == orig(com.jdeals.main.entity.Order.this)
com.jdeals.main.entity.Order.this.items == orig(com.jdeals.main.entity.Order.this.items)
com.jdeals.main.entity.Order.this.items[] == orig(com.jdeals.main.entity.Order.this.items[])
com.jdeals.main.entity.Order.this.totalPrice == orig(com.jdeals.main.entity.Order.this.totalPrice)
com.jdeals.main.entity.Order.this.date == orig(com.jdeals.main.entity.Order.this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
com.jdeals.main.entity.Order.this.date.format == orig(com.jdeals.main.entity.Order.this.date.format)
com.jdeals.main.entity.Order.this.date.format.toString == orig(com.jdeals.main.entity.Order.this.date.format.toString)
com.jdeals.main.entity.Order.this.date.calendar == orig(com.jdeals.main.entity.Order.this.date.calendar)
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == orig(com.jdeals.main.entity.Order.this.date.calendar.getClass().getName())
arg1.id == orig(arg1.id)
arg1.price == orig(arg1.price)
arg1.sold == orig(arg1.sold)
com.jdeals.main.entity.Order.this.items[] == []
com.jdeals.main.entity.Order.this.items[].getClass().getName() == []
arg1.id == 4
arg1.price == 20.0
arg1.sold one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.Order$ItemStack.ItemStack(com.jdeals.main.entity.Order, com.jdeals.main.entity.catalogue.Item, int, double):::ENTER
com.jdeals.main.entity.Order.this.items[] == []
com.jdeals.main.entity.Order.this.items[].getClass().getName() == []
com.jdeals.main.entity.Order.this.totalPrice one of { 0.0, 20.0 }
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
com.jdeals.main.entity.Order.this.date.format has only one value
com.jdeals.main.entity.Order.this.date.format.toString == "dd/mm/yyyy"
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg1.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg1.id == 4
arg1.price == 20.0
arg1.sold one of { 0, 1 }
arg2 == 1
arg3 == -1.0
===========================================================================
com.jdeals.main.entity.Order$ItemStack.ItemStack(com.jdeals.main.entity.Order, com.jdeals.main.entity.catalogue.Item, int, double):::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
com.jdeals.main.entity.Order.this == orig(com.jdeals.main.entity.Order.this)
com.jdeals.main.entity.Order.this.items == orig(com.jdeals.main.entity.Order.this.items)
com.jdeals.main.entity.Order.this.items[] == orig(com.jdeals.main.entity.Order.this.items[])
com.jdeals.main.entity.Order.this.totalPrice == orig(com.jdeals.main.entity.Order.this.totalPrice)
com.jdeals.main.entity.Order.this.date == orig(com.jdeals.main.entity.Order.this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
com.jdeals.main.entity.Order.this.date.format == orig(com.jdeals.main.entity.Order.this.date.format)
com.jdeals.main.entity.Order.this.date.format.toString == orig(com.jdeals.main.entity.Order.this.date.format.toString)
com.jdeals.main.entity.Order.this.date.calendar == orig(com.jdeals.main.entity.Order.this.date.calendar)
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == orig(com.jdeals.main.entity.Order.this.date.calendar.getClass().getName())
arg1.id == orig(arg1.id)
arg1.price == orig(arg1.price)
arg1.sold == orig(arg1.sold)
com.jdeals.main.entity.Order.this.items[] == []
com.jdeals.main.entity.Order.this.items[].getClass().getName() == []
arg1.id == 4
arg1.price == 20.0
arg1.sold one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.Order$ItemStack.getFinalPrice():::ENTER
com.jdeals.main.entity.Order.this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
size(com.jdeals.main.entity.Order.this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order$ItemStack.getFinalPrice():::EXIT
this.item == orig(this.item)
this.item.getClass().getName() == orig(this.item.getClass().getName())
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.item.id == orig(this.item.id)
this.item.price == orig(this.item.price)
this.item.sold == orig(this.item.sold)
this.quantity == orig(this.quantity)
this.finalPrice == orig(this.finalPrice)
com.jdeals.main.entity.Order.this == orig(com.jdeals.main.entity.Order.this)
com.jdeals.main.entity.Order.this.items == orig(com.jdeals.main.entity.Order.this.items)
com.jdeals.main.entity.Order.this.items[] == orig(com.jdeals.main.entity.Order.this.items[])
com.jdeals.main.entity.Order.this.totalPrice == orig(com.jdeals.main.entity.Order.this.totalPrice)
com.jdeals.main.entity.Order.this.date == orig(com.jdeals.main.entity.Order.this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
com.jdeals.main.entity.Order.this.date.format == orig(com.jdeals.main.entity.Order.this.date.format)
com.jdeals.main.entity.Order.this.date.format.toString == orig(com.jdeals.main.entity.Order.this.date.format.toString)
com.jdeals.main.entity.Order.this.date.calendar == orig(com.jdeals.main.entity.Order.this.date.calendar)
com.jdeals.main.entity.Order.this.date.calendar.getClass().getName() == orig(com.jdeals.main.entity.Order.this.date.calendar.getClass().getName())
com.jdeals.main.entity.Order.this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
return == 20.0
size(com.jdeals.main.entity.Order.this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order:::CLASS
===========================================================================
com.jdeals.main.entity.Order:::OBJECT
this.items[] elements != null
this.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
this.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
this.totalPrice one of { 0.0, 20.0 }
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat != null
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask != null
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.date.format has only one value
this.date.format != null
this.date.format.toString == "dd/mm/yyyy"
this.date.calendar != null
this.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(this.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.Order.Order():::EXIT
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.Order.Order(java.util.ArrayList):::ENTER
arg0[] == []
arg0[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.Order.Order(java.util.ArrayList):::EXIT
arg0[] == orig(arg0[])
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 0.0
arg0[] == []
arg0[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.Order.addItem(com.jdeals.main.entity.catalogue.Item, int):::ENTER
this.items[] == []
this.items[].getClass().getName() == []
arg0.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold one of { 0, 1 }
arg1 == 1
===========================================================================
com.jdeals.main.entity.Order.addItem(com.jdeals.main.entity.catalogue.Item, int):::EXIT
this.items == orig(this.items)
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
arg0.id == orig(arg0.id)
arg0.price == orig(arg0.price)
arg0.sold == orig(arg0.sold)
size(this.items[])-1 == orig(size(this.items[]))
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
com.jdeals.main.entity.catalogue.Item.nextId has only one value
arg0.id == 4
arg0.price == 20.0
arg0.sold one of { 0, 1 }
return == 1
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getItem(int):::ENTER
this.items[] elements has only one value
arg0 one of { 1, 4 }
===========================================================================
com.jdeals.main.entity.Order.getItem(int):::EXIT140
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
return has only one value
orig(this) has only one value
orig(arg0) == 4
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getItem(int):::EXIT144
this.items[] == []
this.items[].getClass().getName() == []
return == null
===========================================================================
com.jdeals.main.entity.Order.getItem(int):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
(this.items[] == [])  <==>  (return == null)
(this.items[] == [])  <==>  (this.items[].getClass().getName() == [])
(this.items[] == [])  ==>  (orig(arg0) one of { 1, 4 })
(this.items[] == [])  ==>  (this.totalPrice one of { 0.0, 20.0 })
(this.items[] contains no nulls and has only one value, of length 1)  <==>  (return has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  <==>  (size(this.items[]) == 1)
(this.items[] contains no nulls and has only one value, of length 1)  <==>  (this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack])
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.date has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.items has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.items[] contains no nulls and has only one value, of length 1)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.items[] elements has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack])
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (com.jdeals.main.entity.Order.this.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (orig(arg0) == 4)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (orig(this) has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (return.item has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (return.item.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.date has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.date.calendar has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.items has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.items[] elements has only one value)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class)
(this.items[] contains no nulls and has only one value, of length 1)  ==>  (this.totalPrice == 0.0)
this.items[] elements has only one value
return.item has only one value
return.item.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
com.jdeals.main.entity.catalogue.Item.nextId has only one value
return.item.id == 4
return.item.price == 20.0
return.item.sold == 0
return.quantity == 1
return.finalPrice == -1.0
com.jdeals.main.entity.Order.this has only one value
com.jdeals.main.entity.Order.this.items has only one value
com.jdeals.main.entity.Order.this.items[] contains no nulls and has only one value, of length 1
com.jdeals.main.entity.Order.this.items[] elements has only one value
com.jdeals.main.entity.Order.this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
com.jdeals.main.entity.Order.this.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
com.jdeals.main.entity.Order.this.totalPrice == 0.0
com.jdeals.main.entity.Order.this.date has only one value
size(com.jdeals.main.entity.Order.this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getItems():::ENTER
this has only one value
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getItems():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
return has only one value
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
return[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
return[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
size(this.items[]) == 1
size(return[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getTotalPrice():::ENTER
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getTotalPrice():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
return == 20.0
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getTotalPrice(boolean):::ENTER
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.getTotalPrice(boolean):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
return == 20.0
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.removeItems(java.util.Collection, boolean):::ENTER
this has only one value
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
arg0 has only one value
arg0.getClass().getName() == java.util.ArrayList.class
arg1 == false
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.removeItems(java.util.Collection, boolean):::EXIT211
===========================================================================
com.jdeals.main.entity.Order.removeItems(java.util.Collection, boolean):::EXIT211;condition="return == true"
===========================================================================
com.jdeals.main.entity.Order.removeItems(java.util.Collection, boolean):::EXIT
this.items == orig(this.items)
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
size(this.items[]) == orig(size(this.items[]))-1
this.items has only one value
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
return == true
===========================================================================
com.jdeals.main.entity.Order.removeItems(java.util.Collection, boolean):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.entity.Order.reset(boolean):::ENTER
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 0.0
this.date.calendar has only one value
arg0 == false
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.reset(boolean):::EXIT
this.items == orig(this.items)
this.totalPrice == orig(this.totalPrice)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
size(this.items[]) == orig(size(this.items[]))-1
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.Order.setTotalPrice(double):::ENTER
this has only one value
this.items has only one value
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 0.0
this.date has only one value
this.date.calendar has only one value
arg0 == 20.0
===========================================================================
com.jdeals.main.entity.Order.setTotalPrice(double):::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
this.items has only one value
this.items[] == []
this.items[].getClass().getName() == []
this.totalPrice == 20.0
this.date has only one value
this.date.calendar has only one value
===========================================================================
com.jdeals.main.entity.Order.toString():::ENTER
this has only one value
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 20.0
this.date has only one value
this.date.calendar has only one value
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.Order.toString():::EXIT
this.items == orig(this.items)
this.items[] == orig(this.items[])
this.totalPrice == orig(this.totalPrice)
this.date == orig(this.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.date.format == orig(this.date.format)
this.date.format.toString == orig(this.date.format.toString)
this.date.calendar == orig(this.date.calendar)
this.date.calendar.getClass().getName() == orig(this.date.calendar.getClass().getName())
this.items has only one value
this.items[] contains no nulls and has only one value, of length 1
this.items[] elements has only one value
this.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.totalPrice == 20.0
this.date has only one value
this.date.calendar has only one value
return has only one value
return.toString == "Order\nApril 6, 2025 \n20.0 \n"
size(this.items[]) == 1
===========================================================================
com.jdeals.main.entity.catalogue.Event:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
===========================================================================
com.jdeals.main.entity.catalogue.Event:::OBJECT
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.expiryDate.format has only one value
this.expiryDate.format.toString == "dd/mm/yyyy"
this.expiryDate.calendar.getClass().getName() == java.util.GregorianCalendar.class
this.id >= 1
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.Event.Event(double, int, com.jdeals.libs.MyDate, java.lang.String):::ENTER
arg1 == 0
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg2.format has only one value
arg2.format.toString == "dd/mm/yyyy"
arg2.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.main.entity.catalogue.Event.Event(double, int, com.jdeals.libs.MyDate, java.lang.String):::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg2.format == orig(arg2.format)
arg2.format.toString == orig(arg2.format.toString)
arg2.calendar == orig(arg2.calendar)
arg2.calendar.getClass().getName() == orig(arg2.calendar.getClass().getName())
arg3.toString == orig(arg3.toString)
arg2.format has only one value
arg2.format.toString == "dd/mm/yyyy"
arg2.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.main.entity.catalogue.Event.getExpiryDate():::ENTER
this has only one value
this.getClass().getName() == com.jdeals.main.entity.catalogue.Travel.class
this.expiryDate has only one value
this.expiryDate.calendar has only one value
this.location has only one value
this.location.toString == "California"
this.id == 1
this.price == 2000.0
===========================================================================
com.jdeals.main.entity.catalogue.Event.getExpiryDate():::EXIT
this.expiryDate == orig(this.expiryDate)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.expiryDate.format == orig(this.expiryDate.format)
this.expiryDate.format.toString == orig(this.expiryDate.format.toString)
this.expiryDate.calendar == orig(this.expiryDate.calendar)
this.expiryDate.calendar.getClass().getName() == orig(this.expiryDate.calendar.getClass().getName())
this.location == orig(this.location)
this.location.toString == orig(this.location.toString)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.expiryDate has only one value
this.expiryDate.calendar has only one value
this.location has only one value
this.location.toString == "California"
this.id == 1
this.price == 2000.0
return has only one value
return.format has only one value
return.format.toString == "dd/mm/yyyy"
return.calendar has only one value
return.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.main.entity.catalogue.Event.isAvailable():::ENTER
this has only one value
this.getClass().getName() == com.jdeals.main.entity.catalogue.Travel.class
this.expiryDate has only one value
this.expiryDate.calendar has only one value
this.location has only one value
this.location.toString == "California"
this.id == 1
this.price == 2000.0
===========================================================================
com.jdeals.main.entity.catalogue.Event.isAvailable():::EXIT
this.expiryDate == orig(this.expiryDate)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.expiryDate.format == orig(this.expiryDate.format)
this.expiryDate.format.toString == orig(this.expiryDate.format.toString)
this.expiryDate.calendar == orig(this.expiryDate.calendar)
this.expiryDate.calendar.getClass().getName() == orig(this.expiryDate.calendar.getClass().getName())
this.location == orig(this.location)
this.location.toString == orig(this.location.toString)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.expiryDate has only one value
this.expiryDate.calendar has only one value
this.location has only one value
this.location.toString == "California"
this.id == 1
this.price == 2000.0
return == false
===========================================================================
com.jdeals.main.entity.catalogue.Event.isAvailable():::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
com.jdeals.main.entity.catalogue.Item.nextId != null
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood:::OBJECT
this.totalItems one of { 2, 4, 10 }
this.description != null
this.description.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
this.supplier != null
this.supplier.score == 0
this.supplier.polls != null
this.supplier.polls.getClass().getName() == java.util.HashMap.class
this.supplier.username != null
this.supplier.username.toString one of { "root", "supplier" }
this.supplier.password != null
this.supplier.password.toString one of { "root", "supplier" }
this.supplier.email != null
this.supplier.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.supplier.credit == 0.0
this.supplier.city has only one value
this.supplier.city != null
this.supplier.city.toString == "Salerno"
this.supplier.orders != null
this.supplier.orders[] == []
this.supplier.orders[].getClass().getName() == []
this.supplier.curOrder != null
this.supplier.curOrder.items != null
this.supplier.curOrder.items[] == []
this.supplier.curOrder.items[].getClass().getName() == []
this.supplier.curOrder.totalPrice == 0.0
this.supplier.curOrder.date != null
this.id one of { 4, 5, 6 }
this.price one of { 20.0, 600.0, 700.0 }
this.sold one of { 0, 1, 4 }
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.GeneralGood(java.lang.String, double, int, int, com.jdeals.main.entity.user.Manager):::ENTER
arg0.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
arg1 one of { 20.0, 600.0, 700.0 }
arg2 one of { 0, 1, 4 }
arg3 one of { 2, 4, 10 }
arg4.score == 0
arg4.polls.getClass().getName() == java.util.HashMap.class
arg4.username.toString one of { "root", "supplier" }
arg4.password.toString one of { "root", "supplier" }
arg4.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
arg4.credit == 0.0
arg4.city has only one value
arg4.city.toString == "Salerno"
arg4.orders[] == []
arg4.orders[].getClass().getName() == []
arg4.curOrder.items[] == []
arg4.curOrder.items[].getClass().getName() == []
arg4.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.GeneralGood(java.lang.String, double, int, int, com.jdeals.main.entity.user.Manager):::EXIT
arg0.toString == orig(arg0.toString)
arg4.isAdmin == orig(arg4.isAdmin)
arg4.score == orig(arg4.score)
arg4.polls == orig(arg4.polls)
arg4.polls.getClass().getName() == orig(arg4.polls.getClass().getName())
arg4.username == orig(arg4.username)
arg4.username.toString == orig(arg4.username.toString)
arg4.password == orig(arg4.password)
arg4.password.toString == orig(arg4.password.toString)
arg4.email == orig(arg4.email)
arg4.email.toString == orig(arg4.email.toString)
arg4.credit == orig(arg4.credit)
arg4.city == orig(arg4.city)
arg4.city.toString == orig(arg4.city.toString)
arg4.orders == orig(arg4.orders)
arg4.orders[] == orig(arg4.orders[])
arg4.curOrder == orig(arg4.curOrder)
arg4.curOrder.items == orig(arg4.curOrder.items)
arg4.curOrder.items[] == orig(arg4.curOrder.items[])
arg4.curOrder.totalPrice == orig(arg4.curOrder.totalPrice)
arg4.curOrder.date == orig(arg4.curOrder.date)
arg0.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
arg4.score == 0
arg4.polls.getClass().getName() == java.util.HashMap.class
arg4.username.toString one of { "root", "supplier" }
arg4.password.toString one of { "root", "supplier" }
arg4.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
arg4.credit == 0.0
arg4.city has only one value
arg4.city.toString == "Salerno"
arg4.orders[] == []
arg4.orders[].getClass().getName() == []
arg4.curOrder.items[] == []
arg4.curOrder.items[].getClass().getName() == []
arg4.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.getAvailableItems():::ENTER
this has only one value
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.getAvailableItems():::EXIT
this.totalItems == orig(this.totalItems)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.supplier == orig(this.supplier)
this.supplier.isAdmin == orig(this.supplier.isAdmin)
this.supplier.score == orig(this.supplier.score)
this.supplier.polls == orig(this.supplier.polls)
this.supplier.polls.getClass().getName() == orig(this.supplier.polls.getClass().getName())
this.supplier.username == orig(this.supplier.username)
this.supplier.username.toString == orig(this.supplier.username.toString)
this.supplier.password == orig(this.supplier.password)
this.supplier.password.toString == orig(this.supplier.password.toString)
this.supplier.email == orig(this.supplier.email)
this.supplier.email.toString == orig(this.supplier.email.toString)
this.supplier.credit == orig(this.supplier.credit)
this.supplier.city == orig(this.supplier.city)
this.supplier.city.toString == orig(this.supplier.city.toString)
this.supplier.orders == orig(this.supplier.orders)
this.supplier.orders[] == orig(this.supplier.orders[])
this.supplier.curOrder == orig(this.supplier.curOrder)
this.supplier.curOrder.items == orig(this.supplier.curOrder.items)
this.supplier.curOrder.items[] == orig(this.supplier.curOrder.items[])
this.supplier.curOrder.totalPrice == orig(this.supplier.curOrder.totalPrice)
this.supplier.curOrder.date == orig(this.supplier.curOrder.date)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
return == 4
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable():::ENTER
this has only one value
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable():::EXIT
this.totalItems == orig(this.totalItems)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.supplier == orig(this.supplier)
this.supplier.isAdmin == orig(this.supplier.isAdmin)
this.supplier.score == orig(this.supplier.score)
this.supplier.polls == orig(this.supplier.polls)
this.supplier.polls.getClass().getName() == orig(this.supplier.polls.getClass().getName())
this.supplier.username == orig(this.supplier.username)
this.supplier.username.toString == orig(this.supplier.username.toString)
this.supplier.password == orig(this.supplier.password)
this.supplier.password.toString == orig(this.supplier.password.toString)
this.supplier.email == orig(this.supplier.email)
this.supplier.email.toString == orig(this.supplier.email.toString)
this.supplier.credit == orig(this.supplier.credit)
this.supplier.city == orig(this.supplier.city)
this.supplier.city.toString == orig(this.supplier.city.toString)
this.supplier.orders == orig(this.supplier.orders)
this.supplier.orders[] == orig(this.supplier.orders[])
this.supplier.curOrder == orig(this.supplier.curOrder)
this.supplier.curOrder.items == orig(this.supplier.curOrder.items)
this.supplier.curOrder.items[] == orig(this.supplier.curOrder.items[])
this.supplier.curOrder.totalPrice == orig(this.supplier.curOrder.totalPrice)
this.supplier.curOrder.date == orig(this.supplier.curOrder.date)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
return == true
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable():::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable(int):::ENTER
this has only one value
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
arg0 == 1
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable(int):::EXIT
this.totalItems == orig(this.totalItems)
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.supplier == orig(this.supplier)
this.supplier.isAdmin == orig(this.supplier.isAdmin)
this.supplier.score == orig(this.supplier.score)
this.supplier.polls == orig(this.supplier.polls)
this.supplier.polls.getClass().getName() == orig(this.supplier.polls.getClass().getName())
this.supplier.username == orig(this.supplier.username)
this.supplier.username.toString == orig(this.supplier.username.toString)
this.supplier.password == orig(this.supplier.password)
this.supplier.password.toString == orig(this.supplier.password.toString)
this.supplier.email == orig(this.supplier.email)
this.supplier.email.toString == orig(this.supplier.email.toString)
this.supplier.credit == orig(this.supplier.credit)
this.supplier.city == orig(this.supplier.city)
this.supplier.city.toString == orig(this.supplier.city.toString)
this.supplier.orders == orig(this.supplier.orders)
this.supplier.orders[] == orig(this.supplier.orders[])
this.supplier.curOrder == orig(this.supplier.curOrder)
this.supplier.curOrder.items == orig(this.supplier.curOrder.items)
this.supplier.curOrder.items[] == orig(this.supplier.curOrder.items[])
this.supplier.curOrder.totalPrice == orig(this.supplier.curOrder.totalPrice)
this.supplier.curOrder.date == orig(this.supplier.curOrder.date)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.totalItems == 4
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 0
return == true
===========================================================================
com.jdeals.main.entity.catalogue.GeneralGood.isAvailable(int):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.entity.catalogue.Item:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
com.jdeals.main.entity.catalogue.Item.nextId != null
===========================================================================
com.jdeals.main.entity.catalogue.Item:::OBJECT
this.id >= 1
this.price >= 0.33
this.sold one of { 0, 1, 4 }
===========================================================================
com.jdeals.main.entity.catalogue.Item.Item(double, int):::ENTER
arg1 one of { 0, 1, 4 }
===========================================================================
com.jdeals.main.entity.catalogue.Item.Item(double, int):::EXIT
===========================================================================
com.jdeals.main.entity.catalogue.Item.clone():::ENTER
this has only one value
this.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
this.id == 4
this.price == 20.0
this.sold == 1
===========================================================================
com.jdeals.main.entity.catalogue.Item.clone():::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.id == 4
this.price == 20.0
this.sold == 1
return has only one value
return.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
return.id == 4
return.price == 20.0
return.sold == 1
===========================================================================
com.jdeals.main.entity.catalogue.Item.getId():::ENTER
===========================================================================
com.jdeals.main.entity.catalogue.Item.getId():::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
return >= 1
===========================================================================
com.jdeals.main.entity.catalogue.Item.getPrice():::ENTER
this.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
this.id == 4
this.price == 20.0
this.sold one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.catalogue.Item.getPrice():::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.id == 4
this.price == 20.0
this.sold one of { 0, 1 }
return == 20.0
===========================================================================
com.jdeals.main.entity.catalogue.Item.getSold():::ENTER
this has only one value
this.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
this.id == 4
this.price == 20.0
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.Item.getSold():::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.id == 4
this.price == 20.0
this.sold == 0
return == 0
===========================================================================
com.jdeals.main.entity.catalogue.Item.modSold(int):::ENTER
this has only one value
this.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
this.id == 4
this.price == 20.0
this.sold == 0
arg0 == 1
===========================================================================
com.jdeals.main.entity.catalogue.Item.modSold(int):::EXIT
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.id == 4
this.price == 20.0
this.sold == 1
===========================================================================
com.jdeals.main.entity.catalogue.Restourant:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
===========================================================================
com.jdeals.main.entity.catalogue.Restourant:::OBJECT
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.expiryDate.format has only one value
this.expiryDate.format.toString == "dd/mm/yyyy"
this.expiryDate.calendar.getClass().getName() == java.util.GregorianCalendar.class
this.location.toString one of { "Napoli", "Salerno" }
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.Restourant.Restourant(java.lang.String, java.lang.String, double, int, com.jdeals.libs.MyDate, java.lang.String, int):::ENTER
arg3 == 0
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg4.format has only one value
arg4.format.toString == "dd/mm/yyyy"
arg4.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg5.toString one of { "Napoli", "Salerno" }
===========================================================================
com.jdeals.main.entity.catalogue.Restourant.Restourant(java.lang.String, java.lang.String, double, int, com.jdeals.libs.MyDate, java.lang.String, int):::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg4.format == orig(arg4.format)
arg4.format.toString == orig(arg4.format.toString)
arg4.calendar == orig(arg4.calendar)
arg4.calendar.getClass().getName() == orig(arg4.calendar.getClass().getName())
arg5.toString == orig(arg5.toString)
arg4.format has only one value
arg4.format.toString == "dd/mm/yyyy"
arg4.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg5.toString one of { "Napoli", "Salerno" }
===========================================================================
com.jdeals.main.entity.catalogue.Supply:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
===========================================================================
com.jdeals.main.entity.catalogue.Supply:::OBJECT
this.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
this.description.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
this.supplier.score == 0
this.supplier.polls.getClass().getName() == java.util.HashMap.class
this.supplier.username.toString one of { "root", "supplier" }
this.supplier.password.toString one of { "root", "supplier" }
this.supplier.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.supplier.credit == 0.0
this.supplier.city has only one value
this.supplier.city.toString == "Salerno"
this.supplier.orders[] == []
this.supplier.orders[].getClass().getName() == []
this.supplier.curOrder.items[] == []
this.supplier.curOrder.items[].getClass().getName() == []
this.supplier.curOrder.totalPrice == 0.0
this.id one of { 4, 5, 6 }
this.price one of { 20.0, 600.0, 700.0 }
this.sold one of { 0, 1, 4 }
===========================================================================
com.jdeals.main.entity.catalogue.Supply.Supply(java.lang.String, double, int, com.jdeals.main.entity.user.Manager):::ENTER
arg0.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
arg1 one of { 20.0, 600.0, 700.0 }
arg2 one of { 0, 1, 4 }
arg3.score == 0
arg3.polls.getClass().getName() == java.util.HashMap.class
arg3.username.toString one of { "root", "supplier" }
arg3.password.toString one of { "root", "supplier" }
arg3.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
arg3.credit == 0.0
arg3.city has only one value
arg3.city.toString == "Salerno"
arg3.orders[] == []
arg3.orders[].getClass().getName() == []
arg3.curOrder.items[] == []
arg3.curOrder.items[].getClass().getName() == []
arg3.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.catalogue.Supply.Supply(java.lang.String, double, int, com.jdeals.main.entity.user.Manager):::EXIT
arg0.toString == orig(arg0.toString)
arg3.isAdmin == orig(arg3.isAdmin)
arg3.score == orig(arg3.score)
arg3.polls == orig(arg3.polls)
arg3.polls.getClass().getName() == orig(arg3.polls.getClass().getName())
arg3.username == orig(arg3.username)
arg3.username.toString == orig(arg3.username.toString)
arg3.password == orig(arg3.password)
arg3.password.toString == orig(arg3.password.toString)
arg3.email == orig(arg3.email)
arg3.email.toString == orig(arg3.email.toString)
arg3.credit == orig(arg3.credit)
arg3.city == orig(arg3.city)
arg3.city.toString == orig(arg3.city.toString)
arg3.orders == orig(arg3.orders)
arg3.orders[] == orig(arg3.orders[])
arg3.curOrder == orig(arg3.curOrder)
arg3.curOrder.items == orig(arg3.curOrder.items)
arg3.curOrder.items[] == orig(arg3.curOrder.items[])
arg3.curOrder.totalPrice == orig(arg3.curOrder.totalPrice)
arg3.curOrder.date == orig(arg3.curOrder.date)
arg0.toString one of { "Geox green shoes", "IPhone 5d", "Samsung Galaxy 6" }
arg3.score == 0
arg3.polls.getClass().getName() == java.util.HashMap.class
arg3.username.toString one of { "root", "supplier" }
arg3.password.toString one of { "root", "supplier" }
arg3.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
arg3.credit == 0.0
arg3.city has only one value
arg3.city.toString == "Salerno"
arg3.orders[] == []
arg3.orders[].getClass().getName() == []
arg3.curOrder.items[] == []
arg3.curOrder.items[].getClass().getName() == []
arg3.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.catalogue.Supply.clone():::ENTER
this has only one value
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 1
===========================================================================
com.jdeals.main.entity.catalogue.Supply.clone():::EXIT
this.description == orig(this.description)
this.description.toString == orig(this.description.toString)
this.supplier == orig(this.supplier)
this.supplier.isAdmin == orig(this.supplier.isAdmin)
this.supplier.score == orig(this.supplier.score)
this.supplier.polls == orig(this.supplier.polls)
this.supplier.polls.getClass().getName() == orig(this.supplier.polls.getClass().getName())
this.supplier.username == orig(this.supplier.username)
this.supplier.username.toString == orig(this.supplier.username.toString)
this.supplier.password == orig(this.supplier.password)
this.supplier.password.toString == orig(this.supplier.password.toString)
this.supplier.email == orig(this.supplier.email)
this.supplier.email.toString == orig(this.supplier.email.toString)
this.supplier.credit == orig(this.supplier.credit)
this.supplier.city == orig(this.supplier.city)
this.supplier.city.toString == orig(this.supplier.city.toString)
this.supplier.orders == orig(this.supplier.orders)
this.supplier.orders[] == orig(this.supplier.orders[])
this.supplier.curOrder == orig(this.supplier.curOrder)
this.supplier.curOrder.items == orig(this.supplier.curOrder.items)
this.supplier.curOrder.items[] == orig(this.supplier.curOrder.items[])
this.supplier.curOrder.totalPrice == orig(this.supplier.curOrder.totalPrice)
this.supplier.curOrder.date == orig(this.supplier.curOrder.date)
com.jdeals.main.entity.catalogue.Item.nextId == orig(com.jdeals.main.entity.catalogue.Item.nextId)
this.id == orig(this.id)
this.price == orig(this.price)
this.sold == orig(this.sold)
this.description has only one value
this.description.toString == "Geox green shoes"
this.supplier has only one value
this.supplier.isAdmin == true
this.supplier.polls has only one value
this.supplier.username has only one value
this.supplier.username.toString == "root"
this.supplier.password has only one value
this.supplier.password.toString == "root"
this.supplier.email has only one value
this.supplier.email.toString == "admin@hw2.it"
this.supplier.orders has only one value
this.supplier.curOrder has only one value
this.supplier.curOrder.items has only one value
this.supplier.curOrder.date has only one value
this.id == 4
this.price == 20.0
this.sold == 1
return has only one value
return.getClass().getName() == com.jdeals.main.entity.catalogue.GeneralGood.class
return.description has only one value
return.description.toString == "Geox green shoes"
return.supplier has only one value
return.supplier.isAdmin == true
return.supplier.score == 0
return.supplier.polls has only one value
return.supplier.polls.getClass().getName() == java.util.HashMap.class
return.supplier.username has only one value
return.supplier.username.toString == "root"
return.supplier.password has only one value
return.supplier.password.toString == "root"
return.supplier.email has only one value
return.supplier.email.toString == "admin@hw2.it"
return.supplier.credit == 0.0
return.supplier.city has only one value
return.supplier.city.toString == "Salerno"
return.supplier.orders has only one value
return.supplier.orders[] == []
return.supplier.orders[].getClass().getName() == []
return.supplier.curOrder has only one value
return.id == 4
return.price == 20.0
return.sold == 1
===========================================================================
com.jdeals.main.entity.catalogue.Travel:::CLASS
com.jdeals.main.entity.catalogue.Item.nextId has only one value
===========================================================================
com.jdeals.main.entity.catalogue.Travel:::OBJECT
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.departureDate.format has only one value
this.departureDate.format.toString == "dd/mm/yyyy"
this.departureDate.calendar.getClass().getName() == java.util.GregorianCalendar.class
this.expiryDate.format has only one value
this.expiryDate.format.toString == "dd/mm/yyyy"
this.expiryDate.calendar.getClass().getName() == java.util.GregorianCalendar.class
this.location.toString one of { "Amalfi", "California", "Roma" }
this.id one of { 1, 2, 3 }
this.price one of { 0.33, 830.5, 2000.0 }
this.sold == 0
===========================================================================
com.jdeals.main.entity.catalogue.Travel.Travel(double, int, com.jdeals.libs.MyDate, java.lang.String, com.jdeals.libs.MyDate):::ENTER
arg0 one of { 0.33, 830.5, 2000.0 }
arg1 == 0
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg2.format has only one value
arg2.format.toString == "dd/mm/yyyy"
arg2.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg3.toString one of { "Amalfi", "California", "Roma" }
arg4.format has only one value
arg4.format.toString == "dd/mm/yyyy"
arg4.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.main.entity.catalogue.Travel.Travel(double, int, com.jdeals.libs.MyDate, java.lang.String, com.jdeals.libs.MyDate):::EXIT
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg2.format == orig(arg2.format)
arg2.format.toString == orig(arg2.format.toString)
arg2.calendar == orig(arg2.calendar)
arg2.calendar.getClass().getName() == orig(arg2.calendar.getClass().getName())
arg3.toString == orig(arg3.toString)
arg4.format == orig(arg4.format)
arg4.format.toString == orig(arg4.format.toString)
arg4.calendar == orig(arg4.calendar)
arg4.calendar.getClass().getName() == orig(arg4.calendar.getClass().getName())
arg2.format has only one value
arg2.format.toString == "dd/mm/yyyy"
arg2.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg3.toString one of { "Amalfi", "California", "Roma" }
arg4.format has only one value
arg4.format.toString == "dd/mm/yyyy"
arg4.calendar.getClass().getName() == java.util.GregorianCalendar.class
===========================================================================
com.jdeals.main.entity.user.Manager:::CLASS
===========================================================================
com.jdeals.main.entity.user.Manager:::OBJECT
this.username == this.password
com.jdeals.libs.MyDate.defFormat == this.curOrder.date.format
this.score == 0
this.polls.getClass().getName() == java.util.HashMap.class
this.username.toString one of { "root", "supplier" }
this.password.toString one of { "root", "supplier" }
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.credit == 0.0
this.city has only one value
this.city.toString == "Salerno"
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
this.curOrder.totalPrice == 0.0
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.curOrder.date.format.toString == "dd/mm/yyyy"
this.curOrder.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
this.polls.getClass().getName() != this.curOrder.date.calendar.getClass().getName()
===========================================================================
com.jdeals.main.entity.user.Manager.Manager(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String):::ENTER
arg1 == arg2
arg1.toString one of { "root", "supplier" }
arg2.toString one of { "root", "supplier" }
arg3 has only one value
arg3.toString == "Salerno"
arg4.toString one of { "admin@hw2.it", "supplier@hw2.it" }
===========================================================================
com.jdeals.main.entity.user.Manager.Manager(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String):::EXIT
this.isAdmin == orig(arg0)
this.username == orig(arg1)
this.username == orig(arg2)
this.email == orig(arg4)
this.city == orig(arg3)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
arg3.toString == orig(arg3.toString)
arg4.toString == orig(arg4.toString)
arg1.toString one of { "root", "supplier" }
arg2.toString one of { "root", "supplier" }
arg3.toString == "Salerno"
arg4.toString one of { "admin@hw2.it", "supplier@hw2.it" }
===========================================================================
com.jdeals.main.entity.user.Manager.clone():::ENTER
===========================================================================
com.jdeals.main.entity.user.Manager.clone():::EXIT
this.isAdmin == orig(this.isAdmin)
this.score == orig(this.score)
this.polls == return.polls
this.polls == orig(this.polls)
this.polls.getClass().getName() == return.polls.getClass().getName()
this.polls.getClass().getName() == orig(this.polls.getClass().getName())
this.username == return.username
this.username == return.password
this.username == orig(this.username)
this.username == orig(this.password)
this.username.toString == orig(this.username.toString)
this.password.toString == orig(this.password.toString)
this.email == return.email
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == return.city
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == return.orders
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == return.curOrder
this.curOrder == orig(this.curOrder)
this.curOrder.items == return.curOrder.items
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == return.curOrder.totalPrice
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == return.curOrder.date
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat == orig(this.curOrder.date.format)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
return.score == 0
return.username.toString one of { "root", "supplier" }
return.password.toString one of { "root", "supplier" }
return.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
return.credit == 0.0
return.city.toString == "Salerno"
return.orders[] == []
return.orders[].getClass().getName() == []
return.curOrder.items[] == []
return.curOrder.items[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.user.User:::CLASS
===========================================================================
com.jdeals.main.entity.user.User:::OBJECT
this.username != null
this.username.toString one of { "root", "supplier", "user" }
this.password != null
this.password.toString one of { "root", "supplier", "user" }
this.email != null
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it", "user@hw2.it" }
this.credit one of { 0.0, 980.0, 1000.0 }
this.city has only one value
this.city != null
this.city.toString == "Salerno"
this.orders != null
this.orders[] elements has only one value
this.orders[] elements != null
this.orders[].getClass().getName() elements == com.jdeals.main.entity.Order.class
this.orders[].getClass().getName() one of { [], [com.jdeals.main.entity.Order] }
this.curOrder != null
this.curOrder.items != null
this.curOrder.items[] elements has only one value
this.curOrder.items[] elements != null
this.curOrder.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
this.curOrder.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
this.curOrder.totalPrice == 0.0
this.curOrder.date != null
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat != null
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask != null
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
this.curOrder.date.format has only one value
this.curOrder.date.format != null
this.curOrder.date.format.toString == "dd/mm/yyyy"
this.curOrder.date.calendar != null
this.curOrder.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(this.orders[]) one of { 0, 1 }
size(this.curOrder.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.user.User.User(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::ENTER
arg0.toString one of { "root", "supplier", "user" }
arg1.toString one of { "root", "supplier", "user" }
arg2 has only one value
arg2.toString == "Salerno"
arg3.toString one of { "admin@hw2.it", "supplier@hw2.it", "user@hw2.it" }
===========================================================================
com.jdeals.main.entity.user.User.User(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
arg3.toString == orig(arg3.toString)
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
arg0.toString one of { "root", "supplier", "user" }
arg1.toString one of { "root", "supplier", "user" }
arg2.toString == "Salerno"
arg3.toString one of { "admin@hw2.it", "supplier@hw2.it", "user@hw2.it" }
===========================================================================
com.jdeals.main.entity.user.User.addOrder(com.jdeals.main.entity.Order):::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 980.0
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
arg0 has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 20.0
arg0.date has only one value
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.addOrder(com.jdeals.main.entity.Order):::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
arg0.items == orig(arg0.items)
arg0.items[] == orig(arg0.items[])
arg0.totalPrice == orig(arg0.totalPrice)
arg0.date == orig(arg0.date)
arg0.date.format == orig(arg0.date.format)
arg0.date.format.toString == orig(arg0.date.format.toString)
arg0.date.calendar == orig(arg0.date.calendar)
arg0.date.calendar.getClass().getName() == orig(arg0.date.calendar.getClass().getName())
size(this.orders[])-1 == orig(size(this.orders[]))
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 980.0
this.orders has only one value
this.orders[] contains no nulls and has only one value, of length 1
this.orders[].getClass().getName() == [com.jdeals.main.entity.Order]
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 20.0
arg0.date has only one value
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(this.orders[]) == 1
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.checkCredit(double):::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 1000.0
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] contains no nulls and has only one value, of length 1
this.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
arg0 == 20.0
size(this.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.checkCredit(double):::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 1000.0
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] contains no nulls and has only one value, of length 1
this.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
return == true
size(this.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.checkCredit(double):::EXIT;condition="return == true"
===========================================================================
com.jdeals.main.entity.user.User.clone():::ENTER
this.username.toString one of { "root", "supplier" }
this.password.toString one of { "root", "supplier" }
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.user.User.clone():::EXIT224
===========================================================================
com.jdeals.main.entity.user.User.clone():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username.toString one of { "root", "supplier" }
this.password.toString one of { "root", "supplier" }
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
return.username.toString one of { "root", "supplier" }
return.password.toString one of { "root", "supplier" }
return.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
return.credit == 0.0
return.city has only one value
return.city.toString == "Salerno"
return.orders[] == []
return.orders[].getClass().getName() == []
return.curOrder.items[] == []
return.curOrder.items[].getClass().getName() == []
return.curOrder.totalPrice == 0.0
===========================================================================
com.jdeals.main.entity.user.User.getCredit():::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 1000.0
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] contains no nulls and has only one value, of length 1
this.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
size(this.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.getCredit():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 1000.0
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] contains no nulls and has only one value, of length 1
this.curOrder.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
return == 1000.0
size(this.curOrder.items[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.getCurOrder():::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit one of { 980.0, 1000.0 }
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
===========================================================================
com.jdeals.main.entity.user.User.getCurOrder():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit one of { 980.0, 1000.0 }
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
return has only one value
return.items has only one value
return.items[] elements has only one value
return.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
return.items[].getClass().getName() one of { [], [com.jdeals.main.entity.Order.ItemStack] }
return.totalPrice == 0.0
return.date has only one value
return.date.format has only one value
return.date.format.toString == "dd/mm/yyyy"
return.date.calendar has only one value
return.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
size(return.items[]) one of { 0, 1 }
===========================================================================
com.jdeals.main.entity.user.User.getEmail():::ENTER
this.username.toString one of { "root", "supplier" }
this.password.toString one of { "root", "supplier" }
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.user.User.getEmail():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username.toString one of { "root", "supplier" }
this.password.toString one of { "root", "supplier" }
this.email.toString one of { "admin@hw2.it", "supplier@hw2.it" }
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
return.toString one of { "admin@hw2.it", "supplier@hw2.it" }
===========================================================================
com.jdeals.main.entity.user.User.getOrders():::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 980.0
this.orders has only one value
this.orders[] contains no nulls and has only one value, of length 1
this.orders[].getClass().getName() == [com.jdeals.main.entity.Order]
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
size(this.orders[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.getOrders():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit == 980.0
this.orders has only one value
this.orders[] contains no nulls and has only one value, of length 1
this.orders[].getClass().getName() == [com.jdeals.main.entity.Order]
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
return has only one value
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
return[].getClass().getName() == [com.jdeals.main.entity.Order]
return[].getClass().getName() elements == com.jdeals.main.entity.Order.class
size(this.orders[]) == 1
size(return[]) == 1
===========================================================================
com.jdeals.main.entity.user.User.getUsername():::ENTER
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
===========================================================================
com.jdeals.main.entity.user.User.getUsername():::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.credit == orig(this.credit)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.credit == 0.0
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder.items[] == []
this.curOrder.items[].getClass().getName() == []
return.toString one of { "root", "supplier", "user" }
===========================================================================
com.jdeals.main.entity.user.User.modCredit(double):::ENTER
this has only one value
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit one of { 0.0, 1000.0 }
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
arg0 one of { -20.0, 1000.0 }
===========================================================================
com.jdeals.main.entity.user.User.modCredit(double):::EXIT
this.username == orig(this.username)
this.username.toString == orig(this.username.toString)
this.password == orig(this.password)
this.password.toString == orig(this.password.toString)
this.email == orig(this.email)
this.email.toString == orig(this.email.toString)
this.city == orig(this.city)
this.city.toString == orig(this.city.toString)
this.orders == orig(this.orders)
this.orders[] == orig(this.orders[])
this.curOrder == orig(this.curOrder)
this.curOrder.items == orig(this.curOrder.items)
this.curOrder.items[] == orig(this.curOrder.items[])
this.curOrder.totalPrice == orig(this.curOrder.totalPrice)
this.curOrder.date == orig(this.curOrder.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
this.curOrder.date.format == orig(this.curOrder.date.format)
this.curOrder.date.format.toString == orig(this.curOrder.date.format.toString)
this.curOrder.date.calendar == orig(this.curOrder.date.calendar)
this.curOrder.date.calendar.getClass().getName() == orig(this.curOrder.date.calendar.getClass().getName())
this.username has only one value
this.username.toString == "user"
this.password has only one value
this.password.toString == "user"
this.email has only one value
this.email.toString == "user@hw2.it"
this.credit one of { 980.0, 1000.0 }
this.orders has only one value
this.orders[] == []
this.orders[].getClass().getName() == []
this.curOrder has only one value
this.curOrder.items has only one value
this.curOrder.date has only one value
this.curOrder.date.calendar has only one value
===========================================================================
com.jdeals.main.helper.Settings:::OBJECT
this has only one value
this.extrasEnabled == false
===========================================================================
com.jdeals.main.helper.Settings.Settings(boolean):::ENTER
arg0 == false
===========================================================================
com.jdeals.main.helper.Settings.Settings(boolean):::EXIT
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount:::CLASS
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount:::OBJECT
this.days == 7
this.rate one of { 0.7, 0.8 }
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.LastDaysDiscount(int, int):::ENTER
arg0 one of { 20, 30 }
arg1 == 7
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.LastDaysDiscount(int, int):::EXIT
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.equals(java.lang.Object):::ENTER
this has only one value
this.rate == 0.7
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.equals(java.lang.Object):::EXIT
this.days == orig(this.days)
this.rate == orig(this.rate)
this.rate == 0.7
return == false
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.equals(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.scan(com.jdeals.main.entity.Order, boolean):::ENTER
this has only one value
this.rate == 0.7
arg0 has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg1 == true
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT
this.days == orig(this.days)
this.rate == orig(this.rate)
arg0.items == orig(arg0.items)
arg0.items[] == orig(arg0.items[])
arg0.totalPrice == orig(arg0.totalPrice)
arg0.date == orig(arg0.date)
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg0.date.format == orig(arg0.date.format)
arg0.date.format.toString == orig(arg0.date.format.toString)
arg0.date.calendar == orig(arg0.date.calendar)
arg0.date.calendar.getClass().getName() == orig(arg0.date.calendar.getClass().getName())
this.rate == 0.7
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format has only one value
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
return == false
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.LastDaysDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount:::CLASS
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount:::OBJECT
this has only one value
this.minQuantity == 5
this.rate == 0.9
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.QuantityDiscount(int, double):::ENTER
arg0 == 5
arg1 == 10.0
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.QuantityDiscount(int, double):::EXIT
this.minQuantity == orig(arg0)
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.equals(java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.jdeals.main.helper.discount.RestourantDiscount.class
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.equals(java.lang.Object):::EXIT
this.minQuantity == orig(this.minQuantity)
this.rate == orig(this.rate)
return == false
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.equals(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.scan(com.jdeals.main.entity.Order, boolean):::ENTER
com.jdeals.libs.MyDate.defFormat == arg0.date.format
arg0 has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg1 == true
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT70
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT70;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT
this.minQuantity == orig(this.minQuantity)
this.rate == orig(this.rate)
arg0.items == orig(arg0.items)
arg0.items[] == orig(arg0.items[])
arg0.totalPrice == orig(arg0.totalPrice)
arg0.date == orig(arg0.date)
com.jdeals.libs.MyDate.defFormat == arg0.date.format
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat == orig(arg0.date.format)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg0.date.format.toString == orig(arg0.date.format.toString)
arg0.date.calendar == orig(arg0.date.calendar)
arg0.date.calendar.getClass().getName() == orig(arg0.date.calendar.getClass().getName())
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
return == false
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.QuantityDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount:::CLASS
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount:::OBJECT
this.rate one of { 0.7, 0.8, 0.9 }
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.RatedDiscount(double):::ENTER
arg0 one of { 10.0, 20.0, 30.0 }
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.RatedDiscount(double):::EXIT
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.compareTo(com.jdeals.main.helper.discount.RatedDiscount):::ENTER
this.rate one of { 0.8, 0.9 }
arg0.rate one of { 0.7, 0.9 }
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.compareTo(com.jdeals.main.helper.discount.RatedDiscount):::EXIT
this.rate == orig(this.rate)
arg0.rate == orig(arg0.rate)
this.rate one of { 0.8, 0.9 }
arg0.rate one of { 0.7, 0.9 }
return one of { -1, 1 }
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.equals(java.lang.Object):::ENTER
this.rate one of { 0.7, 0.9 }
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.equals(java.lang.Object):::EXIT
this.rate == orig(this.rate)
this.rate one of { 0.7, 0.9 }
return == false
===========================================================================
com.jdeals.main.helper.discount.RatedDiscount.equals(java.lang.Object):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount:::CLASS
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount:::OBJECT
this has only one value
this.soldRate == 0.5
this.days == 7
this.rate == 0.8
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount.RestourantDiscount(int, int, int):::ENTER
arg0 == 50
arg1 == 20
arg2 == 7
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount.RestourantDiscount(int, int, int):::EXIT
this.days == orig(arg2)
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount.scan(com.jdeals.main.entity.Order, boolean):::ENTER
com.jdeals.libs.MyDate.defFormat == arg0.date.format
arg0 has only one value
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
arg1 == true
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT
this.soldRate == orig(this.soldRate)
this.days == orig(this.days)
this.rate == orig(this.rate)
arg0.items == orig(arg0.items)
arg0.items[] == orig(arg0.items[])
arg0.totalPrice == orig(arg0.totalPrice)
arg0.date == orig(arg0.date)
com.jdeals.libs.MyDate.defFormat == arg0.date.format
com.jdeals.libs.MyDate.defFormat == orig(com.jdeals.libs.MyDate.defFormat)
com.jdeals.libs.MyDate.defFormat == orig(arg0.date.format)
com.jdeals.libs.MyDate.defFormat.toString == orig(com.jdeals.libs.MyDate.defFormat.toString)
com.jdeals.libs.MyDate.defMask == orig(com.jdeals.libs.MyDate.defMask)
com.jdeals.libs.MyDate.defMask.toString == orig(com.jdeals.libs.MyDate.defMask.toString)
arg0.date.format.toString == orig(arg0.date.format.toString)
arg0.date.calendar == orig(arg0.date.calendar)
arg0.date.calendar.getClass().getName() == orig(arg0.date.calendar.getClass().getName())
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 1
arg0.items[] elements has only one value
arg0.items[].getClass().getName() == [com.jdeals.main.entity.Order.ItemStack]
arg0.items[].getClass().getName() elements == com.jdeals.main.entity.Order.ItemStack.class
arg0.totalPrice == 0.0
arg0.date has only one value
com.jdeals.libs.MyDate.defFormat has only one value
com.jdeals.libs.MyDate.defFormat.toString == "dd/mm/yyyy"
com.jdeals.libs.MyDate.defMask has only one value
com.jdeals.libs.MyDate.defMask.toString == "##/##/####"
arg0.date.format.toString == "dd/mm/yyyy"
arg0.date.calendar has only one value
arg0.date.calendar.getClass().getName() == java.util.GregorianCalendar.class
return == false
size(arg0.items[]) == 1
===========================================================================
com.jdeals.main.helper.discount.RestourantDiscount.scan(com.jdeals.main.entity.Order, boolean):::EXIT;condition="not(return == true)"
===========================================================================
com.jdeals.main.helper.storage.FileSerialization:::OBJECT
this has only one value
===========================================================================
com.jdeals.main.helper.storage.FileSerialization.FileSerialization():::EXIT
===========================================================================
com.jdeals.main.helper.storage.FileSerialization.loadList(java.lang.String):::ENTER
arg0.toString one of { "database/discounts.db", "database/items.db", "database/users.db" }
===========================================================================
com.jdeals.main.helper.storage.FileSerialization.loadList(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "database/discounts.db", "database/items.db", "database/users.db" }
return[] == []
return[].getClass().getName() == []
===========================================================================
com.jdeals.tests.TestDemoData.importStoreExampleData(com.jdeals.main.controller.Store):::ENTER
arg0 == arg0.mainCtrl.store
arg0 has only one value
arg0.items has only one value
arg0.items[] == []
arg0.items[].getClass().getName() == []
arg0.discounts has only one value
arg0.discounts[] == []
arg0.discounts[].getClass().getName() == []
arg0.mainCtrl has only one value
com.jdeals.main.controller.JDealsController.scan == null
arg0.mainCtrl.users has only one value
arg0.mainCtrl.users[] contains no nulls and has only one value, of length 3
arg0.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.mainCtrl.curUser == null
arg0.mainCtrl.curMenu == null
arg0.mainCtrl.frame == null
arg0.mainCtrl.rType has only one value
arg0.mainCtrl.settings has only one value
size(arg0.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.tests.TestDemoData.importStoreExampleData(com.jdeals.main.controller.Store):::EXIT
arg0.items == orig(arg0.items)
arg0.discounts == orig(arg0.discounts)
arg0.mainCtrl == orig(arg0.mainCtrl)
com.jdeals.main.controller.JDealsController.scan == orig(com.jdeals.main.controller.JDealsController.scan)
arg0.mainCtrl.users == orig(arg0.mainCtrl.users)
arg0.mainCtrl.users[] == orig(arg0.mainCtrl.users[])
arg0.mainCtrl.curUser == orig(arg0.mainCtrl.curUser)
arg0.mainCtrl.curMenu == orig(arg0.mainCtrl.curMenu)
arg0.mainCtrl.store == orig(arg0)
arg0.mainCtrl.frame == orig(arg0.mainCtrl.frame)
arg0.mainCtrl.rType == orig(arg0.mainCtrl.rType)
arg0.mainCtrl.settings == orig(arg0.mainCtrl.settings)
arg0.items has only one value
arg0.items[] contains no nulls and has only one value, of length 10
arg0.items[].getClass().getName() == [com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.Travel, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.GeneralGood, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant, com.jdeals.main.entity.catalogue.Restourant]
arg0.discounts has only one value
arg0.discounts[] contains no nulls and has only one value, of length 3
arg0.discounts[].getClass().getName() == [com.jdeals.main.helper.discount.RestourantDiscount, com.jdeals.main.helper.discount.QuantityDiscount, com.jdeals.main.helper.discount.LastDaysDiscount]
arg0.mainCtrl has only one value
com.jdeals.main.controller.JDealsController.scan == null
arg0.mainCtrl.users has only one value
arg0.mainCtrl.users[] contains no nulls and has only one value, of length 3
arg0.mainCtrl.users[].getClass().getName() == [com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.Manager, com.jdeals.main.entity.user.User]
arg0.mainCtrl.curUser == null
arg0.mainCtrl.curMenu == null
arg0.mainCtrl.frame == null
arg0.mainCtrl.rType has only one value
arg0.mainCtrl.settings has only one value
size(arg0.items[]) == 10
size(arg0.discounts[]) == 3
size(arg0.mainCtrl.users[]) == 3
===========================================================================
com.jdeals.tests.TestUserBuying.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
com.jdeals.tests.TestUserBuying.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
Exiting Daikon.
