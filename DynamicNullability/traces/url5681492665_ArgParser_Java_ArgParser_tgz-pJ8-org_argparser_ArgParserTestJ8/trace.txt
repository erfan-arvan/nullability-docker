Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 367 times.  Unmatched entries are ignored!
Unterminated calls:
  org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object) : 50 invocations
  org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object, boolean) : 50 invocations
  org.argparser.ArgParser.scanRangeSpec(org.argparser.ArgParser$Record, java.lang.String) : 17 invocations
  org.argparser.ArgParser$RangePnt.RangePnt(org.argparser.StringScanner, int) : 6 invocations
  org.argparser.StringScanner.scanDouble() : 8 invocations
  org.argparser.StringScanner.scanInt() : 8 invocations
  org.argparser.StringScanner.scanInt(int, boolean) : 23 invocations
  org.argparser.StringScanner.scanBoolean() : 7 invocations
  org.argparser.ArgParser.matchArg(java.lang.String[], int) : 97 invocations
  org.argparser.ArgParser$Record.scanValue(java.lang.Object, java.lang.String, java.lang.String, int) : 96 invocations
  org.argparser.StringScanner.scanChar() : 2 invocations
  org.argparser.StringScanner.scanQuotedChar() : 2 invocations
  org.argparser.StringScanner.scanUnquotedChar() : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

Warning: No non-obvious non-suppressed exclusive invariants found in org.argparser.StringScanner.scanString():::EXIT
===========================================================================
org.argparser.ArgHolder:::CLASS
===========================================================================
org.argparser.ArgHolder:::OBJECT
this.clazz != null
this.defaultValue == null
===========================================================================
org.argparser.ArgHolder.ArgHolder(java.lang.Class):::ENTER
arg0 != null
===========================================================================
org.argparser.ArgHolder.ArgHolder(java.lang.Class):::EXIT
this.clazz == orig(arg0)
this.value == null
===========================================================================
org.argparser.ArgHolder.getType():::ENTER
===========================================================================
org.argparser.ArgHolder.getType():::EXIT
this.clazz == return
this.defaultValue == orig(this.defaultValue)
this.value == orig(this.value)
this.value.getClass().getName() == orig(this.value.getClass().getName())
return == orig(this.clazz)
return != null
===========================================================================
org.argparser.ArgHolder.getValue():::ENTER
this.value != null
===========================================================================
org.argparser.ArgHolder.getValue():::EXIT
this.clazz == orig(this.clazz)
this.defaultValue == orig(this.defaultValue)
this.value == return
this.value.getClass().getName() == return.getClass().getName()
return == orig(this.value)
return.getClass().getName() == orig(this.value.getClass().getName())
return != null
===========================================================================
org.argparser.ArgHolder.setValue(java.lang.Object):::ENTER
this.value.getClass().getName() == arg0.getClass().getName()
arg0 != null
===========================================================================
org.argparser.ArgHolder.setValue(java.lang.Object):::EXIT
this.clazz == orig(this.clazz)
this.defaultValue == orig(this.defaultValue)
this.value == orig(arg0)
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.getClass().getName())
this.value != null
===========================================================================
org.argparser.ArgParseException:::CLASS
===========================================================================
org.argparser.ArgParseException:::OBJECT
===========================================================================
org.argparser.ArgParseException.ArgParseException(java.lang.String, java.lang.String):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.argparser.ArgParseException.ArgParseException(java.lang.String, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
===========================================================================
org.argparser.ArgParser$NameDesc:::OBJECT
this.next.name != null
this.next.next.name != null
this.next.next.name.toString one of { "ddd", "e", "f=" }
===========================================================================
org.argparser.ArgParser$NameDesc.NameDesc():::EXIT
this.name == null
this.oneWord == false
this.next == null
===========================================================================
org.argparser.ArgParser$NameDesc.getName():::ENTER
this.name != null
===========================================================================
org.argparser.ArgParser$NameDesc.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.oneWord == orig(this.oneWord)
this.next == orig(this.next)
this.next.name == orig(this.next.name)
this.next.name.toString == orig(this.next.name.toString)
this.next.oneWord == orig(this.next.oneWord)
this.next.next == orig(this.next.next)
this.next.next.name == orig(this.next.next.name)
this.next.next.name.toString == orig(this.next.next.name.toString)
this.next.next.oneWord == orig(this.next.next.oneWord)
this.next.next.next == orig(this.next.next.next)
return == orig(this.name)
return != null
===========================================================================
org.argparser.ArgParser$NameDesc.getNext():::ENTER
this.name != null
===========================================================================
org.argparser.ArgParser$NameDesc.getNext():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.oneWord == orig(this.oneWord)
this.next == return
this.next.name == return.name
this.next.name.toString == orig(this.next.name.toString)
this.next.oneWord == return.oneWord
this.next.next == return.next
this.next.next.name == return.next.name
this.next.next.name.toString == orig(this.next.next.name.toString)
this.next.next.oneWord == return.next.oneWord
this.next.next.next == return.next.next
return == orig(this.next)
return.name == orig(this.next.name)
return.oneWord == orig(this.next.oneWord)
return.next == orig(this.next.next)
return.next.name == orig(this.next.next.name)
return.next.oneWord == orig(this.next.next.oneWord)
return.next.next == orig(this.next.next.next)
this.name != null
return.name != null
return.next.name != null
return.next.name.toString one of { "ddd", "e", "f=" }
===========================================================================
org.argparser.ArgParser$NameDesc.isOneWord():::ENTER
this.name != null
===========================================================================
org.argparser.ArgParser$NameDesc.isOneWord():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.oneWord == return
this.next == orig(this.next)
this.next.name == orig(this.next.name)
this.next.name.toString == orig(this.next.name.toString)
this.next.oneWord == orig(this.next.oneWord)
this.next.next == orig(this.next.next)
this.next.next.name == orig(this.next.next.name)
this.next.next.name.toString == orig(this.next.next.name.toString)
this.next.next.oneWord == orig(this.next.next.oneWord)
this.next.next.next == orig(this.next.next.next)
return == orig(this.oneWord)
(return == false)  ==>  (this.next.next.name.toString one of { "ddd", "e", "f=" })
(return == true)  ==>  (this.next.name.toString one of { "ccc", "ddd" })
(return == true)  ==>  (this.next.next.name has only one value)
(return == true)  ==>  (this.next.next.name.toString == "e")
(return == true)  ==>  (this.next.next.next has only one value)
(return == true)  ==>  (this.next.next.oneWord == false)
this.name != null
===========================================================================
org.argparser.ArgParser$NameDesc.isOneWord():::EXIT;condition="return == true"
this.next.name.toString one of { "ccc", "ddd" }
this.next.next.name has only one value
this.next.next.name.toString == "e"
this.next.next.oneWord == false
this.next.next.next has only one value
return == true
===========================================================================
org.argparser.ArgParser$NameDesc.isOneWord():::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.argparser.ArgParser$RangeAtom:::OBJECT
this.low != null
this.high.dval >= -0.5
this.high.lval >= 0
this.high.bval == true
this.next.low != null
this.next.high.lval >= 0
this.next.high.bval == true
this.next.next.low != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.errMsg.toString one of { "-bool=: malformed boolean '1'", "-farg: value '0' not in range {1,2,(9,18],[22,27],[33,38),(45,48)}" }
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
org.argparser.ArgParser.this.defaultHelpOption.nameList != null
org.argparser.ArgParser.this.defaultHelpOption.type == 0
org.argparser.ArgParser.this.defaultHelpOption.numValues == 1
org.argparser.ArgParser.this.defaultHelpOption.helpMsg != null
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == "displays help information"
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == null
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == null
org.argparser.ArgParser.this.defaultHelpOption.resHolder == null
org.argparser.ArgParser.this.defaultHelpOption.rangeList == null
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.convertCode == 104
org.argparser.ArgParser.this.defaultHelpOption.vval == true
org.argparser.ArgParser.this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.firstHelpOption.nameList != null
org.argparser.ArgParser.this.firstHelpOption.type == 0
org.argparser.ArgParser.this.firstHelpOption.numValues == 1
org.argparser.ArgParser.this.firstHelpOption.helpMsg != null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
org.argparser.ArgParser.this.firstHelpOption.valueDesc == null
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == null
org.argparser.ArgParser.this.firstHelpOption.resHolder == null
org.argparser.ArgParser.this.firstHelpOption.rangeList == null
org.argparser.ArgParser.this.firstHelpOption.rangeTail == null
org.argparser.ArgParser.this.firstHelpOption.convertCode == 104
org.argparser.ArgParser.this.firstHelpOption.vval == true
org.argparser.ArgParser.this.firstHelpOption.isVisible == true
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$RangeAtom.RangeAtom(org.argparser.ArgParser, org.argparser.ArgParser$RangePnt):::ENTER
org.argparser.ArgParser.this != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.defaultHelpOption.nameList != null
org.argparser.ArgParser.this.defaultHelpOption.type == 0
org.argparser.ArgParser.this.defaultHelpOption.numValues == 1
org.argparser.ArgParser.this.defaultHelpOption.helpMsg != null
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == "displays help information"
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == null
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == null
org.argparser.ArgParser.this.defaultHelpOption.resHolder == null
org.argparser.ArgParser.this.defaultHelpOption.rangeList == null
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.convertCode == 104
org.argparser.ArgParser.this.defaultHelpOption.vval == true
org.argparser.ArgParser.this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.firstHelpOption.nameList != null
org.argparser.ArgParser.this.firstHelpOption.type == 0
org.argparser.ArgParser.this.firstHelpOption.numValues == 1
org.argparser.ArgParser.this.firstHelpOption.helpMsg != null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
org.argparser.ArgParser.this.firstHelpOption.valueDesc == null
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == null
org.argparser.ArgParser.this.firstHelpOption.resHolder == null
org.argparser.ArgParser.this.firstHelpOption.rangeList == null
org.argparser.ArgParser.this.firstHelpOption.rangeTail == null
org.argparser.ArgParser.this.firstHelpOption.convertCode == 104
org.argparser.ArgParser.this.firstHelpOption.vval == true
org.argparser.ArgParser.this.firstHelpOption.isVisible == true
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.errMsg.toString one of { "-bool=: malformed boolean '1'", "-farg: value '0' not in range {1,2,(9,18],[22,27],[33,38),(45,48)}" }
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
arg1 != null
arg1.lval >= 0
arg1.closed == true
size(org.argparser.ArgParser.this.matchList[]) >= 1
===========================================================================
org.argparser.ArgParser$RangeAtom.RangeAtom(org.argparser.ArgParser, org.argparser.ArgParser$RangePnt):::EXIT
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg1.dval == orig(arg1.dval)
arg1.lval == orig(arg1.lval)
arg1.sval == orig(arg1.sval)
arg1.sval.toString == orig(arg1.sval.toString)
arg1.bval == orig(arg1.bval)
arg1.closed == orig(arg1.closed)
this.low.lval >= 0
this.low.closed == true
this.high == null
this.next == null
arg1.lval >= 0
arg1.closed == true
===========================================================================
org.argparser.ArgParser$RangeAtom.RangeAtom(org.argparser.ArgParser, org.argparser.ArgParser$RangePnt, org.argparser.ArgParser$RangePnt, int):::ENTER
org.argparser.ArgParser.this != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.defaultHelpOption.nameList != null
org.argparser.ArgParser.this.defaultHelpOption.type == 0
org.argparser.ArgParser.this.defaultHelpOption.numValues == 1
org.argparser.ArgParser.this.defaultHelpOption.helpMsg != null
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == "displays help information"
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == null
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == null
org.argparser.ArgParser.this.defaultHelpOption.resHolder == null
org.argparser.ArgParser.this.defaultHelpOption.rangeList == null
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.convertCode == 104
org.argparser.ArgParser.this.defaultHelpOption.vval == true
org.argparser.ArgParser.this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.firstHelpOption.nameList != null
org.argparser.ArgParser.this.firstHelpOption.type == 0
org.argparser.ArgParser.this.firstHelpOption.numValues == 1
org.argparser.ArgParser.this.firstHelpOption.helpMsg != null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
org.argparser.ArgParser.this.firstHelpOption.valueDesc == null
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == null
org.argparser.ArgParser.this.firstHelpOption.resHolder == null
org.argparser.ArgParser.this.firstHelpOption.rangeList == null
org.argparser.ArgParser.this.firstHelpOption.rangeTail == null
org.argparser.ArgParser.this.firstHelpOption.convertCode == 104
org.argparser.ArgParser.this.firstHelpOption.vval == true
org.argparser.ArgParser.this.firstHelpOption.isVisible == true
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.errMsg.toString one of { "-carg: value '0' not in range {1,2,(a,z],['A','Z'],['\\001',\\007),(4,8)}", "-farg: value '0' not in range {1,2,(9,18],[22,27],[33,38),(45,48)}", "-foo4: value '102' not in range [-50,100]" }
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
arg1 != null
arg1.bval == true
arg2 != null
arg2.bval == true
size(org.argparser.ArgParser.this.matchList[]) >= 1
===========================================================================
org.argparser.ArgParser$RangeAtom.RangeAtom(org.argparser.ArgParser, org.argparser.ArgParser$RangePnt, org.argparser.ArgParser$RangePnt, int):::EXIT
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg1.dval == orig(arg1.dval)
arg1.lval == orig(arg1.lval)
arg1.sval == orig(arg1.sval)
arg1.sval.toString == orig(arg1.sval.toString)
arg1.bval == orig(arg1.bval)
arg1.closed == orig(arg1.closed)
arg2.dval == orig(arg2.dval)
arg2.lval == orig(arg2.lval)
arg2.sval == orig(arg2.sval)
arg2.sval.toString == orig(arg2.sval.toString)
arg2.bval == orig(arg2.bval)
arg2.closed == orig(arg2.closed)
this.low.bval == true
this.high != null
this.next == null
arg1.bval == true
arg2.bval == true
===========================================================================
org.argparser.ArgParser$RangeAtom.getHigh():::ENTER
===========================================================================
org.argparser.ArgParser$RangeAtom.getHigh():::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.sval.toString == orig(this.low.sval.toString)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.sval.toString == orig(this.high.sval.toString)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.sval.toString == orig(this.next.low.sval.toString)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.sval.toString == orig(this.next.high.sval.toString)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
return.dval >= -0.5
return.lval >= 0
return.bval == true
===========================================================================
org.argparser.ArgParser$RangeAtom.getLow():::ENTER
===========================================================================
org.argparser.ArgParser$RangeAtom.getLow():::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.sval.toString == orig(this.low.sval.toString)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.sval.toString == orig(this.high.sval.toString)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.sval.toString == orig(this.next.low.sval.toString)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.sval.toString == orig(this.next.high.sval.toString)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
return != null
===========================================================================
org.argparser.ArgParser$RangeAtom.getNext():::ENTER
===========================================================================
org.argparser.ArgParser$RangeAtom.getNext():::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.sval.toString == orig(this.low.sval.toString)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.sval.toString == orig(this.high.sval.toString)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.sval.toString == orig(this.next.low.sval.toString)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.sval.toString == orig(this.next.high.sval.toString)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
return.low != null
return.high.lval >= 0
return.high.bval == true
return.next.low != null
===========================================================================
org.argparser.ArgParser$RangeAtom.match(boolean):::ENTER
this.low.dval == 0.0
this.low.lval == 0
this.low.sval == null
this.low.closed == true
this.high == null
this.next.low has only one value
this.next.low.dval == 0.0
this.next.low.lval == 0
this.next.low.sval == null
this.next.low.bval == false
this.next.low.closed == true
this.next.high == null
this.next.next == null
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 20
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 20
===========================================================================
org.argparser.ArgParser$RangeAtom.match(boolean):::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.next == orig(this.next.next)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(return == false)  ==>  (orig(arg0) == false)
(return == false)  ==>  (this.low.bval == true)
this.low.dval == 0.0
this.low.lval == 0
this.low.sval == null
this.low.closed == true
this.high == null
this.next.low has only one value
this.next.low.dval == 0.0
this.next.low.lval == 0
this.next.low.sval == null
this.next.low.bval == false
this.next.low.closed == true
this.next.high == null
this.next.next == null
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 20
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 20
===========================================================================
org.argparser.ArgParser$RangeAtom.match(boolean):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$RangeAtom.match(boolean):::EXIT;condition="not(return == true)"
this.low.bval == true
return == false
orig(arg0) == false
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::ENTER
this.low.lval == 0
this.low.sval == null
this.low.bval == true
this.high.lval == 0
this.high.sval == null
this.next.low.dval >= 2.0
this.next.low.lval == 0
this.next.low.sval == null
this.next.low.bval == true
this.next.high.lval == 0
this.next.high.sval == null
this.next.next.high != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT787
this.high != null
this.next.low.dval one of { 22.0, 33.0, 45.0 }
this.next.high != null
this.next.high.dval one of { 27.0, 38.0, 48.0 }
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT787;condition="return == true"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT787;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT789
(return == false)  ==>  (this.low.dval one of { 1.0, 2.0 })
(return == false)  ==>  (this.next.high.sval == null)
(return == false)  ==>  (this.next.low.dval one of { 2.0, 9.0 })
(return == true)  ==>  (orig(arg0) == 1.0)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (this.low has only one value)
(return == true)  ==>  (this.low.dval == 1.0)
(return == true)  ==>  (this.next has only one value)
(return == true)  ==>  (this.next.high == null)
(return == true)  ==>  (this.next.low has only one value)
(return == true)  ==>  (this.next.low.closed == true)
(return == true)  ==>  (this.next.low.dval == 2.0)
(return == true)  ==>  (this.next.next has only one value)
(return == true)  ==>  (this.next.next.high has only one value)
(return == true)  ==>  (this.next.next.low has only one value)
(return == true)  ==>  (this.next.next.next has only one value)
this.low.dval one of { 1.0, 2.0 }
this.low.closed == true
this.high == null
this.next != null
this.next.low.dval one of { 2.0, 9.0 }
this.next.high.dval == 18.0
this.next.high.closed == true
this.next.next != null
this.next.next.next != null
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT789;condition="return == true"
this.low has only one value
this.low.dval == 1.0
this.next has only one value
this.next.low has only one value
this.next.low.dval == 2.0
this.next.low.closed == true
this.next.high == null
this.next.next has only one value
this.next.next.low has only one value
this.next.next.high has only one value
this.next.next.next has only one value
orig(this) has only one value
orig(arg0) == 1.0
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT789;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(return == true)  ==>  (this.next.high.dval one of { 27.0, 38.0, 48.0 })
(this.high != null)  <==>  (this.next.high.dval one of { 27.0, 38.0, 48.0 })
(this.high != null)  <==>  (this.next.low.dval one of { 22.0, 33.0, 45.0 })
(this.high != null)  ==>  (this.high.sval == null)
(this.high != null)  ==>  (this.low.dval >= -0.001)
(this.high != null)  ==>  (this.next.high != null)
(this.high == null)  <==>  (this.next.high.dval == 18.0)
(this.high == null)  <==>  (this.next.low.dval one of { 2.0, 9.0 })
(this.high == null)  ==>  (org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.firstHelpOption.nameList has only one value)
(this.high == null)  ==>  (this.low.closed == true)
(this.high == null)  ==>  (this.low.dval one of { 1.0, 2.0 })
(this.high == null)  ==>  (this.next != null)
(this.high == null)  ==>  (this.next.high.closed == true)
(this.high == null)  ==>  (this.next.next != null)
(this.high == null)  ==>  (this.next.next.next != null)
this.low.lval == 0
this.low.sval == null
this.low.bval == true
this.high.lval == 0
this.high.sval == null
this.next.low.dval >= 2.0
this.next.low.lval == 0
this.next.low.sval == null
this.next.low.bval == true
this.next.high.lval == 0
this.next.high.sval == null
this.next.next.high != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT;condition="return == true"
this.next.high.dval one of { 27.0, 38.0, 48.0 }
return == true
===========================================================================
org.argparser.ArgParser$RangeAtom.match(double):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::ENTER
this.low.dval == 0.0
this.low.lval == 0
this.low.sval != null
this.low.bval == true
this.high.dval == 0.0
this.high.lval == 0
this.high.sval != null
this.next.low.dval == 0.0
this.next.low.lval == 0
this.next.low.sval != null
this.next.low.bval == true
this.next.high.dval == 0.0
this.next.high.lval == 0
this.next.high.sval != null
this.next.next.high != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 4
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
size(org.argparser.ArgParser.this.matchList[]) == 4
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT817
this.high != null
this.next.low.sval.toString one of { "BB", "C3", "d5" }
this.next.high != null
this.next.high.sval.toString one of { "BX", "C8", "d8" }
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT817;condition="return == true"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT817;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT819
(return == false)  ==>  (this.low.sval.toString one of { "1", "2" })
(return == false)  ==>  (this.next.high.sval != null)
(return == false)  ==>  (this.next.high.sval has only one value)
(return == false)  ==>  (this.next.high.sval.toString == "AZ")
(return == false)  ==>  (this.next.low.sval.toString one of { "2", "AA" })
(return == true)  ==>  (arg0.toString == "1")
(return == true)  ==>  (orig(arg0) has only one value)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (this.low has only one value)
(return == true)  ==>  (this.low.sval has only one value)
(return == true)  ==>  (this.low.sval.toString == "1")
(return == true)  ==>  (this.next has only one value)
(return == true)  ==>  (this.next.high == null)
(return == true)  ==>  (this.next.low has only one value)
(return == true)  ==>  (this.next.low.closed == true)
(return == true)  ==>  (this.next.low.sval has only one value)
(return == true)  ==>  (this.next.low.sval.toString == "2")
(return == true)  ==>  (this.next.next has only one value)
(return == true)  ==>  (this.next.next.high has only one value)
(return == true)  ==>  (this.next.next.low has only one value)
(return == true)  ==>  (this.next.next.next has only one value)
this.low.sval.toString one of { "1", "2" }
this.low.closed == true
this.high == null
this.next != null
this.next.low.sval.toString one of { "2", "AA" }
this.next.high.sval has only one value
this.next.high.sval.toString == "AZ"
this.next.high.closed == true
this.next.next != null
this.next.next.next != null
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT819;condition="return == true"
this.low has only one value
this.low.sval has only one value
this.low.sval.toString == "1"
this.next has only one value
this.next.low has only one value
this.next.low.sval has only one value
this.next.low.sval.toString == "2"
this.next.low.closed == true
this.next.high == null
this.next.next has only one value
this.next.next.low has only one value
this.next.next.high has only one value
this.next.next.next has only one value
arg0.toString == "1"
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT819;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.sval.toString == orig(this.low.sval.toString)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.sval.toString == orig(this.high.sval.toString)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.sval.toString == orig(this.next.low.sval.toString)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.sval.toString == orig(this.next.high.sval.toString)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg0.toString == orig(arg0.toString)
(return == true)  ==>  (this.next.high.sval.toString one of { "BX", "C8", "d8" })
(this.high != null)  <==>  (this.next.high.sval.toString one of { "BX", "C8", "d8" })
(this.high != null)  <==>  (this.next.low.sval.toString one of { "BB", "C3", "d5" })
(this.high != null)  ==>  (this.high.sval != null)
(this.high != null)  ==>  (this.next.high != null)
(this.high == null)  <==>  (this.next.high.sval.toString == "AZ")
(this.high == null)  <==>  (this.next.low.sval.toString one of { "2", "AA" })
(this.high == null)  ==>  (org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value)
(this.high == null)  ==>  (org.argparser.ArgParser.this.firstHelpOption.nameList has only one value)
(this.high == null)  ==>  (this.low.closed == true)
(this.high == null)  ==>  (this.low.sval.toString one of { "1", "2" })
(this.high == null)  ==>  (this.next != null)
(this.high == null)  ==>  (this.next.high.closed == true)
(this.high == null)  ==>  (this.next.high.sval has only one value)
(this.high == null)  ==>  (this.next.next != null)
(this.high == null)  ==>  (this.next.next.next != null)
this.low.dval == 0.0
this.low.lval == 0
this.low.sval != null
this.low.bval == true
this.high.dval == 0.0
this.high.lval == 0
this.high.sval != null
this.next.low.dval == 0.0
this.next.low.lval == 0
this.next.low.sval != null
this.next.low.bval == true
this.next.high.dval == 0.0
this.next.high.lval == 0
this.next.high.sval != null
this.next.next.high != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 4
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 4
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT;condition="return == true"
this.next.high.sval.toString one of { "BX", "C8", "d8" }
return == true
===========================================================================
org.argparser.ArgParser$RangeAtom.match(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::ENTER
this.low.dval == 0.0
this.low.sval == null
this.low.bval == true
this.high.dval == 0.0
this.high.sval == null
this.next.low.dval == 0.0
this.next.low.lval >= 1
this.next.low.sval == null
this.next.low.bval == true
this.next.high.dval == 0.0
this.next.high.sval == null
this.next.next.high != null
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 2
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT802
this.high != null
this.next.high != null
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT802;condition="return == true"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT802;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT804
(return == false)  ==>  (this.next.high.lval one of { 18, 122 })
(return == false)  ==>  (this.next.high.sval == null)
(return == true)  ==>  (orig(arg0) one of { 1, 49 })
(return == true)  ==>  (this.low.lval one of { 1, 49 })
(return == true)  ==>  (this.next.high == null)
(return == true)  ==>  (this.next.low.closed == true)
(return == true)  ==>  (this.next.low.lval one of { 2, 50 })
this.low.lval >= 1
this.low.closed == true
this.high == null
this.next != null
this.next.low.lval >= 2
this.next.high.lval one of { 18, 122 }
this.next.high.closed == true
this.next.next != null
this.next.next.next != null
orig(arg0) >= 1
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT804;condition="return == true"
this.low.lval one of { 1, 49 }
this.next.low.lval one of { 2, 50 }
this.next.low.closed == true
this.next.high == null
orig(arg0) one of { 1, 49 }
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT804;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.next == orig(this.next)
this.next.low == orig(this.next.low)
this.next.low.dval == orig(this.next.low.dval)
this.next.low.lval == orig(this.next.low.lval)
this.next.low.sval == orig(this.next.low.sval)
this.next.low.bval == orig(this.next.low.bval)
this.next.low.closed == orig(this.next.low.closed)
this.next.high == orig(this.next.high)
this.next.high.dval == orig(this.next.high.dval)
this.next.high.lval == orig(this.next.high.lval)
this.next.high.sval == orig(this.next.high.sval)
this.next.high.bval == orig(this.next.high.bval)
this.next.high.closed == orig(this.next.high.closed)
this.next.next == orig(this.next.next)
this.next.next.low == orig(this.next.next.low)
this.next.next.high == orig(this.next.next.high)
this.next.next.next == orig(this.next.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(this.high != null)  ==>  (this.high.sval == null)
(this.high != null)  ==>  (this.next.high != null)
(this.high != null)  ==>  (this.next.low.lval >= 1)
(this.high == null)  ==>  (orig(arg0) >= 1)
(this.high == null)  ==>  (this.low.closed == true)
(this.high == null)  ==>  (this.low.lval >= 1)
(this.high == null)  ==>  (this.next != null)
(this.high == null)  ==>  (this.next.high.closed == true)
(this.high == null)  ==>  (this.next.high.lval one of { 18, 122 })
(this.high == null)  ==>  (this.next.low.lval >= 2)
(this.high == null)  ==>  (this.next.next != null)
(this.high == null)  ==>  (this.next.next.next != null)
this.low.dval == 0.0
this.low.sval == null
this.low.bval == true
this.high.dval == 0.0
this.high.sval == null
this.next.low.dval == 0.0
this.next.low.lval >= 1
this.next.low.sval == null
this.next.low.bval == true
this.next.high.dval == 0.0
this.next.high.sval == null
this.next.next.high != null
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) == 2
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$RangeAtom.match(long):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.argparser.ArgParser$RangePnt:::OBJECT
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(boolean, boolean):::ENTER
arg1 == true
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(boolean, boolean):::EXIT
this.bval == orig(arg0)
this.closed == orig(arg1)
this.dval == 0.0
this.lval == 0
this.sval == null
this.closed == true
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(double, boolean):::ENTER
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(double, boolean):::EXIT
this.dval == orig(arg0)
this.closed == orig(arg1)
this.lval == 0
this.sval == null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(java.lang.String, boolean):::ENTER
arg0 != null
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(java.lang.String, boolean):::EXIT
this.sval == orig(arg0)
this.closed == orig(arg1)
arg0.toString == orig(arg0.toString)
this.dval == 0.0
this.lval == 0
this.sval != null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(long, boolean):::ENTER
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(long, boolean):::EXIT
this.lval == orig(arg0)
this.closed == orig(arg1)
this.dval == 0.0
this.sval == null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(org.argparser.StringScanner, int):::ENTER
arg0.len == size(arg0.buf[])-1
arg0 != null
arg0.buf != null
arg0.buf[] elements >= 0
arg0.idx >= 1
arg0.stringDelimiters has only one value
arg0.stringDelimiters != null
arg0.stringDelimiters.toString == ")],}"
arg1 >= 1
arg0.buf[arg0.len] == 0
arg0.buf[arg0.len-1] == 125
arg0.buf[] elements >= arg0.buf[arg0.len]
arg0.buf[] elements <= arg0.buf[arg0.len-1]
arg0.idx < arg0.len
arg0.idx < arg0.buf[arg0.idx]
arg0.idx < arg0.buf[arg0.idx-1]
arg0.idx > arg0.buf[arg0.len]
arg0.idx < arg0.buf[arg0.len-1]
arg0.len != arg0.buf[arg0.idx]
arg0.len > arg0.buf[arg0.len]
size(arg0.buf[]) != arg0.buf[arg0.idx]
size(arg0.buf[]) != arg0.buf[arg0.idx-1]
size(arg0.buf[]) < arg0.buf[arg0.len-1]
arg0.buf[arg0.idx] != arg0.buf[arg0.idx-1]
arg0.buf[arg0.idx] > arg0.buf[arg0.len]
arg0.buf[arg0.idx] < arg0.buf[arg0.len-1]
arg0.buf[arg0.idx-1] > arg0.buf[arg0.len]
arg0.buf[arg0.idx-1] < arg0.buf[arg0.len-1]
===========================================================================
org.argparser.ArgParser$RangePnt.RangePnt(org.argparser.StringScanner, int):::EXIT
arg0.buf == orig(arg0.buf)
arg0.buf[] == orig(arg0.buf[])
arg0.len == orig(arg0.len)
arg0.len == size(arg0.buf[])-1
arg0.len == orig(size(arg0.buf[]))-1
arg0.stringDelimiters == orig(arg0.stringDelimiters)
arg0.stringDelimiters.toString == orig(arg0.stringDelimiters.toString)
this.closed == true
arg0.buf != null
arg0.buf[] elements >= 0
arg0.idx >= 2
arg0.stringDelimiters has only one value
arg0.stringDelimiters != null
arg0.stringDelimiters.toString == ")],}"
arg0.buf[arg0.len] == 0
arg0.buf[arg0.len-1] == 125
this.lval != size(arg0.buf[])
this.lval != arg0.buf[arg0.idx]
this.lval < arg0.buf[arg0.len-1]
this.lval != arg0.buf[orig(arg0.idx)-1]
arg0.buf[] elements >= arg0.buf[arg0.len]
arg0.buf[] elements <= arg0.buf[arg0.len-1]
arg0.idx < arg0.len
arg0.idx > orig(arg0.idx)
arg0.idx < arg0.buf[arg0.idx]
arg0.idx < arg0.buf[arg0.idx-1]
arg0.idx > arg0.buf[arg0.len]
arg0.idx < arg0.buf[arg0.len-1]
arg0.idx < arg0.buf[orig(arg0.idx)]
arg0.idx < arg0.buf[orig(arg0.idx)-1]
arg0.len > orig(arg0.idx)
arg0.len <= arg0.buf[arg0.idx]
arg0.len != arg0.buf[arg0.idx-1]
arg0.len > arg0.buf[arg0.len]
arg0.len != arg0.buf[orig(arg0.idx)]
orig(arg0.idx) < arg0.buf[arg0.idx]
orig(arg0.idx) < arg0.buf[arg0.idx-1]
orig(arg0.idx) > arg0.buf[arg0.len]
orig(arg0.idx) < arg0.buf[arg0.len-1]
orig(arg0.idx) < arg0.buf[orig(arg0.idx)]
orig(arg0.idx) < arg0.buf[orig(arg0.idx)-1]
size(arg0.buf[]) != arg0.buf[arg0.idx-1]
size(arg0.buf[]) < arg0.buf[arg0.len-1]
size(arg0.buf[]) != arg0.buf[orig(arg0.idx)]
size(arg0.buf[]) != arg0.buf[orig(arg0.idx)-1]
arg0.buf[arg0.idx] != arg0.buf[arg0.idx-1]
arg0.buf[arg0.idx] > arg0.buf[arg0.len]
arg0.buf[arg0.idx] <= arg0.buf[arg0.len-1]
arg0.buf[arg0.idx] != arg0.buf[orig(arg0.idx)]
arg0.buf[arg0.idx-1] > arg0.buf[arg0.len]
arg0.buf[arg0.idx-1] < arg0.buf[arg0.len-1]
arg0.buf[arg0.idx-1] != arg0.buf[orig(arg0.idx)-1]
arg0.buf[arg0.len] < arg0.buf[orig(arg0.idx)]
arg0.buf[arg0.len] < arg0.buf[orig(arg0.idx)-1]
arg0.buf[arg0.len-1] > arg0.buf[orig(arg0.idx)]
arg0.buf[arg0.len-1] > arg0.buf[orig(arg0.idx)-1]
arg0.buf[orig(arg0.idx)] != arg0.buf[orig(arg0.idx)-1]
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(boolean):::ENTER
this.dval == 0.0
this.lval == 0
this.sval == null
this.closed == true
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(boolean):::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.bval == orig(this.bval)
this.closed == orig(this.closed)
this.dval == 0.0
this.lval == 0
this.sval == null
this.closed == true
return one of { 0, 1 }
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(double):::ENTER
this.lval == 0
this.sval == null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(double):::EXIT636
return == -1
this.dval <= orig(arg0)
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(double):::EXIT637
return one of { 0, 1 }
this.dval >= orig(arg0)
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(double):::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.bval == orig(this.bval)
this.closed == orig(this.closed)
(return == -1)  ==>  (this.dval <= orig(arg0))
(return one of { 0, 1 })  ==>  (this.dval >= orig(arg0))
this.lval == 0
this.sval == null
this.bval == true
return one of { -1, 0, 1 }
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(java.lang.String):::ENTER
this.dval == 0.0
this.lval == 0
this.sval != null
this.bval == true
arg0 != null
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(java.lang.String):::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.bval == orig(this.bval)
this.closed == orig(this.closed)
arg0.toString == orig(arg0.toString)
this.dval == 0.0
this.lval == 0
this.sval != null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(long):::ENTER
this.dval == 0.0
this.sval == null
this.bval == true
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(long):::EXIT647
return == -1
this.lval < orig(arg0)
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(long):::EXIT649
this.lval == orig(arg0)
return == 0
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(long):::EXIT651
return == 1
this.lval > orig(arg0)
===========================================================================
org.argparser.ArgParser$RangePnt.compareTo(long):::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.bval == orig(this.bval)
this.closed == orig(this.closed)
this.dval == 0.0
this.sval == null
this.bval == true
return one of { -1, 0, 1 }
===========================================================================
org.argparser.ArgParser$RangePnt.setClosed(boolean):::ENTER
this.bval == true
this.closed == true
arg0 == false
===========================================================================
org.argparser.ArgParser$RangePnt.setClosed(boolean):::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.bval == orig(this.bval)
this.closed == orig(arg0)
this.bval == true
this.closed == false
===========================================================================
org.argparser.ArgParser$RangePnt.toString():::ENTER
===========================================================================
org.argparser.ArgParser$RangePnt.toString():::EXIT
this.dval == orig(this.dval)
this.lval == orig(this.lval)
this.sval == orig(this.sval)
this.sval.toString == orig(this.sval.toString)
this.bval == orig(this.bval)
this.closed == orig(this.closed)
return != null
===========================================================================
org.argparser.ArgParser$Record:::CLASS
===========================================================================
org.argparser.ArgParser$Record:::OBJECT
this.nameList.name != null
this.nameList.next.name != null
this.type >= 0
this.numValues >= 0
this.valueDesc == null
this.rangeList.low != null
this.rangeList.low.dval >= -0.001
this.rangeList.high.dval one of { 0.0, 7.0, 1000.0 }
this.rangeList.high.lval >= 0
this.rangeList.high.sval.toString one of { "john", "zzzz" }
this.rangeList.high.bval == true
this.rangeList.next.low != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
this.rangeTail.low != null
this.rangeTail.high.lval >= 0
this.rangeTail.high.bval == true
this.rangeTail.next == null
this.convertCode >= 0
this.isVisible == true
org.argparser.ArgParser.this.defaultHelpOption.nameList != null
org.argparser.ArgParser.this.defaultHelpOption.type == 0
org.argparser.ArgParser.this.defaultHelpOption.numValues == 1
org.argparser.ArgParser.this.defaultHelpOption.helpMsg != null
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == "displays help information"
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == null
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == null
org.argparser.ArgParser.this.defaultHelpOption.resHolder == null
org.argparser.ArgParser.this.defaultHelpOption.rangeList == null
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.convertCode == 104
org.argparser.ArgParser.this.defaultHelpOption.vval == true
org.argparser.ArgParser.this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.firstHelpOption.nameList != null
org.argparser.ArgParser.this.firstHelpOption.type == 0
org.argparser.ArgParser.this.firstHelpOption.numValues == 1
org.argparser.ArgParser.this.firstHelpOption.helpMsg != null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
org.argparser.ArgParser.this.firstHelpOption.valueDesc == null
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == null
org.argparser.ArgParser.this.firstHelpOption.resHolder == null
org.argparser.ArgParser.this.firstHelpOption.rangeList == null
org.argparser.ArgParser.this.firstHelpOption.rangeTail == null
org.argparser.ArgParser.this.firstHelpOption.convertCode == 104
org.argparser.ArgParser.this.firstHelpOption.vval == true
org.argparser.ArgParser.this.firstHelpOption.isVisible == true
size(org.argparser.ArgParser.this.matchList[]) >= 1
===========================================================================
org.argparser.ArgParser$Record.Record(org.argparser.ArgParser):::ENTER
org.argparser.ArgParser.this != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString one of { "fubar", "test" }
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption.nameList != null
org.argparser.ArgParser.this.defaultHelpOption.type == 0
org.argparser.ArgParser.this.defaultHelpOption.numValues == 1
org.argparser.ArgParser.this.defaultHelpOption.helpMsg != null
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == "displays help information"
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == null
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == null
org.argparser.ArgParser.this.defaultHelpOption.resHolder == null
org.argparser.ArgParser.this.defaultHelpOption.rangeList == null
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.convertCode == 104
org.argparser.ArgParser.this.defaultHelpOption.vval == true
org.argparser.ArgParser.this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.firstHelpOption.nameList != null
org.argparser.ArgParser.this.firstHelpOption.type == 0
org.argparser.ArgParser.this.firstHelpOption.numValues == 1
org.argparser.ArgParser.this.firstHelpOption.helpMsg != null
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
org.argparser.ArgParser.this.firstHelpOption.valueDesc == null
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == null
org.argparser.ArgParser.this.firstHelpOption.resHolder == null
org.argparser.ArgParser.this.firstHelpOption.rangeList == null
org.argparser.ArgParser.this.firstHelpOption.rangeTail == null
org.argparser.ArgParser.this.firstHelpOption.convertCode == 104
org.argparser.ArgParser.this.firstHelpOption.vval == true
org.argparser.ArgParser.this.firstHelpOption.isVisible == true
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
===========================================================================
org.argparser.ArgParser$Record.Record(org.argparser.ArgParser):::EXIT
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList == null
this.type == 0
this.numValues == 0
this.helpMsg == null
this.rangeDesc == null
this.resHolder == null
this.rangeList == null
this.rangeTail == null
this.convertCode == 0
this.vval == true
===========================================================================
org.argparser.ArgParser$Record.addRangeAtom(org.argparser.ArgParser$RangeAtom):::ENTER
this.nameList != null
this.nameList.next.next == null
this.type >= 1
this.numValues == 0
this.helpMsg == null
this.rangeDesc == null
this.resHolder != null
this.rangeList.low.dval one of { 0.0, 0.9, 1.0 }
this.rangeList.low.lval >= 0
this.rangeList.low.sval.toString one of { "1", "foobar", "jerry" }
this.rangeList.high.dval one of { 0.0, 7.0 }
this.rangeList.high.lval == 0
this.rangeList.high.sval.toString == "john"
org.argparser.ArgParser.this.errMsg.toString one of { "-bool=: malformed boolean '1'", "-farg: value '0' not in range {1,2,(9,18],[22,27],[33,38),(45,48)}" }
this.vval == true
arg0 != null
arg0.low != null
arg0.high.lval >= 0
arg0.high.bval == true
arg0.next == null
===========================================================================
org.argparser.ArgParser$Record.addRangeAtom(org.argparser.ArgParser$RangeAtom):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[].getClass().getName() == orig(org.argparser.ArgParser.this.matchList[].getClass().getName())
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg0.low == orig(arg0.low)
arg0.low.dval == orig(arg0.low.dval)
arg0.low.lval == orig(arg0.low.lval)
arg0.low.sval == orig(arg0.low.sval)
arg0.low.sval.toString == orig(arg0.low.sval.toString)
arg0.low.bval == orig(arg0.low.bval)
arg0.low.closed == orig(arg0.low.closed)
arg0.high == orig(arg0.high)
arg0.high.dval == orig(arg0.high.dval)
arg0.high.lval == orig(arg0.high.lval)
arg0.high.sval == orig(arg0.high.sval)
arg0.high.sval.toString == orig(arg0.high.sval.toString)
arg0.high.bval == orig(arg0.high.bval)
arg0.high.closed == orig(arg0.high.closed)
arg0.next == orig(arg0.next)
this.nameList != null
this.nameList.next.next == null
this.type >= 1
this.numValues == 0
this.helpMsg == null
this.rangeDesc == null
this.resHolder != null
this.rangeList != null
this.rangeTail != null
this.vval == true
arg0.low != null
arg0.high.lval >= 0
arg0.high.bval == true
arg0.next == null
orig(this.rangeList.high.lval) == this.rangeList.high.lval**2
this.rangeList.high.lval == orig(this.rangeList.high.lval)**2
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[]) (elementwise)
org.argparser.ArgParser.this.matchList[].getClass().getName() == orig(org.argparser.ArgParser.this.matchList[].getClass().getName()) (elementwise)
this.rangeTail.low.sval.toString != orig(this.rangeTail.low.sval.toString)
===========================================================================
org.argparser.ArgParser$Record.firstNameDesc():::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.firstNameDesc():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
return != null
return.name != null
return.next.name != null
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.firstRangeAtom():::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.firstRangeAtom():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
return.low != null
return.high.dval one of { 0.0, 7.0, 1000.0 }
return.high.lval >= 0
return.high.sval.toString one of { "john", "zzzz" }
return.high.bval == true
return.next.low != null
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getConvertCode():::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getConvertCode():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getHelpMsg():::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getHelpMsg():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
return != null
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getNumValues():::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.getNumValues():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
return one of { 1, 2, 3 }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.numRangeAtoms():::ENTER
this.nameList != null
this.nameList.next.next == null
this.type >= 1
this.numValues == 0
this.helpMsg == null
this.rangeDesc == null
this.resHolder != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
this.vval == true
===========================================================================
org.argparser.ArgParser$Record.numRangeAtoms():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.nameList.next.next == null
this.type >= 1
this.numValues == 0
this.helpMsg == null
this.rangeDesc == null
this.resHolder != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
this.vval == true
return >= 0
===========================================================================
org.argparser.ArgParser$Record.scanValue(java.lang.Object, java.lang.String, java.lang.String, int):::ENTER
this.nameList != null
this.nameList.next == null
this.type >= 1
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 0.0, 1.0 }
this.rangeList.low.sval.toString one of { "1", "john" }
this.rangeList.low.bval == true
this.rangeList.high.dval one of { 0.0, 1000.0 }
this.rangeList.high.lval one of { 0, 100, 109 }
this.rangeList.high.sval.toString == "zzzz"
this.rangeList.high.closed == true
this.rangeList.next.high == null
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval one of { -0.001, 0.0, 45.0 }
this.rangeTail.low.sval.toString one of { "d5", "john" }
this.rangeTail.high.dval one of { 0.0, 48.0, 1000.0 }
this.rangeTail.high.sval.toString one of { "d8", "zzzz" }
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg1 != null
arg2 != null
arg3 one of { 0, 1, 2 }
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.scanValue(java.lang.Object, java.lang.String, java.lang.String, int):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
this.nameList != null
this.nameList.next == null
this.type >= 1
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 0.0, 1.0 }
this.rangeList.low.sval.toString one of { "1", "john" }
this.rangeList.low.bval == true
this.rangeList.high.dval one of { 0.0, 1000.0 }
this.rangeList.high.lval one of { 0, 100, 109 }
this.rangeList.high.sval.toString == "zzzz"
this.rangeList.high.closed == true
this.rangeList.next.high == null
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval one of { -0.001, 0.0, 45.0 }
this.rangeTail.low.sval.toString one of { "d5", "john" }
this.rangeTail.high.dval one of { 0.0, 48.0, 1000.0 }
this.rangeTail.high.sval.toString one of { "d8", "zzzz" }
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.setVisible(boolean):::ENTER
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
arg0 == true
===========================================================================
org.argparser.ArgParser$Record.setVisible(boolean):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.nameList.next.name == orig(this.nameList.next.name)
this.nameList.next.name.toString == orig(this.nameList.next.name.toString)
this.nameList.next.oneWord == orig(this.nameList.next.oneWord)
this.nameList.next.next == orig(this.nameList.next.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.rangeTail.high.dval >= 0.0
this.rangeTail.high.sval.toString one of { "02", "d8", "zzzz" }
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::ENTER
this.nameList != null
this.nameList.next == null
this.type >= 1
this.numValues one of { 1, 3 }
this.helpMsg has only one value
this.helpMsg != null
this.helpMsg.toString == ""
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 0.0 }
this.rangeList.low.lval one of { -50, 0, 98 }
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.high.dval one of { 0.0, 1000.0 }
this.rangeList.high.lval one of { 0, 100, 109 }
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next == null
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
this.rangeTail.low.dval one of { -0.001, 0.0 }
this.rangeTail.low.lval one of { -50, 0, 98 }
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.high.dval one of { 0.0, 1000.0 }
this.rangeTail.high.lval one of { 0, 100, 109 }
this.rangeTail.high.sval == null
this.rangeTail.high.closed == true
this.vval == true
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1068
this.nameList.name.toString one of { "-foo2=", "-foo3", "-foo=" }
this.type == 3
this.rangeDesc.toString == "[-50,100]"
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == -50
this.rangeList.low.closed == true
this.rangeList.high has only one value
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 100
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg.toString one of { "-foo=: malformed integer 'foo'", "-foo=: value '0xbeef' not in range [-50,100]" }
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == -50
this.rangeTail.low.closed == true
this.rangeTail.high has only one value
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 100
this.convertCode == 105
return has only one value
return.toString == "integer"
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1071
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-oct="
this.nameList.oneWord == true
this.type == 3
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc != null
this.rangeDesc.toString == "[-062,0144]"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList != null
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == -50
this.rangeList.low.closed == true
this.rangeList.high has only one value
this.rangeList.high != null
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 100
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 9
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail has only one value
this.rangeTail != null
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == -50
this.rangeTail.low.closed == true
this.rangeTail.high has only one value
this.rangeTail.high != null
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 100
this.convertCode == 111
return has only one value
return.toString == "octal integer"
orig(this) has only one value
size(org.argparser.ArgParser.this.matchList[]) == 9
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1074
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-dec="
this.nameList.oneWord == true
this.type == 3
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc.toString == "[-0x32,0x64]"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == -50
this.rangeList.low.closed == true
this.rangeList.high has only one value
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 100
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 11
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail has only one value
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == -50
this.rangeTail.low.closed == true
this.rangeTail.high has only one value
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 100
this.convertCode == 100
return has only one value
return.toString == "decimal integer"
orig(this) has only one value
size(org.argparser.ArgParser.this.matchList[]) == 11
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1077
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-hex="
this.nameList.oneWord == true
this.type == 3
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc.toString == "[-0x32,0x64]"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == -50
this.rangeList.low.closed == true
this.rangeList.high has only one value
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 100
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 13
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg.toString one of { "-hex=: malformed hex integer '0xbeef'", "-hex=: value '-51d' not in range [-0x32,0x64]", "-hex=: value '06677' not in range [-0x32,0x64]" }
this.rangeTail has only one value
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == -50
this.rangeTail.low.closed == true
this.rangeTail.high has only one value
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 100
this.convertCode == 120
return has only one value
return.toString == "hex integer"
orig(this) has only one value
size(org.argparser.ArgParser.this.matchList[]) == 13
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1080
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-char="
this.nameList.oneWord == true
this.type == 2
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc.toString == "['b','m']"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 98
this.rangeList.low.closed == true
this.rangeList.high has only one value
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 109
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 15
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail has only one value
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 98
this.rangeTail.low.closed == true
this.rangeTail.high has only one value
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 109
this.convertCode == 99
return has only one value
return.toString == "char"
orig(this) has only one value
size(org.argparser.ArgParser.this.matchList[]) == 15
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1083
this.nameList.name.toString one of { "-boo3", "-bool=" }
this.type == 1
this.rangeDesc.toString == "true"
this.rangeList.low has only one value
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 0
this.rangeList.low.closed == true
this.rangeList.high == null
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 19
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail.low has only one value
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 0
this.rangeTail.low.closed == true
this.rangeTail.high == null
this.convertCode == 98
return has only one value
return.toString == "boolean"
size(org.argparser.ArgParser.this.matchList[]) == 19
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT1086
this.nameList.name.toString one of { "-f3", "-float=" }
this.type == 6
this.rangeDesc.toString == "(-0.001,1000.0]"
this.rangeList.low has only one value
this.rangeList.low.dval == -0.001
this.rangeList.low.lval == 0
this.rangeList.low.closed == false
this.rangeList.high has only one value
this.rangeList.high.dval == 1000.0
this.rangeList.high.lval == 0
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 32
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg.toString one of { "-float=: malformed float '124.5x'", "-float=: value '1000.001' not in range (-0.001,1000.0]" }
this.rangeTail.low has only one value
this.rangeTail.low.dval == -0.001
this.rangeTail.low.lval == 0
this.rangeTail.low.closed == false
this.rangeTail.high has only one value
this.rangeTail.high.dval == 1000.0
this.rangeTail.high.lval == 0
this.convertCode == 102
return has only one value
return.toString == "float"
size(org.argparser.ArgParser.this.matchList[]) == 32
===========================================================================
org.argparser.ArgParser$Record.valTypeName():::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
this.nameList != null
this.nameList.next == null
this.type >= 1
this.numValues one of { 1, 3 }
this.helpMsg has only one value
this.helpMsg != null
this.helpMsg.toString == ""
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 0.0 }
this.rangeList.low.lval one of { -50, 0, 98 }
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.high.dval one of { 0.0, 1000.0 }
this.rangeList.high.lval one of { 0, 100, 109 }
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next == null
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
this.rangeTail.low.dval one of { -0.001, 0.0 }
this.rangeTail.low.lval one of { -50, 0, 98 }
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.high.dval one of { 0.0, 1000.0 }
this.rangeTail.high.lval one of { 0, 100, 109 }
this.rangeTail.high.sval == null
this.rangeTail.high.closed == true
this.vval == true
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
return != null
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::ENTER
this.nameList != null
this.nameList.next == null
this.type == 1
this.numValues one of { 1, 3 }
this.helpMsg has only one value
this.helpMsg != null
this.helpMsg.toString == ""
this.rangeDesc.toString one of { "true", "{true,false}" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.low.closed == true
this.rangeList.high == null
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next == null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 0
this.rangeTail.low.sval == null
this.rangeTail.low.closed == true
this.rangeTail.high == null
this.convertCode == 98
this.vval == true
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) one of { 19, 20 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1054
this.rangeDesc == null
this.rangeList == null
this.rangeTail == null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1054;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1056
this.nameList.name.toString one of { "-boo2=", "-bool=" }
this.nameList.oneWord == true
this.numValues == 1
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1056;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1058
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-bool="
this.nameList.oneWord == true
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc.toString == "true"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList.low has only one value
this.rangeList.next == null
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 19
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail has only one value
this.rangeTail.low has only one value
this.rangeTail.low.bval == true
return == false
orig(this) has only one value
orig(arg0) == false
size(org.argparser.ArgParser.this.matchList[]) == 19
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT1058;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(return == false)  ==>  (org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 19)
(return == false)  ==>  (org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record])
(return == false)  ==>  (orig(arg0) == false)
(return == false)  ==>  (orig(this) has only one value)
(return == false)  ==>  (size(org.argparser.ArgParser.this.matchList[]) == 19)
(return == false)  ==>  (this.nameList has only one value)
(return == false)  ==>  (this.nameList.name has only one value)
(return == false)  ==>  (this.nameList.name.toString == "-bool=")
(return == false)  ==>  (this.nameList.oneWord == true)
(return == false)  ==>  (this.numValues == 1)
(return == false)  ==>  (this.rangeDesc has only one value)
(return == false)  ==>  (this.rangeDesc.toString == "true")
(return == false)  ==>  (this.rangeList has only one value)
(return == false)  ==>  (this.rangeList.low has only one value)
(return == false)  ==>  (this.rangeList.next == null)
(return == false)  ==>  (this.rangeTail has only one value)
(return == false)  ==>  (this.rangeTail.low has only one value)
(return == false)  ==>  (this.rangeTail.low.bval == true)
(return == false)  ==>  (this.resHolder has only one value)
(return == false)  ==>  (this.resHolder.getClass().getName() == org.argparser.ArgHolder.class)
(return == true)  ==>  (org.argparser.ArgParser.this has only one value)
(return == true)  ==>  (org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] })
(return == true)  ==>  (size(org.argparser.ArgParser.this.matchList[]) one of { 19, 20 })
(return == true)  ==>  (this.numValues one of { 1, 3 })
(return == true)  ==>  (this.rangeDesc.toString one of { "true", "{true,false}" })
(return == true)  ==>  (this.rangeList.next.high == null)
(return == true)  ==>  (this.rangeList.next.low has only one value)
(return == true)  ==>  (this.rangeList.next.next == null)
this.nameList != null
this.nameList.next == null
this.type == 1
this.numValues one of { 1, 3 }
this.helpMsg has only one value
this.helpMsg != null
this.helpMsg.toString == ""
this.rangeDesc.toString one of { "true", "{true,false}" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.low.closed == true
this.rangeList.high == null
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next == null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 0
this.rangeTail.low.sval == null
this.rangeTail.low.closed == true
this.rangeTail.high == null
this.convertCode == 98
this.vval == true
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) one of { 19, 20 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(boolean):::EXIT;condition="not(return == true)"
this.nameList has only one value
this.nameList.name has only one value
this.nameList.name.toString == "-bool="
this.nameList.oneWord == true
this.numValues == 1
this.rangeDesc has only one value
this.rangeDesc.toString == "true"
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList has only one value
this.rangeList.low has only one value
this.rangeList.next == null
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 19
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.rangeTail has only one value
this.rangeTail.low has only one value
this.rangeTail.low.bval == true
return == false
orig(this) has only one value
orig(arg0) == false
size(org.argparser.ArgParser.this.matchList[]) == 19
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::ENTER
this.nameList != null
this.nameList.next == null
this.type == 6
this.numValues one of { 1, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "test float arg" }
this.rangeDesc.toString one of { "(-0.001,1000.0]", "{1,2,(9,18],[22,27],[33,38),(45,48)}" }
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 1.0 }
this.rangeList.low.dval != 0
this.rangeList.low.lval == 0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.high.dval == 1000.0
this.rangeList.high.lval == 0
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next has only one value
this.rangeList.next.next != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval one of { -0.001, 45.0 }
this.rangeTail.low.lval == 0
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.low.closed == false
this.rangeTail.high != null
this.rangeTail.high.dval one of { 48.0, 1000.0 }
this.rangeTail.high.lval == 0
this.rangeTail.high.sval == null
this.convertCode == 102
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) one of { 3, 32 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1015
this.helpMsg has only one value
this.helpMsg.toString == ""
this.rangeDesc == null
this.rangeList == null
this.rangeTail == null
org.argparser.ArgParser.this.defaultHelpOption.nameList has only one value
org.argparser.ArgParser.this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.firstHelpOption.nameList has only one value
org.argparser.ArgParser.this.firstHelpOption.helpMsg has only one value
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1015;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1017
this.nameList.name.toString one of { "-farg", "-float=" }
this.numValues == 1
this.rangeDesc != null
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
this.rangeList != null
this.rangeTail != null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1017;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1019
this.nameList.name.toString one of { "-farg", "-float=" }
this.numValues == 1
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
return == false
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT1019;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(return == false)  ==>  (this.nameList.name.toString one of { "-farg", "-float=" })
(return == false)  ==>  (this.numValues == 1)
(return == false)  ==>  (this.resHolder has only one value)
(return == false)  ==>  (this.resHolder.getClass().getName() == org.argparser.ArgHolder.class)
(return == true)  ==>  (this.numValues one of { 1, 3 })
this.nameList != null
this.nameList.next == null
this.type == 6
this.numValues one of { 1, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "test float arg" }
this.rangeDesc.toString one of { "(-0.001,1000.0]", "{1,2,(9,18],[22,27],[33,38),(45,48)}" }
this.resHolder != null
this.rangeList.low.dval one of { -0.001, 1.0 }
this.rangeList.low.dval != 0
this.rangeList.low.lval == 0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.high.dval == 1000.0
this.rangeList.high.lval == 0
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next has only one value
this.rangeList.next.next != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval one of { -0.001, 45.0 }
this.rangeTail.low.lval == 0
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.low.closed == false
this.rangeTail.high != null
this.rangeTail.high.dval one of { 48.0, 1000.0 }
this.rangeTail.high.lval == 0
this.rangeTail.high.sval == null
this.convertCode == 102
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) one of { 3, 32 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(double):::EXIT;condition="not(return == true)"
this.nameList.name.toString one of { "-farg", "-float=" }
this.numValues == 1
this.resHolder has only one value
this.resHolder.getClass().getName() == org.argparser.ArgHolder.class
return == false
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::ENTER
this.nameList != null
this.nameList.next == null
this.type == 7
this.numValues one of { 1, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "a string", "test string arg" }
this.rangeDesc.toString one of { "(john,zzzz]", "{1,2,(AA,AZ],[BB,BX],[C3,C8),(d5,d8)}" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 0
this.rangeList.low.sval != null
this.rangeList.low.sval.toString one of { "1", "john" }
this.rangeList.low.bval == true
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 0
this.rangeList.high.sval has only one value
this.rangeList.high.sval.toString == "zzzz"
this.rangeList.high.closed == true
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next has only one value
this.rangeList.next.next != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 0
this.rangeTail.low.sval != null
this.rangeTail.low.sval.toString one of { "d5", "john" }
this.rangeTail.low.bval == true
this.rangeTail.low.closed == false
this.rangeTail.high != null
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 0
this.rangeTail.high.sval != null
this.rangeTail.high.sval.toString one of { "d8", "zzzz" }
this.convertCode == 115
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
size(org.argparser.ArgParser.this.matchList[]) one of { 4, 27 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1041
this.helpMsg.toString one of { "", "a string" }
this.rangeDesc == null
this.rangeList == null
this.rangeTail == null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1041;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1043
this.nameList.name.toString one of { "-sarg", "-str=" }
this.numValues == 1
this.helpMsg.toString one of { "", "test string arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1043;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1045
this.nameList.name.toString one of { "-sarg", "-str=" }
this.numValues == 1
this.helpMsg.toString one of { "", "test string arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == false
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT1045;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.sval.toString == orig(this.rangeList.low.sval.toString)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.sval.toString == orig(this.rangeList.high.sval.toString)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.sval.toString == orig(this.rangeTail.low.sval.toString)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.sval.toString == orig(this.rangeTail.high.sval.toString)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
arg0.toString == orig(arg0.toString)
(return == false)  ==>  (this.helpMsg.toString one of { "", "test string arg" })
(return == false)  ==>  (this.nameList.name.toString one of { "-sarg", "-str=" })
(return == false)  ==>  (this.numValues == 1)
(return == false)  ==>  (this.rangeDesc != null)
(return == false)  ==>  (this.rangeList != null)
(return == false)  ==>  (this.rangeTail != null)
(return == true)  ==>  (this.helpMsg.toString one of { "", "a string", "test string arg" })
(return == true)  ==>  (this.numValues one of { 1, 3 })
this.nameList != null
this.nameList.next == null
this.type == 7
this.numValues one of { 1, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "a string", "test string arg" }
this.rangeDesc.toString one of { "(john,zzzz]", "{1,2,(AA,AZ],[BB,BX],[C3,C8),(d5,d8)}" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.lval == 0
this.rangeList.low.sval != null
this.rangeList.low.sval.toString one of { "1", "john" }
this.rangeList.low.bval == true
this.rangeList.high.dval == 0.0
this.rangeList.high.lval == 0
this.rangeList.high.sval has only one value
this.rangeList.high.sval.toString == "zzzz"
this.rangeList.high.closed == true
this.rangeList.next.low has only one value
this.rangeList.next.high == null
this.rangeList.next.next has only one value
this.rangeList.next.next != null
org.argparser.ArgParser.this has only one value
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.lval == 0
this.rangeTail.low.sval != null
this.rangeTail.low.sval.toString one of { "d5", "john" }
this.rangeTail.low.bval == true
this.rangeTail.low.closed == false
this.rangeTail.high != null
this.rangeTail.high.dval == 0.0
this.rangeTail.high.lval == 0
this.rangeTail.high.sval != null
this.rangeTail.high.sval.toString one of { "d8", "zzzz" }
this.convertCode == 115
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) one of { 4, 27 }
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(java.lang.String):::EXIT;condition="not(return == true)"
this.nameList.name.toString one of { "-sarg", "-str=" }
this.numValues == 1
this.helpMsg.toString one of { "", "test string arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == false
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::ENTER
this.nameList != null
this.nameList.next == null
this.type one of { 2, 3, 4 }
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "an int", "test int arg" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.low.closed == true
this.rangeList.high.dval == 0.0
this.rangeList.high.lval one of { 100, 109 }
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next.high == null
this.rangeList.next.next != null
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.high != null
this.rangeTail.high.dval == 0.0
this.rangeTail.high.sval == null
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1028
this.numValues one of { 1, 3 }
this.helpMsg.toString one of { "", "an int" }
this.rangeDesc == null
this.rangeList == null
this.rangeTail == null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1028;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1030
this.type one of { 2, 3 }
this.numValues one of { 1, 2 }
this.helpMsg.toString one of { "", "test int arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1030;condition="return == true"
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1032
this.type one of { 2, 3 }
this.numValues one of { 1, 2 }
this.helpMsg.toString one of { "", "test int arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == false
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT1032;condition="not(return == true)"
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT
this.nameList == orig(this.nameList)
this.nameList.name == orig(this.nameList.name)
this.nameList.name.toString == orig(this.nameList.name.toString)
this.nameList.oneWord == orig(this.nameList.oneWord)
this.nameList.next == orig(this.nameList.next)
this.type == orig(this.type)
this.numValues == orig(this.numValues)
this.helpMsg == orig(this.helpMsg)
this.helpMsg.toString == orig(this.helpMsg.toString)
this.valueDesc == orig(this.valueDesc)
this.rangeDesc == orig(this.rangeDesc)
this.rangeDesc.toString == orig(this.rangeDesc.toString)
this.resHolder == orig(this.resHolder)
this.resHolder.getClass().getName() == orig(this.resHolder.getClass().getName())
this.rangeList == orig(this.rangeList)
this.rangeList.low == orig(this.rangeList.low)
this.rangeList.low.dval == orig(this.rangeList.low.dval)
this.rangeList.low.lval == orig(this.rangeList.low.lval)
this.rangeList.low.sval == orig(this.rangeList.low.sval)
this.rangeList.low.bval == orig(this.rangeList.low.bval)
this.rangeList.low.closed == orig(this.rangeList.low.closed)
this.rangeList.high == orig(this.rangeList.high)
this.rangeList.high.dval == orig(this.rangeList.high.dval)
this.rangeList.high.lval == orig(this.rangeList.high.lval)
this.rangeList.high.sval == orig(this.rangeList.high.sval)
this.rangeList.high.bval == orig(this.rangeList.high.bval)
this.rangeList.high.closed == orig(this.rangeList.high.closed)
this.rangeList.next == orig(this.rangeList.next)
this.rangeList.next.low == orig(this.rangeList.next.low)
this.rangeList.next.high == orig(this.rangeList.next.high)
this.rangeList.next.next == orig(this.rangeList.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.rangeTail == orig(this.rangeTail)
this.rangeTail.low == orig(this.rangeTail.low)
this.rangeTail.low.dval == orig(this.rangeTail.low.dval)
this.rangeTail.low.lval == orig(this.rangeTail.low.lval)
this.rangeTail.low.sval == orig(this.rangeTail.low.sval)
this.rangeTail.low.bval == orig(this.rangeTail.low.bval)
this.rangeTail.low.closed == orig(this.rangeTail.low.closed)
this.rangeTail.high == orig(this.rangeTail.high)
this.rangeTail.high.dval == orig(this.rangeTail.high.dval)
this.rangeTail.high.lval == orig(this.rangeTail.high.lval)
this.rangeTail.high.sval == orig(this.rangeTail.high.sval)
this.rangeTail.high.bval == orig(this.rangeTail.high.bval)
this.rangeTail.high.closed == orig(this.rangeTail.high.closed)
this.rangeTail.next == orig(this.rangeTail.next)
this.convertCode == orig(this.convertCode)
this.vval == orig(this.vval)
this.isVisible == orig(this.isVisible)
org.argparser.ArgParser.this.defaultHelpOption.nameList == orig(org.argparser.ArgParser.this.defaultHelpOption.nameList)
org.argparser.ArgParser.this.defaultHelpOption.type == orig(org.argparser.ArgParser.this.defaultHelpOption.type)
org.argparser.ArgParser.this.defaultHelpOption.numValues == orig(org.argparser.ArgParser.this.defaultHelpOption.numValues)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg)
org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.defaultHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.defaultHelpOption.valueDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.valueDesc)
org.argparser.ArgParser.this.defaultHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeDesc)
org.argparser.ArgParser.this.defaultHelpOption.resHolder == orig(org.argparser.ArgParser.this.defaultHelpOption.resHolder)
org.argparser.ArgParser.this.defaultHelpOption.rangeList == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeList)
org.argparser.ArgParser.this.defaultHelpOption.rangeTail == orig(org.argparser.ArgParser.this.defaultHelpOption.rangeTail)
org.argparser.ArgParser.this.defaultHelpOption.convertCode == orig(org.argparser.ArgParser.this.defaultHelpOption.convertCode)
org.argparser.ArgParser.this.defaultHelpOption.vval == orig(org.argparser.ArgParser.this.defaultHelpOption.vval)
org.argparser.ArgParser.this.defaultHelpOption.isVisible == orig(org.argparser.ArgParser.this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.firstHelpOption.nameList == orig(org.argparser.ArgParser.this.firstHelpOption.nameList)
org.argparser.ArgParser.this.firstHelpOption.type == orig(org.argparser.ArgParser.this.firstHelpOption.type)
org.argparser.ArgParser.this.firstHelpOption.numValues == orig(org.argparser.ArgParser.this.firstHelpOption.numValues)
org.argparser.ArgParser.this.firstHelpOption.helpMsg == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg)
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == orig(org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString)
org.argparser.ArgParser.this.firstHelpOption.valueDesc == orig(org.argparser.ArgParser.this.firstHelpOption.valueDesc)
org.argparser.ArgParser.this.firstHelpOption.rangeDesc == orig(org.argparser.ArgParser.this.firstHelpOption.rangeDesc)
org.argparser.ArgParser.this.firstHelpOption.resHolder == orig(org.argparser.ArgParser.this.firstHelpOption.resHolder)
org.argparser.ArgParser.this.firstHelpOption.rangeList == orig(org.argparser.ArgParser.this.firstHelpOption.rangeList)
org.argparser.ArgParser.this.firstHelpOption.rangeTail == orig(org.argparser.ArgParser.this.firstHelpOption.rangeTail)
org.argparser.ArgParser.this.firstHelpOption.convertCode == orig(org.argparser.ArgParser.this.firstHelpOption.convertCode)
org.argparser.ArgParser.this.firstHelpOption.vval == orig(org.argparser.ArgParser.this.firstHelpOption.vval)
org.argparser.ArgParser.this.firstHelpOption.isVisible == orig(org.argparser.ArgParser.this.firstHelpOption.isVisible)
(return == false)  ==>  (this.helpMsg.toString one of { "", "test int arg" })
(return == false)  ==>  (this.numValues one of { 1, 2 })
(return == false)  ==>  (this.rangeDesc != null)
(return == false)  ==>  (this.rangeList != null)
(return == false)  ==>  (this.rangeTail != null)
(return == false)  ==>  (this.type one of { 2, 3 })
(return == true)  ==>  (this.helpMsg.toString one of { "", "an int", "test int arg" })
(return == true)  ==>  (this.numValues one of { 1, 2, 3 })
(return == true)  ==>  (this.type one of { 2, 3, 4 })
this.nameList != null
this.nameList.next == null
this.type one of { 2, 3, 4 }
this.numValues one of { 1, 2, 3 }
this.helpMsg != null
this.helpMsg.toString one of { "", "an int", "test int arg" }
this.resHolder != null
this.rangeList.low.dval == 0.0
this.rangeList.low.sval == null
this.rangeList.low.bval == true
this.rangeList.low.closed == true
this.rangeList.high.dval == 0.0
this.rangeList.high.lval one of { 100, 109 }
this.rangeList.high.sval == null
this.rangeList.high.closed == true
this.rangeList.next.high == null
this.rangeList.next.next != null
org.argparser.ArgParser.this.errMsg == null
this.rangeTail.low.dval == 0.0
this.rangeTail.low.sval == null
this.rangeTail.low.bval == true
this.rangeTail.high != null
this.rangeTail.high.dval == 0.0
this.rangeTail.high.sval == null
this.vval == true
org.argparser.ArgParser.this.firstHelpOption.helpMsg.toString == "displays help information"
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParser$Record.withinRange(long):::EXIT;condition="not(return == true)"
this.type one of { 2, 3 }
this.numValues one of { 1, 2 }
this.helpMsg.toString one of { "", "test int arg" }
this.rangeDesc != null
this.rangeList != null
this.rangeTail != null
return == false
===========================================================================
org.argparser.ArgParser:::CLASS
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
===========================================================================
org.argparser.ArgParser:::OBJECT
this.matchList != null
this.matchList[] elements != null
this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
this.matchList.getClass().getName() == java.util.Vector.class
this.synopsisString != null
this.synopsisString.toString one of { "fubar", "test" }
this.helpOptionsEnabled == true
this.defaultHelpOption.nameList != null
this.defaultHelpOption.nameList.name != null
this.defaultHelpOption.nameList.name.toString == "--help"
this.defaultHelpOption.nameList.oneWord == false
this.defaultHelpOption.nameList.next != null
this.defaultHelpOption.type == 0
this.defaultHelpOption.numValues == 1
this.defaultHelpOption.helpMsg != null
this.defaultHelpOption.helpMsg.toString == "displays help information"
this.defaultHelpOption.valueDesc == null
this.defaultHelpOption.rangeDesc == null
this.defaultHelpOption.resHolder == null
this.defaultHelpOption.rangeList == null
this.defaultHelpOption.rangeTail == null
this.defaultHelpOption.convertCode == 104
this.defaultHelpOption.vval == true
this.defaultHelpOption.isVisible == true
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString one of { "fubar", "test" }
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
this.firstHelpOption.nameList != null
this.firstHelpOption.nameList.name != null
this.firstHelpOption.nameList.name.toString one of { "--help", "-help" }
this.firstHelpOption.nameList.oneWord == false
this.firstHelpOption.nameList.next != null
this.firstHelpOption.type == 0
this.firstHelpOption.numValues == 1
this.firstHelpOption.helpMsg != null
this.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
this.firstHelpOption.valueDesc == null
this.firstHelpOption.rangeDesc == null
this.firstHelpOption.resHolder == null
this.firstHelpOption.rangeList == null
this.firstHelpOption.rangeTail == null
this.firstHelpOption.convertCode == 104
this.firstHelpOption.vval == true
this.firstHelpOption.isVisible == true
this.printStream has only one value
this.printStream != null
this.helpIndent == 6
this.consoleColumns == 80
===========================================================================
org.argparser.ArgParser.ArgParser(java.lang.String):::ENTER
arg0.toString one of { "fubar", "test" }
===========================================================================
org.argparser.ArgParser.ArgParser(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0.toString one of { "fubar", "test" }
size(this.matchList[]) == 1
size(org.argparser.ArgParser.this.matchList[]) == 1
===========================================================================
org.argparser.ArgParser.ArgParser(java.lang.String, boolean):::ENTER
arg0.toString one of { "fubar", "test" }
arg1 == true
===========================================================================
org.argparser.ArgParser.ArgParser(java.lang.String, boolean):::EXIT
arg0.toString == orig(arg0.toString)
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0.toString one of { "fubar", "test" }
size(this.matchList[]) == 1
size(org.argparser.ArgParser.this.matchList[]) == 1
===========================================================================
org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object):::ENTER
org.argparser.ArgParser.this.unmatchedArg == null
this.unmatchedArg == null
arg0 != null
===========================================================================
org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object):::EXIT
this.matchList == orig(this.matchList)
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
size(this.matchList[]) >= 1
size(org.argparser.ArgParser.this.matchList[]) >= 2
this.firstHelpOption.nameList.name.toString >= orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.helpMsg.toString >= orig(this.firstHelpOption.helpMsg.toString)
size(this.matchList[]) >= orig(size(this.matchList[]))
size(this.matchList[])-1 <= orig(size(this.matchList[]))
size(this.matchList[])-1 >= orig(size(this.matchList[]))-1
size(org.argparser.ArgParser.this.matchList[]) >= orig(size(org.argparser.ArgParser.this.matchList[]))
orig(size(org.argparser.ArgParser.this.matchList[])) % size(org.argparser.ArgParser.this.matchList[])-1 == 0
size(org.argparser.ArgParser.this.matchList[])-1 <= orig(size(org.argparser.ArgParser.this.matchList[]))
size(org.argparser.ArgParser.this.matchList[])-1 >= orig(size(org.argparser.ArgParser.this.matchList[]))-1
===========================================================================
org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object, boolean):::ENTER
org.argparser.ArgParser.this.unmatchedArg == null
this.unmatchedArg == null
arg0 != null
arg2 == true
===========================================================================
org.argparser.ArgParser.addOption(java.lang.String, java.lang.Object, boolean):::EXIT
this.matchList == orig(this.matchList)
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
size(this.matchList[]) >= 1
size(org.argparser.ArgParser.this.matchList[]) >= 2
this.firstHelpOption.nameList.name.toString >= orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.helpMsg.toString >= orig(this.firstHelpOption.helpMsg.toString)
size(this.matchList[]) >= orig(size(this.matchList[]))
size(this.matchList[])-1 <= orig(size(this.matchList[]))
size(this.matchList[])-1 >= orig(size(this.matchList[]))-1
size(org.argparser.ArgParser.this.matchList[]) >= orig(size(org.argparser.ArgParser.this.matchList[]))
orig(size(org.argparser.ArgParser.this.matchList[])) % size(org.argparser.ArgParser.this.matchList[])-1 == 0
size(org.argparser.ArgParser.this.matchList[])-1 <= orig(size(org.argparser.ArgParser.this.matchList[]))
size(org.argparser.ArgParser.this.matchList[])-1 >= orig(size(org.argparser.ArgParser.this.matchList[]))-1
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::ENTER
this has only one value
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption != null
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption != null
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0 != null
arg0.nameList != null
arg0.nameList.name != null
arg0.nameList.next == null
arg0.numValues one of { 1, 3 }
arg0.helpMsg has only one value
arg0.helpMsg != null
arg0.helpMsg.toString == ""
arg0.valueDesc == null
arg0.rangeDesc == null
arg0.resHolder has only one value
arg0.resHolder != null
arg0.resHolder.getClass().getName() == java.util.Vector.class
arg0.rangeList == null
arg0.rangeTail == null
arg0.vval == true
arg0.isVisible == true
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2081
this.matchList[] contains no nulls and has only one value, of length 7
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 7
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-foov"
arg0.nameList.oneWord == false
arg0.type == 4
arg0.numValues == 1
arg0.convertCode == 105
return.getClass().getName() == org.argparser.ArgHolder.class
orig(arg0) has only one value
size(this.matchList[]) == 7
size(org.argparser.ArgParser.this.matchList[]) == 7
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2084
this.matchList[] contains no nulls and has only one value, of length 18
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 18
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-charv="
arg0.nameList.oneWord == true
arg0.type == 2
arg0.numValues == 1
arg0.convertCode == 99
return.getClass().getName() == org.argparser.ArgHolder.class
orig(arg0) has only one value
size(this.matchList[]) == 18
size(org.argparser.ArgParser.this.matchList[]) == 18
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2087
this.matchList[] contains no nulls and has only one value, of length 24
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 24
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-boov"
arg0.nameList.oneWord == false
arg0.type == 1
arg0.numValues == 1
arg0.convertCode == 98
return.getClass().getName() == org.argparser.ArgHolder.class
orig(arg0) has only one value
size(this.matchList[]) == 24
size(org.argparser.ArgParser.this.matchList[]) == 24
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2090
this.matchList[] contains no nulls and has only one value, of length 36
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 36
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-fv"
arg0.nameList.oneWord == false
arg0.type == 6
arg0.numValues == 1
arg0.convertCode == 102
return.getClass().getName() == org.argparser.ArgHolder.class
orig(arg0) has only one value
size(this.matchList[]) == 36
size(org.argparser.ArgParser.this.matchList[]) == 36
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2093
this.matchList[] contains no nulls and has only one value, of length 31
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 31
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-strv="
arg0.nameList.oneWord == true
arg0.type == 7
arg0.numValues == 1
arg0.convertCode == 115
return.getClass().getName() == org.argparser.ArgHolder.class
orig(arg0) has only one value
size(this.matchList[]) == 31
size(org.argparser.ArgParser.this.matchList[]) == 31
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2099
this.matchList[] contains no nulls and has only one value, of length 6
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 6
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-foov3"
arg0.nameList.oneWord == false
arg0.type == 4
arg0.numValues == 3
arg0.convertCode == 105
return.getClass().getName() == long[].class
orig(arg0) has only one value
size(this.matchList[]) == 6
size(org.argparser.ArgParser.this.matchList[]) == 6
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2102
this.matchList[] contains no nulls and has only one value, of length 17
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 17
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-charv3"
arg0.nameList.oneWord == false
arg0.type == 2
arg0.numValues == 3
arg0.convertCode == 99
return.getClass().getName() == char[].class
orig(arg0) has only one value
size(this.matchList[]) == 17
size(org.argparser.ArgParser.this.matchList[]) == 17
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2105
this.matchList[] contains no nulls and has only one value, of length 23
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 23
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-boov3"
arg0.nameList.oneWord == false
arg0.type == 1
arg0.numValues == 3
arg0.convertCode == 98
return.getClass().getName() == boolean[].class
orig(arg0) has only one value
size(this.matchList[]) == 23
size(org.argparser.ArgParser.this.matchList[]) == 23
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2108
this.matchList[] contains no nulls and has only one value, of length 35
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 35
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-fv3"
arg0.nameList.oneWord == false
arg0.type == 6
arg0.numValues == 3
arg0.convertCode == 102
return.getClass().getName() == double[].class
orig(arg0) has only one value
size(this.matchList[]) == 35
size(org.argparser.ArgParser.this.matchList[]) == 35
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT2111
this.matchList[] contains no nulls and has only one value, of length 30
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 30
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
arg0.nameList has only one value
arg0.nameList.name has only one value
arg0.nameList.name.toString == "-strv3"
arg0.nameList.oneWord == false
arg0.type == 7
arg0.numValues == 3
arg0.convertCode == 115
return.getClass().getName() == java.lang.String[].class
orig(arg0) has only one value
size(this.matchList[]) == 30
size(org.argparser.ArgParser.this.matchList[]) == 30
===========================================================================
org.argparser.ArgParser.createResultHolder(org.argparser.ArgParser$Record):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.nameList == orig(arg0.nameList)
arg0.nameList.name == orig(arg0.nameList.name)
arg0.nameList.name.toString == orig(arg0.nameList.name.toString)
arg0.nameList.oneWord == orig(arg0.nameList.oneWord)
arg0.nameList.next == orig(arg0.nameList.next)
arg0.type == orig(arg0.type)
arg0.numValues == orig(arg0.numValues)
arg0.helpMsg == orig(arg0.helpMsg)
arg0.helpMsg.toString == orig(arg0.helpMsg.toString)
arg0.valueDesc == orig(arg0.valueDesc)
arg0.rangeDesc == orig(arg0.rangeDesc)
arg0.resHolder == orig(arg0.resHolder)
arg0.resHolder.getClass().getName() == orig(arg0.resHolder.getClass().getName())
arg0.rangeList == orig(arg0.rangeList)
arg0.rangeTail == orig(arg0.rangeTail)
arg0.convertCode == orig(arg0.convertCode)
arg0.vval == orig(arg0.vval)
arg0.isVisible == orig(arg0.isVisible)
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption != null
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption != null
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0.nameList != null
arg0.nameList.name != null
arg0.nameList.next == null
arg0.numValues one of { 1, 3 }
arg0.helpMsg has only one value
arg0.helpMsg != null
arg0.helpMsg.toString == ""
arg0.valueDesc == null
arg0.rangeDesc == null
arg0.resHolder has only one value
arg0.resHolder != null
arg0.resHolder.getClass().getName() == java.util.Vector.class
arg0.rangeList == null
arg0.rangeTail == null
arg0.vval == true
arg0.isVisible == true
return != null
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::ENTER
this has only one value
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg.toString one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg.toString one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
this.unmatchedArg == null
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT1505
this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg.toString == "-foo3: requires 3 values"
this.errMsg.toString == "-foo3: requires 3 values"
return == 4
orig(arg0) == 105
size(this.matchList[]) one of { 5, 6 }
size(org.argparser.ArgParser.this.matchList[]) one of { 5, 6 }
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT1508
this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.errMsg == null
return == 2
orig(arg0) == 99
size(this.matchList[]) one of { 16, 17 }
size(org.argparser.ArgParser.this.matchList[]) one of { 16, 17 }
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT1512
this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg.toString == "-boo3: malformed boolean 'fals'"
this.errMsg.toString == "-boo3: malformed boolean 'fals'"
return == 1
orig(arg0) == 98
size(this.matchList[]) one of { 22, 23 }
size(org.argparser.ArgParser.this.matchList[]) one of { 22, 23 }
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT1515
this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg.toString == "-f3: malformed float '9.0x'"
this.errMsg.toString == "-f3: malformed float '9.0x'"
return == 6
orig(arg0) == 102
size(this.matchList[]) one of { 34, 35 }
size(org.argparser.ArgParser.this.matchList[]) one of { 34, 35 }
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT1518
this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
org.argparser.ArgParser.this.errMsg == null
this.errMsg == null
return == 7
orig(arg0) == 115
size(this.matchList[]) one of { 29, 30 }
size(org.argparser.ArgParser.this.matchList[]) one of { 29, 30 }
===========================================================================
org.argparser.ArgParser.defaultResultType(char):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg.toString one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg.toString one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
this.unmatchedArg == null
===========================================================================
org.argparser.ArgParser.getOptionName(java.lang.String):::ENTER
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
arg0 != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getOptionName(java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
return != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getOptionRangeDesc(java.lang.String):::ENTER
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
arg0 != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getOptionRangeDesc(java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
return != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getOptionTypeName(java.lang.String):::ENTER
this has only one value
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption != null
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption != null
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
arg0 != null
===========================================================================
org.argparser.ArgParser.getOptionTypeName(java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption != null
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption != null
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
return != null
===========================================================================
org.argparser.ArgParser.getRecord(java.lang.String, org.argparser.ArgHolder):::ENTER
this.defaultHelpOption != null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
arg0 != null
arg1.clazz has only one value
arg1.clazz != null
arg1.defaultValue == null
arg1.value == null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getRecord(java.lang.String, org.argparser.ArgHolder):::EXIT2016
this.matchList has only one value
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
arg1.value != null
return != null
return.nameList.oneWord == true
return.numValues == 1
return.helpMsg has only one value
return.helpMsg.toString == ""
return.vval == true
orig(this) has only one value
===========================================================================
org.argparser.ArgParser.getRecord(java.lang.String, org.argparser.ArgHolder):::EXIT2023
arg1.value != null
return != null
return.nameList.oneWord == false
===========================================================================
org.argparser.ArgParser.getRecord(java.lang.String, org.argparser.ArgHolder):::EXIT2028
arg1.value == orig(arg1.value)
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.errMsg == null
arg1.value == null
return == null
orig(this) has only one value
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser.getRecord(java.lang.String, org.argparser.ArgHolder):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
arg1.clazz == orig(arg1.clazz)
arg1.defaultValue == orig(arg1.defaultValue)
this.defaultHelpOption != null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
arg1.clazz has only one value
arg1.clazz != null
arg1.defaultValue == null
arg1.value.getClass().getName() == org.argparser.ArgParser$NameDesc.class
return.nameList != null
return.nameList.name != null
return.nameList.next == null
return.type >= 1
return.numValues one of { 1, 2, 3 }
return.helpMsg != null
return.valueDesc == null
return.resHolder != null
return.rangeList.low != null
return.rangeTail.low != null
return.rangeTail.next == null
return.isVisible == true
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getResultHolder(java.lang.String):::ENTER
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0 != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getResultHolder(java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
return != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.getUnmatchedArgument():::ENTER
this has only one value
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser.getUnmatchedArgument():::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.this.unmatchedArg.toString == orig(org.argparser.ArgParser.this.unmatchedArg.toString)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.unmatchedArg == orig(this.unmatchedArg)
this.unmatchedArg.toString == orig(this.unmatchedArg.toString)
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
===========================================================================
org.argparser.ArgParser.lastMatchRecord():::ENTER
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.lastMatchRecord():::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
return != null
return.nameList != null
return.nameList.name != null
return.numValues one of { 1, 2, 3 }
return.helpMsg != null
return.valueDesc == null
return.rangeList.low != null
return.rangeTail.low != null
return.rangeTail.next == null
return.isVisible == true
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.matchAllArgs(java.lang.String[], int, int):::ENTER
this has only one value
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg == null
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 8
arg0[].toString == [zzz, -cat, -foo, 123, yyy, -bar, xxxx, xxx]
arg1 == 0
arg2 == 0
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
size(arg0[]) == 8
===========================================================================
org.argparser.ArgParser.matchAllArgs(java.lang.String[], int, int):::EXIT2316
===========================================================================
org.argparser.ArgParser.matchAllArgs(java.lang.String[], int, int):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
arg0[] == orig(arg0[])
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
org.argparser.ArgParser.this.errMsg == null
org.argparser.ArgParser.this.unmatchedArg has only one value
org.argparser.ArgParser.this.unmatchedArg.toString == "xxx"
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
this.unmatchedArg has only one value
this.unmatchedArg.toString == "xxx"
arg0[] contains no nulls and has only one value, of length 8
arg0[].toString == [zzz, -cat, -foo, 123, yyy, -bar, xxxx, xxx]
return has only one value
return.getClass().getName() == java.lang.String[].class
return[] contains no nulls and has only one value, of length 4
return[].toString == [zzz, -cat, yyy, xxx]
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
size(return[]) == 4
===========================================================================
org.argparser.ArgParser.matchArg(java.lang.String[], int):::ENTER
this.defaultHelpOption != null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 >= 0
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.matchArg(java.lang.String[], int):::EXIT2366
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
this.errMsg == orig(this.errMsg)
this.matchList has only one value
this.matchList[] contains no nulls and has only one value, of length 3
this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.synopsisString has only one value
this.synopsisString.toString == "test"
this.defaultHelpOption has only one value
this.defaultHelpOption.nameList has only one value
this.defaultHelpOption.nameList.name has only one value
this.defaultHelpOption.nameList.next has only one value
this.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this.matchList has only one value
org.argparser.ArgParser.this.matchList[] contains no nulls and has only one value, of length 3
org.argparser.ArgParser.this.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "test"
org.argparser.ArgParser.this.defaultHelpOption has only one value
org.argparser.ArgParser.this.firstHelpOption has only one value
this.firstHelpOption has only one value
this.firstHelpOption.nameList has only one value
this.firstHelpOption.nameList.name has only one value
this.firstHelpOption.nameList.next has only one value
this.firstHelpOption.helpMsg has only one value
arg0[] contains no nulls and has only one value, of length 8
arg0[].toString == [zzz, -cat, -foo, 123, yyy, -bar, xxxx, xxx]
orig(this) has only one value
orig(org.argparser.ArgParser.this.unmatchedArg.toString) one of { "xxx", "zzz" }
orig(this.unmatchedArg.toString) one of { "xxx", "zzz" }
orig(arg0) has only one value
size(this.matchList[]) == 3
size(org.argparser.ArgParser.this.matchList[]) == 3
orig(size(arg0[])) == 8
===========================================================================
org.argparser.ArgParser.matchArg(java.lang.String[], int):::EXIT2440
org.argparser.ArgParser.this.unmatchedArg == null
this.unmatchedArg == null
orig(org.argparser.ArgParser.this.unmatchedArg.toString) one of { "-cat", "yyy" }
orig(this.unmatchedArg.toString) one of { "-cat", "yyy" }
orig(arg1) one of { 0, 2, 5 }
===========================================================================
org.argparser.ArgParser.matchArg(java.lang.String[], int):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
arg0[] == orig(arg0[])
this.defaultHelpOption != null
org.argparser.ArgParser.this.errMsg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.errMsg == null
arg0[] elements != null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.scanRangeSpec(org.argparser.ArgParser$Record, java.lang.String):::ENTER
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
arg0 != null
arg0.nameList != null
arg0.nameList.name != null
arg0.type >= 1
arg0.numValues == 0
arg0.helpMsg == null
arg0.valueDesc == null
arg0.rangeDesc == null
arg0.resHolder != null
arg0.rangeList == null
arg0.rangeTail == null
arg0.vval == true
arg0.isVisible == true
arg1 != null
size(this.matchList[]) >= 1
===========================================================================
org.argparser.ArgParser.scanRangeSpec(org.argparser.ArgParser$Record, java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.errMsg == orig(this.errMsg)
this.errMsg.toString == orig(this.errMsg.toString)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.nameList == orig(arg0.nameList)
arg0.nameList.name == orig(arg0.nameList.name)
arg0.nameList.name.toString == orig(arg0.nameList.name.toString)
arg0.nameList.oneWord == orig(arg0.nameList.oneWord)
arg0.nameList.next == orig(arg0.nameList.next)
arg0.type == orig(arg0.type)
arg0.numValues == orig(arg0.numValues)
arg0.helpMsg == orig(arg0.helpMsg)
arg0.valueDesc == orig(arg0.valueDesc)
arg0.resHolder == orig(arg0.resHolder)
arg0.resHolder.getClass().getName() == orig(arg0.resHolder.getClass().getName())
arg0.convertCode == orig(arg0.convertCode)
arg0.vval == orig(arg0.vval)
arg0.isVisible == orig(arg0.isVisible)
arg1.toString == orig(arg1.toString)
this.synopsisString has only one value
this.synopsisString.toString == "fubar"
this.defaultHelpOption != null
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.unmatchedArg == null
arg0.nameList != null
arg0.nameList.name != null
arg0.type >= 1
arg0.numValues == 0
arg0.helpMsg == null
arg0.valueDesc == null
arg0.rangeDesc != null
arg0.resHolder != null
arg0.rangeList.low != null
arg0.rangeTail.low != null
arg0.rangeTail.next == null
arg0.vval == true
arg0.isVisible == true
size(this.matchList[]) >= 1
===========================================================================
org.argparser.ArgParser.setError(java.lang.String):::ENTER
this.defaultHelpOption != null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.setError(java.lang.String):::EXIT
this.matchList == orig(this.matchList)
this.matchList[] == orig(this.matchList[])
this.matchList.getClass().getName() == orig(this.matchList.getClass().getName())
this.synopsisString == orig(this.synopsisString)
this.synopsisString.toString == orig(this.synopsisString.toString)
this.helpOptionsEnabled == orig(this.helpOptionsEnabled)
this.defaultHelpOption == orig(this.defaultHelpOption)
this.defaultHelpOption.nameList == orig(this.defaultHelpOption.nameList)
this.defaultHelpOption.nameList.name == orig(this.defaultHelpOption.nameList.name)
this.defaultHelpOption.nameList.name.toString == orig(this.defaultHelpOption.nameList.name.toString)
this.defaultHelpOption.nameList.oneWord == orig(this.defaultHelpOption.nameList.oneWord)
this.defaultHelpOption.nameList.next == orig(this.defaultHelpOption.nameList.next)
this.defaultHelpOption.type == orig(this.defaultHelpOption.type)
this.defaultHelpOption.numValues == orig(this.defaultHelpOption.numValues)
this.defaultHelpOption.helpMsg == orig(this.defaultHelpOption.helpMsg)
this.defaultHelpOption.helpMsg.toString == orig(this.defaultHelpOption.helpMsg.toString)
this.defaultHelpOption.valueDesc == orig(this.defaultHelpOption.valueDesc)
this.defaultHelpOption.rangeDesc == orig(this.defaultHelpOption.rangeDesc)
this.defaultHelpOption.resHolder == orig(this.defaultHelpOption.resHolder)
this.defaultHelpOption.rangeList == orig(this.defaultHelpOption.rangeList)
this.defaultHelpOption.rangeTail == orig(this.defaultHelpOption.rangeTail)
this.defaultHelpOption.convertCode == orig(this.defaultHelpOption.convertCode)
this.defaultHelpOption.vval == orig(this.defaultHelpOption.vval)
this.defaultHelpOption.isVisible == orig(this.defaultHelpOption.isVisible)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.firstHelpOption == orig(this.firstHelpOption)
this.firstHelpOption.nameList == orig(this.firstHelpOption.nameList)
this.firstHelpOption.nameList.name == orig(this.firstHelpOption.nameList.name)
this.firstHelpOption.nameList.name.toString == orig(this.firstHelpOption.nameList.name.toString)
this.firstHelpOption.nameList.oneWord == orig(this.firstHelpOption.nameList.oneWord)
this.firstHelpOption.nameList.next == orig(this.firstHelpOption.nameList.next)
this.firstHelpOption.type == orig(this.firstHelpOption.type)
this.firstHelpOption.numValues == orig(this.firstHelpOption.numValues)
this.firstHelpOption.helpMsg == orig(this.firstHelpOption.helpMsg)
this.firstHelpOption.helpMsg.toString == orig(this.firstHelpOption.helpMsg.toString)
this.firstHelpOption.valueDesc == orig(this.firstHelpOption.valueDesc)
this.firstHelpOption.rangeDesc == orig(this.firstHelpOption.rangeDesc)
this.firstHelpOption.resHolder == orig(this.firstHelpOption.resHolder)
this.firstHelpOption.rangeList == orig(this.firstHelpOption.rangeList)
this.firstHelpOption.rangeTail == orig(this.firstHelpOption.rangeTail)
this.firstHelpOption.convertCode == orig(this.firstHelpOption.convertCode)
this.firstHelpOption.vval == orig(this.firstHelpOption.vval)
this.firstHelpOption.isVisible == orig(this.firstHelpOption.isVisible)
this.printStream == orig(this.printStream)
this.helpIndent == orig(this.helpIndent)
this.consoleColumns == orig(this.consoleColumns)
this.unmatchedArg == orig(this.unmatchedArg)
arg0.toString == orig(arg0.toString)
this.defaultHelpOption != null
org.argparser.ArgParser.this.unmatchedArg == null
this.firstHelpOption != null
this.firstHelpOption.nameList.name.toString == "--help"
this.firstHelpOption.helpMsg.toString == "displays help information"
this.unmatchedArg == null
size(this.matchList[]) >= 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParser.stringToArgs(java.util.Vector, java.lang.String, boolean):::ENTER
arg0 != null
arg0[] == []
arg0[].getClass().getName() == []
arg1 != null
arg2 == false
===========================================================================
org.argparser.ArgParser.stringToArgs(java.util.Vector, java.lang.String, boolean):::EXIT
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg1.toString == orig(arg1.toString)
arg0[] elements != null
arg0[].getClass().getName() elements == java.lang.String.class
size(arg0[])-1 >= orig(size(arg0[]))
===========================================================================
org.argparser.ArgParserTest$MErr:::OBJECT
this.valStr != null
===========================================================================
org.argparser.ArgParserTest$MErr.MErr(int, java.lang.String):::ENTER
arg1 != null
===========================================================================
org.argparser.ArgParserTest$MErr.MErr(int, java.lang.String):::EXIT
this.code == orig(arg0)
this.valStr == orig(arg1)
arg1.toString == orig(arg1.toString)
===========================================================================
org.argparser.ArgParserTest$MTest:::OBJECT
this.args != null
this.result != null
===========================================================================
org.argparser.ArgParserTest$MTest.MTest(java.lang.String, java.lang.Object):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.argparser.ArgParserTest$MTest.MTest(java.lang.String, java.lang.Object):::EXIT
arg0.toString == orig(arg0.toString)
this.resultIdx == -1
===========================================================================
org.argparser.ArgParserTest$MTest.MTest(java.lang.String, java.lang.Object, int):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.argparser.ArgParserTest$MTest.MTest(java.lang.String, java.lang.Object, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
org.argparser.ArgParserTest$RngCheck:::OBJECT
this.low != null
this.high.dval >= -0.5
this.high.lval >= 0
this.high.bval == true
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(boolean):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(boolean):::EXIT
this.low.dval == 0.0
this.low.lval == 0
this.low.sval == null
this.low.closed == true
this.high == null
this.type == 98
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(double):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(double):::EXIT
this.low.lval == 0
this.low.sval == null
this.low.bval == true
this.low.closed == true
this.high == null
this.type == 100
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(double, boolean, double, boolean):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(double, boolean, double, boolean):::EXIT
this.low.lval == 0
this.low.sval == null
this.low.bval == true
this.high.lval == 0
this.high.sval == null
this.type == 100
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(java.lang.String):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.low.dval == 0.0
this.low.lval == 0
this.low.bval == true
this.low.closed == true
this.high == null
this.type == 115
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(java.lang.String, boolean, java.lang.String, boolean):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(java.lang.String, boolean, java.lang.String, boolean):::EXIT
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
this.low.dval == 0.0
this.low.lval == 0
this.low.bval == true
this.high.dval == 0.0
this.high.lval == 0
this.type == 115
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(long):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(long):::EXIT
this.low.dval == 0.0
this.low.sval == null
this.low.bval == true
this.low.closed == true
this.high == null
this.type == 108
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(long, boolean, long, boolean):::ENTER
===========================================================================
org.argparser.ArgParserTest$RngCheck.RngCheck(long, boolean, long, boolean):::EXIT
this.low.dval == 0.0
this.low.sval == null
this.low.bval == true
this.high != null
this.high.dval == 0.0
this.high.sval == null
this.type == 108
===========================================================================
org.argparser.ArgParserTest$RngCheck.check(org.argparser.ArgParser$RangeAtom):::ENTER
arg0 != null
arg0.low != null
arg0.high.lval >= 0
arg0.high.bval == true
arg0.next.low != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParserTest$RngCheck.check(org.argparser.ArgParser$RangeAtom):::EXIT
this.low == orig(this.low)
this.low.dval == orig(this.low.dval)
this.low.lval == orig(this.low.lval)
this.low.sval == orig(this.low.sval)
this.low.sval.toString == orig(this.low.sval.toString)
this.low.bval == orig(this.low.bval)
this.low.closed == orig(this.low.closed)
this.high == orig(this.high)
this.high.dval == orig(this.high.dval)
this.high.lval == orig(this.high.lval)
this.high.sval == orig(this.high.sval)
this.high.sval.toString == orig(this.high.sval.toString)
this.high.bval == orig(this.high.bval)
this.high.closed == orig(this.high.closed)
this.type == orig(this.type)
arg0.low == orig(arg0.low)
arg0.low.dval == orig(arg0.low.dval)
arg0.low.lval == orig(arg0.low.lval)
arg0.low.sval == orig(arg0.low.sval)
arg0.low.sval.toString == orig(arg0.low.sval.toString)
arg0.low.bval == orig(arg0.low.bval)
arg0.low.closed == orig(arg0.low.closed)
arg0.high == orig(arg0.high)
arg0.high.dval == orig(arg0.high.dval)
arg0.high.lval == orig(arg0.high.lval)
arg0.high.sval == orig(arg0.high.sval)
arg0.high.sval.toString == orig(arg0.high.sval.toString)
arg0.high.bval == orig(arg0.high.bval)
arg0.high.closed == orig(arg0.high.closed)
arg0.next == orig(arg0.next)
arg0.next.low == orig(arg0.next.low)
arg0.next.high == orig(arg0.next.high)
arg0.next.next == orig(arg0.next.next)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
org.argparser.ArgParser.this.matchList == orig(org.argparser.ArgParser.this.matchList)
org.argparser.ArgParser.this.matchList[] == orig(org.argparser.ArgParser.this.matchList[])
org.argparser.ArgParser.this.matchList.getClass().getName() == orig(org.argparser.ArgParser.this.matchList.getClass().getName())
org.argparser.ArgParser.this.synopsisString == orig(org.argparser.ArgParser.this.synopsisString)
org.argparser.ArgParser.this.synopsisString.toString == orig(org.argparser.ArgParser.this.synopsisString.toString)
org.argparser.ArgParser.this.helpOptionsEnabled == orig(org.argparser.ArgParser.this.helpOptionsEnabled)
org.argparser.ArgParser.this.defaultHelpOption == orig(org.argparser.ArgParser.this.defaultHelpOption)
org.argparser.ArgParser.this.firstHelpOption == orig(org.argparser.ArgParser.this.firstHelpOption)
org.argparser.ArgParser.this.printStream == orig(org.argparser.ArgParser.this.printStream)
org.argparser.ArgParser.this.helpIndent == orig(org.argparser.ArgParser.this.helpIndent)
org.argparser.ArgParser.this.consoleColumns == orig(org.argparser.ArgParser.this.consoleColumns)
org.argparser.ArgParser.this.errMsg == orig(org.argparser.ArgParser.this.errMsg)
org.argparser.ArgParser.this.errMsg.toString == orig(org.argparser.ArgParser.this.errMsg.toString)
org.argparser.ArgParser.this.unmatchedArg == orig(org.argparser.ArgParser.this.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0.low != null
arg0.high.lval >= 0
arg0.high.bval == true
arg0.next.low != null
org.argparser.ArgParser.this.matchList != null
org.argparser.ArgParser.this.matchList[] elements != null
org.argparser.ArgParser.this.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
org.argparser.ArgParser.this.matchList.getClass().getName() == java.util.Vector.class
org.argparser.ArgParser.this.synopsisString has only one value
org.argparser.ArgParser.this.synopsisString != null
org.argparser.ArgParser.this.synopsisString.toString == "fubar"
org.argparser.ArgParser.this.helpOptionsEnabled == true
org.argparser.ArgParser.this.defaultHelpOption != null
org.argparser.ArgParser.this.firstHelpOption != null
org.argparser.ArgParser.this.printStream has only one value
org.argparser.ArgParser.this.printStream != null
org.argparser.ArgParser.this.helpIndent == 6
org.argparser.ArgParser.this.consoleColumns == 80
org.argparser.ArgParser.this.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
size(org.argparser.ArgParser.this.matchList[]) >= 2
===========================================================================
org.argparser.ArgParserTest:::CLASS
===========================================================================
org.argparser.ArgParserTest:::OBJECT
this.parser.defaultHelpOption.numValues == this.parser.firstHelpOption.numValues
this.parser.defaultHelpOption.convertCode == this.parser.firstHelpOption.convertCode
this.parser.defaultHelpOption.vval == this.parser.firstHelpOption.vval
this.parser.defaultHelpOption.isVisible == this.parser.firstHelpOption.isVisible
this.parser != null
this.parser.matchList != null
this.parser.matchList[] elements != null
this.parser.matchList[].getClass().getName() elements == org.argparser.ArgParser.Record.class
this.parser.matchList.getClass().getName() == java.util.Vector.class
this.parser.synopsisString has only one value
this.parser.synopsisString != null
this.parser.synopsisString.toString == "fubar"
this.parser.helpOptionsEnabled == true
this.parser.defaultHelpOption != null
this.parser.defaultHelpOption.nameList != null
this.parser.defaultHelpOption.type == 0
this.parser.defaultHelpOption.numValues == 1
this.parser.defaultHelpOption.helpMsg != null
this.parser.defaultHelpOption.helpMsg.toString == "displays help information"
this.parser.defaultHelpOption.valueDesc == null
this.parser.defaultHelpOption.rangeDesc == null
this.parser.defaultHelpOption.resHolder == null
this.parser.defaultHelpOption.rangeList == null
this.parser.defaultHelpOption.rangeTail == null
this.parser.defaultHelpOption.convertCode == 104
this.parser.defaultHelpOption.vval == true
this.parser.defaultHelpOption.isVisible == true
this.parser.firstHelpOption != null
this.parser.firstHelpOption.nameList != null
this.parser.firstHelpOption.type == 0
this.parser.firstHelpOption.helpMsg != null
this.parser.firstHelpOption.helpMsg.toString one of { "displays help information", "here is how we help you" }
this.parser.firstHelpOption.valueDesc == null
this.parser.firstHelpOption.rangeDesc == null
this.parser.firstHelpOption.resHolder == null
this.parser.firstHelpOption.rangeList == null
this.parser.firstHelpOption.rangeTail == null
this.parser.printStream has only one value
this.parser.printStream != null
this.parser.helpIndent == 6
this.parser.consoleColumns == 80
this.parser.unmatchedArg == null
org.argparser.ArgParser.validConversionCodes has only one value
org.argparser.ArgParser.validConversionCodes != null
org.argparser.ArgParser.validConversionCodes.toString == "iodxcbfsvh"
org.argparser.ArgParser.EXIT_ON_ERROR == 1
org.argparser.ArgParser.EXIT_ON_UNMATCHED == 2
===========================================================================
org.argparser.ArgParserTest.ArgParserTest():::EXIT
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.matchList[].getClass().getName() == [org.argparser.ArgParser.Record]
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
size(this.parser.matchList[]) == 1
===========================================================================
org.argparser.ArgParserTest.argsFromString(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.argparser.ArgParserTest.argsFromString(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
return != null
return.getClass().getName() == java.lang.String[].class
return[] elements != null
===========================================================================
org.argparser.ArgParserTest.checkAdd(java.lang.String, java.lang.Object, int, int, java.lang.Object, org.argparser.ArgParserTest$RngCheck[], java.lang.String, java.lang.String):::ENTER
this.parser == org.argparser.ArgParser.this
arg0 != null
arg2 >= 0
arg3 >= 0
arg5.getClass().getName() == org.argparser.ArgParserTest$RngCheck[].class
arg5[] elements != null
arg5[].low elements != null
arg5[].high.lval elements >= 0
arg5[].high.lval elements are equal
arg5[].high.sval elements are equal
arg5[].high.sval.toString elements one of { null, "zzzz" }
arg5[].high.bval elements == true
arg5[].high.bval one of { [], [1], [1, 1, 1, 1] }
arg5[].high.bval elements != null
arg5[].type elements are equal
this.parser.matchList.getClass().getName() != arg4.getClass().getName()
this.parser.matchList.getClass().getName() != arg5.getClass().getName()
this.parser.defaultHelpOption.numValues != arg2
this.parser.defaultHelpOption.convertCode > arg3
arg1.getClass().getName() != arg4.getClass().getName()
arg1.getClass().getName() != arg5.getClass().getName()
arg2 >= arg3
arg4.getClass().getName() != arg5.getClass().getName()
===========================================================================
org.argparser.ArgParserTest.checkAdd(java.lang.String, java.lang.Object, int, int, java.lang.Object, org.argparser.ArgParserTest$RngCheck[], java.lang.String, java.lang.String):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.errMsg.toString == orig(this.parser.errMsg.toString)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0.toString == orig(arg0.toString)
arg5[] == orig(arg5[])
arg5[].low == orig(arg5[].low)
arg5[].low.dval == orig(arg5[].low.dval)
arg5[].low.lval == orig(arg5[].low.lval)
arg5[].low.sval == orig(arg5[].low.sval)
arg5[].low.bval == orig(arg5[].low.bval)
arg5[].low.closed == orig(arg5[].low.closed)
arg5[].high == orig(arg5[].high)
arg5[].high.dval == orig(arg5[].high.dval)
arg5[].high.lval == orig(arg5[].high.lval)
arg5[].high.sval == orig(arg5[].high.sval)
arg5[].high.bval == orig(arg5[].high.bval)
arg5[].high.closed == orig(arg5[].high.closed)
arg5[].type == orig(arg5[].type)
arg6.toString == orig(arg6.toString)
arg7.toString == orig(arg7.toString)
arg5[] elements != null
arg5[].low elements != null
arg5[].high.lval elements >= 0
arg5[].high.lval elements are equal
arg5[].high.sval elements are equal
arg5[].high.sval.toString elements one of { null, "zzzz" }
arg5[].high.bval elements == true
arg5[].high.bval one of { [], [1], [1, 1, 1, 1] }
arg5[].high.bval elements != null
arg5[].type elements are equal
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg4.getClass().getName())
this.parser.matchList.getClass().getName() != orig(arg5.getClass().getName())
this.parser.defaultHelpOption.numValues != orig(arg2)
this.parser.defaultHelpOption.convertCode > orig(arg3)
this.parser.firstHelpOption.helpMsg.toString >= orig(this.parser.firstHelpOption.helpMsg.toString)
size(this.parser.matchList[]) >= orig(size(this.parser.matchList[]))
size(this.parser.matchList[])-1 <= orig(size(this.parser.matchList[]))
size(this.parser.matchList[])-1 >= orig(size(this.parser.matchList[]))-1
===========================================================================
org.argparser.ArgParserTest.checkAdd(java.lang.String, java.lang.Object, java.lang.String):::ENTER
this.parser == org.argparser.ArgParser.this
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.errMsg == null
arg0 != null
arg1.getClass().getName() == org.argparser.ArgHolder.class
arg2 != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg1.getClass().getName()
===========================================================================
org.argparser.ArgParserTest.checkAdd(java.lang.String, java.lang.Object, java.lang.String):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption == orig(this.parser.firstHelpOption)
this.parser.firstHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.errMsg == null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
org.argparser.ArgParserTest.checkException(java.lang.Exception, java.lang.String):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.argparser.ArgParserTest.checkException(java.lang.Exception, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, boolean, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg.toString == "-bool=: malformed boolean '1'"
arg0.getClass().getName() == java.lang.String[].class
arg1 == 0
arg2 one of { 1, 2 }
arg4 >= -1
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, boolean, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, char, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 one of { 1, 2 }
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, char, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0[] elements != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, double, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 one of { 1, 2 }
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, double, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0[] elements != null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[arg1]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[arg1]
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg.toString one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 one of { 1, 3, 4 }
arg3 != null
arg4 >= -1
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.matchList.getClass().getName() != arg3.getClass().getName()
this.parser.defaultHelpOption.numValues <= arg2
this.parser.defaultHelpOption.numValues != size(arg0[])-1
this.parser.defaultHelpOption.convertCode > arg2
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.defaultHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.firstHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[orig(this.parser.defaultHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(this.parser.firstHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(arg1)] == orig(arg0[this.parser.defaultHelpOption.numValues-1])
arg0[orig(arg1)] == orig(arg0[this.parser.firstHelpOption.numValues-1])
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0[] elements != null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.matchList.getClass().getName() != orig(arg3.getClass().getName())
this.parser.defaultHelpOption.numValues <= orig(arg2)
this.parser.defaultHelpOption.numValues != size(arg0[])-1
this.parser.defaultHelpOption.convertCode > orig(arg2)
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, java.lang.String, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 one of { 1, 2 }
arg3 != null
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, java.lang.String, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
arg3.toString == orig(arg3.toString)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0[] elements != null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, long, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg2 == size(arg0[])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 one of { 1, 2 }
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode != arg3
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, int, long, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0[] elements != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.convertCode != orig(arg3)
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, java.lang.String):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[arg1]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[arg1]
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.numValues <= size(arg0[])
this.parser.defaultHelpOption.convertCode > size(arg0[])
arg1 <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(java.lang.String[], int, java.lang.String):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
arg2.toString == orig(arg2.toString)
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.defaultHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.firstHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[orig(this.parser.defaultHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(this.parser.firstHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(arg1)] == orig(arg0[this.parser.defaultHelpOption.numValues-1])
arg0[orig(arg1)] == orig(arg0[this.parser.firstHelpOption.numValues-1])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg != null
arg0[] elements != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.numValues <= orig(size(arg0[]))
this.parser.defaultHelpOption.convertCode > orig(size(arg0[]))
this.parser.errMsg.toString != orig(this.parser.errMsg.toString)
orig(arg1) <= size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.checkMatch(org.argparser.ArgParserTest$MTest, boolean):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.args != null
arg0.result != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.result.getClass().getName()
===========================================================================
org.argparser.ArgParserTest.checkMatch(org.argparser.ArgParserTest$MTest, boolean):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0.args == orig(arg0.args)
arg0.args.toString == orig(arg0.args.toString)
arg0.result == orig(arg0.result)
arg0.result.getClass().getName() == orig(arg0.result.getClass().getName())
arg0.resultIdx == orig(arg0.resultIdx)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0.args != null
arg0.result != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.result.getClass().getName()
this.parser.errMsg.toString != orig(this.parser.errMsg.toString)
===========================================================================
org.argparser.ArgParserTest.checkMatches(org.argparser.ArgParserTest$MTest[], boolean):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == org.argparser.ArgParserTest$MTest[].class
arg0[] elements != null
arg0[].args elements != null
arg0[].result elements != null
arg0[].resultIdx elements >= -1
arg0[].resultIdx sorted by <=
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
===========================================================================
org.argparser.ArgParserTest.checkMatches(org.argparser.ArgParserTest$MTest[], boolean):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
arg0[].args == orig(arg0[].args)
arg0[].result == orig(arg0[].result)
arg0[].resultIdx == orig(arg0[].resultIdx)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0[] elements != null
arg0[].args elements != null
arg0[].result elements != null
arg0[].resultIdx elements >= -1
arg0[].resultIdx sorted by <=
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
org.argparser.ArgParserTest.checkStringArray(java.lang.String, java.lang.String[], java.lang.String[]):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg1.getClass().getName() == arg2.getClass().getName()
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[] contains no nulls and has only one value, of length 36
this.parser.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0.toString one of { "My unmatched args:", "Unmatched args:" }
arg1.getClass().getName() == java.lang.String[].class
arg1[].toString == [zzz, -cat, yyy, xxx]
arg2 has only one value
arg2[] contains no nulls and has only one value, of length 4
arg2[].toString == [zzz, -cat, yyy, xxx]
size(this.parser.matchList[]) == 36
size(arg1[]) == 4
size(arg2[]) == 4
===========================================================================
org.argparser.ArgParserTest.checkStringArray(java.lang.String, java.lang.String[], java.lang.String[]):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg2[] == orig(arg2[])
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[] contains no nulls and has only one value, of length 36
this.parser.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0.toString one of { "My unmatched args:", "Unmatched args:" }
arg1[].toString == [zzz, -cat, yyy, xxx]
arg2[] contains no nulls and has only one value, of length 4
arg2[].toString == [zzz, -cat, yyy, xxx]
size(this.parser.matchList[]) == 36
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0 != null
arg1 one of { 0, 1, 2 }
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode > arg1
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT506
(return == false)  ==>  (size(this.parser.matchList[]) one of { 20, 21, 24 })
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT506;condition="return == true"
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT506;condition="not(return == true)"
size(this.parser.matchList[]) one of { 20, 21, 24 }
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT508
(return == false)  ==>  (size(this.parser.matchList[]) one of { 22, 23, 26 })
(return == true)  ==>  (size(this.parser.matchList[]) one of { 22, 23, 25 })
orig(arg0.getClass().getName()) == boolean[].class
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT508;condition="return == true"
size(this.parser.matchList[]) one of { 22, 23, 25 }
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT508;condition="not(return == true)"
size(this.parser.matchList[]) one of { 22, 23, 26 }
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.convertCode > orig(arg1)
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT;condition="return == true"
return == true
===========================================================================
org.argparser.ArgParserTest.getBooleanValue(java.lang.Object, int):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.argparser.ArgParserTest.getCharValue(java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this has only one value
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0 != null
arg1 one of { 0, 1, 2 }
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode > arg1
===========================================================================
org.argparser.ArgParserTest.getCharValue(java.lang.Object, int):::EXIT525
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
size(this.parser.matchList[]) one of { 15, 16, 18 }
this.parser.defaultHelpOption.numValues < return
return > orig(arg1)
===========================================================================
org.argparser.ArgParserTest.getCharValue(java.lang.Object, int):::EXIT527
this.parser.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
orig(arg0.getClass().getName()) == char[].class
size(this.parser.matchList[]) one of { 2, 17 }
===========================================================================
org.argparser.ArgParserTest.getCharValue(java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.numValues <= return
this.parser.defaultHelpOption.convertCode != return
this.parser.defaultHelpOption.convertCode > orig(arg1)
return >= orig(arg1)
===========================================================================
org.argparser.ArgParserTest.getDoubleValue(java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0 != null
arg1 one of { 0, 1, 2 }
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode > arg1
===========================================================================
org.argparser.ArgParserTest.getDoubleValue(java.lang.Object, int):::EXIT439
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
===========================================================================
org.argparser.ArgParserTest.getDoubleValue(java.lang.Object, int):::EXIT444
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
orig(this) has only one value
orig(arg0.getClass().getName()) == double[].class
size(this.parser.matchList[]) one of { 34, 35 }
===========================================================================
org.argparser.ArgParserTest.getDoubleValue(java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.convertCode > orig(arg1)
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0 != null
arg1 one of { 0, 1, 2 }
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode > arg1
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::EXIT463
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[] contains no nulls and has only one value, of length 7
this.parser.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
return one of { 11, 12, 13 }
orig(this) has only one value
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
size(this.parser.matchList[]) == 7
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::EXIT466
orig(arg0) has only one value
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::EXIT468
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[] contains no nulls and has only one value, of length 6
this.parser.matchList[].getClass().getName() == [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record]
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
orig(this) has only one value
orig(arg0.getClass().getName()) == long[].class
size(this.parser.matchList[]) == 6
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::EXIT470
this.parser has only one value
this.parser.matchList has only one value
this.parser.matchList[].getClass().getName() one of { [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record], [org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record, org.argparser.ArgParser.Record] }
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
orig(this) has only one value
orig(arg0) has only one value
orig(arg0.getClass().getName()) == int[].class
size(this.parser.matchList[]) one of { 5, 8 }
===========================================================================
org.argparser.ArgParserTest.getLongValue(java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.convertCode != return
this.parser.defaultHelpOption.convertCode > orig(arg1)
===========================================================================
org.argparser.ArgParserTest.getMatchResult(java.lang.String[], int, int, java.lang.String, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[arg1]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[arg1]
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0 != null
arg0.getClass().getName() == java.lang.String[].class
arg0[] elements != null
arg1 == 0
arg2 != 0
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.numValues <= size(arg0[])
this.parser.defaultHelpOption.convertCode > arg2
this.parser.defaultHelpOption.convertCode > size(arg0[])
arg1 != arg2
arg1 <= size(arg0[])-1
arg2 <= size(arg0[])
size(arg0[]) % arg2 == 0
arg2 != size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.getMatchResult(java.lang.String[], int, int, java.lang.String, int):::EXIT779
this.parser.errMsg == orig(arg3)
orig(arg2) == orig(size(arg0[]))
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
return != null
orig(this) has only one value
orig(this.parser.errMsg.toString) one of { "-boo3: malformed boolean 'fals'", "-f3: malformed float '9.0x'", "-foo3: requires 3 values" }
orig(arg2) one of { 1, 2, 4 }
orig(arg3) == null
orig(arg4) >= 0
this.parser.defaultHelpOption.numValues <= orig(arg2)
===========================================================================
org.argparser.ArgParserTest.getMatchResult(java.lang.String[], int, int, java.lang.String, int):::EXIT781
this.parser.errMsg == orig(arg3)
orig(arg2) == orig(size(arg0[]))
return != null
orig(arg3) == null
orig(arg4) == -1
this.parser.defaultHelpOption.numValues <= orig(arg2)
===========================================================================
org.argparser.ArgParserTest.getMatchResult(java.lang.String[], int, int, java.lang.String, int):::EXIT784
this.parser.errMsg != null
return == null
orig(arg2) == -1
orig(arg3) != null
orig(arg4) == -1
orig(arg2) < size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.getMatchResult(java.lang.String[], int, int, java.lang.String, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
arg0[] == orig(arg0[])
arg3.toString == orig(arg3.toString)
arg0[this.parser.defaultHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.defaultHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[this.parser.firstHelpOption.numValues-1] == arg0[orig(arg1)]
orig(arg0[post(this.parser.firstHelpOption.numValues)-1]) == arg0[orig(arg1)]
arg0[orig(this.parser.defaultHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(this.parser.firstHelpOption.numValues)-1] == arg0[orig(arg1)]
arg0[orig(arg1)] == orig(arg0[this.parser.defaultHelpOption.numValues-1])
arg0[orig(arg1)] == orig(arg0[this.parser.firstHelpOption.numValues-1])
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
arg0[] elements != null
size(this.parser.matchList[]) >= 2
this.parser.matchList.getClass().getName() != return.getClass().getName()
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.numValues <= orig(size(arg0[]))
this.parser.defaultHelpOption.convertCode > orig(arg2)
this.parser.defaultHelpOption.convertCode > orig(size(arg0[]))
this.parser.errMsg.toString != orig(this.parser.errMsg.toString)
orig(arg1) <= size(arg0[])-1
orig(arg2) != size(arg0[])-1
===========================================================================
org.argparser.ArgParserTest.getStringValue(java.lang.Object, int):::ENTER
this.parser == org.argparser.ArgParser.this
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
arg0 != null
arg1 one of { 0, 1, 2 }
this.parser.matchList.getClass().getName() != arg0.getClass().getName()
this.parser.defaultHelpOption.convertCode > arg1
===========================================================================
org.argparser.ArgParserTest.getStringValue(java.lang.Object, int):::EXIT487
this.parser has only one value
this.parser.matchList has only one value
this.parser.defaultHelpOption has only one value
this.parser.defaultHelpOption.nameList has only one value
this.parser.defaultHelpOption.helpMsg has only one value
org.argparser.ArgParser.this has only one value
orig(this) has only one value
orig(arg0.getClass().getName()) == org.argparser.ArgHolder.class
orig(arg1) == 0
size(this.parser.matchList[]) one of { 27, 28, 31 }
===========================================================================
org.argparser.ArgParserTest.getStringValue(java.lang.Object, int):::EXIT489
orig(arg0.getClass().getName()) == java.lang.String[].class
size(this.parser.matchList[]) one of { 4, 29, 30 }
===========================================================================
org.argparser.ArgParserTest.getStringValue(java.lang.Object, int):::EXIT
this.parser == org.argparser.ArgParser.this
this.parser == orig(this.parser)
this.parser.matchList == orig(this.parser.matchList)
this.parser.matchList[] == orig(this.parser.matchList[])
this.parser.matchList.getClass().getName() == orig(this.parser.matchList.getClass().getName())
this.parser.synopsisString == orig(this.parser.synopsisString)
this.parser.synopsisString.toString == orig(this.parser.synopsisString.toString)
this.parser.helpOptionsEnabled == orig(this.parser.helpOptionsEnabled)
this.parser.defaultHelpOption == this.parser.firstHelpOption
this.parser.defaultHelpOption == orig(this.parser.defaultHelpOption)
this.parser.defaultHelpOption == orig(this.parser.firstHelpOption)
this.parser.defaultHelpOption.nameList == this.parser.firstHelpOption.nameList
this.parser.defaultHelpOption.nameList == orig(this.parser.defaultHelpOption.nameList)
this.parser.defaultHelpOption.nameList == orig(this.parser.firstHelpOption.nameList)
this.parser.defaultHelpOption.type == orig(this.parser.defaultHelpOption.type)
this.parser.defaultHelpOption.numValues == orig(this.parser.defaultHelpOption.numValues)
this.parser.defaultHelpOption.numValues == orig(this.parser.firstHelpOption.numValues)
this.parser.defaultHelpOption.helpMsg == this.parser.firstHelpOption.helpMsg
this.parser.defaultHelpOption.helpMsg == orig(this.parser.defaultHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg == orig(this.parser.firstHelpOption.helpMsg)
this.parser.defaultHelpOption.helpMsg.toString == orig(this.parser.defaultHelpOption.helpMsg.toString)
this.parser.defaultHelpOption.valueDesc == orig(this.parser.defaultHelpOption.valueDesc)
this.parser.defaultHelpOption.rangeDesc == orig(this.parser.defaultHelpOption.rangeDesc)
this.parser.defaultHelpOption.resHolder == orig(this.parser.defaultHelpOption.resHolder)
this.parser.defaultHelpOption.rangeList == orig(this.parser.defaultHelpOption.rangeList)
this.parser.defaultHelpOption.rangeTail == orig(this.parser.defaultHelpOption.rangeTail)
this.parser.defaultHelpOption.convertCode == orig(this.parser.defaultHelpOption.convertCode)
this.parser.defaultHelpOption.convertCode == orig(this.parser.firstHelpOption.convertCode)
this.parser.defaultHelpOption.vval == orig(this.parser.defaultHelpOption.vval)
this.parser.defaultHelpOption.vval == orig(this.parser.firstHelpOption.vval)
this.parser.defaultHelpOption.isVisible == orig(this.parser.defaultHelpOption.isVisible)
this.parser.defaultHelpOption.isVisible == orig(this.parser.firstHelpOption.isVisible)
org.argparser.ArgParser.this == orig(org.argparser.ArgParser.this)
this.parser.firstHelpOption.type == orig(this.parser.firstHelpOption.type)
this.parser.firstHelpOption.helpMsg.toString == orig(this.parser.firstHelpOption.helpMsg.toString)
this.parser.firstHelpOption.valueDesc == orig(this.parser.firstHelpOption.valueDesc)
this.parser.firstHelpOption.rangeDesc == orig(this.parser.firstHelpOption.rangeDesc)
this.parser.firstHelpOption.resHolder == orig(this.parser.firstHelpOption.resHolder)
this.parser.firstHelpOption.rangeList == orig(this.parser.firstHelpOption.rangeList)
this.parser.firstHelpOption.rangeTail == orig(this.parser.firstHelpOption.rangeTail)
this.parser.printStream == orig(this.parser.printStream)
this.parser.helpIndent == orig(this.parser.helpIndent)
this.parser.consoleColumns == orig(this.parser.consoleColumns)
this.parser.errMsg == orig(this.parser.errMsg)
this.parser.unmatchedArg == orig(this.parser.unmatchedArg)
org.argparser.ArgParser.validConversionCodes == orig(org.argparser.ArgParser.validConversionCodes)
org.argparser.ArgParser.validConversionCodes.toString == orig(org.argparser.ArgParser.validConversionCodes.toString)
org.argparser.ArgParser.EXIT_ON_ERROR == orig(org.argparser.ArgParser.EXIT_ON_ERROR)
org.argparser.ArgParser.EXIT_ON_UNMATCHED == orig(org.argparser.ArgParser.EXIT_ON_UNMATCHED)
this.parser.firstHelpOption.helpMsg.toString == "displays help information"
this.parser.errMsg == null
return != null
this.parser.matchList.getClass().getName() != orig(arg0.getClass().getName())
this.parser.defaultHelpOption.convertCode > orig(arg1)
===========================================================================
org.argparser.ArgParserTest.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
org.argparser.ArgParserTest.main(java.lang.String[]):::EXIT
===========================================================================
org.argparser.ArgParserTest.verify(boolean, java.lang.String):::ENTER
arg0 == true
arg1 != null
===========================================================================
org.argparser.ArgParserTest.verify(boolean, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
===========================================================================
org.argparser.StringScanException:::CLASS
===========================================================================
org.argparser.StringScanException:::OBJECT
this.failIdx >= 0
===========================================================================
org.argparser.StringScanException.StringScanException(int, java.lang.String):::ENTER
arg0 >= 0
arg1 != null
===========================================================================
org.argparser.StringScanException.StringScanException(int, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
===========================================================================
org.argparser.StringScanException.getFailIndex():::ENTER
===========================================================================
org.argparser.StringScanException.getFailIndex():::EXIT
this.failIdx == orig(this.failIdx)
===========================================================================
org.argparser.StringScanner:::OBJECT
this.len == size(this.buf[])-1
this.buf != null
this.buf[] elements >= 0
this.idx >= 0
this.stringDelimiters != null
this.stringDelimiters.toString one of { "", ")],}" }
this.buf[this.len] == 0
this.buf[] elements >= this.buf[this.len]
this.idx <= this.len
this.idx >= this.buf[this.len]
this.len >= this.buf[this.len]
this.buf[this.idx] >= this.buf[this.len]
===========================================================================
org.argparser.StringScanner.StringScanner(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.argparser.StringScanner.StringScanner(java.lang.String):::EXIT
this.idx == this.buf[this.len]
arg0.toString == orig(arg0.toString)
this.idx == 0
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
this.buf[] elements >= this.idx
this.idx <= this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx]
===========================================================================
org.argparser.StringScanner.atEnd():::ENTER
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
size(this.buf[]) >= 2
this.idx != this.buf[this.idx]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.atEnd():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
(return == false)  <==>  (this.buf[this.idx] > this.buf[this.len])
(return == false)  <==>  (this.idx < this.len)
(return == false)  ==>  (size(this.buf[]) < this.buf[this.len-1])
(return == false)  ==>  (this.idx < this.buf[this.len-1])
(return == true)  <==>  (this.buf[this.idx] == 0)
(return == true)  <==>  (this.idx == this.len)
(return == true)  ==>  (size(this.buf[]) != orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (size(this.buf[]) != orig(this.buf[this.idx-1]))
(return == true)  ==>  (size(this.buf[]) != this.buf[orig(this.idx)-1])
(return == true)  ==>  (size(this.buf[]) != this.buf[this.idx-1])
(return == true)  ==>  (size(this.buf[]) >= 2)
(return == true)  ==>  (this.buf[] elements >= this.buf[this.idx])
(return == true)  ==>  (this.buf[this.idx-1] > this.buf[this.len])
(return == true)  ==>  (this.buf[this.idx] < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (this.buf[this.idx] < orig(this.buf[this.idx-1]))
(return == true)  ==>  (this.buf[this.idx] < this.buf[orig(this.idx)-1])
(return == true)  ==>  (this.buf[this.idx] < this.buf[this.idx-1])
(return == true)  ==>  (this.buf[this.idx] < this.buf[this.len-1])
(return == true)  ==>  (this.buf[this.len] < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (this.buf[this.len] < orig(this.buf[this.idx-1]))
(return == true)  ==>  (this.buf[this.len] < this.buf[orig(this.idx)-1])
(return == true)  ==>  (this.idx > this.buf[this.idx])
(return == true)  ==>  (this.idx > this.buf[this.len])
(return == true)  ==>  (this.len > this.buf[this.idx])
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
size(this.buf[]) >= 2
this.idx != this.buf[this.idx]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.atEnd():::EXIT;condition="return == true"
this.idx == this.len
this.idx == orig(this.len)
this.idx == size(this.buf[])-1
this.idx == orig(size(this.buf[]))-1
return == true
this.buf[this.idx] == 0
this.buf[] elements >= this.buf[this.idx]
this.idx > this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
this.buf[this.idx] < this.buf[this.idx-1]
===========================================================================
org.argparser.StringScanner.atEnd():::EXIT;condition="not(return == true)"
return == false
this.idx < this.len
this.idx < this.buf[this.len-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
===========================================================================
org.argparser.StringScanner.baseDesc(int):::ENTER
this.idx >= 1
arg0 one of { 8, 10, 16 }
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.baseDesc(int):::EXIT374
return has only one value
return.toString == "decimal"
orig(arg0) == 10
===========================================================================
org.argparser.StringScanner.baseDesc(int):::EXIT377
this.idx one of { 1, 2, 3 }
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
return has only one value
return.toString == "octal"
orig(arg0) == 8
this.buf[this.idx] % this.len == 0
===========================================================================
org.argparser.StringScanner.baseDesc(int):::EXIT380
this.idx one of { 1, 2, 3 }
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
return has only one value
return.toString == "hex"
orig(arg0) == 16
size(this.buf[]) one of { 4, 5, 7 }
this.buf[this.idx] one of { 103, 111, 120 }
this.buf[this.idx-1] one of { 48, 49, 102 }
===========================================================================
org.argparser.StringScanner.baseDesc(int):::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
return != null
return.toString one of { "decimal", "hex", "octal" }
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.getIndex():::ENTER
size(this.buf[]) != this.buf[this.idx]
===========================================================================
org.argparser.StringScanner.getIndex():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == return
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
return == orig(this.idx)
return >= 0
this.len >= return
return >= this.buf[this.len]
size(this.buf[]) != this.buf[return]
this.buf[this.len] <= this.buf[return]
===========================================================================
org.argparser.StringScanner.getString():::ENTER
this.idx == this.buf[this.len]
this.idx == 0
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
size(this.buf[]) >= 2
this.buf[] elements >= this.idx
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.getString():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == this.len
this.idx == orig(this.len)
this.idx == size(this.buf[])-1
this.idx == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
orig(this.idx) == this.buf[this.idx]
orig(this.idx) == this.buf[this.len]
orig(this.idx) == this.buf[orig(this.len)]
orig(this.idx) == orig(this.buf[post(this.idx)])
orig(this.idx) == orig(this.buf[post(this.len)])
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
return != null
size(this.buf[]) >= 2
this.buf[] elements >= orig(this.idx)
this.idx > orig(this.idx)
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.getc():::ENTER
===========================================================================
org.argparser.StringScanner.getc():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
return == this.buf[orig(this.idx)]
return == orig(this.buf[this.idx])
this.idx >= orig(this.idx)
this.len >= orig(this.idx)
return >= this.buf[this.len]
orig(this.idx) >= this.buf[this.len]
===========================================================================
org.argparser.StringScanner.matchDigits():::ENTER
size(this.buf[]) >= 2
this.idx != this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT581
this.idx >= 1
return == true
this.idx > orig(this.idx)
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT581;condition="return == true"
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT583
this.idx == orig(this.idx)
return == false
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT583;condition="not(return == true)"
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
(return == false)  <==>  (this.idx == orig(this.idx))
(return == false)  ==>  (orig(this.idx) != this.buf[this.idx])
(return == true)  <==>  (this.buf[this.idx] != this.buf[orig(this.idx)])
(return == true)  <==>  (this.idx > orig(this.idx))
(return == true)  ==>  (orig(this.idx) < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (orig(this.idx) < this.buf[orig(this.idx)])
(return == true)  ==>  (orig(this.idx) < this.buf[this.idx-1])
(return == true)  ==>  (size(this.buf[]) < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (size(this.buf[]) < this.buf[orig(this.idx)])
(return == true)  ==>  (size(this.buf[]) < this.buf[this.idx-1])
(return == true)  ==>  (this.buf[this.idx-1] > this.buf[this.len])
(return == true)  ==>  (this.buf[this.idx] != orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (this.buf[this.idx] != this.buf[this.idx-1])
(return == true)  ==>  (this.buf[this.len] < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (this.buf[this.len] < this.buf[orig(this.idx)])
(return == true)  ==>  (this.idx < orig(this.buf[post(this.idx)-1]))
(return == true)  ==>  (this.idx < this.buf[orig(this.idx)])
(return == true)  ==>  (this.idx < this.buf[this.idx-1])
(return == true)  ==>  (this.idx > this.buf[this.len])
(return == true)  ==>  (this.idx >= 1)
(return == true)  ==>  (this.len > orig(this.idx))
size(this.buf[]) >= 2
this.idx >= orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.idx != this.buf[orig(this.idx)]
this.len >= orig(this.idx)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
this.len != this.buf[orig(this.idx)]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) != this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] <= this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT;condition="return == true"
this.idx >= 1
return == true
this.idx > orig(this.idx)
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.matchDigits():::EXIT;condition="not(return == true)"
this.idx == orig(this.idx)
return == false
===========================================================================
org.argparser.StringScanner.peekc():::ENTER
this.idx >= 1
this.idx != this.buf[this.idx]
this.idx != this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx != this.buf[this.len-1]
this.len > this.buf[this.len]
this.len != this.buf[this.len-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.peekc():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
return == this.buf[this.idx]
return == this.buf[orig(this.idx)]
return == orig(this.buf[post(this.idx)])
return == orig(this.buf[this.idx])
this.idx >= 1
this.idx != return
this.idx != this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx != this.buf[this.len-1]
this.len > this.buf[this.len]
this.len != this.buf[this.len-1]
return != size(this.buf[])
return >= this.buf[this.len]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanBoolean():::ENTER
this.buf[this.idx] one of { 102, 116 }
this.buf[this.len-1] one of { 101, 125 }
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.idx] != this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanBoolean():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
(return == false)  <==>  (this.buf[orig(this.idx)] == 102)
(return == false)  <==>  (this.idx - orig(this.idx) - 5 == 0)
(return == false)  ==>  (size(this.buf[]) one of { 6, 13, 23 })
(return == false)  ==>  (this.buf[this.idx] one of { 0, 44, 125 })
(return == true)  <==>  (this.buf[orig(this.idx)] == 116)
(return == true)  <==>  (this.idx - orig(this.idx) - 4 == 0)
this.buf[this.idx-1] == 101
this.buf[this.len-1] one of { 101, 125 }
this.buf[orig(this.idx)] one of { 102, 116 }
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
orig(this.idx) <= this.buf[this.idx]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.idx-1] < this.buf[orig(this.idx)]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
this.buf[this.len-1] != this.buf[orig(this.idx)]
14 * this.idx - 14 * orig(this.idx) + this.buf[orig(this.idx)] - 172 == 0
===========================================================================
org.argparser.StringScanner.scanBoolean():::EXIT;condition="return == true"
return == true
this.buf[orig(this.idx)] == 116
this.idx - orig(this.idx) - 4 == 0
===========================================================================
org.argparser.StringScanner.scanBoolean():::EXIT;condition="not(return == true)"
return == false
size(this.buf[]) one of { 6, 13, 23 }
this.buf[this.idx] one of { 0, 44, 125 }
this.buf[orig(this.idx)] == 102
this.idx - orig(this.idx) - 5 == 0
===========================================================================
org.argparser.StringScanner.scanChar():::ENTER
size(this.buf[]) >= 2
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
this.len <= this.buf[this.len-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanChar():::EXIT101
this.buf[this.idx-1] == this.buf[orig(this.idx)]
this.buf[this.idx-1] == orig(this.buf[this.idx])
this.buf[this.idx-1] == 39
this.buf[this.len-1] one of { 39, 125 }
this.idx != return
this.idx < this.buf[this.idx-1]
this.idx < this.buf[this.len-1]
this.len != return
this.len != this.buf[this.idx]
this.len != this.buf[this.idx-1]
return != this.buf[this.idx]
return != this.buf[this.idx-1]
return != this.buf[this.len-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx-1] <= this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanChar():::EXIT103
this.len <= this.buf[this.idx-1]
this.len <= this.buf[orig(this.idx)]
return <= this.buf[this.idx-1]
return <= this.buf[orig(this.idx)]
this.buf[this.idx] <= this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanChar():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
return >= 1
size(this.buf[]) >= 2
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx <= this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx <= this.buf[this.len-1]
this.idx <= this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len > this.buf[this.len]
this.len <= this.buf[this.len-1]
return != orig(this.idx)
return > this.buf[this.len]
orig(this.idx) <= this.buf[this.idx]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) != this.buf[this.len-1]
size(this.buf[]) != this.buf[orig(this.idx)]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] <= this.buf[orig(this.idx)]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanDouble():::ENTER
size(this.buf[]) >= 2
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanDouble():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
size(this.buf[]) >= 2
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
orig(this.idx) <= this.buf[this.idx]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanInt():::ENTER
size(this.buf[]) >= 2
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanInt():::EXIT343
orig(this.idx) one of { 0, 2, 8 }
this.buf[this.idx] one of { 0, 44, 93 }
this.buf[orig(this.idx)] one of { 45, 48 }
this.idx != return
this.len != return
return != orig(this.idx)
return != size(this.buf[])
return != this.buf[this.idx]
return != this.buf[this.idx-1]
return != this.buf[this.len]
return != this.buf[this.len-1]
orig(this.idx) <= this.buf[this.idx]
this.buf[this.idx] < this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[orig(this.idx)]
this.buf[this.len-1] > this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanInt():::EXIT345
this.buf[this.idx] one of { 0, 44, 93 }
this.buf[orig(this.idx)] one of { 45, 48 }
this.idx != return
this.len != return
return != size(this.buf[])
this.buf[this.idx] < this.buf[this.len-1]
this.buf[this.idx-1] >= this.buf[orig(this.idx)]
this.buf[this.len-1] >= this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanInt():::EXIT348
return != this.buf[this.idx]
return != this.buf[this.idx-1]
return != this.buf[this.len]
return != this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanInt():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
size(this.buf[]) >= 2
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
return != this.buf[orig(this.idx)]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanInt(int, boolean):::ENTER
arg0 one of { 8, 10, 16 }
arg1 == false
size(this.buf[]) >= 2
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
arg0 < this.buf[this.idx]
arg0 > this.buf[this.len]
arg0 < this.buf[this.len-1]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanInt(int, boolean):::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
size(this.buf[]) >= 2
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx < this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
orig(arg0) != this.buf[this.idx]
orig(arg0) < this.buf[this.idx-1]
orig(arg0) > this.buf[this.len]
orig(arg0) < this.buf[this.len-1]
orig(arg0) < this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) < this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanNonWhiteSpaceString():::ENTER
this.idx < this.len
this.idx != this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanNonWhiteSpaceString():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
return != null
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx != this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx != this.buf[orig(this.idx)]
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len != this.buf[this.idx-1]
this.len > this.buf[this.len]
this.len != this.buf[orig(this.idx)]
orig(this.idx) != this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) != this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) != this.buf[orig(this.idx)]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.scanQuotedChar():::ENTER
this.buf[this.idx] == 39
this.buf[this.len-1] one of { 39, 125 }
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanQuotedChar():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.buf[this.idx-1] == this.buf[orig(this.idx)]
this.buf[this.idx-1] == orig(this.buf[this.idx])
this.buf[this.idx-1] == 39
this.buf[this.len-1] one of { 39, 125 }
this.idx != return
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len != return
this.len > orig(this.idx)
this.len != this.buf[this.idx]
this.len != this.buf[this.idx-1]
this.len > this.buf[this.len]
return != orig(this.idx)
return != this.buf[this.idx]
return != this.buf[this.idx-1]
return > this.buf[this.len]
return != this.buf[this.len-1]
orig(this.idx) <= this.buf[this.idx]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx-1] <= this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanQuotedString():::ENTER
this.buf[] one of { [123, 91, 34, 106, 111, 104, 110, 34, 44, 34, 106, 101, 114, 114, 121, 34, 41, 44, 102, 114, 101, 100, 44, 34, 104, 97, 114, 114, 121, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 32, 48, 120, 50, 51, 51, 44, 34, 32, 32, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 40, 98, 98, 44, 97, 97, 93, 44, 32, 91, 34, 48, 49, 34, 44, 48, 50, 93, 125, 0] }
this.stringDelimiters has only one value
this.stringDelimiters.toString == ")],}"
size(this.buf[]) one of { 21, 28, 32 }
this.buf[this.idx] == 34
this.buf[this.idx-1] one of { 44, 91 }
this.buf[this.len-1] == 125
===========================================================================
org.argparser.StringScanner.scanQuotedString():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.buf[this.idx-1] == this.buf[orig(this.idx)]
this.buf[this.idx-1] == orig(this.buf[this.idx])
this.buf[] one of { [123, 91, 34, 106, 111, 104, 110, 34, 44, 34, 106, 101, 114, 114, 121, 34, 41, 44, 102, 114, 101, 100, 44, 34, 104, 97, 114, 114, 121, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 32, 48, 120, 50, 51, 51, 44, 34, 32, 32, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 40, 98, 98, 44, 97, 97, 93, 44, 32, 91, 34, 48, 49, 34, 44, 48, 50, 93, 125, 0] }
this.stringDelimiters has only one value
this.stringDelimiters.toString == ")],}"
size(this.buf[]) one of { 21, 28, 32 }
this.buf[this.idx] one of { 41, 44, 125 }
this.buf[this.idx-1] == 34
this.buf[this.len-1] == 125
this.buf[orig(this.idx)-1] one of { 44, 91 }
===========================================================================
org.argparser.StringScanner.scanString():::ENTER
this.idx >= 1
this.stringDelimiters has only one value
this.stringDelimiters.toString == ")],}"
this.buf[this.len-1] == 125
this.buf[] elements <= this.buf[this.len-1]
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.idx] < this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanString():::EXIT299
this.buf[this.idx-1] == this.buf[orig(this.idx)]
this.buf[this.idx-1] == orig(this.buf[this.idx])
this.buf[] one of { [123, 91, 34, 106, 111, 104, 110, 34, 44, 34, 106, 101, 114, 114, 121, 34, 41, 44, 102, 114, 101, 100, 44, 34, 104, 97, 114, 114, 121, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 32, 48, 120, 50, 51, 51, 44, 34, 32, 32, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 40, 98, 98, 44, 97, 97, 93, 44, 32, 91, 34, 48, 49, 34, 44, 48, 50, 93, 125, 0] }
size(this.buf[]) one of { 21, 28, 32 }
this.buf[this.idx] one of { 41, 44, 125 }
this.buf[this.idx-1] == 34
this.buf[orig(this.idx)-1] one of { 44, 91 }
===========================================================================
org.argparser.StringScanner.scanString():::EXIT301
===========================================================================
org.argparser.StringScanner.scanString():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
(this.buf[this.idx-1] == 34)  <==>  (this.buf[orig(this.idx)] == 34)
(this.buf[this.idx-1] == 34)  ==>  (size(this.buf[]) one of { 21, 28, 32 })
(this.buf[this.idx-1] == 34)  ==>  (this.buf[] one of { [123, 91, 34, 106, 111, 104, 110, 34, 44, 34, 106, 101, 114, 114, 121, 34, 41, 44, 102, 114, 101, 100, 44, 34, 104, 97, 114, 114, 121, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 32, 48, 120, 50, 51, 51, 44, 34, 32, 32, 34, 125, 0], [123, 102, 111, 111, 98, 97, 114, 44, 40, 98, 98, 44, 97, 97, 93, 44, 32, 91, 34, 48, 49, 34, 44, 48, 50, 93, 125, 0] })
(this.buf[this.idx-1] == 34)  ==>  (this.buf[orig(this.idx)-1] one of { 44, 91 })
(this.buf[this.idx-1] == 34)  ==>  (this.buf[this.idx-1] == this.buf[orig(this.idx)])
(this.buf[this.idx-1] == 34)  ==>  (this.buf[this.idx] one of { 41, 44, 125 })
this.stringDelimiters has only one value
this.stringDelimiters.toString == ")],}"
return != null
this.buf[this.len-1] == 125
this.buf[] elements <= this.buf[this.len-1]
this.idx < this.len
this.idx > orig(this.idx)
this.idx < this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.idx < this.buf[orig(this.idx)]
this.idx < this.buf[orig(this.idx)-1]
this.len > orig(this.idx)
this.len > this.buf[this.len]
orig(this.idx) < this.buf[this.idx]
orig(this.idx) < this.buf[this.idx-1]
orig(this.idx) > this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) < this.buf[orig(this.idx)]
orig(this.idx) < this.buf[orig(this.idx)-1]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
size(this.buf[]) < this.buf[orig(this.idx)]
size(this.buf[]) < this.buf[orig(this.idx)-1]
this.buf[this.idx] != this.buf[this.idx-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx] != this.buf[orig(this.idx)]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] < this.buf[this.len-1]
this.buf[this.idx-1] != this.buf[orig(this.idx)-1]
this.buf[this.len] < this.buf[orig(this.idx)]
this.buf[this.len] < this.buf[orig(this.idx)-1]
this.buf[this.len-1] > this.buf[orig(this.idx)]
this.buf[this.len-1] > this.buf[orig(this.idx)-1]
this.buf[orig(this.idx)] != this.buf[orig(this.idx)-1]
===========================================================================
org.argparser.StringScanner.scanUnquotedChar():::ENTER
size(this.buf[]) >= 2
this.idx < this.len
this.idx != this.buf[this.idx]
this.idx < this.buf[this.len-1]
this.len > this.buf[this.len]
this.len <= this.buf[this.len-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.scanUnquotedChar():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= 1
return >= 1
size(this.buf[]) >= 2
this.idx > orig(this.idx)
this.idx != this.buf[this.idx]
this.idx > this.buf[this.len]
this.idx <= this.buf[this.len-1]
this.len > orig(this.idx)
this.len > this.buf[this.len]
this.len <= this.buf[this.len-1]
return != orig(this.idx)
return <= this.buf[this.idx-1]
return > this.buf[this.len]
return <= this.buf[orig(this.idx)]
orig(this.idx) != this.buf[this.idx-1]
orig(this.idx) >= this.buf[this.len]
orig(this.idx) < this.buf[this.len-1]
orig(this.idx) != this.buf[orig(this.idx)]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) != this.buf[this.len-1]
size(this.buf[]) != this.buf[orig(this.idx)]
this.buf[this.idx] <= this.buf[this.len-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.setStringDelimiters(java.lang.String):::ENTER
this.idx == this.buf[this.len]
this.idx == 0
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
arg0 has only one value
arg0 != null
arg0.toString == ")],}"
this.buf[this.idx] == 123
this.buf[this.len-1] == 125
this.buf[] elements >= this.idx
this.buf[] elements <= this.buf[this.len-1]
this.idx < this.len
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.setStringDelimiters(java.lang.String):::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.idx == this.buf[this.len]
this.idx == this.buf[orig(this.len)]
this.idx == orig(this.buf[post(this.len)])
this.idx == orig(this.buf[this.len])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(arg0)
arg0.toString == orig(arg0.toString)
this.idx == 0
this.stringDelimiters has only one value
this.stringDelimiters.toString == ")],}"
arg0.toString == ")],}"
this.buf[this.idx] == 123
this.buf[this.len-1] == 125
this.buf[] elements >= this.idx
this.buf[] elements <= this.buf[this.len-1]
this.idx < this.len
this.stringDelimiters.toString > orig(this.stringDelimiters.toString)
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.skipWhiteSpace():::ENTER
===========================================================================
org.argparser.StringScanner.skipWhiteSpace():::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.idx >= orig(this.idx)
this.len >= orig(this.idx)
orig(this.idx) >= this.buf[this.len]
this.buf[this.len] <= this.buf[orig(this.idx)]
===========================================================================
org.argparser.StringScanner.substring(int):::ENTER
this.idx == arg0
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
this.buf[this.idx-1] == 35
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx != this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.idx-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.idx] != this.buf[this.len-1]
this.buf[this.idx-1] != this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.substring(int):::EXIT686
===========================================================================
org.argparser.StringScanner.substring(int):::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.idx == orig(arg0)
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
this.stringDelimiters has only one value
this.stringDelimiters.toString == ""
return != null
this.buf[this.idx-1] == 35
this.idx < this.len
this.idx < this.buf[this.idx]
this.idx != this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx < this.buf[this.len-1]
this.len != this.buf[this.idx-1]
this.len > this.buf[this.len]
size(this.buf[]) < this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) < this.buf[this.len-1]
this.buf[this.idx] > this.buf[this.idx-1]
this.buf[this.idx] > this.buf[this.len]
this.buf[this.idx] != this.buf[this.len-1]
this.buf[this.idx-1] != this.buf[this.len-1]
this.buf[this.len] < this.buf[this.len-1]
===========================================================================
org.argparser.StringScanner.substring(int, int):::ENTER
arg0 >= 0
arg1 >= 2
this.idx >= arg0
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx != this.buf[this.len-1]
this.idx < this.buf[arg0]
this.idx != this.buf[arg1]
this.idx < this.buf[arg1-1]
this.len > arg0
this.len >= arg1
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
this.len != this.buf[this.len-1]
arg0 < arg1
arg0 < this.buf[this.idx-1]
arg0 >= this.buf[this.len]
arg0 < this.buf[this.len-1]
arg0 < this.buf[arg0]
arg0 != this.buf[arg1]
arg0 < this.buf[arg1-1]
arg1 != this.buf[this.idx]
arg1 < this.buf[this.idx-1]
arg1 > this.buf[this.len]
arg1 != this.buf[this.len-1]
arg1 < this.buf[arg0]
arg1 != this.buf[arg1]
arg1 < this.buf[arg1-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) != this.buf[this.len-1]
size(this.buf[]) != this.buf[arg0]
size(this.buf[]) != this.buf[arg1]
size(this.buf[]) < this.buf[arg1-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] != this.buf[arg0]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[arg0]
this.buf[this.len] <= this.buf[arg1]
this.buf[this.len] < this.buf[arg1-1]
this.buf[this.len-1] != this.buf[arg0]
this.buf[arg0] != this.buf[arg1]
===========================================================================
org.argparser.StringScanner.substring(int, int):::EXIT671
===========================================================================
org.argparser.StringScanner.substring(int, int):::EXIT
this.buf == orig(this.buf)
this.buf[] == orig(this.buf[])
this.idx == orig(this.idx)
this.len == orig(this.len)
this.len == orig(size(this.buf[]))-1
this.stringDelimiters == orig(this.stringDelimiters)
this.stringDelimiters.toString == orig(this.stringDelimiters.toString)
return != null
this.idx >= orig(arg0)
this.idx != this.buf[this.idx]
this.idx < this.buf[this.idx-1]
this.idx > this.buf[this.len]
this.idx != this.buf[this.len-1]
this.idx < this.buf[orig(arg0)]
this.idx != this.buf[orig(arg1)]
this.idx < this.buf[orig(arg1)-1]
this.len > orig(arg0)
this.len >= orig(arg1)
this.len != this.buf[this.idx]
this.len > this.buf[this.len]
this.len != this.buf[this.len-1]
orig(arg0) < this.buf[this.idx-1]
orig(arg0) >= this.buf[this.len]
orig(arg0) < this.buf[this.len-1]
orig(arg0) < this.buf[orig(arg0)]
orig(arg0) != this.buf[orig(arg1)]
orig(arg0) < this.buf[orig(arg1)-1]
orig(arg1) != this.buf[this.idx]
orig(arg1) < this.buf[this.idx-1]
orig(arg1) > this.buf[this.len]
orig(arg1) != this.buf[this.len-1]
orig(arg1) < this.buf[orig(arg0)]
orig(arg1) != this.buf[orig(arg1)]
orig(arg1) < this.buf[orig(arg1)-1]
size(this.buf[]) != this.buf[this.idx]
size(this.buf[]) != this.buf[this.idx-1]
size(this.buf[]) != this.buf[this.len-1]
size(this.buf[]) != this.buf[orig(arg0)]
size(this.buf[]) != this.buf[orig(arg1)]
size(this.buf[]) < this.buf[orig(arg1)-1]
this.buf[this.idx-1] > this.buf[this.len]
this.buf[this.idx-1] != this.buf[orig(arg0)]
this.buf[this.len] < this.buf[this.len-1]
this.buf[this.len] < this.buf[orig(arg0)]
this.buf[this.len] <= this.buf[orig(arg1)]
this.buf[this.len] < this.buf[orig(arg1)-1]
this.buf[this.len-1] != this.buf[orig(arg0)]
this.buf[orig(arg0)] != this.buf[orig(arg1)]
Exiting Daikon.
