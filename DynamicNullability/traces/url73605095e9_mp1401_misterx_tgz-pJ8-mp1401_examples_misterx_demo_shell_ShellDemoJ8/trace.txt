Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo:::OBJECT
this has only one value
this.gameCycleSimplifier.game has only one value
this.gameCycleSimplifier.game != null
this.gameCycleSimplifier.game.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
this.gameCycleSimplifier.misterX has only one value
this.gameCycleSimplifier.misterX != null
this.gameCycleSimplifier.misterX.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
this.gameCycleSimplifier.detectives has only one value
this.gameCycleSimplifier.detectives != null
this.gameCycleSimplifier.detectives[] contains no nulls and has only one value, of length 2
this.gameCycleSimplifier.detectives[] elements != null
this.gameCycleSimplifier.detectives[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl]
this.gameCycleSimplifier.detectives[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
this.gameCycleSimplifier.detectives.getClass().getName() == java.util.ArrayList.class
this.gameCycleSimplifier.timeoutInSeconds == 0
size(this.gameCycleSimplifier.detectives[]) == 2
this.gameCycleSimplifier.game.getClass().getName() != this.gameCycleSimplifier.misterX.getClass().getName()
this.gameCycleSimplifier.game.getClass().getName() != this.gameCycleSimplifier.detectives.getClass().getName()
this.gameCycleSimplifier.misterX.getClass().getName() != this.gameCycleSimplifier.detectives.getClass().getName()
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.ShellDemo():::EXIT
this.gameCycleSimplifier == null
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.createAndStartGame():::ENTER
this.gameCycleSimplifier == null
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.createAndStartGame():::EXIT
this.gameCycleSimplifier has only one value
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.play():::ENTER
this.gameCycleSimplifier has only one value
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.play():::EXIT
this.gameCycleSimplifier == orig(this.gameCycleSimplifier)
this.gameCycleSimplifier.game == orig(this.gameCycleSimplifier.game)
this.gameCycleSimplifier.game.getClass().getName() == orig(this.gameCycleSimplifier.game.getClass().getName())
this.gameCycleSimplifier.misterX == orig(this.gameCycleSimplifier.misterX)
this.gameCycleSimplifier.misterX.getClass().getName() == orig(this.gameCycleSimplifier.misterX.getClass().getName())
this.gameCycleSimplifier.detectives == orig(this.gameCycleSimplifier.detectives)
this.gameCycleSimplifier.detectives[] == orig(this.gameCycleSimplifier.detectives[])
this.gameCycleSimplifier.detectives.getClass().getName() == orig(this.gameCycleSimplifier.detectives.getClass().getName())
this.gameCycleSimplifier.timeoutInSeconds == orig(this.gameCycleSimplifier.timeoutInSeconds)
this.gameCycleSimplifier has only one value
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.printAction(java.lang.String):::ENTER
this.gameCycleSimplifier has only one value
arg0.toString one of { "Play Round 1", "Play Round 2", "Set Start Positions" }
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.printAction(java.lang.String):::EXIT
this.gameCycleSimplifier == orig(this.gameCycleSimplifier)
this.gameCycleSimplifier.game == orig(this.gameCycleSimplifier.game)
this.gameCycleSimplifier.game.getClass().getName() == orig(this.gameCycleSimplifier.game.getClass().getName())
this.gameCycleSimplifier.misterX == orig(this.gameCycleSimplifier.misterX)
this.gameCycleSimplifier.misterX.getClass().getName() == orig(this.gameCycleSimplifier.misterX.getClass().getName())
this.gameCycleSimplifier.detectives == orig(this.gameCycleSimplifier.detectives)
this.gameCycleSimplifier.detectives[] == orig(this.gameCycleSimplifier.detectives[])
this.gameCycleSimplifier.detectives.getClass().getName() == orig(this.gameCycleSimplifier.detectives.getClass().getName())
this.gameCycleSimplifier.timeoutInSeconds == orig(this.gameCycleSimplifier.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
this.gameCycleSimplifier has only one value
arg0.toString one of { "Play Round 1", "Play Round 2", "Set Start Positions" }
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.printGameInfo():::ENTER
this.gameCycleSimplifier has only one value
===========================================================================
mp1401.examples.misterx.demo.shell.ShellDemo.printGameInfo():::EXIT
this.gameCycleSimplifier == orig(this.gameCycleSimplifier)
this.gameCycleSimplifier.game == orig(this.gameCycleSimplifier.game)
this.gameCycleSimplifier.game.getClass().getName() == orig(this.gameCycleSimplifier.game.getClass().getName())
this.gameCycleSimplifier.misterX == orig(this.gameCycleSimplifier.misterX)
this.gameCycleSimplifier.misterX.getClass().getName() == orig(this.gameCycleSimplifier.misterX.getClass().getName())
this.gameCycleSimplifier.detectives == orig(this.gameCycleSimplifier.detectives)
this.gameCycleSimplifier.detectives[] == orig(this.gameCycleSimplifier.detectives[])
this.gameCycleSimplifier.detectives.getClass().getName() == orig(this.gameCycleSimplifier.detectives.getClass().getName())
this.gameCycleSimplifier.timeoutInSeconds == orig(this.gameCycleSimplifier.timeoutInSeconds)
this.gameCycleSimplifier has only one value
===========================================================================
mp1401.examples.misterx.demo.util.DemoMapDataParser:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.demo.util.DemoMapDataParser.DemoMapDataParser():::EXIT
===========================================================================
mp1401.examples.misterx.demo.util.DemoMapDataParser.getMapData():::ENTER
===========================================================================
mp1401.examples.misterx.demo.util.DemoMapDataParser.getMapData():::EXIT
return.cities.getClass().getName() == return.connections.getClass().getName()
return has only one value
return.cities has only one value
return.cities[] contains no nulls and has only one value, of length 7
return.cities[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
return.cities[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
return.cities.getClass().getName() == java.util.ArrayList.class
return.connections has only one value
return.connections[] contains no nulls and has only one value, of length 11
return.connections[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
return.connections[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
size(return.cities[]) == 7
size(return.connections[]) == 11
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier:::OBJECT
this has only one value
this.game has only one value
this.game != null
this.game.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
this.misterX has only one value
this.misterX != null
this.misterX.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
this.detectives has only one value
this.detectives != null
this.detectives[] contains no nulls and has only one value, of length 2
this.detectives[] elements != null
this.detectives[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl]
this.detectives[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
this.detectives.getClass().getName() == java.util.ArrayList.class
this.timeoutInSeconds == 0
size(this.detectives[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.GameCycleSimplifier(mp1401.examples.misterx.model.game.Game, mp1401.examples.misterx.model.gameitems.MisterX, mp1401.examples.misterx.model.gameitems.Detective[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
arg1 has only one value
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
arg2 has only one value
arg2.getClass().getName() == mp1401.examples.misterx.model.gameitems.Detective[].class
arg2[] contains no nulls and has only one value, of length 2
size(arg2[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.GameCycleSimplifier(mp1401.examples.misterx.model.game.Game, mp1401.examples.misterx.model.gameitems.MisterX, mp1401.examples.misterx.model.gameitems.Detective[]):::EXIT
arg2[] == orig(arg2[])
arg2[] contains no nulls and has only one value, of length 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.addDetectives():::ENTER
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.addDetectives():::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.createAndStartGame(mp1401.examples.misterx.model.mapparser.MapDataParser):::ENTER
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.demo.util.DemoMapDataParser.class
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.createAndStartGame(mp1401.examples.misterx.model.mapparser.MapDataParser):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.getCityByName(java.lang.String):::ENTER
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.getCityByName(java.lang.String):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.moveDetective(java.lang.String[]):::ENTER
arg0.getClass().getName() == java.lang.String[].class
arg0[].toString one of { [Bern, Lausanne], [Zürich, Genf] }
size(arg0[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.moveDetective(java.lang.String[]):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0[] == orig(arg0[])
arg0[].toString one of { [Bern, Lausanne], [Zürich, Genf] }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.moveMisterX(java.lang.String):::ENTER
arg0.toString one of { "Bern", "Lausanne" }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.moveMisterX(java.lang.String):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Bern", "Lausanne" }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.playRound(java.lang.String, java.lang.String[]):::ENTER
arg0.toString one of { "Bern", "Lausanne" }
arg1.getClass().getName() == java.lang.String[].class
arg1[].toString one of { [Bern, Lausanne], [Zürich, Genf] }
size(arg1[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.playRound(java.lang.String, java.lang.String[]):::EXIT70
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.playRound(java.lang.String, java.lang.String[]):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg0.toString one of { "Bern", "Lausanne" }
arg1[].toString one of { [Bern, Lausanne], [Zürich, Genf] }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setDetectivesStartPositions(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 2
arg0[].toString == [Chur, Basel]
arg0[].toString elements one of { "Basel", "Chur" }
size(arg0[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setDetectivesStartPositions(java.lang.String[]):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0[] == orig(arg0[])
arg0[] contains no nulls and has only one value, of length 2
arg0[].toString == [Chur, Basel]
arg0[].toString elements one of { "Basel", "Chur" }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setMisterXStartPosition(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "Luzern"
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setMisterXStartPosition(java.lang.String):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
arg0.toString == "Luzern"
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setStartPositions(java.lang.String, java.lang.String[]):::ENTER
arg0 has only one value
arg0.toString == "Luzern"
arg1 has only one value
arg1.getClass().getName() == java.lang.String[].class
arg1[] contains no nulls and has only one value, of length 2
arg1[].toString == [Chur, Basel]
arg1[].toString elements one of { "Basel", "Chur" }
size(arg1[]) == 2
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setStartPositions(java.lang.String, java.lang.String[]):::EXIT49
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.setStartPositions(java.lang.String, java.lang.String[]):::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
arg0.toString == "Luzern"
arg1[] contains no nulls and has only one value, of length 2
arg1[].toString == [Chur, Basel]
arg1[].toString elements one of { "Basel", "Chur" }
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.timeout():::ENTER
===========================================================================
mp1401.examples.misterx.demo.util.GameCycleSimplifier.timeout():::EXIT
this.game == orig(this.game)
this.game.getClass().getName() == orig(this.game.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives[] == orig(this.detectives[])
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.timeoutInSeconds == orig(this.timeoutInSeconds)
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl:::CLASS
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == mp1401.examples.misterx.model.factory.GameItemFactoryImpl.class
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.GameItemFactoryImpl():::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == null
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createCity(java.lang.String, java.awt.Point):::ENTER
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createCity(java.lang.String, java.awt.Point):::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
arg0.toString == orig(arg0.toString)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createConnection(mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.enums.ConnectionType):::ENTER
arg0.getClass().getName() == arg1.getClass().getName()
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == "Car"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.ConnectionType[].class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.ConnectionType.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString == [Car, Train, Flight]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString elements one of { "Car", "Flight", "Train" }
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == "Train"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == "Flight"
arg2.typeAsString.toString one of { "Car", "Flight", "Train" }
size(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[]) == 3
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != arg0.getClass().getName()
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName()
arg0.getClass().getName() != mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createConnection(mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.enums.ConnectionType):::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString)
arg2.typeAsString == orig(arg2.typeAsString)
arg2.typeAsString.toString == orig(arg2.typeAsString.toString)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == "Car"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.ConnectionType[].class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.ConnectionType.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString == [Car, Train, Flight]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString elements one of { "Car", "Flight", "Train" }
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == "Train"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == "Flight"
arg2.typeAsString.toString one of { "Car", "Flight", "Train" }
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
size(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[]) == 3
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName()
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != return.getClass().getName()
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() != orig(arg0.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() != return.getClass().getName()
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() != orig(arg0.getClass().getName())
return.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createDetective(mp1401.examples.misterx.model.gameitems.enums.DetectiveType):::ENTER
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == "<Unknown Detective>"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.DetectiveType[].class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.DetectiveType.class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString.toString == [<Unknown Detective>, Red, Green, Blue, Yellow]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == "Red"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == "Green"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == "Blue"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == "Yellow"
arg0.typeAsString.toString one of { "Blue", "Green" }
size(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[]) == 5
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createDetective(mp1401.examples.misterx.model.gameitems.enums.DetectiveType):::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString)
arg0.typeAsString == orig(arg0.typeAsString)
arg0.typeAsString.toString == orig(arg0.typeAsString.toString)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == "<Unknown Detective>"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.DetectiveType[].class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.DetectiveType.class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString.toString == [<Unknown Detective>, Red, Green, Blue, Yellow]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == "Red"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == "Green"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == "Blue"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == "Yellow"
arg0.typeAsString.toString one of { "Blue", "Green" }
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
size(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[]) == 5
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createMap():::ENTER
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createMap():::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MapImpl.class
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createMisterX():::ENTER
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createMisterX():::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createUnknownCharacter():::ENTER
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.createUnknownCharacter():::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance)
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.getInstance():::ENTER
===========================================================================
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.getInstance():::EXIT
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance == return
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == return.getClass().getName()
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance.getClass().getName())
mp1401.examples.misterx.model.factory.GameItemFactoryImpl.instance has only one value
===========================================================================
mp1401.examples.misterx.model.game.GameImpl:::CLASS
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl:::OBJECT
this has only one value
this.observers has only one value
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
this.map.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MapImpl.class
this.misterX.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
this.detectives.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
this.round one of { 0, 1, 2 }
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.observers.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.currentGameState.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.map.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.misterX.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.detectives.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != this.winner.getClass().getName()
this.observers.getClass().getName() != this.currentGameState.getClass().getName()
this.observers.getClass().getName() != this.map.getClass().getName()
this.observers.getClass().getName() != this.misterX.getClass().getName()
this.observers.getClass().getName() != this.detectives.getClass().getName()
this.observers.getClass().getName() != this.winner.getClass().getName()
this.currentGameState.getClass().getName() != this.map.getClass().getName()
this.currentGameState.getClass().getName() != this.misterX.getClass().getName()
this.currentGameState.getClass().getName() != this.detectives.getClass().getName()
this.currentGameState.getClass().getName() != this.winner.getClass().getName()
this.map.getClass().getName() != this.misterX.getClass().getName()
this.map.getClass().getName() != this.detectives.getClass().getName()
this.map.getClass().getName() != this.winner.getClass().getName()
this.misterX.getClass().getName() != this.detectives.getClass().getName()
this.misterX.getClass().getName() != this.winner.getClass().getName()
this.detectives.getClass().getName() != this.winner.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.GameImpl():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DefaultGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.addDetective(mp1401.examples.misterx.model.gameitems.Detective):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.addDetective(mp1401.examples.misterx.model.gameitems.Detective):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.addMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::ENTER
this.misterX.getClass().getName() == arg0.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0 has only one value
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.addMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(arg0)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.misterX.getClass().getName() == orig(arg0.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.checkSituation():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.CheckSituationGameStates.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.checkSituation():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 2
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.fillMap(mp1401.examples.misterx.model.mapparser.MapDataParser):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.demo.util.DemoMapDataParser.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.fillMap(mp1401.examples.misterx.model.mapparser.MapDataParser):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getConnections():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getConnections():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == return.getClass().getName()
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return.getClass().getName() == orig(this.detectives.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
this.currentGameState.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.misterX.getClass().getName() != return.getClass().getName()
this.winner.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getCurrentGameState():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.currentGameState != null
this.map has only one value
this.map != null
this.misterX != null
this.detectives has only one value
this.detectives != null
this.positionChecker has only one value
this.positionChecker != null
this.winner != null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getCurrentGameState():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == return
this.currentGameState.getClass().getName() == return.getClass().getName()
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.currentGameState)
return.getClass().getName() == orig(this.currentGameState.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.map has only one value
this.map != null
this.misterX != null
this.detectives has only one value
this.detectives != null
this.positionChecker has only one value
this.positionChecker != null
this.winner != null
return != null
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.misterX.getClass().getName() != return.getClass().getName()
this.detectives.getClass().getName() != return.getClass().getName()
this.winner.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getDetectives():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.currentGameState != null
this.map has only one value
this.map != null
this.misterX has only one value
this.misterX != null
this.detectives has only one value
this.detectives != null
this.positionChecker has only one value
this.positionChecker != null
this.winner != null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getDetectives():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == return
this.detectives.getClass().getName() == return.getClass().getName()
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.detectives)
return.getClass().getName() == orig(this.detectives.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.currentGameState != null
this.map has only one value
this.map != null
this.misterX has only one value
this.misterX != null
this.positionChecker has only one value
this.positionChecker != null
this.winner != null
return has only one value
return != null
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
this.currentGameState.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.misterX.getClass().getName() != return.getClass().getName()
this.winner.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getInstance():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getInstance():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == return
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == return.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getMap():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.detectives has only one value
this.positionChecker has only one value
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getMap():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == return
this.map.getClass().getName() == return.getClass().getName()
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.map)
return.getClass().getName() == orig(this.map.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.detectives has only one value
this.positionChecker has only one value
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MapImpl.class
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
this.currentGameState.getClass().getName() != return.getClass().getName()
this.misterX.getClass().getName() != return.getClass().getName()
this.detectives.getClass().getName() != return.getClass().getName()
this.winner.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getMisterX():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.currentGameState != null
this.map has only one value
this.map != null
this.misterX has only one value
this.misterX != null
this.detectives has only one value
this.detectives != null
this.positionChecker has only one value
this.positionChecker != null
this.round one of { 1, 2 }
this.winner != null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getMisterX():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == return
this.misterX.getClass().getName() == return.getClass().getName()
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.misterX)
return.getClass().getName() == orig(this.misterX.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
mp1401.examples.misterx.model.game.GameImpl.instance != null
this.currentGameState != null
this.map has only one value
this.map != null
this.detectives has only one value
this.detectives != null
this.positionChecker has only one value
this.positionChecker != null
this.round one of { 1, 2 }
this.winner != null
return has only one value
return != null
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
this.currentGameState.getClass().getName() != return.getClass().getName()
this.map.getClass().getName() != return.getClass().getName()
this.detectives.getClass().getName() != return.getClass().getName()
this.winner.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getPositionChecker():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getPositionChecker():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == return
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.positionChecker)
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
return has only one value
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getRound():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.CheckSituationGameStates.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 1
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getRound():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == return
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
return == orig(this.round)
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.CheckSituationGameStates.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
return == 1
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getWinner():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.getWinner():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == return
this.winner.getClass().getName() == return.getClass().getName()
return == orig(this.winner)
return.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.increaseRound():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 0, 1 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.increaseRound():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.init():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DefaultGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.init():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.initGameState():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState == null
this.map == null
this.misterX == null
this.detectives == null
this.positionChecker has only one value
this.round == 0
this.winner == null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.initGameState():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.map == orig(this.map)
this.misterX == orig(this.misterX)
this.detectives == orig(this.detectives)
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DefaultGameState.class
this.map == null
this.misterX == null
this.detectives == null
this.positionChecker has only one value
this.round == 0
this.winner == null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.initHelpers():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState == null
this.map == null
this.misterX == null
this.detectives == null
this.positionChecker == null
this.round == 0
this.winner == null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.initHelpers():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.currentGameState == orig(this.currentGameState)
this.map == orig(this.map)
this.misterX == orig(this.misterX)
this.detectives == orig(this.detectives)
this.round == orig(this.round)
this.winner == orig(this.winner)
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState == null
this.map == null
this.misterX == null
this.detectives == null
this.positionChecker has only one value
this.round == 0
this.winner == null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.isReady():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.isReady():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
return == true
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.isReady():::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.moveDetectiveTo(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.moveDetectiveTo(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.moveMisterXTo(mp1401.examples.misterx.model.gameitems.City):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.MisterXMovementGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.moveMisterXTo(mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.notifyGameStateChangeObservers():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.notifyGameStateChangeObservers():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setCurrentGameState(mp1401.examples.misterx.model.game.states.GameState):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != arg0.getClass().getName()
this.observers.getClass().getName() != arg0.getClass().getName()
this.currentGameState.getClass().getName() != arg0.getClass().getName()
this.map.getClass().getName() != arg0.getClass().getName()
this.misterX.getClass().getName() != arg0.getClass().getName()
this.detectives.getClass().getName() != arg0.getClass().getName()
this.winner.getClass().getName() != arg0.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setCurrentGameState(mp1401.examples.misterx.model.game.states.GameState):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(arg0)
this.currentGameState.getClass().getName() == orig(arg0.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round one of { 1, 2 }
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.observers.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.currentGameState.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.map.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.misterX.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.detectives.getClass().getName() != orig(this.currentGameState.getClass().getName())
this.winner.getClass().getName() != orig(this.currentGameState.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setDefaultValues():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DefaultGameState.class
this.map == null
this.misterX == null
this.detectives == null
this.positionChecker has only one value
this.round == 0
this.winner == null
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setDefaultValues():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.currentGameState == orig(this.currentGameState)
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
mp1401.examples.misterx.model.game.GameImpl.instance == null
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.DefaultGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::ENTER
this.misterX.getClass().getName() == arg0.getClass().getName()
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0 has only one value
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(arg0)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.misterX.getClass().getName() == orig(arg0.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setStartPosition(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 1
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setStartPosition(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 1
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setWinner(mp1401.examples.misterx.model.gameitems.Character):::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.CheckSituationGameStates.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 2
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.setWinner(mp1401.examples.misterx.model.gameitems.Character):::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentGameState == orig(this.currentGameState)
this.currentGameState.getClass().getName() == orig(this.currentGameState.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.round == orig(this.round)
this.winner == orig(arg0)
this.winner.getClass().getName() == orig(arg0.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.CheckSituationGameStates.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 2
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.startGame():::ENTER
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.StartGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 0
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.GameImpl.startGame():::EXIT
mp1401.examples.misterx.model.game.GameImpl.instance == orig(mp1401.examples.misterx.model.game.GameImpl.instance)
mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName() == orig(mp1401.examples.misterx.model.game.GameImpl.instance.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.map == orig(this.map)
this.map.getClass().getName() == orig(this.map.getClass().getName())
this.misterX == orig(this.misterX)
this.misterX.getClass().getName() == orig(this.misterX.getClass().getName())
this.detectives == orig(this.detectives)
this.detectives.getClass().getName() == orig(this.detectives.getClass().getName())
this.positionChecker == orig(this.positionChecker)
this.winner == orig(this.winner)
this.winner.getClass().getName() == orig(this.winner.getClass().getName())
mp1401.examples.misterx.model.game.GameImpl.instance has only one value
this.currentGameState has only one value
this.currentGameState.getClass().getName() == mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.class
this.map has only one value
this.misterX has only one value
this.detectives has only one value
this.positionChecker has only one value
this.round == 1
this.winner has only one value
this.winner.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.AbstractHelper():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getDetectives():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getDetectives():::EXIT
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getGame():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getGame():::EXIT
return has only one value
return != null
return.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getMisterX():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.helpers.AbstractHelper.getMisterX():::EXIT
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.PositionChecker():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.canCharacterMoveToCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::ENTER
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.canCharacterMoveToCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT
return == true
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.canCharacterMoveToCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT
(return == true)  ==>  (orig(arg0) has only one value)
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT;condition="return == true"
return == true
orig(arg0) has only one value
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT;condition="not(return == true)"
return == false
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCharacterOnCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0 != null
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
arg1 != null
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCharacterOnCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT
return == false
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCharacterOnCity(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCityOccupiedByDetective(mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCityOccupiedByDetective(mp1401.examples.misterx.model.gameitems.City):::EXIT28
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCityOccupiedByDetective(mp1401.examples.misterx.model.gameitems.City):::EXIT28;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCityOccupiedByDetective(mp1401.examples.misterx.model.gameitems.City):::EXIT
return == false
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isCityOccupiedByDetective(mp1401.examples.misterx.model.gameitems.City):::EXIT;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT38
return == true
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT38;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT41
return == false
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT41;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT;condition="return == true"
return == true
===========================================================================
mp1401.examples.misterx.model.game.helpers.PositionChecker.isMisterXFound():::EXIT;condition="not(return == true)"
return == false
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP != null
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME != null
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState:::OBJECT
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.AbstractGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.changeGameState(mp1401.examples.misterx.model.game.states.GameState):::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.changeGameState(mp1401.examples.misterx.model.game.states.GameState):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.getGame():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.getGame():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return has only one value
return != null
return.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.toString():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractGameState.toString():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return.toString one of { "FinishedGameState", "MisterXMovementGameState", "SetStartPositionsGameState" }
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractMovementGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP != null
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME != null
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractMovementGameState:::OBJECT
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractMovementGameState.AbstractMovementGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractMovementGameState.moveCharacterAction(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::ENTER
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.states.AbstractMovementGameState.moveCharacterAction(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP != null
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME != null
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates:::OBJECT
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.CheckSituationGameStates():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.checkSituation():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.checkSituation():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.determineWinner():::ENTER
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.determineWinner():::EXIT34
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.determineWinner():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::ENTER
this has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT;condition="return == true"
return == true
orig(arg0) has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasDetectiveFoundMisterX(mp1401.examples.misterx.model.gameitems.Detective):::EXIT;condition="not(return == true)"
return == false
orig(arg0) has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasMisterXWon():::ENTER
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasMisterXWon():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return == false
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.hasMisterXWon():::EXIT;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.isGameFinished():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.isGameFinished():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.isGameFinished():::EXIT;condition="return == true"
return == true
orig(this) has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.isGameFinished():::EXIT;condition="not(return == true)"
return == false
orig(this) has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.setWinner():::ENTER
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.CheckSituationGameStates.setWinner():::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.DefaultGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.DefaultGameState:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.DefaultGameState.DefaultGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState:::CLASS
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE != null
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == "This detective has already moved in this round."
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP != null
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME != null
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState:::OBJECT
this.detectivesThatAlreadyMoved != null
this.detectivesThatAlreadyMoved[] elements != null
this.detectivesThatAlreadyMoved[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
this.detectivesThatAlreadyMoved.getClass().getName() == java.util.ArrayList.class
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DetectivesMovementGameState():::EXIT
this.detectivesThatAlreadyMoved[] == []
this.detectivesThatAlreadyMoved[].getClass().getName() == []
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.characterMovementPostAction(mp1401.examples.misterx.model.gameitems.Character):::ENTER
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.characterMovementPostAction(mp1401.examples.misterx.model.gameitems.Character):::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
size(this.detectivesThatAlreadyMoved[])-1 == orig(size(this.detectivesThatAlreadyMoved[]))
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 1, 2 }
orig(arg0.getClass().getName()) in this.detectivesThatAlreadyMoved[].getClass().getName()
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.detectiveNotYetMovedAction(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::ENTER
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.detectiveNotYetMovedAction(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.hasDetectiveAlreadyMoved(mp1401.examples.misterx.model.gameitems.Detective):::ENTER
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.hasDetectiveAlreadyMoved(mp1401.examples.misterx.model.gameitems.Detective):::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved[] == orig(this.detectivesThatAlreadyMoved[])
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
return == false
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.hasDetectiveAlreadyMoved(mp1401.examples.misterx.model.gameitems.Detective):::EXIT;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.haveAllDetectivesMoved():::ENTER
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.haveAllDetectivesMoved():::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved[] == orig(this.detectivesThatAlreadyMoved[])
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 1)  <==>  (return == false)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 1)  <==>  (size(this.detectivesThatAlreadyMoved[]) == 1)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 1)  <==>  (this.detectivesThatAlreadyMoved[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl])
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 1)  ==>  (this.detectivesThatAlreadyMoved[] elements has only one value)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 2)  <==>  (return == true)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 2)  <==>  (size(this.detectivesThatAlreadyMoved[]) == 2)
(this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 2)  <==>  (this.detectivesThatAlreadyMoved[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl])
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.haveAllDetectivesMoved():::EXIT;condition="return == true"
this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 2
this.detectivesThatAlreadyMoved[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl]
return == true
size(this.detectivesThatAlreadyMoved[]) == 2
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.haveAllDetectivesMoved():::EXIT;condition="not(return == true)"
this.detectivesThatAlreadyMoved[] contains no nulls and has only one value, of length 1
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl]
return == false
size(this.detectivesThatAlreadyMoved[]) == 1
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.moveDetectiveTo(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::ENTER
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.moveDetectiveTo(mp1401.examples.misterx.model.gameitems.Detective, mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.updateGameState():::ENTER
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl, mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 1, 2 }
===========================================================================
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.updateGameState():::EXIT
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE)
mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.DetectivesMovementGameState.DETECTIVE_HAS_ALREADY_MOVED_MESSAGE.toString)
this.detectivesThatAlreadyMoved == orig(this.detectivesThatAlreadyMoved)
this.detectivesThatAlreadyMoved.getClass().getName() == orig(this.detectivesThatAlreadyMoved.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.detectivesThatAlreadyMoved[] elements has only one value
this.detectivesThatAlreadyMoved[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl] }
size(this.detectivesThatAlreadyMoved[]) one of { 0, 1 }
===========================================================================
mp1401.examples.misterx.model.game.states.FinishedGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.FinishedGameState:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.FinishedGameState.FinishedGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState:::OBJECT
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState.MisterXMovementGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState.characterMovementPostAction(mp1401.examples.misterx.model.gameitems.Character):::ENTER
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState.characterMovementPostAction(mp1401.examples.misterx.model.gameitems.Character):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState.moveMisterXTo(mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.states.MisterXMovementGameState.moveMisterXTo(mp1401.examples.misterx.model.gameitems.City):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP != null
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE != null
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME != null
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT != null
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION != null
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState:::OBJECT
this has only one value
this.charactersThatAlreadySetStartPosition has only one value
this.charactersThatAlreadySetStartPosition != null
this.charactersThatAlreadySetStartPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.SetStartPositionsGameState():::EXIT
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.allCharactersHaveSetStartPosition():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.allCharactersHaveSetStartPosition():::EXIT
this.charactersThatAlreadySetStartPosition == orig(this.charactersThatAlreadySetStartPosition)
this.charactersThatAlreadySetStartPosition.getClass().getName() == orig(this.charactersThatAlreadySetStartPosition.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.allCharactersHaveSetStartPosition():::EXIT;condition="return == true"
return == true
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.allCharactersHaveSetStartPosition():::EXIT;condition="not(return == true)"
return == false
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.characterHasAlreadySetStartPosition(mp1401.examples.misterx.model.gameitems.Character):::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.characterHasAlreadySetStartPosition(mp1401.examples.misterx.model.gameitems.Character):::EXIT34
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.characterHasAlreadySetStartPosition(mp1401.examples.misterx.model.gameitems.Character):::EXIT34;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.characterHasAlreadySetStartPosition(mp1401.examples.misterx.model.gameitems.Character):::EXIT
this.charactersThatAlreadySetStartPosition == orig(this.charactersThatAlreadySetStartPosition)
this.charactersThatAlreadySetStartPosition.getClass().getName() == orig(this.charactersThatAlreadySetStartPosition.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return == false
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.characterHasAlreadySetStartPosition(mp1401.examples.misterx.model.gameitems.Character):::EXIT;condition="not(return == true)"
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.numberOfCharacters():::ENTER
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.numberOfCharacters():::EXIT
this.charactersThatAlreadySetStartPosition == orig(this.charactersThatAlreadySetStartPosition)
this.charactersThatAlreadySetStartPosition.getClass().getName() == orig(this.charactersThatAlreadySetStartPosition.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
return == 3
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.setStartPosition(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::ENTER
arg1.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.game.states.SetStartPositionsGameState.setStartPosition(mp1401.examples.misterx.model.gameitems.Character, mp1401.examples.misterx.model.gameitems.City):::EXIT
this.charactersThatAlreadySetStartPosition == orig(this.charactersThatAlreadySetStartPosition)
this.charactersThatAlreadySetStartPosition.getClass().getName() == orig(this.charactersThatAlreadySetStartPosition.getClass().getName())
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState:::CLASS
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == " is not possible in "
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == "Fill Map"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == "Add Mister X"
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == "Add Detective"
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == "Set Start Position"
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == "Start Game"
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == "Mister X Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == "Detective Movement"
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION has only one value
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == "Check Situation"
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState:::OBJECT
this has only one value
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.StartGameState(mp1401.examples.misterx.model.game.Game):::ENTER
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.StartGameState(mp1401.examples.misterx.model.game.Game):::EXIT
this.misterXAlreadySet == false
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.addDetective(mp1401.examples.misterx.model.gameitems.Detective):::ENTER
this.misterXAlreadySet == true
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.addDetective(mp1401.examples.misterx.model.gameitems.Detective):::EXIT
this.misterXAlreadySet == orig(this.misterXAlreadySet)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.misterXAlreadySet == true
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.addMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::ENTER
this.misterXAlreadySet == false
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.class
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.addMisterX(mp1401.examples.misterx.model.gameitems.MisterX):::EXIT
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.misterXAlreadySet == true
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.fillMap(mp1401.examples.misterx.model.mapparser.MapDataParser):::ENTER
this.misterXAlreadySet == false
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.demo.util.DemoMapDataParser.class
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.fillMap(mp1401.examples.misterx.model.mapparser.MapDataParser):::EXIT
this.misterXAlreadySet == orig(this.misterXAlreadySet)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.misterXAlreadySet == false
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.startGame():::ENTER
this.misterXAlreadySet == true
===========================================================================
mp1401.examples.misterx.model.game.states.StartGameState.startGame():::EXIT
this.misterXAlreadySet == orig(this.misterXAlreadySet)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE)
mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.NOT_POSSIBLE_IN_CURRENT_STATE_MESSAGE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP)
mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.FILL_MAP.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_MISTER_X.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE)
mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.ADD_DETECTIVE.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION)
mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.SET_START_POSITION.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME)
mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.START_GAME.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.MISTER_X_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT)
mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.DETECTIVE_MOVEMEMT.toString)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION)
mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString == orig(mp1401.examples.misterx.model.game.states.AbstractGameState.CHECK_SIUTATION.toString)
this.misterXAlreadySet == true
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator:::OBJECT
this.gameItems != null
this.gameItems[] elements != null
this.gameItems.getClass().getName() == java.util.ArrayList.class
this.position >= 0
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.GameItemListIterator(java.util.List):::ENTER
arg0 != null
arg0[] elements != null
arg0.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.GameItemListIterator(java.util.List):::EXIT
this.gameItems == orig(arg0)
this.gameItems.getClass().getName() == orig(arg0.getClass().getName())
arg0[] == orig(arg0[])
this.position == 0
arg0[] elements != null
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.hasNext():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.hasNext():::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems[] == orig(this.gameItems[])
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.position == orig(this.position)
(return == false)  ==>  (size(this.gameItems[]) one of { 0, 1, 2 })
(return == false)  ==>  (this.position one of { 0, 1, 2 })
(return == true)  ==>  (size(this.gameItems[]) one of { 1, 2, 7 })
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.hasNext():::EXIT;condition="return == true"
return == true
size(this.gameItems[]) one of { 1, 2, 7 }
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.hasNext():::EXIT;condition="not(return == true)"
this.position one of { 0, 1, 2 }
return == false
size(this.gameItems[]) one of { 0, 1, 2 }
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.next():::ENTER
size(this.gameItems[]) one of { 1, 2, 7 }
===========================================================================
mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.next():::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems[] == orig(this.gameItems[])
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.position >= 1
return != null
size(this.gameItems[]) one of { 1, 2, 7 }
return.getClass().getName() in this.gameItems[].getClass().getName()
this.gameItems.getClass().getName() != return.getClass().getName()
this.position - orig(this.position) - 1 == 0
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator:::OBJECT
this.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.city != null
this.city.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.CityImpl.class
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.AbstractCityDecorator(mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.CityImpl.class
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.AbstractCityDecorator(mp1401.examples.misterx.model.gameitems.City):::EXIT
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.equals(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.equals(java.lang.Object):::EXIT
this.city == orig(this.city)
this.city.getClass().getName() == orig(this.city.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
(return == true)  ==>  (orig(arg0) has only one value)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (this.city has only one value)
(return == true)  ==>  (this.observers has only one value)
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.equals(java.lang.Object):::EXIT;condition="return == true"
this.city has only one value
this.observers has only one value
return == true
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.equals(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.getName():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.getName():::EXIT
this.city == orig(this.city)
this.city.getClass().getName() == orig(this.city.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return != null
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.toString():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.AbstractCityDecorator.toString():::EXIT
this.city == orig(this.city)
this.city.getClass().getName() == orig(this.city.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity:::OBJECT
this.cachedConnections == null
this.isConnectionCacheValid == false
this.city != null
this.city.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.CityImpl.class
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
this.city.getClass().getName() != this.observers.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity.CachedCity(mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.CityImpl.class
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity.CachedCity(mp1401.examples.misterx.model.gameitems.City):::EXIT
this.city == orig(arg0)
this.city.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity.gameItemUpdate():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.decorators.CachedCity.gameItemUpdate():::EXIT
this.cachedConnections == orig(this.cachedConnections)
this.isConnectionCacheValid == orig(this.isConnectionCacheValid)
this.city == orig(this.city)
this.city.getClass().getName() == orig(this.city.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.ConnectionType:::OBJECT
this.typeAsString.toString one of { "Car", "Flight", "Train" }
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.ConnectionType(java.lang.String, int, java.lang.String):::ENTER
arg0.toString one of { "CAR", "PLANE", "TRAIN" }
arg1 one of { 0, 1, 2 }
arg2.toString one of { "Car", "Flight", "Train" }
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.ConnectionType(java.lang.String, int, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
arg0.toString one of { "CAR", "PLANE", "TRAIN" }
arg2.toString one of { "Car", "Flight", "Train" }
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType:::CLASS
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == "<Unknown Detective>"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.DetectiveType[].class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] elements != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.DetectiveType.class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString elements != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString.toString == [<Unknown Detective>, Red, Green, Blue, Yellow]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == "Red"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == "Green"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == "Blue"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == "Yellow"
size(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[]) == 5
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType:::OBJECT
this.typeAsString != null
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DetectiveType(java.lang.String, int, java.lang.String):::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DetectiveType(java.lang.String, int, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg2.toString == orig(arg2.toString)
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.toString():::ENTER
this.typeAsString.toString one of { "Blue", "Green" }
===========================================================================
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.toString():::EXIT
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString)
this.typeAsString == orig(this.typeAsString)
this.typeAsString.toString == orig(this.typeAsString.toString)
this.typeAsString.toString one of { "Blue", "Green" }
return.toString one of { "Blue", "Green" }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl:::OBJECT
this.currentPosition != null
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl.AbstractCharacterImpl():::EXIT
this.currentPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl.getCurrentPosition():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl.getCurrentPosition():::EXIT
this.currentPosition == orig(this.currentPosition)
this.currentPosition.getClass().getName() == orig(this.currentPosition.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return != null
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl.setCurrentPosition(mp1401.examples.misterx.model.gameitems.City):::ENTER
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractCharacterImpl.setCurrentPosition(mp1401.examples.misterx.model.gameitems.City):::EXIT
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.currentPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl:::OBJECT
this.observers != null
this.observers[] elements != null
this.observers[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.AbstractGameItemImpl():::EXIT
this.observers[] == []
this.observers[].getClass().getName() == []
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.addGameItemObserver(mp1401.examples.misterx.model.observers.GameItemObserver):::ENTER
this has only one value
this.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
this.observers has only one value
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.addGameItemObserver(mp1401.examples.misterx.model.observers.GameItemObserver):::EXIT
this.observers == orig(this.observers)
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
size(this.observers[])-1 == orig(size(this.observers[]))
this.observers has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.getGame():::ENTER
this.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.observers[] == []
this.observers[].getClass().getName() == []
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.getGame():::EXIT
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.observers[] == []
this.observers[].getClass().getName() == []
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.game.GameImpl.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.notifyGameItemObservers():::ENTER
this.observers[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity] }
size(this.observers[]) one of { 0, 7 }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.AbstractGameItemImpl.notifyGameItemObservers():::EXIT
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.observers[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity] }
size(this.observers[]) one of { 0, 7 }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl:::OBJECT
this.name != null
this.point != null
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.CityImpl(java.lang.String, java.awt.Point):::ENTER
arg0 != null
arg1 != null
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.CityImpl(java.lang.String, java.awt.Point):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.equals(java.lang.Object):::ENTER
arg0 != null
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.equals(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.point == orig(this.point)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
(return == true)  ==>  (orig(arg0) has only one value)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (this.name has only one value)
(return == true)  ==>  (this.name.toString == "Lausanne")
(return == true)  ==>  (this.observers has only one value)
(return == true)  ==>  (this.point has only one value)
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.equals(java.lang.Object):::EXIT;condition="return == true"
this.name has only one value
this.name.toString == "Lausanne"
this.point has only one value
this.observers has only one value
return == true
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.equals(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.getName():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.getName():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.point == orig(this.point)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return != null
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.toString():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.CityImpl.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.point == orig(this.point)
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return != null
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl:::OBJECT
this.cityA.getClass().getName() == this.cityB.getClass().getName()
this.cityA.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == "Car"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.ConnectionType[].class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.ConnectionType.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString == [Car, Train, Flight]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString elements one of { "Car", "Flight", "Train" }
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == "Train"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == "Flight"
this.connectionType.typeAsString.toString one of { "Car", "Flight", "Train" }
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
size(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[]) == 3
this.cityA.getClass().getName() != mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName()
this.cityA.getClass().getName() != this.observers.getClass().getName()
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() != this.observers.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.ConnectionImpl(mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.enums.ConnectionType):::ENTER
arg0.getClass().getName() == arg1.getClass().getName()
arg0.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == "Car"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.ConnectionType[].class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType, mp1401.examples.misterx.model.gameitems.enums.ConnectionType]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.ConnectionType.class
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString contains no nulls and has only one value, of length 3
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString == [Car, Train, Flight]
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString.toString elements one of { "Car", "Flight", "Train" }
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == "Train"
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == "Flight"
arg2.typeAsString.toString one of { "Car", "Flight", "Train" }
size(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[]) == 3
arg0.getClass().getName() != mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.ConnectionImpl(mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.City, mp1401.examples.misterx.model.gameitems.enums.ConnectionType):::EXIT
this.cityA == orig(arg0)
this.cityA.getClass().getName() == orig(arg0.getClass().getName())
this.cityA.getClass().getName() == orig(arg1.getClass().getName())
this.cityB == orig(arg1)
this.connectionType == orig(arg2)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.CAR.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.TRAIN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.ConnectionType.PLANE.typeAsString.toString)
this.connectionType.typeAsString == arg2.typeAsString
arg2.typeAsString == orig(arg2.typeAsString)
arg2.typeAsString.toString == orig(arg2.typeAsString.toString)
arg2.typeAsString.toString one of { "Car", "Flight", "Train" }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl:::OBJECT
this.type != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == "<Unknown Detective>"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.DetectiveType[].class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] elements != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.DetectiveType.class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString elements != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString.toString == [<Unknown Detective>, Red, Green, Blue, Yellow]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == "Red"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == "Green"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == "Blue"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString != null
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == "Yellow"
this.type.typeAsString != null
this.type.typeAsString.toString one of { "Blue", "Green" }
this.currentPosition != null
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
size(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[]) == 5
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.DetectiveImpl(mp1401.examples.misterx.model.gameitems.enums.DetectiveType):::ENTER
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == "<Unknown Detective>"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == mp1401.examples.misterx.model.gameitems.enums.DetectiveType[].class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType, mp1401.examples.misterx.model.gameitems.enums.DetectiveType]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.enums.DetectiveType.class
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString contains no nulls and has only one value, of length 5
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString.toString == [<Unknown Detective>, Red, Green, Blue, Yellow]
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == "Red"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == "Green"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == "Blue"
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString has only one value
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == "Yellow"
arg0.typeAsString.toString one of { "Blue", "Green" }
size(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[]) == 5
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.DetectiveImpl(mp1401.examples.misterx.model.gameitems.enums.DetectiveType):::EXIT
this.type == orig(arg0)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString)
this.type.typeAsString == arg0.typeAsString
arg0.typeAsString == orig(arg0.typeAsString)
arg0.typeAsString.toString == orig(arg0.typeAsString.toString)
this.currentPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.class
arg0.typeAsString.toString one of { "Blue", "Green" }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.toString():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.DetectiveImpl.toString():::EXIT
this.type == orig(this.type)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.DEFAULT.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName() == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES.getClass().getName())
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[] == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[])
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.$VALUES[].typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.RED.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.GREEN.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.BLUE.typeAsString.toString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString)
mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString == orig(mp1401.examples.misterx.model.gameitems.enums.DetectiveType.YELLOW.typeAsString.toString)
this.type.typeAsString == orig(this.type.typeAsString)
this.type.typeAsString.toString == orig(this.type.typeAsString.toString)
this.currentPosition == orig(this.currentPosition)
this.currentPosition.getClass().getName() == orig(this.currentPosition.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return.toString one of { "Blue-Detective", "Green-Detective" }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl:::OBJECT
this.connections.gameItems.getClass().getName() == this.observers.getClass().getName()
this.connections.observers.getClass().getName() == this.observers.getClass().getName()
this has only one value
this.connections has only one value
this.connections != null
this.connections.gameItems has only one value
this.connections.gameItems != null
this.connections.gameItems[] elements != null
this.connections.gameItems[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
this.connections.gameItems[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl] }
this.connections.observers has only one value
this.connections.observers != null
this.connections.observers[] elements != null
this.connections.observers[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.cities has only one value
this.cities != null
this.cities.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
this.mapDataParser.getClass().getName() == mp1401.examples.misterx.demo.util.DemoMapDataParser.class
this.observers has only one value
this.observers != null
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
size(this.connections.gameItems[]) one of { 0, 11 }
size(this.connections.gameItems[])-1 != 0
this.cities.getClass().getName() != this.mapDataParser.getClass().getName()
this.cities.getClass().getName() != this.observers.getClass().getName()
this.mapDataParser.getClass().getName() != this.observers.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.MapImpl():::EXIT
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.connections.observers[] == []
this.connections.observers[].getClass().getName() == []
this.mapDataParser == null
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.fillMap():::ENTER
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.connections.observers[] == []
this.connections.observers[].getClass().getName() == []
this.mapDataParser has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.fillMap():::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.observers == orig(this.connections.observers)
this.cities == orig(this.cities)
this.cities.getClass().getName() == orig(this.cities.getClass().getName())
this.mapDataParser == orig(this.mapDataParser)
this.mapDataParser.getClass().getName() == orig(this.mapDataParser.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getCities():::ENTER
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getCities():::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.gameItems[] == orig(this.connections.gameItems[])
this.connections.observers == orig(this.connections.observers)
this.connections.observers[] == orig(this.connections.observers[])
this.cities == return
this.cities.getClass().getName() == return.getClass().getName()
this.mapDataParser == orig(this.mapDataParser)
this.mapDataParser.getClass().getName() == orig(this.mapDataParser.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return == orig(this.cities)
return.getClass().getName() == orig(this.cities.getClass().getName())
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
this.mapDataParser.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getCityByName(java.lang.String):::ENTER
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getCityByName(java.lang.String):::EXIT60
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getCityByName(java.lang.String):::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.gameItems[] == orig(this.connections.gameItems[])
this.connections.observers == orig(this.connections.observers)
this.connections.observers[] == orig(this.connections.observers[])
this.cities == orig(this.cities)
this.cities.getClass().getName() == orig(this.cities.getClass().getName())
this.mapDataParser == orig(this.mapDataParser)
this.mapDataParser.getClass().getName() == orig(this.mapDataParser.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
arg0.toString == orig(arg0.toString)
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
return.getClass().getName() in this.connections.observers[].getClass().getName()
this.cities.getClass().getName() != return.getClass().getName()
this.mapDataParser.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getConnections():::ENTER
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.mapDataParser has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.getConnections():::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.gameItems[] == orig(this.connections.gameItems[])
this.connections.observers == orig(this.connections.observers)
this.connections.observers[] == orig(this.connections.observers[])
this.cities == orig(this.cities)
this.cities.getClass().getName() == return.getClass().getName()
this.mapDataParser == orig(this.mapDataParser)
this.mapDataParser.getClass().getName() == orig(this.mapDataParser.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return.getClass().getName() == orig(this.cities.getClass().getName())
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.mapDataParser has only one value
return has only one value
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.class
this.mapDataParser.getClass().getName() != return.getClass().getName()
this.observers.getClass().getName() != return.getClass().getName()
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.isFilled():::ENTER
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.isFilled():::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.gameItems[] == orig(this.connections.gameItems[])
this.connections.observers == orig(this.connections.observers)
this.connections.observers[] == orig(this.connections.observers[])
this.cities == orig(this.cities)
this.cities.getClass().getName() == orig(this.cities.getClass().getName())
this.mapDataParser == orig(this.mapDataParser)
this.mapDataParser.getClass().getName() == orig(this.mapDataParser.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.connections.gameItems[] contains no nulls and has only one value, of length 11
this.connections.gameItems[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections.observers[] contains no nulls and has only one value, of length 7
this.connections.observers[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.mapDataParser has only one value
return == true
size(this.connections.gameItems[]) == 11
size(this.connections.observers[]) == 7
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.isFilled():::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.setMapDataParser(mp1401.examples.misterx.model.mapparser.MapDataParser):::ENTER
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.connections.observers[] == []
this.connections.observers[].getClass().getName() == []
this.mapDataParser == null
arg0 has only one value
arg0.getClass().getName() == mp1401.examples.misterx.demo.util.DemoMapDataParser.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MapImpl.setMapDataParser(mp1401.examples.misterx.model.mapparser.MapDataParser):::EXIT
this.connections == orig(this.connections)
this.connections.gameItems == orig(this.connections.gameItems)
this.connections.gameItems[] == orig(this.connections.gameItems[])
this.connections.observers == orig(this.connections.observers)
this.connections.observers[] == orig(this.connections.observers[])
this.cities == orig(this.cities)
this.cities.getClass().getName() == orig(this.cities.getClass().getName())
this.mapDataParser == orig(arg0)
this.mapDataParser.getClass().getName() == orig(arg0.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.connections.gameItems.getClass().getName())
this.observers.getClass().getName() == orig(this.connections.observers.getClass().getName())
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.connections.gameItems[] == []
this.connections.gameItems[].getClass().getName() == []
this.connections.observers[] == []
this.connections.observers[].getClass().getName() == []
this.mapDataParser has only one value
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MisterXImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MisterXImpl:::OBJECT
this.currentPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.class
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.MisterXImpl.MisterXImpl():::EXIT
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl:::CLASS
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN has only one value
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN.toString == "<Unknown Character>"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl:::OBJECT
this has only one value
this.currentPosition has only one value
this.currentPosition.getClass().getName() == mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.class
this.observers has only one value
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UnknownCharacterImpl():::EXIT
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.toString():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.toString():::EXIT
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN == orig(mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN)
mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN.toString == orig(mp1401.examples.misterx.model.gameitems.impl.UnknownCharacterImpl.UNKNOWN.toString)
this.currentPosition == orig(this.currentPosition)
this.currentPosition.getClass().getName() == orig(this.currentPosition.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return has only one value
return.toString == "<Unknown Character>"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl:::CLASS
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.UNKNOWN has only one value
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.UNKNOWN.toString == "<Unknown City>"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl:::OBJECT
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.UNKNOWN == this.name
this.name.toString == "<Unknown City>"
this.observers[] == []
this.observers[].getClass().getName() == []
this.observers.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.UnknownCityImpl.UnknownCityImpl():::EXIT
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl:::CLASS
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl:::OBJECT
this.gameItems != null
this.gameItems[] elements != null
this.gameItems.getClass().getName() == java.util.ArrayList.class
this.observers != null
this.observers[] elements != null
this.observers[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.observers[].getClass().getName() one of { [], [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity] }
this.observers.getClass().getName() == java.util.ArrayList.class
size(this.observers[]) one of { 0, 7 }
size(this.observers[])-1 != 0
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.GameItemListImpl():::EXIT
this.gameItems[] == []
this.gameItems[].getClass().getName() == []
this.observers[] == []
this.observers[].getClass().getName() == []
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.add(mp1401.examples.misterx.model.gameitems.GameItem):::ENTER
this.observers[] == []
this.observers[].getClass().getName() == []
size(this.gameItems[]) one of { 0, 1, 2 }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.add(mp1401.examples.misterx.model.gameitems.GameItem):::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
size(this.gameItems[])-1 == orig(size(this.gameItems[]))
this.observers[] == []
this.observers[].getClass().getName() == []
return == true
size(this.gameItems[]) one of { 1, 2, 3 }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.add(mp1401.examples.misterx.model.gameitems.GameItem):::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.addAll(java.util.Collection):::ENTER
this.gameItems[] == []
this.gameItems[].getClass().getName() == []
arg0.getClass().getName() == java.util.ArrayList.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.addAll(java.util.Collection):::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.gameItems[].getClass().getName() one of { [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity], [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl] }
return == true
size(this.gameItems[]) one of { 7, 11 }
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.addAll(java.util.Collection):::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.iterator():::ENTER
this.observers[] == []
this.observers[].getClass().getName() == []
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.iterator():::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems[] == orig(this.gameItems[])
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
this.observers[] == []
this.observers[].getClass().getName() == []
return != null
return.getClass().getName() == mp1401.examples.misterx.model.gameitems.collections.GameItemListIterator.class
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.notifyIfNecessary(boolean):::ENTER
arg0 == true
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.notifyIfNecessary(boolean):::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems[] == orig(this.gameItems[])
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
return == true
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.notifyIfNecessary(boolean):::EXIT;condition="return == true"
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.size():::ENTER
===========================================================================
mp1401.examples.misterx.model.gameitems.impl.collections.GameItemListImpl.size():::EXIT
this.gameItems == orig(this.gameItems)
this.gameItems[] == orig(this.gameItems[])
this.gameItems.getClass().getName() == orig(this.gameItems.getClass().getName())
this.observers == orig(this.observers)
this.observers[] == orig(this.observers[])
this.observers.getClass().getName() == orig(this.observers.getClass().getName())
===========================================================================
mp1401.examples.misterx.model.mapparser.MapData:::OBJECT
this has only one value
this.cities has only one value
this.cities[] contains no nulls and has only one value, of length 7
this.cities[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
this.cities[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
this.cities.getClass().getName() == java.util.ArrayList.class
this.connections has only one value
this.connections[] contains no nulls and has only one value, of length 11
this.connections[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
this.connections[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
this.connections.getClass().getName() == java.util.ArrayList.class
size(this.cities[]) == 7
size(this.connections[]) == 11
===========================================================================
mp1401.examples.misterx.model.mapparser.MapData.MapData(java.util.List, java.util.List):::ENTER
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 7
arg0[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
arg0[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
arg0.getClass().getName() == java.util.ArrayList.class
arg1 has only one value
arg1[] contains no nulls and has only one value, of length 11
arg1[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
arg1[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
arg1.getClass().getName() == java.util.ArrayList.class
size(arg0[]) == 7
size(arg1[]) == 11
===========================================================================
mp1401.examples.misterx.model.mapparser.MapData.MapData(java.util.List, java.util.List):::EXIT
arg0[] == orig(arg0[])
arg1[] == orig(arg1[])
arg0[] contains no nulls and has only one value, of length 7
arg0[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity, mp1401.examples.misterx.model.gameitems.decorators.CachedCity]
arg0[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.decorators.CachedCity.class
arg1[] contains no nulls and has only one value, of length 11
arg1[].getClass().getName() == [mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl, mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl]
arg1[].getClass().getName() elements == mp1401.examples.misterx.model.gameitems.impl.ConnectionImpl.class
Exiting Daikon.
