Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 3 times.  Unmatched entries are ignored!
Unterminated calls:
  org.ands.rifcs.example.SampleRIFCSBuildCollectionV1Dot6Number1.main(java.lang.String[]) : 1 invocation
  org.ands.rifcs.base.RIFCSWrapper.validate() : 1 invocation
  org.ands.rifcs.base.RIFCSWrapper.doXercesWorkaround() : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
org.ands.rifcs.base.Address:::OBJECT
this.electronics.getClass().getName() == this.physicals.getClass().getName()
this has only one value
this.electronics has only one value
this.electronics[] elements has only one value
this.electronics[].getClass().getName() elements == org.ands.rifcs.base.Electronic.class
this.electronics[].getClass().getName() one of { [], [org.ands.rifcs.base.Electronic] }
this.electronics.getClass().getName() == java.util.ArrayList.class
this.physicals has only one value
this.physicals[] == []
this.physicals[].getClass().getName() == []
this.e has only one value
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.electronics[]) one of { 0, 1 }
this.electronics.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Address.Address(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Address.Address(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.addElectronic(org.ands.rifcs.base.Electronic):::ENTER
this.electronics.getClass().getName() == arg0.notes.getClass().getName()
this.electronics.getClass().getName() == arg0.mediaTypes.getClass().getName()
this.electronics.getClass().getName() == arg0.args.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.electronics[] == []
this.electronics[].getClass().getName() == []
arg0 has only one value
arg0.notes has only one value
arg0.notes[] contains no nulls and has only one value, of length 2
arg0.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
arg0.notes[].getClass().getName() elements == org.ands.rifcs.base.Notes.class
arg0.mediaTypes has only one value
arg0.mediaTypes[] contains no nulls and has only one value, of length 2
arg0.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
arg0.mediaTypes[].getClass().getName() elements == org.ands.rifcs.base.MediaType.class
arg0.args has only one value
arg0.args[] contains no nulls and has only one value, of length 2
arg0.args[].getClass().getName() == [org.ands.rifcs.base.Arg, org.ands.rifcs.base.Arg]
arg0.args[].getClass().getName() elements == org.ands.rifcs.base.Arg.class
arg0.e has only one value
size(arg0.notes[]) == 2
size(arg0.mediaTypes[]) == 2
size(arg0.args[]) == 2
===========================================================================
org.ands.rifcs.base.Address.addElectronic(org.ands.rifcs.base.Electronic):::EXIT
this.electronics == orig(this.electronics)
this.electronics.getClass().getName() == arg0.notes.getClass().getName()
this.electronics.getClass().getName() == arg0.mediaTypes.getClass().getName()
this.electronics.getClass().getName() == arg0.args.getClass().getName()
this.electronics.getClass().getName() == orig(this.electronics.getClass().getName())
this.electronics.getClass().getName() == orig(this.physicals.getClass().getName())
this.electronics.getClass().getName() == orig(arg0.notes.getClass().getName())
this.electronics.getClass().getName() == orig(arg0.mediaTypes.getClass().getName())
this.electronics.getClass().getName() == orig(arg0.args.getClass().getName())
this.physicals == orig(this.physicals)
this.physicals[] == orig(this.physicals[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.notes == orig(arg0.notes)
arg0.notes[] == orig(arg0.notes[])
arg0.mediaTypes == orig(arg0.mediaTypes)
arg0.mediaTypes[] == orig(arg0.mediaTypes[])
arg0.args == orig(arg0.args)
arg0.args[] == orig(arg0.args[])
arg0.e == orig(arg0.e)
size(this.electronics[])-1 == orig(size(this.electronics[]))
this.electronics[] contains no nulls and has only one value, of length 1
this.electronics[].getClass().getName() == [org.ands.rifcs.base.Electronic]
arg0.notes has only one value
arg0.notes[] contains no nulls and has only one value, of length 2
arg0.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
arg0.notes[].getClass().getName() elements == org.ands.rifcs.base.Notes.class
arg0.mediaTypes has only one value
arg0.mediaTypes[] contains no nulls and has only one value, of length 2
arg0.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
arg0.mediaTypes[].getClass().getName() elements == org.ands.rifcs.base.MediaType.class
arg0.args has only one value
arg0.args[] contains no nulls and has only one value, of length 2
arg0.args[].getClass().getName() == [org.ands.rifcs.base.Arg, org.ands.rifcs.base.Arg]
arg0.args[].getClass().getName() elements == org.ands.rifcs.base.Arg.class
arg0.e has only one value
size(this.electronics[]) == 1
size(arg0.notes[]) == 2
size(arg0.mediaTypes[]) == 2
size(arg0.args[]) == 2
===========================================================================
org.ands.rifcs.base.Address.initElectronics():::ENTER
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.initElectronics():::EXIT
this.electronics == orig(this.electronics)
this.electronics[] == orig(this.electronics[])
this.electronics.getClass().getName() == orig(this.electronics.getClass().getName())
this.electronics.getClass().getName() == orig(this.physicals.getClass().getName())
this.physicals == orig(this.physicals)
this.physicals[] == orig(this.physicals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.initPhysicals():::ENTER
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.initPhysicals():::EXIT
this.electronics == orig(this.electronics)
this.electronics[] == orig(this.electronics[])
this.electronics.getClass().getName() == orig(this.electronics.getClass().getName())
this.electronics.getClass().getName() == orig(this.physicals.getClass().getName())
this.physicals == orig(this.physicals)
this.physicals[] == orig(this.physicals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.initStructures():::ENTER
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.initStructures():::EXIT
this.electronics == orig(this.electronics)
this.electronics[] == orig(this.electronics[])
this.electronics.getClass().getName() == orig(this.electronics.getClass().getName())
this.electronics.getClass().getName() == orig(this.physicals.getClass().getName())
this.physicals == orig(this.physicals)
this.physicals[] == orig(this.physicals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.newElectronic():::ENTER
this.electronics[] == []
this.electronics[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Address.newElectronic():::EXIT
this.electronics == orig(this.electronics)
this.electronics[] == orig(this.electronics[])
this.electronics.getClass().getName() == return.notes.getClass().getName()
this.electronics.getClass().getName() == return.mediaTypes.getClass().getName()
this.electronics.getClass().getName() == return.args.getClass().getName()
this.electronics.getClass().getName() == orig(this.electronics.getClass().getName())
this.electronics.getClass().getName() == orig(this.physicals.getClass().getName())
this.physicals == orig(this.physicals)
this.physicals[] == orig(this.physicals[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.electronics[] == []
this.electronics[].getClass().getName() == []
return has only one value
return.notes has only one value
return.notes[] == []
return.notes[].getClass().getName() == []
return.mediaTypes has only one value
return.mediaTypes[] == []
return.mediaTypes[].getClass().getName() == []
return.args has only one value
return.args[] == []
return.args[].getClass().getName() == []
return.e has only one value
===========================================================================
org.ands.rifcs.base.Arg:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Arg.Arg(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Arg.Arg(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Arg.setName(java.lang.String):::ENTER
arg0.toString one of { "name 1", "name 2" }
===========================================================================
org.ands.rifcs.base.Arg.setName(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "name 1", "name 2" }
===========================================================================
org.ands.rifcs.base.Arg.setRequired(java.lang.String):::ENTER
arg0.toString one of { "false", "true" }
===========================================================================
org.ands.rifcs.base.Arg.setRequired(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "false", "true" }
===========================================================================
org.ands.rifcs.base.Arg.setType(java.lang.String):::ENTER
arg0.toString one of { "type 1", "type 2" }
===========================================================================
org.ands.rifcs.base.Arg.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "type 1", "type 2" }
===========================================================================
org.ands.rifcs.base.Arg.setUse(java.lang.String):::ENTER
arg0.toString one of { "use 1", "use 2" }
===========================================================================
org.ands.rifcs.base.Arg.setUse(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "use 1", "use 2" }
===========================================================================
org.ands.rifcs.base.CitationDate:::OBJECT
this has only one value
this.e has only one value
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.CitationDate.CitationDate(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.CitationDate.CitationDate(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.CitationDate.setType(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "cdtype"
===========================================================================
org.ands.rifcs.base.CitationDate.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "cdtype"
===========================================================================
org.ands.rifcs.base.CitationDate.setValue(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "2014-09-08T11:25Z"
===========================================================================
org.ands.rifcs.base.CitationDate.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "2014-09-08T11:25Z"
===========================================================================
org.ands.rifcs.base.CitationInfo:::OBJECT
this.cm.identifier has only one value
this.cm.identifier.e has only one value
this.cm.identifier.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.cm.names has only one value
this.cm.names[] contains no nulls and has only one value, of length 1
this.cm.names[] elements has only one value
this.cm.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.cm.names[].getClass().getName() elements == org.ands.rifcs.base.Contributor.class
this.cm.names.getClass().getName() == java.util.ArrayList.class
this.cm.dates has only one value
this.cm.dates[] contains no nulls and has only one value, of length 1
this.cm.dates[] elements has only one value
this.cm.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
this.cm.dates[].getClass().getName() elements == org.ands.rifcs.base.CitationDate.class
this.cm.dates.getClass().getName() == java.util.ArrayList.class
this.cm.e has only one value
this.cm.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.cm.names[]) == 1
size(this.cm.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationInfo.CitationInfo(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.CitationInfo.CitationInfo(org.w3c.dom.Node):::EXIT
this.cm == null
===========================================================================
org.ands.rifcs.base.CitationInfo.addCitationMetadata(org.ands.rifcs.base.CitationMetadata):::ENTER
this has only one value
this.cm == null
this.e has only one value
arg0 has only one value
arg0.identifier has only one value
arg0.identifier.e has only one value
arg0.identifier.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
arg0.names has only one value
arg0.names[] contains no nulls and has only one value, of length 1
arg0.names[] elements has only one value
arg0.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
arg0.names[].getClass().getName() elements == org.ands.rifcs.base.Contributor.class
arg0.names.getClass().getName() == java.util.ArrayList.class
arg0.dates has only one value
arg0.dates[] contains no nulls and has only one value, of length 1
arg0.dates[] elements has only one value
arg0.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0.dates[].getClass().getName() elements == org.ands.rifcs.base.CitationDate.class
arg0.dates.getClass().getName() == java.util.ArrayList.class
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(arg0.names[]) == 1
size(arg0.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationInfo.addCitationMetadata(org.ands.rifcs.base.CitationMetadata):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.identifier == orig(arg0.identifier)
arg0.identifier.e == orig(arg0.identifier.e)
arg0.identifier.e.getClass().getName() == orig(arg0.identifier.e.getClass().getName())
arg0.names == orig(arg0.names)
arg0.names[] == orig(arg0.names[])
arg0.names.getClass().getName() == orig(arg0.names.getClass().getName())
arg0.dates == orig(arg0.dates)
arg0.dates[] == orig(arg0.dates[])
arg0.dates.getClass().getName() == orig(arg0.dates.getClass().getName())
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
this.cm has only one value
this.e has only one value
arg0.identifier has only one value
arg0.identifier.e has only one value
arg0.identifier.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
arg0.names has only one value
arg0.names[] contains no nulls and has only one value, of length 1
arg0.names[] elements has only one value
arg0.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
arg0.names[].getClass().getName() elements == org.ands.rifcs.base.Contributor.class
arg0.names.getClass().getName() == java.util.ArrayList.class
arg0.dates has only one value
arg0.dates[] contains no nulls and has only one value, of length 1
arg0.dates[] elements has only one value
arg0.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0.dates[].getClass().getName() elements == org.ands.rifcs.base.CitationDate.class
arg0.dates.getClass().getName() == java.util.ArrayList.class
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(arg0.names[]) == 1
size(arg0.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationInfo.initStructures():::ENTER
this.cm == null
===========================================================================
org.ands.rifcs.base.CitationInfo.initStructures():::EXIT
this.cm == orig(this.cm)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.cm == null
===========================================================================
org.ands.rifcs.base.CitationInfo.newCitationMetadata():::ENTER
this has only one value
this.cm == null
this.e has only one value
===========================================================================
org.ands.rifcs.base.CitationInfo.newCitationMetadata():::EXIT
this.cm == orig(this.cm)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.cm == null
this.e has only one value
return has only one value
return.identifier == null
return.names has only one value
return.names[] == []
return.names[].getClass().getName() == []
return.names.getClass().getName() == java.util.ArrayList.class
return.dates has only one value
return.dates[] == []
return.dates[].getClass().getName() == []
return.dates.getClass().getName() == java.util.ArrayList.class
return.e has only one value
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.CitationInfo.setCitation(java.lang.String, java.lang.String):::ENTER
this has only one value
this.cm == null
this.e has only one value
arg0 has only one value
arg0.toString == "sasdgasdgsdgasdgasdgasdgasdgasdgsadgasdgasdgsg"
arg1 has only one value
arg1.toString == "howardsss"
===========================================================================
org.ands.rifcs.base.CitationInfo.setCitation(java.lang.String, java.lang.String):::EXIT
this.cm == orig(this.cm)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.cm == null
this.e has only one value
arg0.toString == "sasdgasdgsdgasdgasdgasdgasdgasdgsadgasdgasdgsg"
arg1.toString == "howardsss"
===========================================================================
org.ands.rifcs.base.CitationMetadata:::OBJECT
this.identifier.e.getClass().getName() == this.e.getClass().getName()
this.names.getClass().getName() == this.dates.getClass().getName()
this has only one value
this.identifier.e has only one value
this.identifier.e != null
this.identifier.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.names has only one value
this.names != null
this.names[] elements has only one value
this.names[] elements != null
this.names[].getClass().getName() elements == org.ands.rifcs.base.Contributor.class
this.names[].getClass().getName() one of { [], [org.ands.rifcs.base.Contributor] }
this.names.getClass().getName() == java.util.ArrayList.class
this.dates has only one value
this.dates != null
this.dates[] elements has only one value
this.dates[] elements != null
this.dates[].getClass().getName() elements == org.ands.rifcs.base.CitationDate.class
this.dates[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationDate] }
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.names[]) one of { 0, 1 }
size(this.dates[]) one of { 0, 1 }
this.identifier.e.getClass().getName() != this.names.getClass().getName()
this.names.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.CitationMetadata.CitationMetadata(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.CitationMetadata.CitationMetadata(org.w3c.dom.Node):::EXIT
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.addContributor(org.ands.rifcs.base.Contributor):::ENTER
this.names.getClass().getName() == arg0.nameParts.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifier has only one value
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.nameParts has only one value
arg0.nameParts[] contains no nulls and has only one value, of length 2
arg0.nameParts[].getClass().getName() == [org.ands.rifcs.base.NamePart, org.ands.rifcs.base.NamePart]
arg0.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
arg0.e has only one value
size(arg0.nameParts[]) == 2
===========================================================================
org.ands.rifcs.base.CitationMetadata.addContributor(org.ands.rifcs.base.Contributor):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names.getClass().getName() == arg0.nameParts.getClass().getName()
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.names.getClass().getName() == orig(arg0.nameParts.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.nameParts == orig(arg0.nameParts)
arg0.nameParts[] == orig(arg0.nameParts[])
arg0.e == orig(arg0.e)
size(this.names[])-1 == orig(size(this.names[]))
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.nameParts has only one value
arg0.nameParts[] contains no nulls and has only one value, of length 2
arg0.nameParts[].getClass().getName() == [org.ands.rifcs.base.NamePart, org.ands.rifcs.base.NamePart]
arg0.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
arg0.e has only one value
size(this.names[]) == 1
size(arg0.nameParts[]) == 2
===========================================================================
org.ands.rifcs.base.CitationMetadata.addDate(org.ands.rifcs.base.CitationDate):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.e has only one value
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.addDate(org.ands.rifcs.base.CitationDate):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.dates[])-1 == orig(size(this.dates[]))
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] contains no nulls and has only one value, of length 1
this.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0.e has only one value
size(this.names[]) == 1
size(this.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.initCitationDates():::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initCitationDates():::EXIT
this.identifier == orig(this.identifier)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initContributors():::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initContributors():::EXIT
this.identifier == orig(this.identifier)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initIdentifier():::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initIdentifier():::EXIT
this.identifier == orig(this.identifier)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initStructures():::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.initStructures():::EXIT
this.identifier == orig(this.identifier)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.newCitationDate():::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.newCitationDate():::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
return has only one value
return.e has only one value
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.newContributor():::ENTER
this.identifier has only one value
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.newContributor():::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == return.nameParts.getClass().getName()
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifier has only one value
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
return has only one value
return.nameParts has only one value
return.nameParts[] == []
return.nameParts[].getClass().getName() == []
return.e has only one value
===========================================================================
org.ands.rifcs.base.CitationMetadata.newIdentifier():::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.CitationMetadata.newIdentifier():::EXIT
this.identifier == orig(this.identifier)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
return has only one value
return.e has only one value
===========================================================================
org.ands.rifcs.base.CitationMetadata.setContext(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] contains no nulls and has only one value, of length 1
this.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0 has only one value
arg0.toString == "shdgjsgjasgjahdsgjsd"
size(this.names[]) == 1
size(this.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setContext(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] contains no nulls and has only one value, of length 1
this.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0.toString == "shdgjsgjasgjahdsgjsd"
size(this.names[]) == 1
size(this.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setIdentifier(java.lang.String, java.lang.String):::ENTER
this.identifier == null
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.toString == "sdjhksdghkashdgkjashgd"
arg1 has only one value
arg1.toString == "pod"
===========================================================================
org.ands.rifcs.base.CitationMetadata.setIdentifier(java.lang.String, java.lang.String):::EXIT
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.identifier has only one value
this.names[] == []
this.names[].getClass().getName() == []
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.toString == "sdjhksdghkashdgkjashgd"
arg1.toString == "pod"
===========================================================================
org.ands.rifcs.base.CitationMetadata.setPlacePublished(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.toString == "sjdhgkjahsdgkahgkahsdkghaksdghkajhg"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setPlacePublished(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.toString == "sjdhgkjahsdgkahgkahsdkghaksdghkajhg"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setPublisher(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.toString == "publishersjdhgkjahsdgkahgkahsdkghaksdghkajhg"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setPublisher(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.toString == "publishersjdhgkjahsdgkahgkahsdkghaksdghkajhg"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setTitle(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.toString == "ashgfjhsagfjashgf"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setTitle(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.toString == "ashgfjhsagfjashgf"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setURL(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] contains no nulls and has only one value, of length 1
this.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0 has only one value
arg0.toString == "sdjhgksjhgdk"
size(this.names[]) == 1
size(this.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setURL(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] contains no nulls and has only one value, of length 1
this.dates[].getClass().getName() == [org.ands.rifcs.base.CitationDate]
arg0.toString == "sdjhgksjhgdk"
size(this.names[]) == 1
size(this.dates[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setVersion(java.lang.String):::ENTER
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0 has only one value
arg0.toString == "versionksjadhkjsahf"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.CitationMetadata.setVersion(java.lang.String):::EXIT
this.identifier == orig(this.identifier)
this.identifier.e == orig(this.identifier.e)
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.names.getClass().getName() == orig(this.names.getClass().getName())
this.names.getClass().getName() == orig(this.dates.getClass().getName())
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.identifier.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifier has only one value
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Contributor]
this.dates[] == []
this.dates[].getClass().getName() == []
arg0.toString == "versionksjadhkjsahf"
size(this.names[]) == 1
===========================================================================
org.ands.rifcs.base.Collection:::OBJECT
this.identifiers.getClass().getName() == this.names.getClass().getName()
this.identifiers.getClass().getName() == this.datesList.getClass().getName()
this.identifiers.getClass().getName() == this.locations.getClass().getName()
this.identifiers.getClass().getName() == this.coverages.getClass().getName()
this.identifiers.getClass().getName() == this.relatedObjects.getClass().getName()
this.identifiers.getClass().getName() == this.subjects.getClass().getName()
this.identifiers.getClass().getName() == this.descriptions.getClass().getName()
this.identifiers.getClass().getName() == this.ris.getClass().getName()
this.identifiers.getClass().getName() == this.rightsList.getClass().getName()
this.identifiers.getClass().getName() == this.existenceDates.getClass().getName()
this.identifiers.getClass().getName() == this.cis.getClass().getName()
this has only one value
this.identifiers has only one value
this.identifiers != null
this.identifiers[] elements has only one value
this.identifiers[] elements != null
this.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
this.identifiers.getClass().getName() == java.util.ArrayList.class
this.names has only one value
this.names != null
this.names[] elements has only one value
this.names[] elements != null
this.names[].getClass().getName() elements == org.ands.rifcs.base.Name.class
this.names[].getClass().getName() one of { [], [org.ands.rifcs.base.Name] }
this.datesList has only one value
this.datesList != null
this.datesList[] elements != null
this.datesList[].getClass().getName() elements == org.ands.rifcs.base.Dates.class
this.locations has only one value
this.locations != null
this.locations[] elements has only one value
this.locations[] elements != null
this.locations[].getClass().getName() elements == org.ands.rifcs.base.Location.class
this.locations[].getClass().getName() one of { [], [org.ands.rifcs.base.Location] }
this.coverages has only one value
this.coverages != null
this.coverages[] elements has only one value
this.coverages[] elements != null
this.coverages[].getClass().getName() elements == org.ands.rifcs.base.Coverage.class
this.coverages[].getClass().getName() one of { [], [org.ands.rifcs.base.Coverage] }
this.relatedObjects has only one value
this.relatedObjects != null
this.relatedObjects[] elements != null
this.relatedObjects[].getClass().getName() elements == org.ands.rifcs.base.RelatedObject.class
this.subjects has only one value
this.subjects != null
this.subjects[] elements != null
this.subjects[].getClass().getName() elements == org.ands.rifcs.base.Subject.class
this.descriptions has only one value
this.descriptions != null
this.descriptions[] elements != null
this.descriptions[].getClass().getName() elements == org.ands.rifcs.base.Description.class
this.ris has only one value
this.ris != null
this.ris[] elements has only one value
this.ris[] elements != null
this.ris[].getClass().getName() elements == org.ands.rifcs.base.RelatedInfo.class
this.ris[].getClass().getName() one of { [], [org.ands.rifcs.base.RelatedInfo] }
this.rightsList has only one value
this.rightsList != null
this.rightsList[] elements != null
this.rightsList[].getClass().getName() elements == org.ands.rifcs.base.Rights.class
this.existenceDates has only one value
this.existenceDates != null
this.existenceDates[] == []
this.existenceDates[].getClass().getName() == []
this.cis has only one value
this.cis != null
this.cis[] elements != null
this.cis[].getClass().getName() elements == org.ands.rifcs.base.CitationInfo.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 0, 1 }
size(this.names[]) one of { 0, 1 }
size(this.datesList[]) one of { 0, 1, 2 }
size(this.locations[]) one of { 0, 1 }
size(this.coverages[]) one of { 0, 1 }
size(this.subjects[]) one of { 0, 1, 2 }
size(this.descriptions[]) one of { 0, 1, 2 }
size(this.ris[]) one of { 0, 1 }
size(this.rightsList[]) one of { 0, 1, 2 }
size(this.cis[]) one of { 0, 1, 2 }
this.identifiers.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Collection.Collection(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Collection.Collection(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.addCitationInfo(org.ands.rifcs.base.CitationInfo):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] contains no nulls and has only one value, of length 1
this.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] elements has only one value
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo] }
arg0.cm == null
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.ris[]) == 1
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.addCitationInfo(org.ands.rifcs.base.CitationInfo):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.cm == orig(arg0.cm)
arg0.e == orig(arg0.e)
size(this.cis[])-1 == orig(size(this.cis[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] contains no nulls and has only one value, of length 1
this.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[].getClass().getName() one of { [org.ands.rifcs.base.CitationInfo], [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo] }
arg0.cm == null
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.ris[]) == 1
size(this.rightsList[]) == 2
size(this.cis[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Collection.addCoverage(org.ands.rifcs.base.Coverage):::ENTER
this.identifiers.getClass().getName() == arg0.spatials.getClass().getName()
this.identifiers.getClass().getName() == arg0.temporals.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.spatials has only one value
arg0.spatials[] contains no nulls and has only one value, of length 1
arg0.spatials[] elements has only one value
arg0.spatials[].getClass().getName() == [org.ands.rifcs.base.Spatial]
arg0.spatials[].getClass().getName() elements == org.ands.rifcs.base.Spatial.class
arg0.temporals has only one value
arg0.temporals[] contains no nulls and has only one value, of length 1
arg0.temporals[] elements has only one value
arg0.temporals[].getClass().getName() == [org.ands.rifcs.base.Temporal]
arg0.temporals[].getClass().getName() elements == org.ands.rifcs.base.Temporal.class
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.rightsList[]) == 2
size(arg0.spatials[]) == 1
size(arg0.temporals[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addCoverage(org.ands.rifcs.base.Coverage):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.spatials.getClass().getName()
this.identifiers.getClass().getName() == arg0.temporals.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.spatials.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.temporals.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.spatials == orig(arg0.spatials)
arg0.spatials[] == orig(arg0.spatials[])
arg0.temporals == orig(arg0.temporals)
arg0.temporals[] == orig(arg0.temporals[])
arg0.e == orig(arg0.e)
size(this.coverages[])-1 == orig(size(this.coverages[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.spatials has only one value
arg0.spatials[] contains no nulls and has only one value, of length 1
arg0.spatials[] elements has only one value
arg0.spatials[].getClass().getName() == [org.ands.rifcs.base.Spatial]
arg0.spatials[].getClass().getName() elements == org.ands.rifcs.base.Spatial.class
arg0.temporals has only one value
arg0.temporals[] contains no nulls and has only one value, of length 1
arg0.temporals[] elements has only one value
arg0.temporals[].getClass().getName() == [org.ands.rifcs.base.Temporal]
arg0.temporals[].getClass().getName() elements == org.ands.rifcs.base.Temporal.class
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.rightsList[]) == 2
size(arg0.spatials[]) == 1
size(arg0.temporals[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addDates(org.ands.rifcs.base.Dates):::ENTER
this.identifiers.getClass().getName() == arg0.dateList.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] elements has only one value
this.datesList[].getClass().getName() one of { [], [org.ands.rifcs.base.Dates] }
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
org.ands.rifcs.base.Dates.DATE_FORMAT has only one value
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == 22
arg0.dateList[].getClass().getName() == [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat]
arg0.dateList[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
size(this.identifiers[]) == 1
size(this.datesList[]) one of { 0, 1 }
size(arg0.dateList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.addDates(org.ands.rifcs.base.Dates):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.dateList.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.dateList.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
arg0.dateList == orig(arg0.dateList)
arg0.dateList[] == orig(arg0.dateList[])
arg0.e == orig(arg0.e)
size(this.datesList[])-1 == orig(size(this.datesList[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[].getClass().getName() one of { [org.ands.rifcs.base.Dates], [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates] }
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
org.ands.rifcs.base.Dates.DATE_FORMAT has only one value
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == 22
arg0.dateList[].getClass().getName() == [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat]
arg0.dateList[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
size(this.identifiers[]) == 1
size(this.datesList[]) one of { 1, 2 }
size(arg0.dateList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.addDescription(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() one of { [], [org.ands.rifcs.base.Description] }
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo] }
arg0.toString one of { "This is a sample description", "\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587" }
arg1.toString one of { "brief", "full" }
arg2 == null
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) one of { 0, 1 }
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 2 }
===========================================================================
org.ands.rifcs.base.Collection.addDescription(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.descriptions[])-1 == orig(size(this.descriptions[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[].getClass().getName() one of { [org.ands.rifcs.base.Description], [org.ands.rifcs.base.Description, org.ands.rifcs.base.Description] }
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo] }
arg0.toString one of { "This is a sample description", "\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587" }
arg1.toString one of { "brief", "full" }
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) one of { 1, 2 }
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 2 }
===========================================================================
org.ands.rifcs.base.Collection.addIdentifier(java.lang.String, java.lang.String):::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.toString == "hdl:7651/myhandlesuffix"
arg1 has only one value
arg1.toString == "handle"
===========================================================================
org.ands.rifcs.base.Collection.addIdentifier(java.lang.String, java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.identifiers[])-1 == orig(size(this.identifiers[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.toString == "hdl:7651/myhandlesuffix"
arg1.toString == "handle"
size(this.identifiers[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addLocation(org.ands.rifcs.base.Location):::ENTER
this.identifiers.getClass().getName() == arg0.addresses.getClass().getName()
this.identifiers.getClass().getName() == arg0.spatials.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.addresses has only one value
arg0.addresses[] contains no nulls and has only one value, of length 1
arg0.addresses[] elements has only one value
arg0.addresses[].getClass().getName() == [org.ands.rifcs.base.Address]
arg0.addresses[].getClass().getName() elements == org.ands.rifcs.base.Address.class
arg0.spatials has only one value
arg0.spatials[] == []
arg0.spatials[].getClass().getName() == []
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
size(arg0.addresses[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addLocation(org.ands.rifcs.base.Location):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.addresses.getClass().getName()
this.identifiers.getClass().getName() == arg0.spatials.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.addresses.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.spatials.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.addresses == orig(arg0.addresses)
arg0.addresses[] == orig(arg0.addresses[])
arg0.spatials == orig(arg0.spatials)
arg0.spatials[] == orig(arg0.spatials[])
arg0.e == orig(arg0.e)
size(this.locations[])-1 == orig(size(this.locations[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.addresses has only one value
arg0.addresses[] contains no nulls and has only one value, of length 1
arg0.addresses[] elements has only one value
arg0.addresses[].getClass().getName() == [org.ands.rifcs.base.Address]
arg0.addresses[].getClass().getName() elements == org.ands.rifcs.base.Address.class
arg0.spatials has only one value
arg0.spatials[] == []
arg0.spatials[].getClass().getName() == []
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.rightsList[]) == 2
size(arg0.addresses[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addName(org.ands.rifcs.base.Name):::ENTER
this.identifiers.getClass().getName() == arg0.nameParts.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.nameParts has only one value
arg0.nameParts[] contains no nulls and has only one value, of length 1
arg0.nameParts[] elements has only one value
arg0.nameParts[].getClass().getName() == [org.ands.rifcs.base.NamePart]
arg0.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
size(arg0.nameParts[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addName(org.ands.rifcs.base.Name):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.nameParts.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.nameParts.getClass().getName())
this.names == orig(this.names)
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.nameParts == orig(arg0.nameParts)
arg0.nameParts[] == orig(arg0.nameParts[])
arg0.e == orig(arg0.e)
size(this.names[])-1 == orig(size(this.names[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.nameParts has only one value
arg0.nameParts[] contains no nulls and has only one value, of length 1
arg0.nameParts[] elements has only one value
arg0.nameParts[].getClass().getName() == [org.ands.rifcs.base.NamePart]
arg0.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
size(arg0.nameParts[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addRelatedInfo(org.ands.rifcs.base.RelatedInfo):::ENTER
this.identifiers.getClass().getName() == arg0.identifiers.getClass().getName()
this.identifiers.getClass().getName() == arg0.relations.getClass().getName()
this.identifiers.getClass().getName() == arg0.format.identifiers.getClass().getName()
this.e.getClass().getName() == arg0.format.e.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 2
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.relations has only one value
arg0.relations[] contains no nulls and has only one value, of length 2
arg0.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
arg0.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
arg0.format has only one value
arg0.format.identifiers has only one value
arg0.format.identifiers[] contains no nulls and has only one value, of length 2
arg0.format.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.format.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.format.e has only one value
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.rightsList[]) == 2
size(arg0.identifiers[]) == 2
size(arg0.relations[]) == 2
size(arg0.format.identifiers[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.addRelatedInfo(org.ands.rifcs.base.RelatedInfo):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.identifiers.getClass().getName()
this.identifiers.getClass().getName() == arg0.relations.getClass().getName()
this.identifiers.getClass().getName() == arg0.format.identifiers.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.relations.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.format.identifiers.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.format.e.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.format.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.identifiers == orig(arg0.identifiers)
arg0.identifiers[] == orig(arg0.identifiers[])
arg0.relations == orig(arg0.relations)
arg0.relations[] == orig(arg0.relations[])
arg0.format == orig(arg0.format)
arg0.format.identifiers == orig(arg0.format.identifiers)
arg0.format.identifiers[] == orig(arg0.format.identifiers[])
arg0.format.e == orig(arg0.format.e)
arg0.e == orig(arg0.e)
size(this.ris[])-1 == orig(size(this.ris[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] contains no nulls and has only one value, of length 1
this.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 2
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.relations has only one value
arg0.relations[] contains no nulls and has only one value, of length 2
arg0.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
arg0.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
arg0.format has only one value
arg0.format.identifiers has only one value
arg0.format.identifiers[] contains no nulls and has only one value, of length 2
arg0.format.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.format.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.format.e has only one value
arg0.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.ris[]) == 1
size(this.rightsList[]) == 2
size(arg0.identifiers[]) == 2
size(arg0.relations[]) == 2
size(arg0.format.identifiers[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.addRelatedObject(org.ands.rifcs.base.RelatedObject):::ENTER
this.identifiers.getClass().getName() == arg0.relations.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.relations[].getClass().getName() == [org.ands.rifcs.base.Relation]
arg0.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) one of { 0, 1, 2 }
size(this.rightsList[]) == 2
size(arg0.relations[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addRelatedObject(org.ands.rifcs.base.RelatedObject):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == arg0.relations.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.identifiers.getClass().getName() == orig(arg0.relations.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.relations == orig(arg0.relations)
arg0.relations[] == orig(arg0.relations[])
arg0.e == orig(arg0.e)
size(this.relatedObjects[])-1 == orig(size(this.relatedObjects[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.relations[].getClass().getName() == [org.ands.rifcs.base.Relation]
arg0.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) one of { 1, 2, 3 }
size(this.rightsList[]) == 2
size(arg0.relations[]) == 1
===========================================================================
org.ands.rifcs.base.Collection.addRights(org.ands.rifcs.base.Rights):::ENTER
this.e.getClass().getName() == arg0.rightsStatement.e.getClass().getName()
this.e.getClass().getName() == arg0.licence.e.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] elements has only one value
this.rightsList[].getClass().getName() one of { [], [org.ands.rifcs.base.Rights] }
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.accessRights == null
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.addRights(org.ands.rifcs.base.Rights):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.rightsStatement.e.getClass().getName()
this.e.getClass().getName() == arg0.licence.e.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.rightsStatement.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.licence.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.rightsStatement == orig(arg0.rightsStatement)
arg0.rightsStatement.e == orig(arg0.rightsStatement.e)
arg0.licence == orig(arg0.licence)
arg0.licence.e == orig(arg0.licence.e)
arg0.accessRights == orig(arg0.accessRights)
arg0.e == orig(arg0.e)
size(this.rightsList[])-1 == orig(size(this.rightsList[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[].getClass().getName() one of { [org.ands.rifcs.base.Rights], [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights] }
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.accessRights == null
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Collection.addSubject(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] elements has only one value
this.subjects[].getClass().getName() one of { [], [org.ands.rifcs.base.Subject] }
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.toString one of { "subject1", "subject2" }
arg1 has only one value
arg1.toString == "local"
arg2 == null
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) one of { 0, 1 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.addSubject(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.subjects[])-1 == orig(size(this.subjects[]))
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[].getClass().getName() one of { [org.ands.rifcs.base.Subject], [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject] }
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.toString one of { "subject1", "subject2" }
arg1.toString == "local"
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) one of { 1, 2 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.initCitationInfo():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initCitationInfo():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initCoverage():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initCoverage():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initDates():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initDates():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initDescriptions():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initDescriptions():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initExistenceDates():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initExistenceDates():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initIdentifiers():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initIdentifiers():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initLocations():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initLocations():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initNames():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initNames():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRelatedInfo():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRelatedInfo():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRelatedObjects():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRelatedObjects():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRights():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initRights():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initStructures():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initStructures():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initSubjects():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.initSubjects():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.newCitationInfo():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] contains no nulls and has only one value, of length 1
this.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] elements has only one value
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo] }
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.ris[]) == 1
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newCitationInfo():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] contains no nulls and has only one value, of length 1
this.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] elements has only one value
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo] }
return.cm == null
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.ris[]) == 1
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newCoverage():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newCoverage():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.spatials.getClass().getName()
this.identifiers.getClass().getName() == return.temporals.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
return has only one value
return.spatials has only one value
return.spatials[] == []
return.spatials[].getClass().getName() == []
return.temporals has only one value
return.temporals[] == []
return.temporals[].getClass().getName() == []
return.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newDates():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] elements has only one value
this.datesList[].getClass().getName() one of { [], [org.ands.rifcs.base.Dates] }
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.datesList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newDates():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.dateList.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] elements has only one value
this.datesList[].getClass().getName() one of { [], [org.ands.rifcs.base.Dates] }
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
org.ands.rifcs.base.Dates.DATE_FORMAT has only one value
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == 22
return.dateList[] == []
return.dateList[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.datesList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newDescription():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() one of { [], [org.ands.rifcs.base.Description] }
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo] }
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) one of { 0, 1 }
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 2 }
===========================================================================
org.ands.rifcs.base.Collection.newDescription():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() one of { [], [org.ands.rifcs.base.Description] }
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[].getClass().getName() one of { [], [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo] }
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) one of { 0, 1 }
size(this.rightsList[]) == 2
size(this.cis[]) one of { 0, 2 }
===========================================================================
org.ands.rifcs.base.Collection.newIdentifier():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Collection.newIdentifier():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
return has only one value
return.e has only one value
===========================================================================
org.ands.rifcs.base.Collection.newLocation():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newLocation():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.addresses.getClass().getName()
this.identifiers.getClass().getName() == return.spatials.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
return has only one value
return.addresses has only one value
return.addresses[] == []
return.addresses[].getClass().getName() == []
return.spatials has only one value
return.spatials[] == []
return.spatials[].getClass().getName() == []
return.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newName():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newName():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.nameParts.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
return has only one value
return.nameParts has only one value
return.nameParts[] == []
return.nameParts[].getClass().getName() == []
return.e has only one value
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newRelatedInfo():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newRelatedInfo():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.identifiers.getClass().getName()
this.identifiers.getClass().getName() == return.relations.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] contains no nulls and has only one value, of length 1
this.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] contains no nulls and has only one value, of length 2
this.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
this.descriptions[] contains no nulls and has only one value, of length 1
this.descriptions[] elements has only one value
this.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description]
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
return has only one value
return.identifiers has only one value
return.identifiers[] == []
return.identifiers[].getClass().getName() == []
return.relations has only one value
return.relations[] == []
return.relations[].getClass().getName() == []
return.format == null
return.e has only one value
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.coverages[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) == 2
size(this.descriptions[]) == 1
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newRelatedObject():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) one of { 0, 1, 2 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newRelatedObject():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == return.relations.getClass().getName()
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
return.relations[] == []
return.relations[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) one of { 0, 1, 2 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newRights():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] elements has only one value
this.rightsList[].getClass().getName() one of { [], [org.ands.rifcs.base.Rights] }
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newRights():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] elements has only one value
this.rightsList[].getClass().getName() one of { [], [org.ands.rifcs.base.Rights] }
this.cis[] == []
this.cis[].getClass().getName() == []
return.rightsStatement == null
return.licence == null
return.accessRights == null
size(this.identifiers[]) == 1
size(this.datesList[]) == 2
size(this.rightsList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Collection.newSubject():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] elements has only one value
this.subjects[].getClass().getName() one of { [], [org.ands.rifcs.base.Subject] }
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) one of { 0, 1 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.newSubject():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 1
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
this.names[] contains no nulls and has only one value, of length 1
this.names[].getClass().getName() == [org.ands.rifcs.base.Name]
this.datesList[] contains no nulls and has only one value, of length 2
this.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
this.locations[] contains no nulls and has only one value, of length 1
this.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] contains no nulls and has only one value, of length 3
this.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
this.subjects[] elements has only one value
this.subjects[].getClass().getName() one of { [], [org.ands.rifcs.base.Subject] }
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] contains no nulls and has only one value, of length 2
this.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
this.cis[] == []
this.cis[].getClass().getName() == []
size(this.identifiers[]) == 1
size(this.names[]) == 1
size(this.datesList[]) == 2
size(this.locations[]) == 1
size(this.relatedObjects[]) == 3
size(this.subjects[]) one of { 0, 1 }
size(this.rightsList[]) == 2
===========================================================================
org.ands.rifcs.base.Collection.setType(java.lang.String):::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
arg0 has only one value
arg0.toString == "collection"
===========================================================================
org.ands.rifcs.base.Collection.setType(java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.identifiers.getClass().getName() == orig(this.names.getClass().getName())
this.identifiers.getClass().getName() == orig(this.datesList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.locations.getClass().getName())
this.identifiers.getClass().getName() == orig(this.coverages.getClass().getName())
this.identifiers.getClass().getName() == orig(this.relatedObjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.subjects.getClass().getName())
this.identifiers.getClass().getName() == orig(this.descriptions.getClass().getName())
this.identifiers.getClass().getName() == orig(this.ris.getClass().getName())
this.identifiers.getClass().getName() == orig(this.rightsList.getClass().getName())
this.identifiers.getClass().getName() == orig(this.existenceDates.getClass().getName())
this.identifiers.getClass().getName() == orig(this.cis.getClass().getName())
this.names == orig(this.names)
this.names[] == orig(this.names[])
this.datesList == orig(this.datesList)
this.datesList[] == orig(this.datesList[])
this.locations == orig(this.locations)
this.locations[] == orig(this.locations[])
this.coverages == orig(this.coverages)
this.coverages[] == orig(this.coverages[])
this.relatedObjects == orig(this.relatedObjects)
this.relatedObjects[] == orig(this.relatedObjects[])
this.subjects == orig(this.subjects)
this.subjects[] == orig(this.subjects[])
this.descriptions == orig(this.descriptions)
this.descriptions[] == orig(this.descriptions[])
this.ris == orig(this.ris)
this.ris[] == orig(this.ris[])
this.rightsList == orig(this.rightsList)
this.rightsList[] == orig(this.rightsList[])
this.existenceDates == orig(this.existenceDates)
this.existenceDates[] == orig(this.existenceDates[])
this.cis == orig(this.cis)
this.cis[] == orig(this.cis[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.names[] == []
this.names[].getClass().getName() == []
this.datesList[] == []
this.datesList[].getClass().getName() == []
this.locations[] == []
this.locations[].getClass().getName() == []
this.coverages[] == []
this.coverages[].getClass().getName() == []
this.relatedObjects[] == []
this.relatedObjects[].getClass().getName() == []
this.subjects[] == []
this.subjects[].getClass().getName() == []
this.descriptions[] == []
this.descriptions[].getClass().getName() == []
this.ris[] == []
this.ris[].getClass().getName() == []
this.rightsList[] == []
this.rightsList[].getClass().getName() == []
this.cis[] == []
this.cis[].getClass().getName() == []
arg0.toString == "collection"
===========================================================================
org.ands.rifcs.base.Contributor:::OBJECT
this has only one value
this.nameParts has only one value
this.nameParts != null
this.nameParts[] elements != null
this.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
this.nameParts.getClass().getName() == java.util.ArrayList.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.nameParts[]) one of { 0, 1, 2 }
this.nameParts.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Contributor.Contributor(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Contributor.Contributor(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Contributor.addNamePart(java.lang.String, java.lang.String):::ENTER
this.nameParts[] elements has only one value
this.nameParts[].getClass().getName() one of { [], [org.ands.rifcs.base.NamePart] }
arg0.toString one of { "Leo", "Monus" }
arg1.toString one of { "sgiven", "surname" }
size(this.nameParts[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Contributor.addNamePart(java.lang.String, java.lang.String):::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.nameParts[])-1 == orig(size(this.nameParts[]))
this.nameParts[].getClass().getName() one of { [org.ands.rifcs.base.NamePart], [org.ands.rifcs.base.NamePart, org.ands.rifcs.base.NamePart] }
arg0.toString one of { "Leo", "Monus" }
arg1.toString one of { "sgiven", "surname" }
size(this.nameParts[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Contributor.initStructures():::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Contributor.initStructures():::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Contributor.newNamePart():::ENTER
this.nameParts[] elements has only one value
this.nameParts[].getClass().getName() one of { [], [org.ands.rifcs.base.NamePart] }
size(this.nameParts[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Contributor.newNamePart():::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.nameParts[] elements has only one value
this.nameParts[].getClass().getName() one of { [], [org.ands.rifcs.base.NamePart] }
size(this.nameParts[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Contributor.setSeq(int):::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
arg0 == 0
===========================================================================
org.ands.rifcs.base.Contributor.setSeq(int):::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage:::OBJECT
this.spatials.getClass().getName() == this.temporals.getClass().getName()
this has only one value
this.spatials has only one value
this.spatials != null
this.spatials[] elements has only one value
this.spatials[] elements != null
this.spatials[].getClass().getName() elements == org.ands.rifcs.base.Spatial.class
this.spatials[].getClass().getName() one of { [], [org.ands.rifcs.base.Spatial] }
this.spatials.getClass().getName() == java.util.ArrayList.class
this.temporals has only one value
this.temporals != null
this.temporals[] elements has only one value
this.temporals[] elements != null
this.temporals[].getClass().getName() elements == org.ands.rifcs.base.Temporal.class
this.temporals[].getClass().getName() one of { [], [org.ands.rifcs.base.Temporal] }
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.spatials[]) one of { 0, 1 }
size(this.temporals[]) one of { 0, 1 }
this.spatials.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Coverage.Coverage(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Coverage.Coverage(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.addSpatial(org.ands.rifcs.base.Spatial):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
arg0 has only one value
arg0.e has only one value
===========================================================================
org.ands.rifcs.base.Coverage.addSpatial(org.ands.rifcs.base.Spatial):::EXIT
this.spatials == orig(this.spatials)
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.spatials[])-1 == orig(size(this.spatials[]))
this.spatials[] contains no nulls and has only one value, of length 1
this.spatials[].getClass().getName() == [org.ands.rifcs.base.Spatial]
this.temporals[] == []
this.temporals[].getClass().getName() == []
arg0.e has only one value
size(this.spatials[]) == 1
===========================================================================
org.ands.rifcs.base.Coverage.addTemporal(org.ands.rifcs.base.Temporal):::ENTER
this.spatials.getClass().getName() == arg0.dates.getClass().getName()
this.spatials.getClass().getName() == arg0.texts.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.spatials[] contains no nulls and has only one value, of length 1
this.spatials[].getClass().getName() == [org.ands.rifcs.base.Spatial]
this.temporals[] == []
this.temporals[].getClass().getName() == []
arg0 has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == 22
arg0.dates has only one value
arg0.dates[] contains no nulls and has only one value, of length 2
arg0.dates[].getClass().getName() == [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat]
arg0.dates[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
arg0.texts has only one value
arg0.texts[] == []
arg0.texts[].getClass().getName() == []
arg0.e has only one value
size(this.spatials[]) == 1
size(arg0.dates[]) == 2
===========================================================================
org.ands.rifcs.base.Coverage.addTemporal(org.ands.rifcs.base.Temporal):::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == arg0.dates.getClass().getName()
this.spatials.getClass().getName() == arg0.texts.getClass().getName()
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.spatials.getClass().getName() == orig(arg0.dates.getClass().getName())
this.spatials.getClass().getName() == orig(arg0.texts.getClass().getName())
this.temporals == orig(this.temporals)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
arg0.dates == orig(arg0.dates)
arg0.dates[] == orig(arg0.dates[])
arg0.texts == orig(arg0.texts)
arg0.texts[] == orig(arg0.texts[])
arg0.e == orig(arg0.e)
size(this.temporals[])-1 == orig(size(this.temporals[]))
this.spatials[] contains no nulls and has only one value, of length 1
this.spatials[].getClass().getName() == [org.ands.rifcs.base.Spatial]
this.temporals[] contains no nulls and has only one value, of length 1
this.temporals[].getClass().getName() == [org.ands.rifcs.base.Temporal]
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == 22
arg0.dates has only one value
arg0.dates[] contains no nulls and has only one value, of length 2
arg0.dates[].getClass().getName() == [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat]
arg0.dates[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
arg0.texts has only one value
arg0.texts[] == []
arg0.texts[].getClass().getName() == []
arg0.e has only one value
size(this.spatials[]) == 1
size(this.temporals[]) == 1
size(arg0.dates[]) == 2
===========================================================================
org.ands.rifcs.base.Coverage.initSpatials():::ENTER
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.initSpatials():::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.initStructures():::ENTER
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.initStructures():::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.initTemporals():::ENTER
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.initTemporals():::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.newSpatial():::ENTER
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.newSpatial():::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
return has only one value
return.e has only one value
===========================================================================
org.ands.rifcs.base.Coverage.newTemporal():::ENTER
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Coverage.newTemporal():::EXIT
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.spatials.getClass().getName() == return.dates.getClass().getName()
this.spatials.getClass().getName() == return.texts.getClass().getName()
this.spatials.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials.getClass().getName() == orig(this.temporals.getClass().getName())
this.temporals == orig(this.temporals)
this.temporals[] == orig(this.temporals[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.temporals[] == []
this.temporals[].getClass().getName() == []
return has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == 22
return.dates has only one value
return.dates[] == []
return.dates[].getClass().getName() == []
return.texts has only one value
return.texts[] == []
return.texts[].getClass().getName() == []
return.e has only one value
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.DateWithTypeDateFormat(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.DateWithTypeDateFormat(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setDateFormat(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "W3C"
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setDateFormat(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "W3C"
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setType(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setValue(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.DateWithTypeDateFormat.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.Dates:::CLASS
org.ands.rifcs.base.Dates.DATE_FORMAT has only one value
org.ands.rifcs.base.Dates.DATE_FORMAT != null
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == 22
===========================================================================
org.ands.rifcs.base.Dates:::OBJECT
this.dateList != null
this.dateList[] elements != null
this.dateList[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
this.dateList.getClass().getName() == java.util.ArrayList.class
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.dateList[]) one of { 0, 1, 2 }
===========================================================================
org.ands.rifcs.base.Dates.Dates(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Dates.Dates(org.w3c.dom.Node):::EXIT
this.dateList[] == []
this.dateList[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Dates.addDate(java.lang.String, java.lang.String):::ENTER
this.dateList[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
size(this.dateList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Dates.addDate(java.lang.String, java.lang.String):::EXIT
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
this.dateList == orig(this.dateList)
this.dateList.getClass().getName() == orig(this.dateList.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.dateList[])-1 == orig(size(this.dateList[]))
this.dateList[].getClass().getName() one of { [org.ands.rifcs.base.DateWithTypeDateFormat], [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat] }
size(this.dateList[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Dates.addDate(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.dateList[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
arg2 has only one value
arg2.toString == "W3C"
size(this.dateList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Dates.addDate(java.lang.String, java.lang.String, java.lang.String):::EXIT
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
this.dateList == orig(this.dateList)
this.dateList.getClass().getName() == orig(this.dateList.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
size(this.dateList[])-1 == orig(size(this.dateList[]))
this.dateList[].getClass().getName() one of { [org.ands.rifcs.base.DateWithTypeDateFormat], [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat] }
arg2.toString == "W3C"
size(this.dateList[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Dates.initStructures():::ENTER
this.dateList[] == []
this.dateList[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Dates.initStructures():::EXIT
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
this.dateList == orig(this.dateList)
this.dateList[] == orig(this.dateList[])
this.dateList.getClass().getName() == orig(this.dateList.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dateList[] == []
this.dateList[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Dates.newDate():::ENTER
this.dateList[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
size(this.dateList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Dates.newDate():::EXIT
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
this.dateList == orig(this.dateList)
this.dateList[] == orig(this.dateList[])
this.dateList.getClass().getName() == orig(this.dateList.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dateList[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.dateList[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Dates.setType(java.lang.String):::ENTER
this.dateList[] == []
this.dateList[].getClass().getName() == []
arg0.toString one of { "datetype", "datetype3" }
===========================================================================
org.ands.rifcs.base.Dates.setType(java.lang.String):::EXIT
org.ands.rifcs.base.Dates.DATE_FORMAT == orig(org.ands.rifcs.base.Dates.DATE_FORMAT)
org.ands.rifcs.base.Dates.DATE_FORMAT.toString == orig(org.ands.rifcs.base.Dates.DATE_FORMAT.toString)
org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Dates.DATE_FORMAT_LENGTH)
this.dateList == orig(this.dateList)
this.dateList[] == orig(this.dateList[])
this.dateList.getClass().getName() == orig(this.dateList.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.dateList[] == []
this.dateList[].getClass().getName() == []
arg0.toString one of { "datetype", "datetype3" }
===========================================================================
org.ands.rifcs.base.Description:::OBJECT
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Description.Description(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Description.Description(org.w3c.dom.Node):::EXIT
===========================================================================
org.ands.rifcs.base.Description.setType(java.lang.String):::ENTER
arg0.toString one of { "brief", "full" }
===========================================================================
org.ands.rifcs.base.Description.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "brief", "full" }
===========================================================================
org.ands.rifcs.base.Description.setValue(java.lang.String):::ENTER
arg0.toString one of { "This is a sample description", "\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587" }
===========================================================================
org.ands.rifcs.base.Description.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "This is a sample description", "\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587\u6f22\u5b57\u4eee\u540d\u4ea4\u3058\u308a\u6587" }
===========================================================================
org.ands.rifcs.base.Electronic:::OBJECT
this.notes.getClass().getName() == this.mediaTypes.getClass().getName()
this.notes.getClass().getName() == this.args.getClass().getName()
this has only one value
this.notes has only one value
this.notes != null
this.notes[] elements != null
this.notes[].getClass().getName() elements == org.ands.rifcs.base.Notes.class
this.notes.getClass().getName() == java.util.ArrayList.class
this.mediaTypes has only one value
this.mediaTypes != null
this.mediaTypes[] elements != null
this.mediaTypes[].getClass().getName() elements == org.ands.rifcs.base.MediaType.class
this.args has only one value
this.args != null
this.args[] elements != null
this.args[].getClass().getName() elements == org.ands.rifcs.base.Arg.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.notes[]) one of { 0, 1, 2 }
size(this.mediaTypes[]) one of { 0, 1, 2 }
size(this.args[]) one of { 0, 1, 2 }
this.notes.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Electronic.Electronic(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Electronic.Electronic(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Electronic.addArg(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::ENTER
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] elements has only one value
this.args[].getClass().getName() one of { [], [org.ands.rifcs.base.Arg] }
arg0.toString one of { "name 1", "name 2" }
arg1.toString one of { "false", "true" }
arg2.toString one of { "type 1", "type 2" }
arg3.toString one of { "use 1", "use 2" }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addArg(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
arg3.toString == orig(arg3.toString)
size(this.args[])-1 == orig(size(this.args[]))
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[].getClass().getName() one of { [org.ands.rifcs.base.Arg], [org.ands.rifcs.base.Arg, org.ands.rifcs.base.Arg] }
arg0.toString one of { "name 1", "name 2" }
arg1.toString one of { "false", "true" }
arg2.toString one of { "type 1", "type 2" }
arg3.toString one of { "use 1", "use 2" }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.addArg(org.ands.rifcs.base.Arg):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] elements has only one value
this.args[].getClass().getName() one of { [], [org.ands.rifcs.base.Arg] }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addArg(org.ands.rifcs.base.Arg):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.args[])-1 == orig(size(this.args[]))
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[].getClass().getName() one of { [org.ands.rifcs.base.Arg], [org.ands.rifcs.base.Arg, org.ands.rifcs.base.Arg] }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.addMediaType(java.lang.String):::ENTER
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] elements has only one value
this.mediaTypes[].getClass().getName() one of { [], [org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString one of { "mediaType 1", "mediaType 2" }
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addMediaType(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
size(this.mediaTypes[])-1 == orig(size(this.mediaTypes[]))
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[].getClass().getName() one of { [org.ands.rifcs.base.MediaType], [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString one of { "mediaType 1", "mediaType 2" }
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.addMediaType(org.ands.rifcs.base.MediaType):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] elements has only one value
this.mediaTypes[].getClass().getName() one of { [], [org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addMediaType(org.ands.rifcs.base.MediaType):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.mediaTypes[])-1 == orig(size(this.mediaTypes[]))
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[].getClass().getName() one of { [org.ands.rifcs.base.MediaType], [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.addNotes(java.lang.String):::ENTER
this.notes[] elements has only one value
this.notes[].getClass().getName() one of { [], [org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString one of { "notes 1", "notes 2" }
size(this.notes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addNotes(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
size(this.notes[])-1 == orig(size(this.notes[]))
this.notes[].getClass().getName() one of { [org.ands.rifcs.base.Notes], [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString one of { "notes 1", "notes 2" }
size(this.notes[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.addNotes(org.ands.rifcs.base.Notes):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.notes[] elements has only one value
this.notes[].getClass().getName() one of { [], [org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.addNotes(org.ands.rifcs.base.Notes):::EXIT
this.notes == orig(this.notes)
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.notes[])-1 == orig(size(this.notes[]))
this.notes[].getClass().getName() one of { [org.ands.rifcs.base.Notes], [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Electronic.initStructures():::ENTER
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Electronic.initStructures():::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Electronic.newArg():::ENTER
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] elements has only one value
this.args[].getClass().getName() one of { [], [org.ands.rifcs.base.Arg] }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.newArg():::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] elements has only one value
this.args[].getClass().getName() one of { [], [org.ands.rifcs.base.Arg] }
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
size(this.args[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.newMediaType():::ENTER
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] elements has only one value
this.mediaTypes[].getClass().getName() one of { [], [org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.newMediaType():::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] elements has only one value
this.mediaTypes[].getClass().getName() one of { [], [org.ands.rifcs.base.MediaType] }
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) == 2
size(this.mediaTypes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.newNotes():::ENTER
this.notes[] elements has only one value
this.notes[].getClass().getName() one of { [], [org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.newNotes():::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.notes[] elements has only one value
this.notes[].getClass().getName() one of { [], [org.ands.rifcs.base.Notes] }
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
size(this.notes[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Electronic.setByteSize(java.lang.String):::ENTER
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] == []
this.args[].getClass().getName() == []
arg0 has only one value
arg0.toString == "1234"
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
===========================================================================
org.ands.rifcs.base.Electronic.setByteSize(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.notes[] contains no nulls and has only one value, of length 2
this.notes[].getClass().getName() == [org.ands.rifcs.base.Notes, org.ands.rifcs.base.Notes]
this.mediaTypes[] contains no nulls and has only one value, of length 2
this.mediaTypes[].getClass().getName() == [org.ands.rifcs.base.MediaType, org.ands.rifcs.base.MediaType]
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString == "1234"
size(this.notes[]) == 2
size(this.mediaTypes[]) == 2
===========================================================================
org.ands.rifcs.base.Electronic.setTarget(java.lang.String):::ENTER
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0 has only one value
arg0.toString == "target"
===========================================================================
org.ands.rifcs.base.Electronic.setTarget(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString == "target"
===========================================================================
org.ands.rifcs.base.Electronic.setTitle(java.lang.String):::ENTER
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0 has only one value
arg0.toString == "title"
===========================================================================
org.ands.rifcs.base.Electronic.setTitle(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString == "title"
===========================================================================
org.ands.rifcs.base.Electronic.setType(java.lang.String):::ENTER
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0 has only one value
arg0.toString == "url"
===========================================================================
org.ands.rifcs.base.Electronic.setType(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString == "url"
===========================================================================
org.ands.rifcs.base.Electronic.setValue(java.lang.String):::ENTER
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0 has only one value
arg0.toString == "http://myrepository.au.edu/collections/collection1"
===========================================================================
org.ands.rifcs.base.Electronic.setValue(java.lang.String):::EXIT
this.notes == orig(this.notes)
this.notes[] == orig(this.notes[])
this.notes.getClass().getName() == orig(this.notes.getClass().getName())
this.notes.getClass().getName() == orig(this.mediaTypes.getClass().getName())
this.notes.getClass().getName() == orig(this.args.getClass().getName())
this.mediaTypes == orig(this.mediaTypes)
this.mediaTypes[] == orig(this.mediaTypes[])
this.args == orig(this.args)
this.args[] == orig(this.args[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.notes[] == []
this.notes[].getClass().getName() == []
this.mediaTypes[] == []
this.mediaTypes[].getClass().getName() == []
this.args[] == []
this.args[].getClass().getName() == []
arg0.toString == "http://myrepository.au.edu/collections/collection1"
===========================================================================
org.ands.rifcs.base.Format:::OBJECT
this has only one value
this.identifiers has only one value
this.identifiers != null
this.identifiers[] elements != null
this.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
this.identifiers.getClass().getName() == java.util.ArrayList.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 0, 1, 2 }
this.identifiers.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Format.Format(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Format.Format(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Format.addIdentifier(java.lang.String, java.lang.String):::ENTER
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
arg0.toString one of { "format id1", "format id2" }
arg1.toString one of { "format type1", "format type2" }
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Format.addIdentifier(java.lang.String, java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.identifiers[])-1 == orig(size(this.identifiers[]))
this.identifiers[].getClass().getName() one of { [org.ands.rifcs.base.Identifier], [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier] }
arg0.toString one of { "format id1", "format id2" }
arg1.toString one of { "format type1", "format type2" }
size(this.identifiers[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Format.initIdentifiers():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Format.initIdentifiers():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Format.initStructures():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Format.initStructures():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Format.newIdentifier():::ENTER
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Format.newIdentifier():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Identifier:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Identifier.Identifier(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Identifier.Identifier(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Identifier.setType(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.Identifier.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.Identifier.setValue(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.Identifier.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.Location:::OBJECT
this.addresses.getClass().getName() == this.spatials.getClass().getName()
this has only one value
this.addresses has only one value
this.addresses[] elements has only one value
this.addresses[].getClass().getName() elements == org.ands.rifcs.base.Address.class
this.addresses[].getClass().getName() one of { [], [org.ands.rifcs.base.Address] }
this.addresses.getClass().getName() == java.util.ArrayList.class
this.spatials has only one value
this.spatials[] == []
this.spatials[].getClass().getName() == []
this.e has only one value
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.addresses[]) one of { 0, 1 }
this.addresses.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.Location.Location(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Location.Location(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.addAddress(org.ands.rifcs.base.Address):::ENTER
this.addresses.getClass().getName() == arg0.electronics.getClass().getName()
this.addresses.getClass().getName() == arg0.physicals.getClass().getName()
this.e.getClass().getName() == arg0.e.getClass().getName()
this.addresses[] == []
this.addresses[].getClass().getName() == []
arg0 has only one value
arg0.electronics has only one value
arg0.electronics[] contains no nulls and has only one value, of length 1
arg0.electronics[] elements has only one value
arg0.electronics[].getClass().getName() == [org.ands.rifcs.base.Electronic]
arg0.electronics[].getClass().getName() elements == org.ands.rifcs.base.Electronic.class
arg0.physicals has only one value
arg0.physicals[] == []
arg0.physicals[].getClass().getName() == []
arg0.e has only one value
size(arg0.electronics[]) == 1
===========================================================================
org.ands.rifcs.base.Location.addAddress(org.ands.rifcs.base.Address):::EXIT
this.addresses == orig(this.addresses)
this.addresses.getClass().getName() == arg0.electronics.getClass().getName()
this.addresses.getClass().getName() == arg0.physicals.getClass().getName()
this.addresses.getClass().getName() == orig(this.addresses.getClass().getName())
this.addresses.getClass().getName() == orig(this.spatials.getClass().getName())
this.addresses.getClass().getName() == orig(arg0.electronics.getClass().getName())
this.addresses.getClass().getName() == orig(arg0.physicals.getClass().getName())
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.electronics == orig(arg0.electronics)
arg0.electronics[] == orig(arg0.electronics[])
arg0.physicals == orig(arg0.physicals)
arg0.physicals[] == orig(arg0.physicals[])
arg0.e == orig(arg0.e)
size(this.addresses[])-1 == orig(size(this.addresses[]))
this.addresses[] contains no nulls and has only one value, of length 1
this.addresses[].getClass().getName() == [org.ands.rifcs.base.Address]
arg0.electronics has only one value
arg0.electronics[] contains no nulls and has only one value, of length 1
arg0.electronics[] elements has only one value
arg0.electronics[].getClass().getName() == [org.ands.rifcs.base.Electronic]
arg0.electronics[].getClass().getName() elements == org.ands.rifcs.base.Electronic.class
arg0.physicals has only one value
arg0.physicals[] == []
arg0.physicals[].getClass().getName() == []
arg0.e has only one value
size(this.addresses[]) == 1
size(arg0.electronics[]) == 1
===========================================================================
org.ands.rifcs.base.Location.initAddresses():::ENTER
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.initAddresses():::EXIT
this.addresses == orig(this.addresses)
this.addresses[] == orig(this.addresses[])
this.addresses.getClass().getName() == orig(this.addresses.getClass().getName())
this.addresses.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.initSpatials():::ENTER
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.initSpatials():::EXIT
this.addresses == orig(this.addresses)
this.addresses[] == orig(this.addresses[])
this.addresses.getClass().getName() == orig(this.addresses.getClass().getName())
this.addresses.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.initStructures():::ENTER
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.initStructures():::EXIT
this.addresses == orig(this.addresses)
this.addresses[] == orig(this.addresses[])
this.addresses.getClass().getName() == orig(this.addresses.getClass().getName())
this.addresses.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.newAddress():::ENTER
this.addresses[] == []
this.addresses[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Location.newAddress():::EXIT
this.addresses == orig(this.addresses)
this.addresses[] == orig(this.addresses[])
this.addresses.getClass().getName() == return.electronics.getClass().getName()
this.addresses.getClass().getName() == return.physicals.getClass().getName()
this.addresses.getClass().getName() == orig(this.addresses.getClass().getName())
this.addresses.getClass().getName() == orig(this.spatials.getClass().getName())
this.spatials == orig(this.spatials)
this.spatials[] == orig(this.spatials[])
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.addresses[] == []
this.addresses[].getClass().getName() == []
return has only one value
return.electronics has only one value
return.electronics[] == []
return.electronics[].getClass().getName() == []
return.physicals has only one value
return.physicals[] == []
return.physicals[].getClass().getName() == []
return.e has only one value
===========================================================================
org.ands.rifcs.base.MediaType:::OBJECT
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.MediaType.MediaType(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.MediaType.MediaType(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.MediaType.setValue(java.lang.String):::ENTER
arg0.toString one of { "mediaType 1", "mediaType 2" }
===========================================================================
org.ands.rifcs.base.MediaType.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "mediaType 1", "mediaType 2" }
===========================================================================
org.ands.rifcs.base.Name:::OBJECT
this has only one value
this.nameParts has only one value
this.nameParts[] elements has only one value
this.nameParts[].getClass().getName() elements == org.ands.rifcs.base.NamePart.class
this.nameParts[].getClass().getName() one of { [], [org.ands.rifcs.base.NamePart] }
this.nameParts.getClass().getName() == java.util.ArrayList.class
this.e has only one value
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.nameParts[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Name.Name(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Name.Name(org.w3c.dom.Node):::EXIT
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Name.addNamePart(org.ands.rifcs.base.NamePart):::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
arg0 has only one value
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Name.addNamePart(org.ands.rifcs.base.NamePart):::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
size(this.nameParts[])-1 == orig(size(this.nameParts[]))
this.nameParts[] contains no nulls and has only one value, of length 1
this.nameParts[].getClass().getName() == [org.ands.rifcs.base.NamePart]
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.nameParts[]) == 1
===========================================================================
org.ands.rifcs.base.Name.initStructures():::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Name.initStructures():::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Name.newNamePart():::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Name.newNamePart():::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
return has only one value
return.e has only one value
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Name.setType(java.lang.String):::ENTER
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
arg0 has only one value
arg0.toString == "primary"
===========================================================================
org.ands.rifcs.base.Name.setType(java.lang.String):::EXIT
this.nameParts == orig(this.nameParts)
this.nameParts[] == orig(this.nameParts[])
this.nameParts.getClass().getName() == orig(this.nameParts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.nameParts[] == []
this.nameParts[].getClass().getName() == []
arg0.toString == "primary"
===========================================================================
org.ands.rifcs.base.NamePart:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.NamePart.NamePart(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.NamePart.NamePart(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.NamePart.setType(java.lang.String):::ENTER
arg0.toString one of { "sgiven", "surname" }
===========================================================================
org.ands.rifcs.base.NamePart.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "sgiven", "surname" }
===========================================================================
org.ands.rifcs.base.NamePart.setValue(java.lang.String):::ENTER
arg0.toString one of { "Leo", "Monus", "Sample Collection" }
===========================================================================
org.ands.rifcs.base.NamePart.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Leo", "Monus", "Sample Collection" }
===========================================================================
org.ands.rifcs.base.Notes:::OBJECT
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Notes.Notes(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Notes.Notes(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Notes.setValue(java.lang.String):::ENTER
arg0.toString one of { "notes 1", "notes 2" }
===========================================================================
org.ands.rifcs.base.Notes.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "notes 1", "notes 2" }
===========================================================================
org.ands.rifcs.base.RIFCS:::OBJECT
this has only one value
this.doc has only one value
this.doc.getClass().getName() == com.sun.org.apache.xerces.internal.dom.DocumentImpl.class
this.ros has only one value
this.rosByClass has only one value
===========================================================================
org.ands.rifcs.base.RIFCS.RIFCS(org.w3c.dom.Document):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.DocumentImpl.class
===========================================================================
org.ands.rifcs.base.RIFCS.RIFCS(org.w3c.dom.Document):::EXIT
this.doc == orig(arg0)
this.doc.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.RIFCS.addRegistryObject(org.ands.rifcs.base.RegistryObject):::ENTER
arg0 has only one value
arg0.objectClass has only one value
arg0.objectClass.toString == "collection"
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCS.addRegistryObject(org.ands.rifcs.base.RegistryObject):::EXIT
this.doc == orig(this.doc)
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.ros == orig(this.ros)
this.rosByClass == orig(this.rosByClass)
arg0.objectClass == orig(arg0.objectClass)
arg0.objectClass.toString == orig(arg0.objectClass.toString)
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.objectClass has only one value
arg0.objectClass.toString == "collection"
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCS.initObjectClassMap():::ENTER
===========================================================================
org.ands.rifcs.base.RIFCS.initObjectClassMap():::EXIT
this.doc == orig(this.doc)
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.ros == orig(this.ros)
this.rosByClass == orig(this.rosByClass)
===========================================================================
org.ands.rifcs.base.RIFCS.initRegistryObjects():::ENTER
===========================================================================
org.ands.rifcs.base.RIFCS.initRegistryObjects():::EXIT
this.doc == orig(this.doc)
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.ros == orig(this.ros)
this.rosByClass == orig(this.rosByClass)
===========================================================================
org.ands.rifcs.base.RIFCS.newRegistryObject():::ENTER
===========================================================================
org.ands.rifcs.base.RIFCS.newRegistryObject():::EXIT
this.doc == orig(this.doc)
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.ros == orig(this.ros)
this.rosByClass == orig(this.rosByClass)
return has only one value
return.objectClass == null
return.e has only one value
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCSElement:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCSElement.RIFCSElement(org.w3c.dom.Node, java.lang.String):::ENTER
arg0 != null
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
arg1 != null
===========================================================================
org.ands.rifcs.base.RIFCSElement.RIFCSElement(org.w3c.dom.Node, java.lang.String):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
arg1.toString == orig(arg1.toString)
===========================================================================
org.ands.rifcs.base.RIFCSElement.getChildElements():::ENTER
this has only one value
this.e has only one value
===========================================================================
org.ands.rifcs.base.RIFCSElement.getChildElements():::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e has only one value
return has only one value
return[] == []
return[].getClass().getName() == []
return.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.ands.rifcs.base.RIFCSElement.getChildElements(java.lang.String):::ENTER
this has only one value
this.e has only one value
arg0 has only one value
arg0.toString == "key"
===========================================================================
org.ands.rifcs.base.RIFCSElement.getChildElements(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.e has only one value
arg0.toString == "key"
return has only one value
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
return[].getClass().getName() == [com.sun.org.apache.xerces.internal.dom.ElementNSImpl]
return[].getClass().getName() elements == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 1
this.e.getClass().getName() in return[].getClass().getName()
===========================================================================
org.ands.rifcs.base.RIFCSElement.getElement():::ENTER
===========================================================================
org.ands.rifcs.base.RIFCSElement.getElement():::EXIT
this.e == return
this.e.getClass().getName() == return.getClass().getName()
return == orig(this.e)
return.getClass().getName() == orig(this.e.getClass().getName())
return != null
return.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCSElement.getElements(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.ands.rifcs.base.RIFCSElement.getElements(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
return != null
return.getClass().getName() == com.sun.org.apache.xerces.internal.dom.DeepNodeListImpl.class
this.e.getClass().getName() != return.getClass().getName()
===========================================================================
org.ands.rifcs.base.RIFCSElement.newElement(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.ands.rifcs.base.RIFCSElement.newElement(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == return.getClass().getName()
arg0.toString == orig(arg0.toString)
return.getClass().getName() == orig(this.e.getClass().getName())
return != null
return.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RIFCSElement.setAttributeValue(java.lang.String, java.lang.String):::ENTER
arg0 != null
arg1 != null
===========================================================================
org.ands.rifcs.base.RIFCSElement.setAttributeValue(java.lang.String, java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
===========================================================================
org.ands.rifcs.base.RIFCSElement.setTextContent(java.lang.String):::ENTER
arg0 != null
===========================================================================
org.ands.rifcs.base.RIFCSElement.setTextContent(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.RIFCSWrapper:::CLASS
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE has only one value
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE.toString == "xsd:include"
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT has only one value
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT.toString == "xsd:import"
===========================================================================
org.ands.rifcs.base.RIFCSWrapper:::OBJECT
this.doc == this.rifcs.doc
this.doc.getClass().getName() == this.rifcs.doc.getClass().getName()
this has only one value
this.doc has only one value
this.doc.getClass().getName() == com.sun.org.apache.xerces.internal.dom.DocumentImpl.class
this.rifcs has only one value
this.rifcs.ros has only one value
this.rifcs.rosByClass has only one value
===========================================================================
org.ands.rifcs.base.RIFCSWrapper.RIFCSWrapper():::EXIT
===========================================================================
org.ands.rifcs.base.RIFCSWrapper.getRIFCSObject():::ENTER
===========================================================================
org.ands.rifcs.base.RIFCSWrapper.getRIFCSObject():::EXIT
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE)
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE.toString == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE.toString)
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT)
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT.toString == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT.toString)
this.doc == return.doc
this.doc == orig(this.doc)
this.doc == orig(this.rifcs.doc)
this.doc.getClass().getName() == return.doc.getClass().getName()
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.doc.getClass().getName() == orig(this.rifcs.doc.getClass().getName())
this.rifcs == return
this.rifcs.ros == return.ros
this.rifcs.rosByClass == return.rosByClass
return == orig(this.rifcs)
return.ros == orig(this.rifcs.ros)
return.rosByClass == orig(this.rifcs.rosByClass)
return has only one value
return.ros has only one value
return.rosByClass has only one value
===========================================================================
org.ands.rifcs.base.RIFCSWrapper.write(java.io.OutputStream):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.io.PrintStream.class
===========================================================================
org.ands.rifcs.base.RIFCSWrapper.write(java.io.OutputStream):::EXIT
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE)
org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE.toString == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_INCLUDE.toString)
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT)
org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT.toString == orig(org.ands.rifcs.base.RIFCSWrapper.XSD_IMPORT.toString)
this.doc == orig(this.doc)
this.doc == orig(this.rifcs.doc)
this.doc.getClass().getName() == orig(this.doc.getClass().getName())
this.doc.getClass().getName() == orig(this.rifcs.doc.getClass().getName())
this.rifcs == orig(this.rifcs)
this.rifcs.ros == orig(this.rifcs.ros)
this.rifcs.rosByClass == orig(this.rifcs.rosByClass)
===========================================================================
org.ands.rifcs.base.RegistryObject:::OBJECT
this has only one value
this.objectClass.toString == "collection"
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RegistryObject.RegistryObject(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RegistryObject.RegistryObject(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.objectClass == null
===========================================================================
org.ands.rifcs.base.RegistryObject.addCollection(org.ands.rifcs.base.Collection):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.names.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.datesList.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.locations.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.coverages.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.relatedObjects.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.subjects.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.descriptions.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.ris.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.rightsList.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.existenceDates.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.cis.getClass().getName()
this.objectClass == null
arg0 has only one value
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 1
arg0.identifiers[] elements has only one value
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.identifiers.getClass().getName() == java.util.ArrayList.class
arg0.names has only one value
arg0.names[] contains no nulls and has only one value, of length 1
arg0.names[] elements has only one value
arg0.names[].getClass().getName() == [org.ands.rifcs.base.Name]
arg0.names[].getClass().getName() elements == org.ands.rifcs.base.Name.class
arg0.datesList has only one value
arg0.datesList[] contains no nulls and has only one value, of length 2
arg0.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
arg0.datesList[].getClass().getName() elements == org.ands.rifcs.base.Dates.class
arg0.locations has only one value
arg0.locations[] contains no nulls and has only one value, of length 1
arg0.locations[] elements has only one value
arg0.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
arg0.locations[].getClass().getName() elements == org.ands.rifcs.base.Location.class
arg0.coverages has only one value
arg0.coverages[] contains no nulls and has only one value, of length 1
arg0.coverages[] elements has only one value
arg0.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
arg0.coverages[].getClass().getName() elements == org.ands.rifcs.base.Coverage.class
arg0.relatedObjects has only one value
arg0.relatedObjects[] contains no nulls and has only one value, of length 3
arg0.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
arg0.relatedObjects[].getClass().getName() elements == org.ands.rifcs.base.RelatedObject.class
arg0.subjects has only one value
arg0.subjects[] contains no nulls and has only one value, of length 2
arg0.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
arg0.subjects[].getClass().getName() elements == org.ands.rifcs.base.Subject.class
arg0.descriptions has only one value
arg0.descriptions[] contains no nulls and has only one value, of length 2
arg0.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description, org.ands.rifcs.base.Description]
arg0.descriptions[].getClass().getName() elements == org.ands.rifcs.base.Description.class
arg0.ris has only one value
arg0.ris[] contains no nulls and has only one value, of length 1
arg0.ris[] elements has only one value
arg0.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
arg0.ris[].getClass().getName() elements == org.ands.rifcs.base.RelatedInfo.class
arg0.rightsList has only one value
arg0.rightsList[] contains no nulls and has only one value, of length 2
arg0.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
arg0.rightsList[].getClass().getName() elements == org.ands.rifcs.base.Rights.class
arg0.existenceDates has only one value
arg0.existenceDates[] == []
arg0.existenceDates[].getClass().getName() == []
arg0.cis has only one value
arg0.cis[] contains no nulls and has only one value, of length 2
arg0.cis[].getClass().getName() == [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo]
arg0.cis[].getClass().getName() elements == org.ands.rifcs.base.CitationInfo.class
arg0.e has only one value
size(arg0.identifiers[]) == 1
size(arg0.names[]) == 1
size(arg0.datesList[]) == 2
size(arg0.locations[]) == 1
size(arg0.coverages[]) == 1
size(arg0.relatedObjects[]) == 3
size(arg0.subjects[]) == 2
size(arg0.descriptions[]) == 2
size(arg0.ris[]) == 1
size(arg0.rightsList[]) == 2
size(arg0.cis[]) == 2
===========================================================================
org.ands.rifcs.base.RegistryObject.addCollection(org.ands.rifcs.base.Collection):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.identifiers == orig(arg0.identifiers)
arg0.identifiers[] == orig(arg0.identifiers[])
arg0.identifiers.getClass().getName() == arg0.names.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.datesList.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.locations.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.coverages.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.relatedObjects.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.subjects.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.descriptions.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.ris.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.rightsList.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.existenceDates.getClass().getName()
arg0.identifiers.getClass().getName() == arg0.cis.getClass().getName()
arg0.identifiers.getClass().getName() == orig(arg0.identifiers.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.names.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.datesList.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.locations.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.coverages.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.relatedObjects.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.subjects.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.descriptions.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.ris.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.rightsList.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.existenceDates.getClass().getName())
arg0.identifiers.getClass().getName() == orig(arg0.cis.getClass().getName())
arg0.names == orig(arg0.names)
arg0.names[] == orig(arg0.names[])
arg0.datesList == orig(arg0.datesList)
arg0.datesList[] == orig(arg0.datesList[])
arg0.locations == orig(arg0.locations)
arg0.locations[] == orig(arg0.locations[])
arg0.coverages == orig(arg0.coverages)
arg0.coverages[] == orig(arg0.coverages[])
arg0.relatedObjects == orig(arg0.relatedObjects)
arg0.relatedObjects[] == orig(arg0.relatedObjects[])
arg0.subjects == orig(arg0.subjects)
arg0.subjects[] == orig(arg0.subjects[])
arg0.descriptions == orig(arg0.descriptions)
arg0.descriptions[] == orig(arg0.descriptions[])
arg0.ris == orig(arg0.ris)
arg0.ris[] == orig(arg0.ris[])
arg0.rightsList == orig(arg0.rightsList)
arg0.rightsList[] == orig(arg0.rightsList[])
arg0.existenceDates == orig(arg0.existenceDates)
arg0.existenceDates[] == orig(arg0.existenceDates[])
arg0.cis == orig(arg0.cis)
arg0.cis[] == orig(arg0.cis[])
arg0.e == orig(arg0.e)
this.objectClass has only one value
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 1
arg0.identifiers[] elements has only one value
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.identifiers.getClass().getName() == java.util.ArrayList.class
arg0.names has only one value
arg0.names[] contains no nulls and has only one value, of length 1
arg0.names[] elements has only one value
arg0.names[].getClass().getName() == [org.ands.rifcs.base.Name]
arg0.names[].getClass().getName() elements == org.ands.rifcs.base.Name.class
arg0.datesList has only one value
arg0.datesList[] contains no nulls and has only one value, of length 2
arg0.datesList[].getClass().getName() == [org.ands.rifcs.base.Dates, org.ands.rifcs.base.Dates]
arg0.datesList[].getClass().getName() elements == org.ands.rifcs.base.Dates.class
arg0.locations has only one value
arg0.locations[] contains no nulls and has only one value, of length 1
arg0.locations[] elements has only one value
arg0.locations[].getClass().getName() == [org.ands.rifcs.base.Location]
arg0.locations[].getClass().getName() elements == org.ands.rifcs.base.Location.class
arg0.coverages has only one value
arg0.coverages[] contains no nulls and has only one value, of length 1
arg0.coverages[] elements has only one value
arg0.coverages[].getClass().getName() == [org.ands.rifcs.base.Coverage]
arg0.coverages[].getClass().getName() elements == org.ands.rifcs.base.Coverage.class
arg0.relatedObjects has only one value
arg0.relatedObjects[] contains no nulls and has only one value, of length 3
arg0.relatedObjects[].getClass().getName() == [org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject, org.ands.rifcs.base.RelatedObject]
arg0.relatedObjects[].getClass().getName() elements == org.ands.rifcs.base.RelatedObject.class
arg0.subjects has only one value
arg0.subjects[] contains no nulls and has only one value, of length 2
arg0.subjects[].getClass().getName() == [org.ands.rifcs.base.Subject, org.ands.rifcs.base.Subject]
arg0.subjects[].getClass().getName() elements == org.ands.rifcs.base.Subject.class
arg0.descriptions has only one value
arg0.descriptions[] contains no nulls and has only one value, of length 2
arg0.descriptions[].getClass().getName() == [org.ands.rifcs.base.Description, org.ands.rifcs.base.Description]
arg0.descriptions[].getClass().getName() elements == org.ands.rifcs.base.Description.class
arg0.ris has only one value
arg0.ris[] contains no nulls and has only one value, of length 1
arg0.ris[] elements has only one value
arg0.ris[].getClass().getName() == [org.ands.rifcs.base.RelatedInfo]
arg0.ris[].getClass().getName() elements == org.ands.rifcs.base.RelatedInfo.class
arg0.rightsList has only one value
arg0.rightsList[] contains no nulls and has only one value, of length 2
arg0.rightsList[].getClass().getName() == [org.ands.rifcs.base.Rights, org.ands.rifcs.base.Rights]
arg0.rightsList[].getClass().getName() elements == org.ands.rifcs.base.Rights.class
arg0.existenceDates has only one value
arg0.existenceDates[] == []
arg0.existenceDates[].getClass().getName() == []
arg0.cis has only one value
arg0.cis[] contains no nulls and has only one value, of length 2
arg0.cis[].getClass().getName() == [org.ands.rifcs.base.CitationInfo, org.ands.rifcs.base.CitationInfo]
arg0.cis[].getClass().getName() elements == org.ands.rifcs.base.CitationInfo.class
arg0.e has only one value
size(arg0.identifiers[]) == 1
size(arg0.names[]) == 1
size(arg0.datesList[]) == 2
size(arg0.locations[]) == 1
size(arg0.coverages[]) == 1
size(arg0.relatedObjects[]) == 3
size(arg0.subjects[]) == 2
size(arg0.descriptions[]) == 2
size(arg0.ris[]) == 1
size(arg0.rightsList[]) == 2
size(arg0.cis[]) == 2
===========================================================================
org.ands.rifcs.base.RegistryObject.getKey():::ENTER
this.objectClass has only one value
===========================================================================
org.ands.rifcs.base.RegistryObject.getKey():::EXIT73
===========================================================================
org.ands.rifcs.base.RegistryObject.getKey():::EXIT
this.objectClass == orig(this.objectClass)
this.objectClass.toString == orig(this.objectClass.toString)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.objectClass has only one value
return has only one value
return.toString == "collection1"
===========================================================================
org.ands.rifcs.base.RegistryObject.getObjectClassName():::ENTER
this.objectClass has only one value
===========================================================================
org.ands.rifcs.base.RegistryObject.getObjectClassName():::EXIT
this.objectClass == return
this.objectClass.toString == orig(this.objectClass.toString)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
return == orig(this.objectClass)
return has only one value
return.toString == "collection"
===========================================================================
org.ands.rifcs.base.RegistryObject.initStructures():::ENTER
this.objectClass == null
===========================================================================
org.ands.rifcs.base.RegistryObject.initStructures():::EXIT
this.objectClass == orig(this.objectClass)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.objectClass == null
===========================================================================
org.ands.rifcs.base.RegistryObject.newCollection():::ENTER
this.objectClass == null
===========================================================================
org.ands.rifcs.base.RegistryObject.newCollection():::EXIT
this.objectClass == orig(this.objectClass)
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
return.identifiers.getClass().getName() == return.names.getClass().getName()
return.identifiers.getClass().getName() == return.datesList.getClass().getName()
return.identifiers.getClass().getName() == return.locations.getClass().getName()
return.identifiers.getClass().getName() == return.coverages.getClass().getName()
return.identifiers.getClass().getName() == return.relatedObjects.getClass().getName()
return.identifiers.getClass().getName() == return.subjects.getClass().getName()
return.identifiers.getClass().getName() == return.descriptions.getClass().getName()
return.identifiers.getClass().getName() == return.ris.getClass().getName()
return.identifiers.getClass().getName() == return.rightsList.getClass().getName()
return.identifiers.getClass().getName() == return.existenceDates.getClass().getName()
return.identifiers.getClass().getName() == return.cis.getClass().getName()
this.objectClass == null
return has only one value
return.identifiers has only one value
return.identifiers[] == []
return.identifiers[].getClass().getName() == []
return.identifiers.getClass().getName() == java.util.ArrayList.class
return.names has only one value
return.names[] == []
return.names[].getClass().getName() == []
return.datesList has only one value
return.datesList[] == []
return.datesList[].getClass().getName() == []
return.locations has only one value
return.locations[] == []
return.locations[].getClass().getName() == []
return.coverages has only one value
return.coverages[] == []
return.coverages[].getClass().getName() == []
return.relatedObjects has only one value
return.relatedObjects[] == []
return.relatedObjects[].getClass().getName() == []
return.subjects has only one value
return.subjects[] == []
return.subjects[].getClass().getName() == []
return.descriptions has only one value
return.descriptions[] == []
return.descriptions[].getClass().getName() == []
return.ris has only one value
return.ris[] == []
return.ris[].getClass().getName() == []
return.rightsList has only one value
return.rightsList[] == []
return.rightsList[].getClass().getName() == []
return.existenceDates has only one value
return.existenceDates[] == []
return.existenceDates[].getClass().getName() == []
return.cis has only one value
return.cis[] == []
return.cis[].getClass().getName() == []
return.e has only one value
===========================================================================
org.ands.rifcs.base.RegistryObject.setGroup(java.lang.String):::ENTER
this.objectClass == null
arg0 has only one value
arg0.toString == "ANDS"
===========================================================================
org.ands.rifcs.base.RegistryObject.setGroup(java.lang.String):::EXIT
this.objectClass == orig(this.objectClass)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.objectClass == null
arg0.toString == "ANDS"
===========================================================================
org.ands.rifcs.base.RegistryObject.setKey(java.lang.String):::ENTER
this.objectClass == null
arg0 has only one value
arg0.toString == "collection1"
===========================================================================
org.ands.rifcs.base.RegistryObject.setKey(java.lang.String):::EXIT
this.objectClass == orig(this.objectClass)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.objectClass == null
arg0.toString == "collection1"
===========================================================================
org.ands.rifcs.base.RegistryObject.setOriginatingSource(java.lang.String):::ENTER
this.objectClass == null
arg0 has only one value
arg0.toString == "http://myrepository.au.edu"
===========================================================================
org.ands.rifcs.base.RegistryObject.setOriginatingSource(java.lang.String):::EXIT
this.objectClass == orig(this.objectClass)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.objectClass == null
arg0.toString == "http://myrepository.au.edu"
===========================================================================
org.ands.rifcs.base.RelatedInfo:::OBJECT
this has only one value
this.identifiers has only one value
this.identifiers != null
this.identifiers[] elements != null
this.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
this.identifiers.getClass().getName() == java.util.ArrayList.class
this.relations has only one value
this.relations != null
this.relations[] elements != null
this.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
this.relations.getClass().getName() == java.util.ArrayList.class
this.format.identifiers has only one value
this.format.identifiers[] contains no nulls and has only one value, of length 2
this.format.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.format.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
this.format.identifiers.getClass().getName() == java.util.ArrayList.class
this.format.e has only one value
this.format.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 0, 1, 2 }
size(this.relations[]) one of { 0, 1, 2 }
size(this.format.identifiers[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.RelatedInfo(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RelatedInfo.RelatedInfo(org.w3c.dom.Node):::EXIT
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.addIdentifier(java.lang.String, java.lang.String):::ENTER
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
arg0.toString one of { "http://external-server.edu/related-page.htm", "http://external-server.edu/related-page2.htm" }
arg1 has only one value
arg1.toString == "uri"
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.addIdentifier(java.lang.String, java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
size(this.identifiers[])-1 == orig(size(this.identifiers[]))
this.identifiers[].getClass().getName() one of { [org.ands.rifcs.base.Identifier], [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
arg0.toString one of { "http://external-server.edu/related-page.htm", "http://external-server.edu/related-page2.htm" }
arg1.toString == "uri"
size(this.identifiers[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.addIdentifier(org.ands.rifcs.base.Identifier):::ENTER
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.addIdentifier(org.ands.rifcs.base.Identifier):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
size(this.identifiers[])-1 == orig(size(this.identifiers[]))
this.identifiers[].getClass().getName() one of { [org.ands.rifcs.base.Identifier], [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.addRelation(org.ands.rifcs.base.Relation):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] elements has only one value
this.relations[].getClass().getName() one of { [], [org.ands.rifcs.base.Relation] }
this.format == null
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.addRelation(org.ands.rifcs.base.Relation):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
size(this.relations[])-1 == orig(size(this.relations[]))
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[].getClass().getName() one of { [org.ands.rifcs.base.Relation], [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation] }
this.format == null
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.initFormat():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initFormat():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initIdentifiers():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initIdentifiers():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initRelations():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initRelations():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initStructures():::ENTER
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.initStructures():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] == []
this.identifiers[].getClass().getName() == []
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
===========================================================================
org.ands.rifcs.base.RelatedInfo.newFormat():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format == null
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.newFormat():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format == null
return has only one value
return.identifiers has only one value
return.identifiers[] == []
return.identifiers[].getClass().getName() == []
return.identifiers.getClass().getName() == java.util.ArrayList.class
return.e has only one value
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.newIdentifier():::ENTER
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.newIdentifier():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] elements has only one value
this.identifiers[].getClass().getName() one of { [], [org.ands.rifcs.base.Identifier] }
this.relations[] == []
this.relations[].getClass().getName() == []
this.format == null
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.newRelation():::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] elements has only one value
this.relations[].getClass().getName() one of { [], [org.ands.rifcs.base.Relation] }
this.format == null
size(this.identifiers[]) == 2
size(this.relations[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.newRelation():::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] elements has only one value
this.relations[].getClass().getName() one of { [], [org.ands.rifcs.base.Relation] }
this.format == null
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.RelatedInfo.setFormat(org.ands.rifcs.base.Format):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format == null
arg0 has only one value
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 2
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.identifiers.getClass().getName() == java.util.ArrayList.class
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) == 2
size(arg0.identifiers[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.setFormat(org.ands.rifcs.base.Format):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.identifiers == orig(arg0.identifiers)
arg0.identifiers[] == orig(arg0.identifiers[])
arg0.identifiers.getClass().getName() == orig(arg0.identifiers.getClass().getName())
arg0.e == orig(arg0.e)
arg0.e.getClass().getName() == orig(arg0.e.getClass().getName())
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format has only one value
arg0.identifiers has only one value
arg0.identifiers[] contains no nulls and has only one value, of length 2
arg0.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
arg0.identifiers[].getClass().getName() elements == org.ands.rifcs.base.Identifier.class
arg0.identifiers.getClass().getName() == java.util.ArrayList.class
arg0.e has only one value
arg0.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.identifiers[]) == 2
size(this.relations[]) == 2
size(arg0.identifiers[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.setNotes(java.lang.String):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format has only one value
arg0 has only one value
arg0.toString == "Notes about the related information resource"
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.setNotes(java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.format.identifiers == orig(this.format.identifiers)
this.format.identifiers[] == orig(this.format.identifiers[])
this.format.identifiers.getClass().getName() == orig(this.format.identifiers.getClass().getName())
this.format.e == orig(this.format.e)
this.format.e.getClass().getName() == orig(this.format.e.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format has only one value
arg0.toString == "Notes about the related information resource"
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.setTitle(java.lang.String):::ENTER
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format has only one value
arg0 has only one value
arg0.toString == "A related information resource"
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedInfo.setTitle(java.lang.String):::EXIT
this.identifiers == orig(this.identifiers)
this.identifiers[] == orig(this.identifiers[])
this.identifiers.getClass().getName() == orig(this.identifiers.getClass().getName())
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.format == orig(this.format)
this.format.identifiers == orig(this.format.identifiers)
this.format.identifiers[] == orig(this.format.identifiers[])
this.format.identifiers.getClass().getName() == orig(this.format.identifiers.getClass().getName())
this.format.e == orig(this.format.e)
this.format.e.getClass().getName() == orig(this.format.e.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.identifiers[] contains no nulls and has only one value, of length 2
this.identifiers[].getClass().getName() == [org.ands.rifcs.base.Identifier, org.ands.rifcs.base.Identifier]
this.relations[] contains no nulls and has only one value, of length 2
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation, org.ands.rifcs.base.Relation]
this.format has only one value
arg0.toString == "A related information resource"
size(this.identifiers[]) == 2
size(this.relations[]) == 2
===========================================================================
org.ands.rifcs.base.RelatedObject:::OBJECT
this.relations != null
this.relations[] elements != null
this.relations[].getClass().getName() elements == org.ands.rifcs.base.Relation.class
this.relations[].getClass().getName() one of { [], [org.ands.rifcs.base.Relation] }
this.relations.getClass().getName() == java.util.ArrayList.class
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.relations[]) one of { 0, 1 }
this.relations.getClass().getName() != this.e.getClass().getName()
===========================================================================
org.ands.rifcs.base.RelatedObject.RelatedObject(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RelatedObject.RelatedObject(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.addRelation(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::ENTER
this.relations[] == []
this.relations[].getClass().getName() == []
arg0.toString one of { "isOutputOf", "isOwnerOf", "supports" }
arg1 == null
arg2 == null
arg3 == null
===========================================================================
org.ands.rifcs.base.RelatedObject.addRelation(java.lang.String, java.lang.String, java.lang.String, java.lang.String):::EXIT
this.relations == orig(this.relations)
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
size(this.relations[])-1 == orig(size(this.relations[]))
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation]
arg0.toString one of { "isOutputOf", "isOwnerOf", "supports" }
size(this.relations[]) == 1
===========================================================================
org.ands.rifcs.base.RelatedObject.addRelation(org.ands.rifcs.base.Relation):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.addRelation(org.ands.rifcs.base.Relation):::EXIT
this.relations == orig(this.relations)
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
size(this.relations[])-1 == orig(size(this.relations[]))
this.relations[].getClass().getName() == [org.ands.rifcs.base.Relation]
size(this.relations[]) == 1
===========================================================================
org.ands.rifcs.base.RelatedObject.initStructures():::ENTER
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.initStructures():::EXIT
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.newRelation():::ENTER
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.newRelation():::EXIT
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == return.e.getClass().getName()
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.relations[] == []
this.relations[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.RelatedObject.setKey(java.lang.String):::ENTER
this.relations[] == []
this.relations[].getClass().getName() == []
arg0.toString one of { "activity1", "party1", "service1" }
===========================================================================
org.ands.rifcs.base.RelatedObject.setKey(java.lang.String):::EXIT
this.relations == orig(this.relations)
this.relations[] == orig(this.relations[])
this.relations.getClass().getName() == orig(this.relations.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
this.relations[] == []
this.relations[].getClass().getName() == []
arg0.toString one of { "activity1", "party1", "service1" }
===========================================================================
org.ands.rifcs.base.Relation:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Relation.Relation(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Relation.Relation(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Relation.setDescription(java.lang.String):::ENTER
arg0.toString one of { "relation description", "relation description2" }
===========================================================================
org.ands.rifcs.base.Relation.setDescription(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "relation description", "relation description2" }
===========================================================================
org.ands.rifcs.base.Relation.setType(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.Relation.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.Relation.setURL(java.lang.String):::ENTER
arg0.toString one of { "http://external-server.edu/relation.htm", "http://external-server.edu/relation2.htm" }
===========================================================================
org.ands.rifcs.base.Relation.setURL(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "http://external-server.edu/relation.htm", "http://external-server.edu/relation2.htm" }
===========================================================================
org.ands.rifcs.base.Rights:::OBJECT
this.rightsStatement.e.getClass().getName() == this.licence.e.getClass().getName()
this.rightsStatement.e.getClass().getName() == this.e.getClass().getName()
this.licence.e.getClass().getName() == this.e.getClass().getName()
this.rightsStatement.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.licence.e != null
this.licence.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
this.accessRights == null
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Rights.Rights(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Rights.Rights(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
this.rightsStatement == null
this.licence == null
===========================================================================
org.ands.rifcs.base.Rights.initStructures():::ENTER
this.rightsStatement == null
this.licence == null
===========================================================================
org.ands.rifcs.base.Rights.initStructures():::EXIT
this.rightsStatement == orig(this.rightsStatement)
this.licence == orig(this.licence)
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.rightsStatement == null
this.licence == null
===========================================================================
org.ands.rifcs.base.Rights.setAccessRights(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.rightsStatement == null
this.licence == null
arg0.toString one of { "Access Rights Value", "Access Rights Value2" }
arg1.toString one of { "Access Rights Uri", "Access Rights Uri2" }
arg2.toString one of { "Access Rights Type", "Access Rights Type2" }
===========================================================================
org.ands.rifcs.base.Rights.setAccessRights(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.rightsStatement == orig(this.rightsStatement)
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
this.rightsStatement == null
arg0.toString one of { "Access Rights Value", "Access Rights Value2" }
arg1.toString one of { "Access Rights Uri", "Access Rights Uri2" }
arg2.toString one of { "Access Rights Type", "Access Rights Type2" }
===========================================================================
org.ands.rifcs.base.Rights.setLicence(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.rightsStatement == null
arg0.toString one of { "Licence Value", "Licence Value2" }
arg1.toString one of { "Licence Uri", "Licence Uri2" }
arg2.toString one of { "Licence Type", "Licence Type2" }
===========================================================================
org.ands.rifcs.base.Rights.setLicence(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.rightsStatement == orig(this.rightsStatement)
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.licence.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
this.rightsStatement == null
arg0.toString one of { "Licence Value", "Licence Value2" }
arg1.toString one of { "Licence Uri", "Licence Uri2" }
arg2.toString one of { "Licence Type", "Licence Type2" }
===========================================================================
org.ands.rifcs.base.Rights.setLicence(org.ands.rifcs.base.RightsTypedInfo):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.rightsStatement == null
===========================================================================
org.ands.rifcs.base.Rights.setLicence(org.ands.rifcs.base.RightsTypedInfo):::EXIT
this.rightsStatement == orig(this.rightsStatement)
this.licence == orig(arg0)
this.licence.e == arg0.e
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.licence.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
this.rightsStatement == null
===========================================================================
org.ands.rifcs.base.Rights.setRightsStatement(java.lang.String, java.lang.String):::ENTER
this.rightsStatement == null
arg0.toString one of { "Rights Statement Value", "Rights Statement Value2" }
arg1.toString one of { "Rights Statement Uri", "Rights Statement Uri2" }
===========================================================================
org.ands.rifcs.base.Rights.setRightsStatement(java.lang.String, java.lang.String):::EXIT
this.licence == orig(this.licence)
this.licence.e == orig(this.licence.e)
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.licence.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg0.toString one of { "Rights Statement Value", "Rights Statement Value2" }
arg1.toString one of { "Rights Statement Uri", "Rights Statement Uri2" }
===========================================================================
org.ands.rifcs.base.Rights.setRightsStatement(org.ands.rifcs.base.RightsInfo):::ENTER
this.e.getClass().getName() == arg0.e.getClass().getName()
this.rightsStatement == null
===========================================================================
org.ands.rifcs.base.Rights.setRightsStatement(org.ands.rifcs.base.RightsInfo):::EXIT
this.rightsStatement == orig(arg0)
this.rightsStatement.e == arg0.e
this.licence == orig(this.licence)
this.licence.e == orig(this.licence.e)
this.accessRights == orig(this.accessRights)
this.e == orig(this.e)
this.e.getClass().getName() == arg0.e.getClass().getName()
this.e.getClass().getName() == orig(this.licence.e.getClass().getName())
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.e.getClass().getName() == orig(arg0.e.getClass().getName())
arg0.e == orig(arg0.e)
===========================================================================
org.ands.rifcs.base.RightsInfo:::OBJECT
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RightsInfo.RightsInfo(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RightsInfo.RightsInfo(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.RightsInfo.setRightsUri(java.lang.String):::ENTER
arg0.toString one of { "Rights Statement Uri", "Rights Statement Uri2" }
===========================================================================
org.ands.rifcs.base.RightsInfo.setRightsUri(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Rights Statement Uri", "Rights Statement Uri2" }
===========================================================================
org.ands.rifcs.base.RightsInfo.setValue(java.lang.String):::ENTER
arg0.toString one of { "Rights Statement Value", "Rights Statement Value2" }
===========================================================================
org.ands.rifcs.base.RightsInfo.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "Rights Statement Value", "Rights Statement Value2" }
===========================================================================
org.ands.rifcs.base.RightsTypedInfo:::OBJECT
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.RightsTypedInfo(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.RightsTypedInfo(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setRightsUri(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setRightsUri(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setType(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setValue(java.lang.String):::ENTER
===========================================================================
org.ands.rifcs.base.RightsTypedInfo.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
===========================================================================
org.ands.rifcs.base.Spatial:::OBJECT
this has only one value
this.e has only one value
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Spatial.Spatial(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Spatial.Spatial(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Spatial.setType(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "kmlPolyCoords"
===========================================================================
org.ands.rifcs.base.Spatial.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "kmlPolyCoords"
===========================================================================
org.ands.rifcs.base.Spatial.setValue(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "126.773437,-23.598894 127.652343,-27.405585 131.519531,-27.093039 131.167968,-24.081241 130.464843,-20.503868 127.828124,-19.843884 123.960937,-20.339134 123.433593,-22.141282 123.433593,-25.040485 123.785156,-28.183080 126.773437,-23.598894"
===========================================================================
org.ands.rifcs.base.Spatial.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "126.773437,-23.598894 127.652343,-27.405585 131.519531,-27.093039 131.167968,-24.081241 130.464843,-20.503868 127.828124,-19.843884 123.960937,-20.339134 123.433593,-22.141282 123.433593,-25.040485 123.785156,-28.183080 126.773437,-23.598894"
===========================================================================
org.ands.rifcs.base.Subject:::OBJECT
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Subject.Subject(org.w3c.dom.Node):::ENTER
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Subject.Subject(org.w3c.dom.Node):::EXIT
this.e.getClass().getName() == orig(arg0.getClass().getName())
===========================================================================
org.ands.rifcs.base.Subject.setType(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "local"
===========================================================================
org.ands.rifcs.base.Subject.setType(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString == "local"
===========================================================================
org.ands.rifcs.base.Subject.setValue(java.lang.String):::ENTER
arg0.toString one of { "subject1", "subject2" }
===========================================================================
org.ands.rifcs.base.Subject.setValue(java.lang.String):::EXIT
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg0.toString one of { "subject1", "subject2" }
===========================================================================
org.ands.rifcs.base.Temporal:::CLASS
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT has only one value
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT != null
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == "yyyy-MM-dd'T'HH:mm:ssZ"
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == 22
===========================================================================
org.ands.rifcs.base.Temporal:::OBJECT
this has only one value
this.dates has only one value
this.dates != null
this.dates[] elements != null
this.dates[].getClass().getName() elements == org.ands.rifcs.base.DateWithTypeDateFormat.class
this.dates.getClass().getName() == java.util.ArrayList.class
this.texts has only one value
this.texts != null
this.texts[] == []
this.texts[].getClass().getName() == []
this.texts.getClass().getName() == java.util.ArrayList.class
this.e has only one value
this.e != null
this.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.dates[]) one of { 0, 1, 2 }
===========================================================================
org.ands.rifcs.base.Temporal.Temporal(org.w3c.dom.Node):::ENTER
arg0 has only one value
arg0.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
===========================================================================
org.ands.rifcs.base.Temporal.Temporal(org.w3c.dom.Node):::EXIT
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.addDate(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.dates[] elements has only one value
this.dates[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
arg0 has only one value
arg0.toString == "1999-3-4"
arg1 has only one value
arg1.toString == "dateFrom"
arg2 has only one value
arg2.toString == "W3C"
size(this.dates[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Temporal.addDate(java.lang.String, java.lang.String, java.lang.String):::EXIT
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
this.dates == orig(this.dates)
this.dates.getClass().getName() == orig(this.dates.getClass().getName())
this.texts == orig(this.texts)
this.texts[] == orig(this.texts[])
this.texts.getClass().getName() == orig(this.texts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
size(this.dates[])-1 == orig(size(this.dates[]))
this.dates[].getClass().getName() one of { [org.ands.rifcs.base.DateWithTypeDateFormat], [org.ands.rifcs.base.DateWithTypeDateFormat, org.ands.rifcs.base.DateWithTypeDateFormat] }
arg0.toString == "1999-3-4"
arg1.toString == "dateFrom"
arg2.toString == "W3C"
size(this.dates[]) one of { 1, 2 }
===========================================================================
org.ands.rifcs.base.Temporal.initDates():::ENTER
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.initDates():::EXIT
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.dates.getClass().getName() == orig(this.dates.getClass().getName())
this.texts == orig(this.texts)
this.texts[] == orig(this.texts[])
this.texts.getClass().getName() == orig(this.texts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.initStructures():::ENTER
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.initStructures():::EXIT
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.dates.getClass().getName() == orig(this.dates.getClass().getName())
this.texts == orig(this.texts)
this.texts[] == orig(this.texts[])
this.texts.getClass().getName() == orig(this.texts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.initTexts():::ENTER
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.initTexts():::EXIT
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.dates.getClass().getName() == orig(this.dates.getClass().getName())
this.texts == orig(this.texts)
this.texts[] == orig(this.texts[])
this.texts.getClass().getName() == orig(this.texts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dates[] == []
this.dates[].getClass().getName() == []
===========================================================================
org.ands.rifcs.base.Temporal.newDate():::ENTER
this.dates[] elements has only one value
this.dates[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
size(this.dates[]) one of { 0, 1 }
===========================================================================
org.ands.rifcs.base.Temporal.newDate():::EXIT
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT.toString)
org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH == orig(org.ands.rifcs.base.Temporal.TEMPORAL_DATE_FORMAT_LENGTH)
this.dates == orig(this.dates)
this.dates[] == orig(this.dates[])
this.dates.getClass().getName() == orig(this.dates.getClass().getName())
this.texts == orig(this.texts)
this.texts[] == orig(this.texts[])
this.texts.getClass().getName() == orig(this.texts.getClass().getName())
this.e == orig(this.e)
this.e.getClass().getName() == orig(this.e.getClass().getName())
this.dates[] elements has only one value
this.dates[].getClass().getName() one of { [], [org.ands.rifcs.base.DateWithTypeDateFormat] }
return.e.getClass().getName() == com.sun.org.apache.xerces.internal.dom.ElementNSImpl.class
size(this.dates[]) one of { 0, 1 }
Exiting Daikon.
