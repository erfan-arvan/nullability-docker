Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 7 times.  Unmatched entries are ignored!
Unterminated calls:
  com.bigfatplayer.hello.AppClient.run() : 2 invocations
  com.bigfatplayer.hello.AppServer.run() : 1 invocation
  org.slf4j.LoggerFactory.getLogger(java.lang.String) : 1 invocation
  org.slf4j.impl.Log4jLoggerFactory.getLogger(java.lang.String) : 1 invocation
  org.apache.log4j.LogManager.getLogger(java.lang.String) : 1 invocation
  org.apache.log4j.Hierarchy.getLogger(java.lang.String) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
com.bigfatplayer.hello.App:::OBJECT
this has only one value
===========================================================================
com.bigfatplayer.hello.App.App():::EXIT
===========================================================================
com.bigfatplayer.hello.App.add(int, int):::ENTER
arg0 == 2
arg1 == 2
===========================================================================
com.bigfatplayer.hello.App.add(int, int):::EXIT
return == 4
===========================================================================
com.bigfatplayer.hello.App.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
com.bigfatplayer.hello.App.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
com.bigfatplayer.hello.AppClient:::OBJECT
===========================================================================
com.bigfatplayer.hello.AppClient.AppClient():::EXIT
===========================================================================
com.bigfatplayer.hello.AppServer:::OBJECT
this has only one value
===========================================================================
com.bigfatplayer.hello.AppServer.AppServer():::EXIT
===========================================================================
org.apache.log4j.Category:::OBJECT
this.name.toString one of { "com.bigfatplayer.hello.App", "root" }
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.level.level == 10000
this.parent.level.levelStr has only one value
this.parent.level.levelStr.toString == "DEBUG"
this.parent.level.syslogEquivalent == 7
this.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.parent.resourceBundle == null
this.parent.repository has only one value
this.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.parent.aai == null
this.parent.additive == true
this.resourceBundle == null
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::ENTER
name.toString one of { "com.bigfatplayer.hello.App", "root" }
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::EXIT
name.toString == orig(name.toString)
this.level == null
this.parent == null
this.repository == null
name.toString one of { "com.bigfatplayer.hello.App", "root" }
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Category"
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Category"
return has only one value
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::ENTER
this has only one value
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT444
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.level == null
this.parent has only one value
this.repository has only one value
return has only one value
return.level == 10000
return.levelStr has only one value
return.levelStr.toString == "DEBUG"
return.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Category.getName():::ENTER
this has only one value
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.level == null
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Category.getName():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.level == null
this.parent has only one value
this.repository has only one value
return has only one value
return.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::ENTER
this.parent == null
this.repository == null
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.level.level == orig(this.level.level)
this.level.levelStr == orig(this.level.levelStr)
this.level.levelStr.toString == orig(this.level.levelStr.toString)
this.level.syslogEquivalent == orig(this.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.parent == null
this.repository has only one value
===========================================================================
org.apache.log4j.CategoryKey:::CLASS
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == null
===========================================================================
org.apache.log4j.CategoryKey:::OBJECT
this.name != null
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::ENTER
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hashCache == orig(this.hashCache)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == orig(org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey)
===========================================================================
org.apache.log4j.DefaultCategoryFactory:::OBJECT
this has only one value
===========================================================================
org.apache.log4j.DefaultCategoryFactory.DefaultCategoryFactory():::EXIT
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::ENTER
name has only one value
name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString == "com.bigfatplayer.hello.App"
return has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.name has only one value
return.name.toString == "com.bigfatplayer.hello.App"
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository == null
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy:::OBJECT
this has only one value
this.defaultFactory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
this.listeners has only one value
this.listeners[] == []
this.listeners[].getClass().getName() == []
this.ht has only one value
this.root has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
this.root.name has only one value
this.root.name.toString == "root"
this.root.level has only one value
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
this.root.level.level == 10000
this.root.level.levelStr has only one value
this.root.level.levelStr.toString == "DEBUG"
this.root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.root.resourceBundle == null
this.root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.root.aai == null
this.root.additive == true
this.rendererMap.map has only one value
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
this.thresholdInt one of { -2147483648, 0 }
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.threshold.level == -2147483648
this.threshold.levelStr has only one value
this.threshold.levelStr.toString == "ALL"
this.threshold.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.emittedNoAppenderWarning == false
this.emittedNoResourceBundleWarning == false
this.throwableRenderer == null
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::ENTER
root has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
root.name has only one value
root.name.toString == "root"
root.level has only one value
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
root.resourceBundle == null
root.repository == null
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
root.name == orig(root.name)
root.name.toString == orig(root.name.toString)
root.level == orig(root.level)
root.level.level == orig(root.level.level)
root.level.levelStr == orig(root.level.levelStr)
root.level.levelStr.toString == orig(root.level.levelStr.toString)
root.level.syslogEquivalent == orig(root.level.syslogEquivalent)
root.parent == orig(root.parent)
root.resourceBundle == orig(root.resourceBundle)
root.aai == orig(root.aai)
root.additive == orig(root.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
root.name has only one value
root.name.toString == "root"
root.level has only one value
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
root.parent == null
root.resourceBundle == null
root.repository has only one value
root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
name has only one value
name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.throwableRenderer == orig(this.throwableRenderer)
name.toString == orig(name.toString)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
name.toString == "com.bigfatplayer.hello.App"
return has only one value
return.name has only one value
return.name.toString == "com.bigfatplayer.hello.App"
return.level == null
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
name has only one value
name.toString == "com.bigfatplayer.hello.App"
factory has only one value
factory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT279
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.throwableRenderer == orig(this.throwableRenderer)
name.toString == orig(name.toString)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
name.toString == "com.bigfatplayer.hello.App"
return has only one value
return.name has only one value
return.name.toString == "com.bigfatplayer.hello.App"
return.level == null
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
level == 5000
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.throwableRenderer == orig(this.throwableRenderer)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
return == false
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::ENTER
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == 0
this.threshold == null
l has only one value
l.level == -2147483648
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.throwableRenderer == orig(this.throwableRenderer)
l.level == orig(l.level)
l.levelStr == orig(l.levelStr)
l.levelStr.toString == orig(l.levelStr.toString)
l.syslogEquivalent == orig(l.syslogEquivalent)
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == -2147483648
this.threshold has only one value
l.level == -2147483648
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat has only one value
cat.name has only one value
cat.name.toString == "com.bigfatplayer.hello.App"
cat.level == null
cat.parent == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.throwableRenderer == orig(this.throwableRenderer)
cat.name == orig(cat.name)
cat.name.toString == orig(cat.name.toString)
cat.level == orig(cat.level)
cat.resourceBundle == orig(cat.resourceBundle)
cat.repository == orig(cat.repository)
cat.repository.getClass().getName() == orig(cat.repository.getClass().getName())
cat.aai == orig(cat.aai)
cat.additive == orig(cat.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat.name has only one value
cat.name.toString == "com.bigfatplayer.hello.App"
cat.level == null
cat.parent has only one value
cat.parent.name has only one value
cat.parent.name.toString == "root"
cat.parent.level has only one value
cat.parent.parent == null
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.parent.aai == null
cat.parent.additive == true
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Level:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Level:::OBJECT
this.levelStr != null
this.syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::ENTER
name has only one value
name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::EXIT
name.toString == orig(name.toString)
name.toString == "com.bigfatplayer.hello.App"
return has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.name has only one value
return.name.toString == "com.bigfatplayer.hello.App"
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.LogManager.getLoggerRepository():::EXIT
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Logger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
===========================================================================
org.apache.log4j.Logger:::OBJECT
this.name.toString one of { "com.bigfatplayer.hello.App", "root" }
this.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.level.level == 10000
this.parent.level.levelStr has only one value
this.parent.level.levelStr.toString == "DEBUG"
this.parent.level.syslogEquivalent == 7
this.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.parent.resourceBundle == null
this.parent.repository has only one value
this.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.parent.aai == null
this.parent.additive == true
this.resourceBundle == null
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::ENTER
name.toString one of { "com.bigfatplayer.hello.App", "root" }
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::EXIT
name.toString == orig(name.toString)
this.parent == null
this.repository == null
name.toString one of { "com.bigfatplayer.hello.App", "root" }
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Logger"
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::EXIT
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Logger"
return has only one value
===========================================================================
org.apache.log4j.Logger.isTraceEnabled():::ENTER
this has only one value
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.parent has only one value
this.repository has only one value
===========================================================================
org.apache.log4j.Logger.isTraceEnabled():::EXIT209
===========================================================================
org.apache.log4j.Logger.isTraceEnabled():::EXIT209;condition="not(return == true)"
===========================================================================
org.apache.log4j.Logger.isTraceEnabled():::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
this.parent has only one value
this.repository has only one value
return == false
===========================================================================
org.apache.log4j.Logger.isTraceEnabled():::EXIT;condition="not(return == true)"
===========================================================================
org.apache.log4j.Priority:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority:::OBJECT
this.levelStr != null
this.syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::ENTER
this has only one value
this.level == 5000
this.levelStr has only one value
this.levelStr.toString == "TRACE"
this.syslogEquivalent == 7
r has only one value
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT
this.level == orig(this.level)
this.levelStr == orig(this.levelStr)
this.levelStr.toString == orig(this.levelStr.toString)
this.syslogEquivalent == orig(this.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
r.level == orig(r.level)
r.levelStr == orig(r.levelStr)
r.levelStr.toString == orig(r.levelStr.toString)
r.syslogEquivalent == orig(r.syslogEquivalent)
this.level == 5000
this.levelStr has only one value
this.levelStr.toString == "TRACE"
this.syslogEquivalent == 7
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
return == false
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.log4j.ProvisionNode:::CLASS
===========================================================================
org.apache.log4j.ProvisionNode:::OBJECT
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::ENTER
logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name has only one value
logger.name.toString == "com.bigfatplayer.hello.App"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
logger.parent == orig(logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name has only one value
logger.name.toString == "com.bigfatplayer.hello.App"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::ENTER
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::ENTER
resource.toString one of { "log4j.properties", "log4j.xml" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT136
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT
resource.toString == orig(resource.toString)
resource.toString one of { "log4j.properties", "log4j.xml" }
return == null
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT166
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT
return has only one value
return.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
===========================================================================
org.apache.log4j.helpers.OptionConverter:::CLASS
org.apache.log4j.helpers.OptionConverter.DELIM_START has only one value
org.apache.log4j.helpers.OptionConverter.DELIM_START != null
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == "${"
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == 125
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == 2
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == 1
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::ENTER
def == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT104
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT
org.apache.log4j.helpers.OptionConverter.DELIM_START == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START)
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START.toString)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP)
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN)
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == orig(org.apache.log4j.helpers.OptionConverter.class$java$lang$String)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator)
key.toString == orig(key.toString)
return.toString == "11.0.26"
===========================================================================
org.apache.log4j.or.DefaultRenderer:::OBJECT
this has only one value
===========================================================================
org.apache.log4j.or.DefaultRenderer.DefaultRenderer():::EXIT
===========================================================================
org.apache.log4j.or.RendererMap:::CLASS
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
===========================================================================
org.apache.log4j.or.RendererMap:::OBJECT
this has only one value
this.map has only one value
===========================================================================
org.apache.log4j.or.RendererMap.RendererMap():::EXIT
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector:::OBJECT
this has only one value
this.repository has only one value
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::ENTER
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::EXIT
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::ENTER
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::EXIT
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.RootLogger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
===========================================================================
org.apache.log4j.spi.RootLogger:::OBJECT
this has only one value
this.name has only one value
this.name.toString == "root"
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.resourceBundle == null
this.repository == null
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::ENTER
level has only one value
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::EXIT
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::ENTER
this.level == null
level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.slf4j.LoggerFactory:::CLASS
org.slf4j.LoggerFactory.CODES_PREFIX has only one value
org.slf4j.LoggerFactory.CODES_PREFIX != null
org.slf4j.LoggerFactory.CODES_PREFIX.toString == "http://www.slf4j.org/codes.html"
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL has only one value
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL != null
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == "http://www.slf4j.org/codes.html#StaticLoggerBinder"
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL has only one value
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL != null
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == "http://www.slf4j.org/codes.html#multiple_bindings"
org.slf4j.LoggerFactory.NULL_LF_URL has only one value
org.slf4j.LoggerFactory.NULL_LF_URL != null
org.slf4j.LoggerFactory.NULL_LF_URL.toString == "http://www.slf4j.org/codes.html#null_LF"
org.slf4j.LoggerFactory.VERSION_MISMATCH has only one value
org.slf4j.LoggerFactory.VERSION_MISMATCH != null
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == "http://www.slf4j.org/codes.html#version_mismatch"
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL has only one value
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL != null
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == "http://www.slf4j.org/codes.html#substituteLogger"
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL has only one value
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL != null
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == "http://www.slf4j.org/codes.html#unsuccessfulInit"
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG has only one value
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG != null
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == "org.slf4j.LoggerFactory could not be successfully initialized. See also http://www.slf4j.org/codes.html#unsuccessfulInit"
org.slf4j.LoggerFactory.INITIALIZATION_STATE one of { 0, 1, 3 }
org.slf4j.LoggerFactory.TEMP_FACTORY has only one value
org.slf4j.LoggerFactory.TEMP_FACTORY != null
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList has only one value
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList != null
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == []
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[].getClass().getName() == []
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == java.util.ArrayList.class
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY has only one value
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY != null
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST has only one value
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST != null
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == java.lang.String[].class
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] contains no nulls and has only one value, of length 2
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] elements != null
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[].getClass().getName() == [java.lang.String, java.lang.String]
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[].getClass().getName() elements == java.lang.String.class
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[].toString == [1.6, 1.7]
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[].toString elements one of { "1.6", "1.7" }
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH has only one value
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH != null
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == "org/slf4j/impl/StaticLoggerBinder.class"
size(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[]) == 2
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() != org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName()
===========================================================================
org.slf4j.LoggerFactory.bind():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
===========================================================================
org.slf4j.LoggerFactory.bind():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.emitSubstituteLoggerWarning():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.emitSubstituteLoggerWarning():::EXIT167
===========================================================================
org.slf4j.LoggerFactory.emitSubstituteLoggerWarning():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.findPossibleStaticLoggerBinderPathSet():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
===========================================================================
org.slf4j.LoggerFactory.findPossibleStaticLoggerBinderPathSet():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
return has only one value
return.getClass().getName() == java.util.LinkedHashSet.class
===========================================================================
org.slf4j.LoggerFactory.getILoggerFactory():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE one of { 0, 3 }
===========================================================================
org.slf4j.LoggerFactory.getILoggerFactory():::EXIT299
===========================================================================
org.slf4j.LoggerFactory.getILoggerFactory():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
return has only one value
return.getClass().getName() == org.slf4j.impl.Log4jLoggerFactory.class
===========================================================================
org.slf4j.LoggerFactory.getLogger(java.lang.Class):::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 0
clazz has only one value
===========================================================================
org.slf4j.LoggerFactory.getLogger(java.lang.Class):::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
return has only one value
return.getClass().getName() == org.slf4j.impl.Log4jLoggerAdapter.class
===========================================================================
org.slf4j.LoggerFactory.getLogger(java.lang.String):::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 0
name has only one value
name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.slf4j.LoggerFactory.getLogger(java.lang.String):::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
name.toString == orig(name.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
name.toString == "com.bigfatplayer.hello.App"
return has only one value
return.getClass().getName() == org.slf4j.impl.Log4jLoggerAdapter.class
===========================================================================
org.slf4j.LoggerFactory.isAmbiguousStaticLoggerBinderPathSet(java.util.Set):::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE one of { 1, 3 }
staticLoggerBinderPathSet has only one value
staticLoggerBinderPathSet.getClass().getName() == java.util.LinkedHashSet.class
===========================================================================
org.slf4j.LoggerFactory.isAmbiguousStaticLoggerBinderPathSet(java.util.Set):::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE one of { 1, 3 }
return == false
===========================================================================
org.slf4j.LoggerFactory.isAmbiguousStaticLoggerBinderPathSet(java.util.Set):::EXIT;condition="not(return == true)"
===========================================================================
org.slf4j.LoggerFactory.performInitialization():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
===========================================================================
org.slf4j.LoggerFactory.performInitialization():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.reportActualBinding(java.util.Set):::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
staticLoggerBinderPathSet has only one value
staticLoggerBinderPathSet.getClass().getName() == java.util.LinkedHashSet.class
===========================================================================
org.slf4j.LoggerFactory.reportActualBinding(java.util.Set):::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.reportMultipleBindingAmbiguity(java.util.Set):::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
staticLoggerBinderPathSet has only one value
staticLoggerBinderPathSet.getClass().getName() == java.util.LinkedHashSet.class
===========================================================================
org.slf4j.LoggerFactory.reportMultipleBindingAmbiguity(java.util.Set):::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 1
===========================================================================
org.slf4j.LoggerFactory.versionSanityCheck():::ENTER
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.LoggerFactory.versionSanityCheck():::EXIT
org.slf4j.LoggerFactory.CODES_PREFIX == orig(org.slf4j.LoggerFactory.CODES_PREFIX)
org.slf4j.LoggerFactory.CODES_PREFIX.toString == orig(org.slf4j.LoggerFactory.CODES_PREFIX.toString)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL)
org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString == orig(org.slf4j.LoggerFactory.NO_STATICLOGGERBINDER_URL.toString)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL)
org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString == orig(org.slf4j.LoggerFactory.MULTIPLE_BINDINGS_URL.toString)
org.slf4j.LoggerFactory.NULL_LF_URL == orig(org.slf4j.LoggerFactory.NULL_LF_URL)
org.slf4j.LoggerFactory.NULL_LF_URL.toString == orig(org.slf4j.LoggerFactory.NULL_LF_URL.toString)
org.slf4j.LoggerFactory.VERSION_MISMATCH == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH)
org.slf4j.LoggerFactory.VERSION_MISMATCH.toString == orig(org.slf4j.LoggerFactory.VERSION_MISMATCH.toString)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL)
org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString == orig(org.slf4j.LoggerFactory.SUBSTITUTE_LOGGER_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_URL.toString)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG)
org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString == orig(org.slf4j.LoggerFactory.UNSUCCESSFUL_INIT_MSG.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == orig(org.slf4j.LoggerFactory.INITIALIZATION_STATE)
org.slf4j.LoggerFactory.TEMP_FACTORY == orig(org.slf4j.LoggerFactory.TEMP_FACTORY)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList)
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[] == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList[])
org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName() == orig(org.slf4j.LoggerFactory.TEMP_FACTORY.loggerNameList.getClass().getName())
org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY == orig(org.slf4j.LoggerFactory.NOP_FALLBACK_FACTORY)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST)
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName() == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST.getClass().getName())
org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[] == orig(org.slf4j.LoggerFactory.API_COMPATIBILITY_LIST[])
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH)
org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString == orig(org.slf4j.LoggerFactory.STATIC_LOGGER_BINDER_PATH.toString)
org.slf4j.LoggerFactory.INITIALIZATION_STATE == 3
===========================================================================
org.slf4j.helpers.MarkerIgnoringBase:::CLASS
===========================================================================
org.slf4j.helpers.MarkerIgnoringBase:::OBJECT
this has only one value
this.getClass().getName() == org.slf4j.impl.Log4jLoggerAdapter.class
this.name == null
===========================================================================
org.slf4j.helpers.MarkerIgnoringBase.MarkerIgnoringBase():::EXIT
===========================================================================
org.slf4j.helpers.NOPLoggerFactory:::OBJECT
this has only one value
===========================================================================
org.slf4j.helpers.NOPLoggerFactory.NOPLoggerFactory():::EXIT
===========================================================================
org.slf4j.helpers.NamedLoggerBase:::CLASS
===========================================================================
org.slf4j.helpers.NamedLoggerBase:::OBJECT
this has only one value
this.getClass().getName() == org.slf4j.impl.Log4jLoggerAdapter.class
this.name == null
===========================================================================
org.slf4j.helpers.NamedLoggerBase.NamedLoggerBase():::EXIT
===========================================================================
org.slf4j.helpers.SubstituteLoggerFactory:::OBJECT
this has only one value
this.loggerNameList has only one value
this.loggerNameList[] == []
this.loggerNameList[].getClass().getName() == []
this.loggerNameList.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.slf4j.helpers.SubstituteLoggerFactory.SubstituteLoggerFactory():::EXIT
===========================================================================
org.slf4j.helpers.SubstituteLoggerFactory.getLoggerNameList():::ENTER
===========================================================================
org.slf4j.helpers.SubstituteLoggerFactory.getLoggerNameList():::EXIT
this.loggerNameList == orig(this.loggerNameList)
this.loggerNameList[] == orig(this.loggerNameList[])
this.loggerNameList.getClass().getName() == return.getClass().getName()
return.getClass().getName() == orig(this.loggerNameList.getClass().getName())
return has only one value
return[] == []
return[].getClass().getName() == []
return.getClass().getName() == java.util.ArrayList.class
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter:::CLASS
org.slf4j.impl.Log4jLoggerAdapter.FQCN has only one value
org.slf4j.impl.Log4jLoggerAdapter.FQCN.toString == "org.slf4j.impl.Log4jLoggerAdapter"
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter:::OBJECT
this has only one value
this.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
this.logger.name has only one value
this.logger.name.toString == "com.bigfatplayer.hello.App"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.name has only one value
this.name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.Log4jLoggerAdapter(org.apache.log4j.Logger):::ENTER
logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name has only one value
logger.name.toString == "com.bigfatplayer.hello.App"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent has only one value
logger.parent.name has only one value
logger.parent.name.toString == "root"
logger.parent.level has only one value
logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.Log4jLoggerAdapter(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
logger.parent == orig(logger.parent)
logger.parent.name == orig(logger.parent.name)
logger.parent.name.toString == orig(logger.parent.name.toString)
logger.parent.level == orig(logger.parent.level)
logger.parent.parent == orig(logger.parent.parent)
logger.parent.resourceBundle == orig(logger.parent.resourceBundle)
logger.parent.repository == orig(logger.parent.repository)
logger.parent.repository.getClass().getName() == orig(logger.parent.repository.getClass().getName())
logger.parent.aai == orig(logger.parent.aai)
logger.parent.additive == orig(logger.parent.additive)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
this.traceCapable == true
logger.name has only one value
logger.name.toString == "com.bigfatplayer.hello.App"
logger.level == null
logger.parent has only one value
logger.parent.name has only one value
logger.parent.name.toString == "root"
logger.parent.level has only one value
logger.parent.parent == null
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
logger.parent.additive == true
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.isTraceCapable():::ENTER
this.traceCapable == false
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.isTraceCapable():::EXIT84
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.isTraceCapable():::EXIT84;condition="return == true"
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.isTraceCapable():::EXIT
this.logger == orig(this.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.logger.name == orig(this.logger.name)
this.logger.name.toString == orig(this.logger.name.toString)
this.logger.level == orig(this.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.logger.parent == orig(this.logger.parent)
this.logger.parent.name == orig(this.logger.parent.name)
this.logger.parent.name.toString == orig(this.logger.parent.name.toString)
this.logger.parent.level == orig(this.logger.parent.level)
this.logger.parent.parent == orig(this.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.logger.parent.resourceBundle == orig(this.logger.parent.resourceBundle)
this.logger.parent.repository == orig(this.logger.parent.repository)
this.logger.parent.repository.getClass().getName() == orig(this.logger.parent.repository.getClass().getName())
this.logger.parent.aai == orig(this.logger.parent.aai)
this.logger.parent.additive == orig(this.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.logger.resourceBundle == orig(this.logger.resourceBundle)
this.logger.repository == orig(this.logger.repository)
this.logger.repository.getClass().getName() == orig(this.logger.repository.getClass().getName())
this.logger.aai == orig(this.logger.aai)
this.logger.additive == orig(this.logger.additive)
org.slf4j.impl.Log4jLoggerAdapter.FQCN == orig(org.slf4j.impl.Log4jLoggerAdapter.FQCN)
org.slf4j.impl.Log4jLoggerAdapter.FQCN.toString == orig(org.slf4j.impl.Log4jLoggerAdapter.FQCN.toString)
this.traceCapable == orig(this.traceCapable)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.traceCapable == false
return == true
===========================================================================
org.slf4j.impl.Log4jLoggerAdapter.isTraceCapable():::EXIT;condition="return == true"
===========================================================================
org.slf4j.impl.Log4jLoggerFactory:::OBJECT
this has only one value
this.loggerMap has only one value
this.loggerMap.getClass().getName() == java.util.concurrent.ConcurrentHashMap.class
===========================================================================
org.slf4j.impl.Log4jLoggerFactory.Log4jLoggerFactory():::EXIT
===========================================================================
org.slf4j.impl.Log4jLoggerFactory.getLogger(java.lang.String):::ENTER
name has only one value
name.toString == "com.bigfatplayer.hello.App"
===========================================================================
org.slf4j.impl.Log4jLoggerFactory.getLogger(java.lang.String):::EXIT70
===========================================================================
org.slf4j.impl.Log4jLoggerFactory.getLogger(java.lang.String):::EXIT
this.loggerMap == orig(this.loggerMap)
this.loggerMap.getClass().getName() == orig(this.loggerMap.getClass().getName())
name.toString == orig(name.toString)
name.toString == "com.bigfatplayer.hello.App"
return has only one value
return.getClass().getName() == org.slf4j.impl.Log4jLoggerAdapter.class
===========================================================================
org.slf4j.impl.StaticLoggerBinder:::CLASS
org.slf4j.impl.StaticLoggerBinder.SINGLETON has only one value
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION has only one value
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION.toString == "1.6.99"
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr has only one value
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr.toString == "org.slf4j.impl.Log4jLoggerFactory"
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory has only one value
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName() == org.slf4j.impl.Log4jLoggerFactory.class
===========================================================================
org.slf4j.impl.StaticLoggerBinder:::OBJECT
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName() == this.loggerFactory.getClass().getName()
this has only one value
this.loggerFactory has only one value
this.loggerFactory.getClass().getName() == org.slf4j.impl.Log4jLoggerFactory.class
===========================================================================
org.slf4j.impl.StaticLoggerBinder.StaticLoggerBinder():::EXIT
===========================================================================
org.slf4j.impl.StaticLoggerBinder.getLoggerFactory():::ENTER
===========================================================================
org.slf4j.impl.StaticLoggerBinder.getLoggerFactory():::EXIT
org.slf4j.impl.StaticLoggerBinder.SINGLETON == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON)
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION == orig(org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION)
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION.toString == orig(org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION.toString)
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr == orig(org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr)
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr.toString == orig(org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr.toString)
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory)
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName() == return.getClass().getName()
this.loggerFactory == orig(this.loggerFactory)
this.loggerFactory.getClass().getName() == return.getClass().getName()
return.getClass().getName() == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName())
return.getClass().getName() == orig(this.loggerFactory.getClass().getName())
return has only one value
return.getClass().getName() == org.slf4j.impl.Log4jLoggerFactory.class
===========================================================================
org.slf4j.impl.StaticLoggerBinder.getSingleton():::ENTER
===========================================================================
org.slf4j.impl.StaticLoggerBinder.getSingleton():::EXIT
org.slf4j.impl.StaticLoggerBinder.SINGLETON == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON)
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION == orig(org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION)
org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION.toString == orig(org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION.toString)
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr == orig(org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr)
org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr.toString == orig(org.slf4j.impl.StaticLoggerBinder.loggerFactoryClassStr.toString)
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory)
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName() == return.loggerFactory.getClass().getName()
org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName() == orig(org.slf4j.impl.StaticLoggerBinder.SINGLETON.loggerFactory.getClass().getName())
return has only one value
return.loggerFactory has only one value
Exiting Daikon.
